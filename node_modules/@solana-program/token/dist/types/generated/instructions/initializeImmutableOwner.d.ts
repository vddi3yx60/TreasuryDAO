/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type AccountMeta, type Address, type FixedSizeCodec, type FixedSizeDecoder, type FixedSizeEncoder, type Instruction, type InstructionWithAccounts, type InstructionWithData, type ReadonlyUint8Array, type WritableAccount } from '@solana/kit';
import { TOKEN_PROGRAM_ADDRESS } from '../programs';
export declare const INITIALIZE_IMMUTABLE_OWNER_DISCRIMINATOR = 22;
export declare function getInitializeImmutableOwnerDiscriminatorBytes(): ReadonlyUint8Array;
export type InitializeImmutableOwnerInstruction<TProgram extends string = typeof TOKEN_PROGRAM_ADDRESS, TAccountAccount extends string | AccountMeta<string> = string, TRemainingAccounts extends readonly AccountMeta<string>[] = []> = Instruction<TProgram> & InstructionWithData<ReadonlyUint8Array> & InstructionWithAccounts<[
    TAccountAccount extends string ? WritableAccount<TAccountAccount> : TAccountAccount,
    ...TRemainingAccounts
]>;
export type InitializeImmutableOwnerInstructionData = {
    discriminator: number;
};
export type InitializeImmutableOwnerInstructionDataArgs = {};
export declare function getInitializeImmutableOwnerInstructionDataEncoder(): FixedSizeEncoder<InitializeImmutableOwnerInstructionDataArgs>;
export declare function getInitializeImmutableOwnerInstructionDataDecoder(): FixedSizeDecoder<InitializeImmutableOwnerInstructionData>;
export declare function getInitializeImmutableOwnerInstructionDataCodec(): FixedSizeCodec<InitializeImmutableOwnerInstructionDataArgs, InitializeImmutableOwnerInstructionData>;
export type InitializeImmutableOwnerInput<TAccountAccount extends string = string> = {
    /** The account to initialize. */
    account: Address<TAccountAccount>;
};
export declare function getInitializeImmutableOwnerInstruction<TAccountAccount extends string, TProgramAddress extends Address = typeof TOKEN_PROGRAM_ADDRESS>(input: InitializeImmutableOwnerInput<TAccountAccount>, config?: {
    programAddress?: TProgramAddress;
}): InitializeImmutableOwnerInstruction<TProgramAddress, TAccountAccount>;
export type ParsedInitializeImmutableOwnerInstruction<TProgram extends string = typeof TOKEN_PROGRAM_ADDRESS, TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        /** The account to initialize. */
        account: TAccountMetas[0];
    };
    data: InitializeImmutableOwnerInstructionData;
};
export declare function parseInitializeImmutableOwnerInstruction<TProgram extends string, TAccountMetas extends readonly AccountMeta[]>(instruction: Instruction<TProgram> & InstructionWithAccounts<TAccountMetas> & InstructionWithData<ReadonlyUint8Array>): ParsedInitializeImmutableOwnerInstruction<TProgram, TAccountMetas>;
//# sourceMappingURL=initializeImmutableOwner.d.ts.map
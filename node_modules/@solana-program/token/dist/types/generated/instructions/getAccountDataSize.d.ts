/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */
import { type AccountMeta, type Address, type FixedSizeCodec, type FixedSizeDecoder, type FixedSizeEncoder, type Instruction, type InstructionWithAccounts, type InstructionWithData, type ReadonlyAccount, type ReadonlyUint8Array } from '@solana/kit';
import { TOKEN_PROGRAM_ADDRESS } from '../programs';
export declare const GET_ACCOUNT_DATA_SIZE_DISCRIMINATOR = 21;
export declare function getGetAccountDataSizeDiscriminatorBytes(): ReadonlyUint8Array;
export type GetAccountDataSizeInstruction<TProgram extends string = typeof TOKEN_PROGRAM_ADDRESS, TAccountMint extends string | AccountMeta<string> = string, TRemainingAccounts extends readonly AccountMeta<string>[] = []> = Instruction<TProgram> & InstructionWithData<ReadonlyUint8Array> & InstructionWithAccounts<[
    TAccountMint extends string ? ReadonlyAccount<TAccountMint> : TAccountMint,
    ...TRemainingAccounts
]>;
export type GetAccountDataSizeInstructionData = {
    discriminator: number;
};
export type GetAccountDataSizeInstructionDataArgs = {};
export declare function getGetAccountDataSizeInstructionDataEncoder(): FixedSizeEncoder<GetAccountDataSizeInstructionDataArgs>;
export declare function getGetAccountDataSizeInstructionDataDecoder(): FixedSizeDecoder<GetAccountDataSizeInstructionData>;
export declare function getGetAccountDataSizeInstructionDataCodec(): FixedSizeCodec<GetAccountDataSizeInstructionDataArgs, GetAccountDataSizeInstructionData>;
export type GetAccountDataSizeInput<TAccountMint extends string = string> = {
    /** The mint to calculate for. */
    mint: Address<TAccountMint>;
};
export declare function getGetAccountDataSizeInstruction<TAccountMint extends string, TProgramAddress extends Address = typeof TOKEN_PROGRAM_ADDRESS>(input: GetAccountDataSizeInput<TAccountMint>, config?: {
    programAddress?: TProgramAddress;
}): GetAccountDataSizeInstruction<TProgramAddress, TAccountMint>;
export type ParsedGetAccountDataSizeInstruction<TProgram extends string = typeof TOKEN_PROGRAM_ADDRESS, TAccountMetas extends readonly AccountMeta[] = readonly AccountMeta[]> = {
    programAddress: Address<TProgram>;
    accounts: {
        /** The mint to calculate for. */
        mint: TAccountMetas[0];
    };
    data: GetAccountDataSizeInstructionData;
};
export declare function parseGetAccountDataSizeInstruction<TProgram extends string, TAccountMetas extends readonly AccountMeta[]>(instruction: Instruction<TProgram> & InstructionWithAccounts<TAccountMetas> & InstructionWithData<ReadonlyUint8Array>): ParsedGetAccountDataSizeInstruction<TProgram, TAccountMetas>;
//# sourceMappingURL=getAccountDataSize.d.ts.map
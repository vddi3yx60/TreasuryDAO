// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EmailAuthenticationType = {
    email: "email",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SmsAuthenticationType = {
    sms: "sms",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeveloperJWTAuthenticationType = {
    jwt: "jwt",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ErrorType = {
    already_exists: "already_exists",
    bad_gateway: "bad_gateway",
    faucet_limit_exceeded: "faucet_limit_exceeded",
    forbidden: "forbidden",
    idempotency_error: "idempotency_error",
    internal_server_error: "internal_server_error",
    invalid_request: "invalid_request",
    invalid_sql_query: "invalid_sql_query",
    invalid_signature: "invalid_signature",
    malformed_transaction: "malformed_transaction",
    not_found: "not_found",
    payment_method_required: "payment_method_required",
    rate_limit_exceeded: "rate_limit_exceeded",
    request_canceled: "request_canceled",
    service_unavailable: "service_unavailable",
    timed_out: "timed_out",
    unauthorized: "unauthorized",
    policy_violation: "policy_violation",
    policy_in_use: "policy_in_use",
    account_limit_exceeded: "account_limit_exceeded",
    network_not_tradable: "network_not_tradable",
    guest_permission_denied: "guest_permission_denied",
    guest_region_forbidden: "guest_region_forbidden",
    guest_transaction_limit: "guest_transaction_limit",
    guest_transaction_count: "guest_transaction_count",
    phone_number_verification_expired: "phone_number_verification_expired",
    document_verification_failed: "document_verification_failed",
    recipient_allowlist_violation: "recipient_allowlist_violation",
    recipient_allowlist_pending: "recipient_allowlist_pending",
    travel_rules_recipient_violation: "travel_rules_recipient_violation",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmUserOperationNetwork = {
    "base-sepolia": "base-sepolia",
    base: "base",
    arbitrum: "arbitrum",
    optimism: "optimism",
    zora: "zora",
    polygon: "polygon",
    bnb: "bnb",
    avalanche: "avalanche",
    ethereum: "ethereum",
    "ethereum-sepolia": "ethereum-sepolia",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmUserOperationStatus = {
    pending: "pending",
    signed: "signed",
    broadcast: "broadcast",
    complete: "complete",
    dropped: "dropped",
    failed: "failed",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SpendPermissionNetwork = {
    base: "base",
    "base-sepolia": "base-sepolia",
    ethereum: "ethereum",
    "ethereum-sepolia": "ethereum-sepolia",
    optimism: "optimism",
    arbitrum: "arbitrum",
    avalanche: "avalanche",
    polygon: "polygon",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmSwapsNetwork = {
    base: "base",
    ethereum: "ethereum",
    arbitrum: "arbitrum",
    optimism: "optimism",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListEvmTokenBalancesNetwork = {
    base: "base",
    "base-sepolia": "base-sepolia",
    ethereum: "ethereum",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EthValueCriterionType = {
    ethValue: "ethValue",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EthValueCriterionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmAddressCriterionType = {
    evmAddress: "evmAddress",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmAddressCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const KnownAbiType = {
    erc20: "erc20",
    erc721: "erc721",
    erc1155: "erc1155",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AbiStateMutability = {
    pure: "pure",
    view: "view",
    nonpayable: "nonpayable",
    payable: "payable",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AbiFunctionType = {
    function: "function",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AbiInputType = {
    constructor: "constructor",
    error: "error",
    event: "event",
    fallback: "fallback",
    receive: "receive",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmDataParameterConditionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmDataParameterConditionListOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmDataCriterionType = {
    evmData: "evmData",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NetUSDChangeCriterionType = {
    netUSDChange: "netUSDChange",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const NetUSDChangeCriterionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmTransactionRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmTransactionRuleOperation = {
    signEvmTransaction: "signEvmTransaction",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmNetworkCriterionType = {
    evmNetwork: "evmNetwork",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmNetworkCriterionNetworksItem = {
    "base-sepolia": "base-sepolia",
    base: "base",
    ethereum: "ethereum",
    "ethereum-sepolia": "ethereum-sepolia",
    avalanche: "avalanche",
    polygon: "polygon",
    optimism: "optimism",
    arbitrum: "arbitrum",
    zora: "zora",
    bnb: "bnb",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmNetworkCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendEvmTransactionRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendEvmTransactionRuleOperation = {
    sendEvmTransaction: "sendEvmTransaction",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmMessageCriterionType = {
    evmMessage: "evmMessage",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmMessageRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmMessageRuleOperation = {
    signEvmMessage: "signEvmMessage",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmTypedAddressConditionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EvmTypedNumericalConditionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmTypedDataFieldCriterionType = {
    evmTypedDataField: "evmTypedDataField",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmTypedDataVerifyingContractCriterionType = {
    evmTypedDataVerifyingContract: "evmTypedDataVerifyingContract",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmTypedDataVerifyingContractCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmTypedDataRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmTypedDataRuleOperation = {
    signEvmTypedData: "signEvmTypedData",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolAddressCriterionType = {
    solAddress: "solAddress",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolAddressCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolValueCriterionType = {
    solValue: "solValue",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolValueCriterionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SplAddressCriterionType = {
    splAddress: "splAddress",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SplAddressCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SplValueCriterionType = {
    splValue: "splValue",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SplValueCriterionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MintAddressCriterionType = {
    mintAddress: "mintAddress",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const MintAddressCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const KnownIdlType = {
    SystemProgram: "SystemProgram",
    TokenProgram: "TokenProgram",
    AssociatedTokenProgram: "AssociatedTokenProgram",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolDataParameterConditionOperator = {
    ">": ">",
    ">=": ">=",
    "<": "<",
    "<=": "<=",
    "==": "==",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolDataParameterConditionListOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolDataCriterionType = {
    solData: "solData",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProgramIdCriterionType = {
    programId: "programId",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ProgramIdCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignSolTransactionRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignSolTransactionRuleOperation = {
    signSolTransaction: "signSolTransaction",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolNetworkCriterionType = {
    solNetwork: "solNetwork",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolNetworkCriterionNetworksItem = {
    "solana-devnet": "solana-devnet",
    solana: "solana",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolNetworkCriterionOperator = {
    in: "in",
    not_in: "not in",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendSolTransactionRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendSolTransactionRuleOperation = {
    sendSolTransaction: "sendSolTransaction",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SolMessageCriterionType = {
    solMessage: "solMessage",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignSolMessageRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignSolMessageRuleOperation = {
    signSolMessage: "signSolMessage",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmHashRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SignEvmHashRuleOperation = {
    signEvmHash: "signEvmHash",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PrepareUserOperationRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PrepareUserOperationRuleOperation = {
    prepareUserOperation: "prepareUserOperation",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendUserOperationRuleAction = {
    reject: "reject",
    accept: "accept",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendUserOperationRuleOperation = {
    sendUserOperation: "sendUserOperation",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PolicyScope = {
    project: "project",
    account: "account",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListSolanaTokenBalancesNetwork = {
    solana: "solana",
    "solana-devnet": "solana-devnet",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OnchainDataResultSchemaColumnsItemType = {
    String: "String",
    UInt8: "UInt8",
    UInt16: "UInt16",
    UInt32: "UInt32",
    UInt64: "UInt64",
    UInt128: "UInt128",
    UInt256: "UInt256",
    Int8: "Int8",
    Int16: "Int16",
    Int32: "Int32",
    Int64: "Int64",
    Int128: "Int128",
    Int256: "Int256",
    Float32: "Float32",
    Float64: "Float64",
    Bool: "Bool",
    Date: "Date",
    DateTime: "DateTime",
    DateTime64: "DateTime64",
    UUID: "UUID",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402Version = {
    NUMBER_1: 1,
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402PaymentPayloadScheme = {
    exact: "exact",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402PaymentPayloadNetwork = {
    "base-sepolia": "base-sepolia",
    base: "base",
    "solana-devnet": "solana-devnet",
    solana: "solana",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402PaymentRequirementsScheme = {
    exact: "exact",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402PaymentRequirementsNetwork = {
    "base-sepolia": "base-sepolia",
    base: "base",
    "solana-devnet": "solana-devnet",
    solana: "solana",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402VerifyInvalidReason = {
    insufficient_funds: "insufficient_funds",
    invalid_scheme: "invalid_scheme",
    invalid_network: "invalid_network",
    invalid_x402_version: "invalid_x402_version",
    invalid_payment_requirements: "invalid_payment_requirements",
    invalid_payload: "invalid_payload",
    invalid_exact_evm_payload_authorization_value: "invalid_exact_evm_payload_authorization_value",
    invalid_exact_evm_payload_authorization_valid_after: "invalid_exact_evm_payload_authorization_valid_after",
    invalid_exact_evm_payload_authorization_valid_before: "invalid_exact_evm_payload_authorization_valid_before",
    invalid_exact_evm_payload_authorization_typed_data_message: "invalid_exact_evm_payload_authorization_typed_data_message",
    invalid_exact_evm_payload_authorization_from_address_kyt: "invalid_exact_evm_payload_authorization_from_address_kyt",
    invalid_exact_evm_payload_authorization_to_address_kyt: "invalid_exact_evm_payload_authorization_to_address_kyt",
    invalid_exact_evm_payload_signature: "invalid_exact_evm_payload_signature",
    invalid_exact_evm_payload_signature_address: "invalid_exact_evm_payload_signature_address",
    invalid_exact_svm_payload_transaction: "invalid_exact_svm_payload_transaction",
    invalid_exact_svm_payload_transaction_amount_mismatch: "invalid_exact_svm_payload_transaction_amount_mismatch",
    invalid_exact_svm_payload_transaction_create_ata_instruction: "invalid_exact_svm_payload_transaction_create_ata_instruction",
    invalid_exact_svm_payload_transaction_create_ata_instruction_incorrect_payee: "invalid_exact_svm_payload_transaction_create_ata_instruction_incorrect_payee",
    invalid_exact_svm_payload_transaction_create_ata_instruction_incorrect_asset: "invalid_exact_svm_payload_transaction_create_ata_instruction_incorrect_asset",
    invalid_exact_svm_payload_transaction_instructions: "invalid_exact_svm_payload_transaction_instructions",
    invalid_exact_svm_payload_transaction_instructions_length: "invalid_exact_svm_payload_transaction_instructions_length",
    invalid_exact_svm_payload_transaction_instructions_compute_limit_instruction: "invalid_exact_svm_payload_transaction_instructions_compute_limit_instruction",
    invalid_exact_svm_payload_transaction_instructions_compute_price_instruction: "invalid_exact_svm_payload_transaction_instructions_compute_price_instruction",
    invalid_exact_svm_payload_transaction_instructions_compute_price_instruction_too_high: "invalid_exact_svm_payload_transaction_instructions_compute_price_instruction_too_high",
    invalid_exact_svm_payload_transaction_instruction_not_spl_token_transfer_checked: "invalid_exact_svm_payload_transaction_instruction_not_spl_token_transfer_checked",
    invalid_exact_svm_payload_transaction_instruction_not_token_2022_transfer_checked: "invalid_exact_svm_payload_transaction_instruction_not_token_2022_transfer_checked",
    invalid_exact_svm_payload_transaction_not_a_transfer_instruction: "invalid_exact_svm_payload_transaction_not_a_transfer_instruction",
    invalid_exact_svm_payload_transaction_cannot_derive_receiver_ata: "invalid_exact_svm_payload_transaction_cannot_derive_receiver_ata",
    invalid_exact_svm_payload_transaction_receiver_ata_not_found: "invalid_exact_svm_payload_transaction_receiver_ata_not_found",
    invalid_exact_svm_payload_transaction_sender_ata_not_found: "invalid_exact_svm_payload_transaction_sender_ata_not_found",
    invalid_exact_svm_payload_transaction_simulation_failed: "invalid_exact_svm_payload_transaction_simulation_failed",
    invalid_exact_svm_payload_transaction_transfer_to_incorrect_ata: "invalid_exact_svm_payload_transaction_transfer_to_incorrect_ata",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402SettleErrorReason = {
    insufficient_funds: "insufficient_funds",
    invalid_scheme: "invalid_scheme",
    invalid_network: "invalid_network",
    invalid_x402_version: "invalid_x402_version",
    invalid_payment_requirements: "invalid_payment_requirements",
    invalid_payload: "invalid_payload",
    invalid_exact_evm_payload_authorization_value: "invalid_exact_evm_payload_authorization_value",
    invalid_exact_evm_payload_authorization_valid_after: "invalid_exact_evm_payload_authorization_valid_after",
    invalid_exact_evm_payload_authorization_valid_before: "invalid_exact_evm_payload_authorization_valid_before",
    invalid_exact_evm_payload_authorization_typed_data_message: "invalid_exact_evm_payload_authorization_typed_data_message",
    invalid_exact_evm_payload_authorization_from_address_kyt: "invalid_exact_evm_payload_authorization_from_address_kyt",
    invalid_exact_evm_payload_authorization_to_address_kyt: "invalid_exact_evm_payload_authorization_to_address_kyt",
    invalid_exact_evm_payload_signature_address: "invalid_exact_evm_payload_signature_address",
    settle_exact_svm_block_height_exceeded: "settle_exact_svm_block_height_exceeded",
    settle_exact_svm_transaction_confirmation_timed_out: "settle_exact_svm_transaction_confirmation_timed_out",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402SupportedPaymentKindScheme = {
    exact: "exact",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const X402SupportedPaymentKindNetwork = {
    "base-sepolia": "base-sepolia",
    base: "base",
    "solana-devnet": "solana-devnet",
    solana: "solana",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PaymentRailAction = {
    source: "source",
    target: "target",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PaymentMethodType = {
    card: "card",
    fiat_account: "fiat_account",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const FeeType = {
    exchange_fee: "exchange_fee",
    network_fee: "network_fee",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TransferSourceType = {
    payment_method: "payment_method",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TransferTargetType = {
    crypto_rail: "crypto_rail",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TransferStatus = {
    created: "created",
    pending: "pending",
    started: "started",
    completed: "completed",
    failed: "failed",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OnrampOrderPaymentMethodTypeId = {
    GUEST_CHECKOUT_APPLE_PAY: "GUEST_CHECKOUT_APPLE_PAY",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OnrampOrderFeeType = {
    FEE_TYPE_NETWORK: "FEE_TYPE_NETWORK",
    FEE_TYPE_EXCHANGE: "FEE_TYPE_EXCHANGE",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OnrampOrderStatus = {
    ONRAMP_ORDER_STATUS_PENDING_AUTH: "ONRAMP_ORDER_STATUS_PENDING_AUTH",
    ONRAMP_ORDER_STATUS_PENDING_PAYMENT: "ONRAMP_ORDER_STATUS_PENDING_PAYMENT",
    ONRAMP_ORDER_STATUS_PROCESSING: "ONRAMP_ORDER_STATUS_PROCESSING",
    ONRAMP_ORDER_STATUS_COMPLETED: "ONRAMP_ORDER_STATUS_COMPLETED",
    ONRAMP_ORDER_STATUS_FAILED: "ONRAMP_ORDER_STATUS_FAILED",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OnrampPaymentLinkType = {
    PAYMENT_LINK_TYPE_APPLE_PAY_BUTTON: "PAYMENT_LINK_TYPE_APPLE_PAY_BUTTON",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OnrampQuotePaymentMethodTypeId = {
    CARD: "CARD",
    ACH: "ACH",
    APPLE_PAY: "APPLE_PAY",
    PAYPAL: "PAYPAL",
    FIAT_WALLET: "FIAT_WALLET",
    CRYPTO_WALLET: "CRYPTO_WALLET",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendEvmTransactionBodyNetwork = {
    base: "base",
    "base-sepolia": "base-sepolia",
    ethereum: "ethereum",
    "ethereum-sepolia": "ethereum-sepolia",
    avalanche: "avalanche",
    polygon: "polygon",
    optimism: "optimism",
    arbitrum: "arbitrum",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RequestEvmFaucetBodyNetwork = {
    "base-sepolia": "base-sepolia",
    "ethereum-sepolia": "ethereum-sepolia",
    "ethereum-hoodi": "ethereum-hoodi",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RequestEvmFaucetBodyToken = {
    eth: "eth",
    usdc: "usdc",
    eurc: "eurc",
    cbbtc: "cbbtc",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ListPoliciesScope = {
    project: "project",
    account: "account",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreatePolicyBodyScope = {
    project: "project",
    account: "account",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SendSolanaTransactionBodyNetwork = {
    solana: "solana",
    "solana-devnet": "solana-devnet",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RequestSolanaFaucetBodyToken = {
    sol: "sol",
    usdc: "usdc",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreatePaymentTransferQuoteBodySourceType = {
    payment_method: "payment_method",
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CreatePaymentTransferQuoteBodyTargetType = {
    crypto_rail: "crypto_rail",
};
//# sourceMappingURL=coinbaseDeveloperPlatformAPIs.schemas.js.map
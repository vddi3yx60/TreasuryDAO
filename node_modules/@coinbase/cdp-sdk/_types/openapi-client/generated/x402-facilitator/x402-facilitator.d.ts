/**
 * Generated by orval v7.6.0 üç∫
 * Do not edit manually.
 * Coinbase Developer Platform APIs
 * The Coinbase Developer Platform APIs - leading the world's transition onchain.
 * OpenAPI spec version: 2.0.0
 */
import type { SettleX402PaymentBody, VerifyX402PaymentBody, X402SettleResponseResponse, X402SupportedPaymentKindsResponseResponse, X402VerifyResponseResponse } from "../coinbaseDeveloperPlatformAPIs.schemas.js";
import { cdpApiClient } from "../../cdpApiClient.js";
type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];
/**
 * Verify an x402 protocol payment with a specific scheme and network.
 * @summary Verify a payment
 */
export declare const verifyX402Payment: (verifyX402PaymentBody: VerifyX402PaymentBody, options?: SecondParameter<typeof cdpApiClient>) => Promise<X402VerifyResponseResponse>;
/**
 * Settle an x402 protocol payment with a specific scheme and network.
 * @summary Settle a payment
 */
export declare const settleX402Payment: (settleX402PaymentBody: SettleX402PaymentBody, options?: SecondParameter<typeof cdpApiClient>) => Promise<X402SettleResponseResponse>;
/**
 * Get the supported x402 protocol payment schemes and networks that the facilitator is able to verify and settle payments for.
 * @summary Get supported payment schemes and networks
 */
export declare const supportedX402PaymentKinds: (options?: SecondParameter<typeof cdpApiClient>) => Promise<X402SupportedPaymentKindsResponseResponse>;
export type VerifyX402PaymentResult = NonNullable<Awaited<ReturnType<typeof verifyX402Payment>>>;
export type SettleX402PaymentResult = NonNullable<Awaited<ReturnType<typeof settleX402Payment>>>;
export type SupportedX402PaymentKindsResult = NonNullable<Awaited<ReturnType<typeof supportedX402PaymentKinds>>>;
export {};
//# sourceMappingURL=x402-facilitator.d.ts.map
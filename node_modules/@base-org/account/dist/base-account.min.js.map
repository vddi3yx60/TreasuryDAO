{"version":3,"file":"base-account.min.js","sources":["../src/core/constants.ts","../../../node_modules/zustand/esm/middleware.mjs","../../../node_modules/zustand/esm/vanilla.mjs","../src/store/store.ts","../src/core/telemetry/initCCA.ts","../src/sign/base-account/utils/constants.ts","../src/core/error/constants.ts","../src/core/error/utils.ts","../src/core/error/errors.ts","../src/util/assertPresence.ts","../src/util/checkCrossOriginOpenerPolicy.ts","../src/util/validatePreferences.ts","../../../node_modules/abitype/dist/esm/errors.js","../../../node_modules/abitype/dist/esm/regex.js","../../../node_modules/abitype/dist/esm/human-readable/formatAbiParameter.js","../../../node_modules/abitype/dist/esm/human-readable/formatAbiParameters.js","../../../node_modules/abitype/dist/esm/human-readable/formatAbiItem.js","../../../node_modules/abitype/dist/esm/human-readable/runtime/signatures.js","../../../node_modules/abitype/dist/esm/human-readable/errors/abiItem.js","../../../node_modules/abitype/dist/esm/human-readable/errors/abiParameter.js","../../../node_modules/abitype/dist/esm/human-readable/errors/signature.js","../../../node_modules/abitype/dist/esm/human-readable/errors/struct.js","../../../node_modules/abitype/dist/esm/human-readable/errors/splitParameters.js","../../../node_modules/abitype/dist/esm/human-readable/runtime/cache.js","../../../node_modules/abitype/dist/esm/human-readable/runtime/utils.js","../../../node_modules/abitype/dist/esm/human-readable/runtime/structs.js","../../../node_modules/abitype/dist/esm/human-readable/parseAbi.js","../../../node_modules/abitype/dist/esm/human-readable/parseAbiItem.js","../../../node_modules/viem/_esm/utils/getAction.js","../../../node_modules/viem/_esm/utils/abi/formatAbiItem.js","../../../node_modules/viem/_esm/utils/data/isHex.js","../../../node_modules/viem/_esm/utils/data/size.js","../../../node_modules/viem/_esm/errors/version.js","../../../node_modules/viem/_esm/errors/base.js","../../../node_modules/viem/_esm/errors/abi.js","../../../node_modules/viem/_esm/errors/log.js","../../../node_modules/viem/_esm/errors/data.js","../../../node_modules/viem/_esm/utils/data/pad.js","../../../node_modules/viem/_esm/errors/encoding.js","../../../node_modules/viem/_esm/utils/data/trim.js","../../../node_modules/viem/_esm/utils/encoding/fromHex.js","../../../node_modules/viem/_esm/utils/encoding/toHex.js","../../../node_modules/viem/_esm/utils/encoding/toBytes.js","../../../node_modules/viem/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/viem/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/viem/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/viem/_esm/utils/hash/keccak256.js","../../../node_modules/viem/_esm/utils/hash/hashSignature.js","../../../node_modules/viem/_esm/utils/hash/toSignature.js","../../../node_modules/viem/_esm/utils/hash/normalizeSignature.js","../../../node_modules/viem/_esm/utils/hash/toSignatureHash.js","../../../node_modules/viem/_esm/utils/hash/toEventSelector.js","../../../node_modules/viem/_esm/errors/address.js","../../../node_modules/viem/_esm/utils/lru.js","../../../node_modules/viem/_esm/utils/address/getAddress.js","../../../node_modules/viem/_esm/utils/address/isAddress.js","../../../node_modules/viem/_esm/utils/data/concat.js","../../../node_modules/viem/_esm/utils/data/slice.js","../../../node_modules/viem/_esm/utils/regex.js","../../../node_modules/viem/_esm/utils/abi/encodeAbiParameters.js","../../../node_modules/viem/_esm/utils/hash/toFunctionSelector.js","../../../node_modules/viem/_esm/utils/abi/getAbiItem.js","../../../node_modules/viem/_esm/utils/abi/encodeEventTopics.js","../../../node_modules/viem/_esm/utils/filters/createFilterRequestScope.js","../../../node_modules/viem/_esm/actions/public/createContractEventFilter.js","../../../node_modules/viem/_esm/accounts/utils/parseAccount.js","../../../node_modules/viem/_esm/utils/abi/prepareEncodeFunctionData.js","../../../node_modules/viem/_esm/utils/abi/encodeFunctionData.js","../../../node_modules/viem/_esm/constants/solidity.js","../../../node_modules/viem/_esm/errors/cursor.js","../../../node_modules/viem/_esm/utils/cursor.js","../../../node_modules/viem/_esm/utils/encoding/fromBytes.js","../../../node_modules/viem/_esm/utils/abi/decodeAbiParameters.js","../../../node_modules/viem/_esm/utils/abi/decodeErrorResult.js","../../../node_modules/viem/_esm/utils/stringify.js","../../../node_modules/viem/_esm/utils/abi/formatAbiItemWithArgs.js","../../../node_modules/viem/_esm/constants/unit.js","../../../node_modules/viem/_esm/utils/unit/formatUnits.js","../../../node_modules/viem/_esm/utils/unit/formatEther.js","../../../node_modules/viem/_esm/utils/unit/formatGwei.js","../../../node_modules/viem/_esm/errors/stateOverride.js","../../../node_modules/viem/_esm/errors/transaction.js","../../../node_modules/viem/_esm/errors/contract.js","../../../node_modules/viem/_esm/errors/request.js","../../../node_modules/viem/_esm/errors/rpc.js","../../../node_modules/viem/_esm/utils/errors/getContractError.js","../../../node_modules/viem/_esm/utils/signature/recoverPublicKey.js","../../../node_modules/viem/_esm/utils/signature/recoverAddress.js","../../../node_modules/viem/_esm/accounts/utils/publicKeyToAddress.js","../../../node_modules/viem/_esm/utils/encoding/toRlp.js","../../../node_modules/viem/_esm/utils/authorization/hashAuthorization.js","../../../node_modules/viem/_esm/errors/estimateGas.js","../../../node_modules/viem/_esm/errors/node.js","../../../node_modules/viem/_esm/utils/errors/getNodeError.js","../../../node_modules/viem/_esm/utils/formatters/extract.js","../../../node_modules/viem/_esm/utils/formatters/formatter.js","../../../node_modules/viem/_esm/utils/formatters/transactionRequest.js","../../../node_modules/viem/_esm/utils/stateOverride.js","../../../node_modules/viem/_esm/constants/number.js","../../../node_modules/viem/_esm/utils/transaction/assertRequest.js","../../../node_modules/viem/_esm/errors/fee.js","../../../node_modules/viem/_esm/errors/block.js","../../../node_modules/viem/_esm/utils/formatters/transaction.js","../../../node_modules/viem/_esm/utils/formatters/block.js","../../../node_modules/viem/_esm/actions/public/getBlock.js","../../../node_modules/viem/_esm/actions/public/getGasPrice.js","../../../node_modules/viem/_esm/actions/public/estimateMaxPriorityFeePerGas.js","../../../node_modules/viem/_esm/actions/public/estimateFeesPerGas.js","../../../node_modules/viem/_esm/actions/public/getTransactionCount.js","../../../node_modules/viem/_esm/utils/blob/blobsToCommitments.js","../../../node_modules/viem/_esm/utils/blob/blobsToProofs.js","../../../node_modules/viem/node_modules/@noble/hashes/esm/_md.js","../../../node_modules/viem/node_modules/@noble/hashes/esm/sha2.js","../../../node_modules/viem/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/viem/_esm/utils/hash/sha256.js","../../../node_modules/viem/_esm/utils/blob/commitmentToVersionedHash.js","../../../node_modules/viem/_esm/utils/blob/commitmentsToVersionedHashes.js","../../../node_modules/viem/_esm/constants/blob.js","../../../node_modules/viem/_esm/errors/blob.js","../../../node_modules/viem/_esm/utils/blob/toBlobSidecars.js","../../../node_modules/viem/_esm/utils/blob/toBlobs.js","../../../node_modules/viem/_esm/utils/transaction/getTransactionType.js","../../../node_modules/viem/_esm/actions/public/getChainId.js","../../../node_modules/viem/_esm/actions/wallet/prepareTransactionRequest.js","../../../node_modules/viem/_esm/actions/public/getBalance.js","../../../node_modules/viem/_esm/actions/public/estimateGas.js","../../../node_modules/viem/_esm/utils/authorization/recoverAuthorizationAddress.js","../../../node_modules/viem/_esm/utils/errors/getEstimateGasError.js","../../../node_modules/viem/_esm/utils/address/isAddressEqual.js","../../../node_modules/viem/_esm/utils/abi/decodeEventLog.js","../../../node_modules/viem/_esm/utils/abi/parseEventLogs.js","../../../node_modules/viem/_esm/utils/formatters/log.js","../../../node_modules/viem/_esm/actions/public/getLogs.js","../../../node_modules/viem/_esm/actions/public/getContractEvents.js","../../../node_modules/viem/_esm/utils/abi/decodeFunctionResult.js","../../../node_modules/ox/node_modules/@noble/curves/esm/abstract/utils.js","../../../node_modules/ox/_esm/core/Errors.js","../../../node_modules/ox/_esm/core/Json.js","../../../node_modules/ox/_esm/core/internal/bytes.js","../../../node_modules/ox/_esm/core/internal/hex.js","../../../node_modules/ox/_esm/core/Bytes.js","../../../node_modules/ox/_esm/core/Hex.js","../../../node_modules/ox/_esm/core/Withdrawal.js","../../../node_modules/ox/_esm/core/BlockOverrides.js","../../../node_modules/viem/_esm/constants/abis.js","../../../node_modules/viem/_esm/constants/contract.js","../../../node_modules/viem/_esm/constants/contracts.js","../../../node_modules/viem/_esm/errors/chain.js","../../../node_modules/viem/_esm/utils/abi/encodeDeployData.js","../../../node_modules/viem/_esm/utils/chain/getChainContractAddress.js","../../../node_modules/viem/_esm/utils/errors/getCallError.js","../../../node_modules/viem/_esm/utils/promise/withResolvers.js","../../../node_modules/viem/_esm/utils/promise/createBatchScheduler.js","../../../node_modules/viem/_esm/actions/public/call.js","../../../node_modules/viem/_esm/actions/public/readContract.js","../../../node_modules/viem/_esm/utils/observe.js","../../../node_modules/viem/_esm/utils/wait.js","../../../node_modules/viem/_esm/utils/poll.js","../../../node_modules/viem/_esm/utils/promise/withCache.js","../../../node_modules/viem/_esm/actions/public/getBlockNumber.js","../../../node_modules/viem/_esm/actions/public/getFilterChanges.js","../../../node_modules/viem/_esm/actions/public/uninstallFilter.js","../../../node_modules/viem/_esm/errors/account.js","../../../node_modules/viem/_esm/utils/formatters/transactionReceipt.js","../../../node_modules/viem/_esm/actions/wallet/sendCalls.js","../../../node_modules/viem/_esm/actions/wallet/waitForCallsStatus.js","../../../node_modules/viem/_esm/actions/wallet/getCallsStatus.js","../../../node_modules/viem/_esm/utils/uid.js","../../../node_modules/viem/_esm/clients/createClient.js","../../../node_modules/viem/_esm/utils/promise/withDedupe.js","../../../node_modules/viem/_esm/utils/promise/withRetry.js","../../../node_modules/viem/_esm/utils/buildRequest.js","../../../node_modules/viem/_esm/errors/transport.js","../../../node_modules/viem/_esm/utils/rpc/id.js","../../../node_modules/viem/_esm/utils/rpc/http.js","../../../node_modules/viem/_esm/utils/promise/withTimeout.js","../../../node_modules/viem/_esm/clients/transports/http.js","../../../node_modules/viem/_esm/clients/transports/createTransport.js","../../../node_modules/viem/_esm/utils/ens/errors.js","../../../node_modules/viem/_esm/utils/abi/decodeFunctionData.js","../../../node_modules/viem/_esm/utils/abi/encodeErrorResult.js","../../../node_modules/viem/_esm/utils/abi/encodeFunctionResult.js","../../../node_modules/viem/_esm/utils/ens/localBatchGatewayRequest.js","../../../node_modules/viem/_esm/utils/ens/encodedLabelToLabelhash.js","../../../node_modules/viem/_esm/utils/ens/namehash.js","../../../node_modules/viem/_esm/utils/ens/encodeLabelhash.js","../../../node_modules/viem/_esm/utils/ens/labelhash.js","../../../node_modules/viem/_esm/utils/ens/packetToBytes.js","../../../node_modules/viem/_esm/errors/ens.js","../../../node_modules/viem/_esm/utils/ens/avatar/utils.js","../../../node_modules/viem/_esm/utils/ens/avatar/parseAvatarRecord.js","../../../node_modules/viem/_esm/actions/ens/getEnsText.js","../../../node_modules/viem/_esm/actions/public/createAccessList.js","../../../node_modules/viem/_esm/actions/public/createEventFilter.js","../../../node_modules/viem/_esm/actions/public/createPendingTransactionFilter.js","../../../node_modules/viem/_esm/actions/public/getCode.js","../../../node_modules/viem/_esm/errors/eip712.js","../../../node_modules/viem/_esm/actions/public/getEip712Domain.js","../../../node_modules/viem/_esm/actions/public/getFeeHistory.js","../../../node_modules/viem/_esm/utils/formatters/feeHistory.js","../../../node_modules/viem/_esm/errors/ccip.js","../../../node_modules/viem/_esm/utils/ccip.js","../../../node_modules/viem/_esm/utils/chain/defineChain.js","../../../node_modules/viem/_esm/errors/typedData.js","../../../node_modules/viem/_esm/utils/signature/hashTypedData.js","../../../node_modules/viem/_esm/utils/typedData.js","../../../node_modules/viem/_esm/utils/abi/encodePacked.js","../../../node_modules/viem/_esm/utils/transaction/assertTransaction.js","../../../node_modules/viem/_esm/utils/transaction/serializeAccessList.js","../../../node_modules/viem/_esm/utils/transaction/serializeTransaction.js","../../../node_modules/viem/_esm/constants/kzg.js","../../../node_modules/viem/_esm/utils/authorization/serializeAuthorizationList.js","../../../node_modules/viem/_esm/utils/signature/hashMessage.js","../../../node_modules/viem/_esm/utils/signature/toPrefixedMessage.js","../../../node_modules/viem/_esm/constants/bytes.js","../../../node_modules/viem/_esm/utils/signature/serializeErc6492Signature.js","../../../node_modules/viem/_esm/errors/unit.js","../../../node_modules/viem/_esm/utils/unit/parseUnits.js","../../../node_modules/viem/_esm/utils/nonceManager.js","../../../node_modules/viem/_esm/actions/public/getProof.js","../../../node_modules/viem/_esm/utils/formatters/proof.js","../../../node_modules/viem/_esm/actions/public/getTransaction.js","../../../node_modules/viem/_esm/actions/public/getTransactionReceipt.js","../../../node_modules/viem/_esm/actions/public/simulateBlocks.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/_assert.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/_md.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/_u64.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/sha3.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/sha256.js","../../../node_modules/ox/_esm/core/Hash.js","../../../node_modules/ox/_esm/core/internal/lru.js","../../../node_modules/ox/_esm/core/Caches.js","../../../node_modules/ox/_esm/core/PublicKey.js","../../../node_modules/ox/_esm/core/Address.js","../../../node_modules/ox/_esm/core/internal/abiItem.js","../../../node_modules/ox/_esm/core/AbiItem.js","../../../node_modules/ox/_esm/core/Solidity.js","../../../node_modules/ox/_esm/core/internal/abiParameters.js","../../../node_modules/ox/_esm/core/AbiParameters.js","../../../node_modules/ox/_esm/core/AbiFunction.js","../../../node_modules/viem/_esm/constants/address.js","../../../node_modules/viem/_esm/actions/public/simulateCalls.js","../../../node_modules/ox/_esm/core/AbiConstructor.js","../../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/crypto.js","../../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/utils.js","../../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/_md.js","../../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/sha2.js","../../../node_modules/@noble/curves/node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/@noble/curves/esm/utils.js","../../../node_modules/@noble/curves/esm/abstract/modular.js","../../../node_modules/@noble/curves/esm/abstract/curve.js","../../../node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../node_modules/@noble/curves/esm/secp256k1.js","../../../node_modules/@noble/curves/esm/_shortw_utils.js","../../../node_modules/viem/_esm/actions/public/verifyHash.js","../../../node_modules/viem/_esm/utils/signature/serializeSignature.js","../../../node_modules/viem/_esm/utils/signature/isErc6492Signature.js","../../../node_modules/viem/_esm/actions/public/watchBlockNumber.js","../../../node_modules/viem/_esm/utils/siwe/parseSiweMessage.js","../../../node_modules/viem/_esm/actions/siwe/verifySiweMessage.js","../../../node_modules/viem/_esm/utils/siwe/validateSiweMessage.js","../../../node_modules/viem/_esm/clients/decorators/public.js","../../../node_modules/viem/_esm/actions/public/createBlockFilter.js","../../../node_modules/viem/_esm/actions/public/estimateContractGas.js","../../../node_modules/viem/_esm/actions/public/getBlobBaseFee.js","../../../node_modules/viem/_esm/actions/public/getBlockTransactionCount.js","../../../node_modules/viem/_esm/actions/ens/getEnsAddress.js","../../../node_modules/viem/_esm/actions/ens/getEnsAvatar.js","../../../node_modules/viem/_esm/actions/ens/getEnsName.js","../../../node_modules/viem/_esm/actions/ens/getEnsResolver.js","../../../node_modules/viem/_esm/actions/public/getFilterLogs.js","../../../node_modules/viem/_esm/actions/public/getStorageAt.js","../../../node_modules/viem/_esm/actions/public/getTransactionConfirmations.js","../../../node_modules/viem/_esm/actions/public/multicall.js","../../../node_modules/viem/_esm/actions/wallet/sendRawTransaction.js","../../../node_modules/viem/_esm/actions/public/simulateContract.js","../../../node_modules/viem/_esm/actions/public/verifyMessage.js","../../../node_modules/viem/_esm/actions/public/verifyTypedData.js","../../../node_modules/viem/_esm/actions/public/waitForTransactionReceipt.js","../../../node_modules/viem/_esm/actions/public/watchBlocks.js","../../../node_modules/viem/_esm/actions/public/watchContractEvent.js","../../../node_modules/viem/_esm/actions/public/watchEvent.js","../../../node_modules/viem/_esm/actions/public/watchPendingTransactions.js","../../../node_modules/viem/_esm/clients/createPublicClient.js","../src/core/telemetry/logEvent.ts","../src/core/telemetry/events/communicator.ts","../src/core/telemetry/events/dialog.ts","../src/ui/assets/injectFontStyle.ts","../../../node_modules/preact/dist/preact.module.js","../../../node_modules/preact/jsx-runtime/dist/jsxRuntime.module.js","../../../node_modules/clsx/dist/clsx.m.js","../src/ui/assets/colors.ts","../src/ui/assets/BaseLogo.tsx","../../../node_modules/preact/hooks/dist/hooks.module.js","../src/ui/Dialog/Dialog.tsx","../src/ui/Dialog/Dialog-css.ts","../src/core/username/getDisplayableUsername.ts","../src/ui/Dialog/index.ts","../src/ui/assets/fontFaceCSS.ts","../src/util/web.ts","../src/core/communicator/Communicator.ts","../src/core/error/serialize.ts","../../../node_modules/eventemitter3/index.js","../src/core/provider/interface.ts","../src/core/telemetry/events/provider.ts","../src/core/telemetry/utils.ts","../src/core/type/index.ts","../src/core/type/util.ts","../src/core/telemetry/events/scw-signer.ts","../../../node_modules/ox/_esm/core/Base64.js","../../../node_modules/ox/node_modules/@noble/hashes/esm/hmac.js","../../../node_modules/ox/node_modules/@noble/curves/esm/abstract/modular.js","../../../node_modules/ox/node_modules/@noble/curves/esm/abstract/curve.js","../../../node_modules/ox/node_modules/@noble/curves/esm/abstract/weierstrass.js","../../../node_modules/ox/node_modules/@noble/curves/esm/_shortw_utils.js","../../../node_modules/ox/node_modules/@noble/curves/esm/p256.js","../../../node_modules/ox/_esm/core/WebAuthnP256.js","../../../node_modules/ox/_esm/core/Signature.js","../../../node_modules/viem/_esm/account-abstraction/constants/abis.js","../../../node_modules/viem/_esm/account-abstraction/utils/userOperation/getInitCode.js","../../../node_modules/viem/_esm/account-abstraction/utils/userOperation/toPackedUserOperation.js","../../../node_modules/viem/_esm/account-abstraction/utils/userOperation/getUserOperationTypedData.js","../../../node_modules/viem/_esm/account-abstraction/utils/userOperation/getUserOperationHash.js","../../../node_modules/viem/_esm/account-abstraction/errors/bundler.js","../../../node_modules/viem/_esm/account-abstraction/errors/userOperation.js","../../../node_modules/viem/_esm/account-abstraction/utils/errors/getBundlerError.js","../../../node_modules/viem/_esm/account-abstraction/utils/errors/getUserOperationError.js","../../../node_modules/viem/_esm/account-abstraction/utils/formatters/userOperationRequest.js","../../../node_modules/viem/_esm/account-abstraction/actions/paymaster/getPaymasterData.js","../../../node_modules/viem/_esm/account-abstraction/actions/paymaster/getPaymasterStubData.js","../../../node_modules/viem/_esm/account-abstraction/actions/bundler/prepareUserOperation.js","../../../node_modules/viem/_esm/actions/wallet/prepareAuthorization.js","../../../node_modules/viem/_esm/account-abstraction/actions/bundler/estimateUserOperationGas.js","../../../node_modules/viem/_esm/account-abstraction/utils/formatters/userOperationGas.js","../../../node_modules/viem/_esm/account-abstraction/utils/formatters/userOperation.js","../../../node_modules/viem/_esm/account-abstraction/actions/bundler/getUserOperationReceipt.js","../../../node_modules/viem/_esm/account-abstraction/utils/formatters/userOperationReceipt.js","../../../node_modules/viem/_esm/account-abstraction/clients/decorators/bundler.js","../../../node_modules/viem/_esm/account-abstraction/actions/bundler/getSupportedEntryPoints.js","../../../node_modules/viem/_esm/account-abstraction/actions/bundler/getUserOperation.js","../../../node_modules/viem/_esm/account-abstraction/actions/bundler/sendUserOperation.js","../../../node_modules/viem/_esm/account-abstraction/actions/bundler/waitForUserOperationReceipt.js","../../../node_modules/viem/_esm/account-abstraction/constants/address.js","../../../node_modules/viem/_esm/chains/definitions/abey.js","../../../node_modules/viem/_esm/zksync/constants/number.js","../../../node_modules/viem/_esm/zksync/formatters.js","../../../node_modules/viem/_esm/zksync/errors/transaction.js","../../../node_modules/viem/_esm/zksync/utils/isEip712Transaction.js","../../../node_modules/viem/_esm/zksync/utils/assertEip712Transaction.js","../../../node_modules/viem/_esm/zksync/serializers.js","../../../node_modules/viem/_esm/zksync/errors/bytecode.js","../../../node_modules/viem/_esm/zksync/chainConfig.js","../../../node_modules/viem/_esm/zksync/utils/getEip712Domain.js","../../../node_modules/viem/_esm/zksync/utils/hashBytecode.js","../../../node_modules/viem/_esm/chains/definitions/abstract.js","../../../node_modules/viem/_esm/chains/definitions/abstractTestnet.js","../../../node_modules/viem/_esm/chains/definitions/acala.js","../../../node_modules/viem/_esm/chains/definitions/acria.js","../../../node_modules/viem/_esm/chains/definitions/adf.js","../../../node_modules/viem/_esm/chains/definitions/aioz.js","../../../node_modules/viem/_esm/chains/definitions/alephZero.js","../../../node_modules/viem/_esm/chains/definitions/alephZeroTestnet.js","../../../node_modules/viem/_esm/chains/definitions/alienX.js","../../../node_modules/viem/_esm/chains/definitions/alienXHalTestnet.js","../../../node_modules/viem/_esm/op-stack/contracts.js","../../../node_modules/viem/_esm/op-stack/formatters.js","../../../node_modules/viem/_esm/op-stack/serializers.js","../../../node_modules/viem/_esm/op-stack/chainConfig.js","../../../node_modules/viem/_esm/chains/definitions/ancient8.js","../../../node_modules/viem/_esm/chains/definitions/ancient8Sepolia.js","../../../node_modules/viem/_esm/chains/definitions/anvil.js","../../../node_modules/viem/_esm/chains/definitions/apeChain.js","../../../node_modules/viem/_esm/chains/definitions/apexTestnet.js","../../../node_modules/viem/_esm/chains/definitions/arbitrum.js","../../../node_modules/viem/_esm/chains/definitions/arbitrumGoerli.js","../../../node_modules/viem/_esm/chains/definitions/arbitrumNova.js","../../../node_modules/viem/_esm/chains/definitions/arbitrumSepolia.js","../../../node_modules/viem/_esm/chains/definitions/arenaz.js","../../../node_modules/viem/_esm/chains/definitions/areonNetwork.js","../../../node_modules/viem/_esm/chains/definitions/areonNetworkTestnet.js","../../../node_modules/viem/_esm/chains/definitions/artelaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/arthera.js","../../../node_modules/viem/_esm/chains/definitions/artheraTestnet.js","../../../node_modules/viem/_esm/chains/definitions/assetChain.js","../../../node_modules/viem/_esm/chains/definitions/assetChainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/astar.js","../../../node_modules/viem/_esm/chains/definitions/astarZkEVM.js","../../../node_modules/viem/_esm/chains/definitions/astarZkyoto.js","../../../node_modules/viem/_esm/chains/definitions/atletaOlympia.js","../../../node_modules/viem/_esm/chains/definitions/aurora.js","../../../node_modules/viem/_esm/chains/definitions/auroraTestnet.js","../../../node_modules/viem/_esm/chains/definitions/auroria.js","../../../node_modules/viem/_esm/chains/definitions/avalanche.js","../../../node_modules/viem/_esm/chains/definitions/avalancheFuji.js","../../../node_modules/viem/_esm/chains/definitions/b3.js","../../../node_modules/viem/_esm/chains/definitions/b3Sepolia.js","../../../node_modules/viem/_esm/chains/definitions/bahamut.js","../../../node_modules/viem/_esm/chains/definitions/base.js","../../../node_modules/viem/_esm/chains/definitions/basecampTestnet.js","../../../node_modules/viem/_esm/chains/definitions/baseGoerli.js","../../../node_modules/viem/_esm/chains/definitions/baseSepolia.js","../../../node_modules/viem/_esm/chains/definitions/beam.js","../../../node_modules/viem/_esm/chains/definitions/beamTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bearNetworkChainMainnet.js","../../../node_modules/viem/_esm/chains/definitions/bearNetworkChainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/berachain.js","../../../node_modules/viem/_esm/chains/definitions/berachainBepolia.js","../../../node_modules/viem/_esm/chains/definitions/berachainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/berachainTestnetbArtio.js","../../../node_modules/viem/_esm/chains/definitions/bevmMainnet.js","../../../node_modules/viem/_esm/chains/definitions/bifrost.js","../../../node_modules/viem/_esm/chains/definitions/bitgert.js","../../../node_modules/viem/_esm/chains/definitions/bitkub.js","../../../node_modules/viem/_esm/chains/definitions/bitkubTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bitlayer.js","../../../node_modules/viem/_esm/chains/definitions/bitlayerTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bitrock.js","../../../node_modules/viem/_esm/chains/definitions/bitTorrent.js","../../../node_modules/viem/_esm/chains/definitions/bitTorrentTestnet.js","../../../node_modules/viem/_esm/chains/definitions/birdlayer.js","../../../node_modules/viem/_esm/chains/definitions/blast.js","../../../node_modules/viem/_esm/chains/definitions/blastSepolia.js","../../../node_modules/viem/_esm/chains/definitions/bob.js","../../../node_modules/viem/_esm/chains/definitions/boba.js","../../../node_modules/viem/_esm/chains/definitions/bobaSepolia.js","../../../node_modules/viem/_esm/chains/definitions/bobSepolia.js","../../../node_modules/viem/_esm/chains/definitions/boolBetaMainnet.js","../../../node_modules/viem/_esm/chains/definitions/botanixTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bounceBit.js","../../../node_modules/viem/_esm/chains/definitions/bounceBitTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bronos.js","../../../node_modules/viem/_esm/chains/definitions/bronosTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bsc.js","../../../node_modules/viem/_esm/chains/definitions/bscGreenfield.js","../../../node_modules/viem/_esm/chains/definitions/bscTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bsquared.js","../../../node_modules/viem/_esm/chains/definitions/bsquaredTestnet.js","../../../node_modules/viem/_esm/chains/definitions/btr.js","../../../node_modules/viem/_esm/chains/definitions/btrTestnet.js","../../../node_modules/viem/_esm/chains/definitions/bxn.js","../../../node_modules/viem/_esm/chains/definitions/bxnTestnet.js","../../../node_modules/viem/_esm/chains/definitions/cannon.js","../../../node_modules/viem/_esm/chains/definitions/canto.js","../../../node_modules/viem/_esm/celo/fees.js","../../../node_modules/viem/_esm/celo/utils.js","../../../node_modules/viem/_esm/celo/serializers.js","../../../node_modules/viem/_esm/celo/chainConfig.js","../../../node_modules/viem/_esm/celo/formatters.js","../../../node_modules/viem/_esm/chains/definitions/celo.js","../../../node_modules/viem/_esm/chains/definitions/celoAlfajores.js","../../../node_modules/viem/_esm/chains/definitions/chang.js","../../../node_modules/viem/_esm/chains/definitions/chiliz.js","../../../node_modules/viem/_esm/chains/definitions/chips.js","../../../node_modules/viem/_esm/chains/definitions/citreaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/classic.js","../../../node_modules/viem/_esm/chains/definitions/coinbit.js","../../../node_modules/viem/_esm/chains/definitions/coinex.js","../../../node_modules/viem/_esm/chains/definitions/confluxESpace.js","../../../node_modules/viem/_esm/chains/definitions/confluxESpaceTestnet.js","../../../node_modules/viem/_esm/chains/definitions/coreDao.js","../../../node_modules/viem/_esm/chains/definitions/coreTestnet1.js","../../../node_modules/viem/_esm/chains/definitions/coreTestnet2.js","../../../node_modules/viem/_esm/chains/definitions/corn.js","../../../node_modules/viem/_esm/chains/definitions/cornTestnet.js","../../../node_modules/viem/_esm/chains/definitions/crab.js","../../../node_modules/viem/_esm/chains/definitions/creatorTestnet.js","../../../node_modules/viem/_esm/chains/definitions/creditCoin3Mainnet.js","../../../node_modules/viem/_esm/chains/definitions/creditCoin3Testnet.js","../../../node_modules/viem/_esm/chains/definitions/cronos.js","../../../node_modules/viem/_esm/chains/definitions/cronosTestnet.js","../../../node_modules/viem/_esm/chains/definitions/cronoszkEVM.js","../../../node_modules/viem/_esm/chains/definitions/cronoszkEVMTestnet.js","../../../node_modules/viem/_esm/chains/definitions/crossbell.js","../../../node_modules/viem/_esm/chains/definitions/curtis.js","../../../node_modules/viem/_esm/chains/definitions/cyber.js","../../../node_modules/viem/_esm/chains/definitions/cyberTestnet.js","../../../node_modules/viem/_esm/chains/definitions/dailyNetwork.js","../../../node_modules/viem/_esm/chains/definitions/dailyNetworkTestnet.js","../../../node_modules/viem/_esm/chains/definitions/darwinia.js","../../../node_modules/viem/_esm/chains/definitions/dbkchain.js","../../../node_modules/viem/_esm/chains/definitions/dchain.js","../../../node_modules/viem/_esm/chains/definitions/dchainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/defichainEvm.js","../../../node_modules/viem/_esm/chains/definitions/defichainEvmTestnet.js","../../../node_modules/viem/_esm/chains/definitions/degen.js","../../../node_modules/viem/_esm/chains/definitions/dfk.js","../../../node_modules/viem/_esm/chains/definitions/diode.js","../../../node_modules/viem/_esm/chains/definitions/disChain.js","../../../node_modules/viem/_esm/chains/definitions/dodochainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/dogechain.js","../../../node_modules/viem/_esm/chains/definitions/donatuz.js","../../../node_modules/viem/_esm/chains/definitions/dosChain.js","../../../node_modules/viem/_esm/chains/definitions/dosChainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/dreyerxMainnet.js","../../../node_modules/viem/_esm/chains/definitions/dreyerxTestnet.js","../../../node_modules/viem/_esm/chains/definitions/dustboyIoT.js","../../../node_modules/viem/_esm/chains/definitions/dymension.js","../../../node_modules/viem/_esm/chains/definitions/edexaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/edexa.js","../../../node_modules/viem/_esm/chains/definitions/edgeless.js","../../../node_modules/viem/_esm/chains/definitions/edgelessTestnet.js","../../../node_modules/viem/_esm/chains/definitions/edgeware.js","../../../node_modules/viem/_esm/chains/definitions/edgewareTestnet.js","../../../node_modules/viem/_esm/chains/definitions/eduChain.js","../../../node_modules/viem/_esm/chains/definitions/eduChainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/ekta.js","../../../node_modules/viem/_esm/chains/definitions/ektaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/elastos.js","../../../node_modules/viem/_esm/chains/definitions/elastosTestnet.js","../../../node_modules/viem/_esm/chains/definitions/electroneum.js","../../../node_modules/viem/_esm/chains/definitions/electroneumTestnet.js","../../../node_modules/viem/_esm/chains/definitions/elysiumTestnet.js","../../../node_modules/viem/_esm/chains/definitions/energy.js","../../../node_modules/viem/_esm/chains/definitions/enuls.js","../../../node_modules/viem/_esm/chains/definitions/eon.js","../../../node_modules/viem/_esm/chains/definitions/eos.js","../../../node_modules/viem/_esm/chains/definitions/eosTestnet.js","../../../node_modules/viem/_esm/chains/definitions/etherlink.js","../../../node_modules/viem/_esm/chains/definitions/etherlinkTestnet.js","../../../node_modules/viem/_esm/chains/definitions/ethernity.js","../../../node_modules/viem/_esm/chains/definitions/etp.js","../../../node_modules/viem/_esm/chains/definitions/evmos.js","../../../node_modules/viem/_esm/chains/definitions/evmosTestnet.js","../../../node_modules/viem/_esm/chains/definitions/excelonMainnet.js","../../../node_modules/viem/_esm/chains/definitions/expanse.js","../../../node_modules/viem/_esm/chains/definitions/exSat.js","../../../node_modules/viem/_esm/chains/definitions/exSatTestnet.js","../../../node_modules/viem/_esm/chains/definitions/fantom.js","../../../node_modules/viem/_esm/chains/definitions/fantomSonicTestnet.js","../../../node_modules/viem/_esm/chains/definitions/fantomTestnet.js","../../../node_modules/viem/_esm/chains/definitions/fibo.js","../../../node_modules/viem/_esm/chains/definitions/filecoin.js","../../../node_modules/viem/_esm/chains/definitions/filecoinCalibration.js","../../../node_modules/viem/_esm/chains/definitions/filecoinHyperspace.js","../../../node_modules/viem/_esm/chains/definitions/5ireChain.js","../../../node_modules/viem/_esm/chains/definitions/flame.js","../../../node_modules/viem/_esm/chains/definitions/flare.js","../../../node_modules/viem/_esm/chains/definitions/flareTestnet.js","../../../node_modules/viem/_esm/chains/definitions/flowMainnet.js","../../../node_modules/viem/_esm/chains/definitions/flowPreviewnet.js","../../../node_modules/viem/_esm/chains/definitions/flowTestnet.js","../../../node_modules/viem/_esm/chains/definitions/fluence.js","../../../node_modules/viem/_esm/chains/definitions/fluenceStage.js","../../../node_modules/viem/_esm/chains/definitions/fluenceTestnet.js","../../../node_modules/viem/_esm/chains/definitions/fluentTestnet.js","../../../node_modules/viem/_esm/chains/definitions/forma.js","../../../node_modules/viem/_esm/chains/definitions/form.js","../../../node_modules/viem/_esm/chains/definitions/memecoreFormicariumTestnet.js","../../../node_modules/viem/_esm/chains/definitions/formTestnet.js","../../../node_modules/viem/_esm/chains/definitions/forta.js","../../../node_modules/viem/_esm/chains/definitions/foundry.js","../../../node_modules/viem/_esm/chains/definitions/fraxtal.js","../../../node_modules/viem/_esm/chains/definitions/fraxtalTestnet.js","../../../node_modules/viem/_esm/chains/definitions/funkiMainnet.js","../../../node_modules/viem/_esm/chains/definitions/funkiSepolia.js","../../../node_modules/viem/_esm/chains/definitions/fuse.js","../../../node_modules/viem/_esm/chains/definitions/fuseSparknet.js","../../../node_modules/viem/_esm/chains/definitions/fusion.js","../../../node_modules/viem/_esm/chains/definitions/fusionTestnet.js","../../../node_modules/viem/_esm/chains/definitions/garnet.js","../../../node_modules/viem/_esm/chains/definitions/geist.js","../../../node_modules/viem/_esm/chains/definitions/genesys.js","../../../node_modules/viem/_esm/chains/definitions/glideL1Protocol.js","../../../node_modules/viem/_esm/chains/definitions/glideL2Protocol.js","../../../node_modules/viem/_esm/chains/definitions/gnosis.js","../../../node_modules/viem/_esm/chains/definitions/gnosisChiado.js","../../../node_modules/viem/_esm/chains/definitions/goat.js","../../../node_modules/viem/_esm/chains/definitions/gobi.js","../../../node_modules/viem/_esm/chains/definitions/goChain.js","../../../node_modules/viem/_esm/chains/definitions/godwoken.js","../../../node_modules/viem/_esm/chains/definitions/goerli.js","../../../node_modules/viem/_esm/chains/definitions/gravity.js","../../../node_modules/viem/_esm/chains/definitions/gunz.js","../../../node_modules/viem/_esm/chains/definitions/guruNetwork.js","../../../node_modules/viem/_esm/chains/definitions/guruTestnet.js","../../../node_modules/viem/_esm/chains/definitions/ham.js","../../../node_modules/viem/_esm/chains/definitions/happychainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/haqqMainnet.js","../../../node_modules/viem/_esm/chains/definitions/haqqTestedge2.js","../../../node_modules/viem/_esm/chains/definitions/hardhat.js","../../../node_modules/viem/_esm/chains/definitions/harmonyOne.js","../../../node_modules/viem/_esm/chains/definitions/hashKeyChain.js","../../../node_modules/viem/_esm/chains/definitions/hashkeyChainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/haustTestnet.js","../../../node_modules/viem/_esm/chains/definitions/hedera.js","../../../node_modules/viem/_esm/chains/definitions/hederaPreviewnet.js","../../../node_modules/viem/_esm/chains/definitions/hederaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/hela.js","../../../node_modules/viem/_esm/chains/definitions/hemi.js","../../../node_modules/viem/_esm/chains/definitions/hemiSepolia.js","../../../node_modules/viem/_esm/chains/definitions/holesky.js","../../../node_modules/viem/_esm/chains/definitions/hoodi.js","../../../node_modules/viem/_esm/chains/definitions/hpb.js","../../../node_modules/viem/_esm/chains/definitions/huddle01Mainnet.js","../../../node_modules/viem/_esm/chains/definitions/huddle01Testnet.js","../../../node_modules/viem/_esm/chains/definitions/humanode.js","../../../node_modules/viem/_esm/chains/definitions/humanodeTestnet5.js","../../../node_modules/viem/_esm/chains/definitions/hychain.js","../../../node_modules/viem/_esm/chains/definitions/hychainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/idchain.js","../../../node_modules/viem/_esm/chains/definitions/immutableZkEvm.js","../../../node_modules/viem/_esm/chains/definitions/immutableZkEvmTestnet.js","../../../node_modules/viem/_esm/chains/definitions/inEVM.js","../../../node_modules/viem/_esm/chains/definitions/initVerse.js","../../../node_modules/viem/_esm/chains/definitions/initVerseGenesis.js","../../../node_modules/viem/_esm/chains/definitions/ink.js","../../../node_modules/viem/_esm/chains/definitions/inkSepolia.js","../../../node_modules/viem/_esm/chains/definitions/iota.js","../../../node_modules/viem/_esm/chains/definitions/iotaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/iotex.js","../../../node_modules/viem/_esm/chains/definitions/iotexTestnet.js","../../../node_modules/viem/_esm/chains/definitions/iSunCoin.js","../../../node_modules/viem/_esm/chains/definitions/jbc.js","../../../node_modules/viem/_esm/chains/definitions/jbcTestnet.js","../../../node_modules/viem/_esm/chains/definitions/juneo.js","../../../node_modules/viem/_esm/chains/definitions/juneoBCH1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoDAI1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoDOGE1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoEUR1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoGLD1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoLINK1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoLTC1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneomBTC1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoSGD1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoSocotraTestnet.js","../../../node_modules/viem/_esm/chains/definitions/juneoUSD1Chain.js","../../../node_modules/viem/_esm/chains/definitions/juneoUSDT1Chain.js","../../../node_modules/viem/_esm/chains/definitions/karura.js","../../../node_modules/viem/_esm/chains/definitions/kakarotSepolia.js","../../../node_modules/viem/_esm/chains/definitions/kakarotStarknetSepolia.js","../../../node_modules/viem/_esm/chains/definitions/kardiaChain.js","../../../node_modules/viem/_esm/chains/definitions/kava.js","../../../node_modules/viem/_esm/chains/definitions/kavaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/kcc.js","../../../node_modules/viem/_esm/chains/definitions/kinto.js","../../../node_modules/viem/_esm/chains/definitions/klaytn.js","../../../node_modules/viem/_esm/chains/definitions/kaia.js","../../../node_modules/viem/_esm/chains/definitions/kairos.js","../../../node_modules/viem/_esm/chains/definitions/klaytnBaobab.js","../../../node_modules/viem/_esm/chains/definitions/koi.js","../../../node_modules/viem/_esm/chains/definitions/kroma.js","../../../node_modules/viem/_esm/chains/definitions/kromaSepolia.js","../../../node_modules/viem/_esm/chains/definitions/l3x.js","../../../node_modules/viem/_esm/chains/definitions/l3xTestnet.js","../../../node_modules/viem/_esm/chains/definitions/lavita.js","../../../node_modules/viem/_esm/chains/definitions/lens.js","../../../node_modules/viem/_esm/chains/definitions/lensTestnet.js","../../../node_modules/viem/_esm/chains/definitions/lestnet.js","../../../node_modules/viem/_esm/chains/definitions/lightlinkPegasus.js","../../../node_modules/viem/_esm/chains/definitions/lightlinkPhoenix.js","../../../node_modules/viem/_esm/linea/chainConfig.js","../../../node_modules/viem/_esm/linea/actions/estimateGas.js","../../../node_modules/viem/_esm/chains/definitions/linea.js","../../../node_modules/viem/_esm/chains/definitions/lineaGoerli.js","../../../node_modules/viem/_esm/chains/definitions/lineaSepolia.js","../../../node_modules/viem/_esm/chains/definitions/lineaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/lisk.js","../../../node_modules/viem/_esm/chains/definitions/liskSepolia.js","../../../node_modules/viem/_esm/chains/definitions/localhost.js","../../../node_modules/viem/_esm/chains/definitions/loop.js","../../../node_modules/viem/_esm/chains/definitions/lukso.js","../../../node_modules/viem/_esm/chains/definitions/luksoTestnet.js","../../../node_modules/viem/_esm/chains/definitions/lumiaMainnet.js","../../../node_modules/viem/_esm/chains/definitions/lumiaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/lumoz.js","../../../node_modules/viem/_esm/chains/definitions/lumozTestnet.js","../../../node_modules/viem/_esm/chains/definitions/lycan.js","../../../node_modules/viem/_esm/chains/definitions/lyra.js","../../../node_modules/viem/_esm/chains/definitions/mainnet.js","../../../node_modules/viem/_esm/chains/definitions/mandala.js","../../../node_modules/viem/_esm/chains/definitions/manta.js","../../../node_modules/viem/_esm/chains/definitions/mantaSepoliaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mantaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mantle.js","../../../node_modules/viem/_esm/chains/definitions/mantleSepoliaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mantleTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mapProtocol.js","../../../node_modules/viem/_esm/chains/definitions/matchain.js","../../../node_modules/viem/_esm/chains/definitions/matchainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mchVerse.js","../../../node_modules/viem/_esm/chains/definitions/megaethTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mekong.js","../../../node_modules/viem/_esm/chains/definitions/meld.js","../../../node_modules/viem/_esm/chains/definitions/memecore.js","../../../node_modules/viem/_esm/chains/definitions/merlin.js","../../../node_modules/viem/_esm/chains/definitions/merlinErigonTestnet.js","../../../node_modules/viem/_esm/chains/definitions/metachain.js","../../../node_modules/viem/_esm/chains/definitions/metachainIstanbul.js","../../../node_modules/viem/_esm/chains/definitions/metadium.js","../../../node_modules/viem/_esm/chains/definitions/metalL2.js","../../../node_modules/viem/_esm/chains/definitions/meter.js","../../../node_modules/viem/_esm/chains/definitions/meterTestnet.js","../../../node_modules/viem/_esm/chains/definitions/metis.js","../../../node_modules/viem/_esm/chains/definitions/metisSepolia.js","../../../node_modules/viem/_esm/chains/definitions/metisGoerli.js","../../../node_modules/viem/_esm/chains/definitions/mev.js","../../../node_modules/viem/_esm/chains/definitions/mevTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mint.js","../../../node_modules/viem/_esm/chains/definitions/mintSepoliaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mitosisTestnet.js","../../../node_modules/viem/_esm/chains/definitions/mode.js","../../../node_modules/viem/_esm/chains/definitions/modeTestnet.js","../../../node_modules/viem/_esm/chains/definitions/monadTestnet.js","../../../node_modules/viem/_esm/chains/definitions/moonbaseAlpha.js","../../../node_modules/viem/_esm/chains/definitions/moonbeam.js","../../../node_modules/viem/_esm/chains/definitions/moonbeamDev.js","../../../node_modules/viem/_esm/chains/definitions/moonriver.js","../../../node_modules/viem/_esm/chains/definitions/morph.js","../../../node_modules/viem/_esm/chains/definitions/morphHolesky.js","../../../node_modules/viem/_esm/chains/definitions/morphSepolia.js","../../../node_modules/viem/_esm/chains/definitions/nahmii.js","../../../node_modules/viem/_esm/chains/definitions/nautilus.js","../../../node_modules/viem/_esm/chains/definitions/near.js","../../../node_modules/viem/_esm/chains/definitions/nearTestnet.js","../../../node_modules/viem/_esm/chains/definitions/neonDevnet.js","../../../node_modules/viem/_esm/chains/definitions/neonMainnet.js","../../../node_modules/viem/_esm/chains/definitions/neoxMainnet.js","../../../node_modules/viem/_esm/chains/definitions/neoxT4.js","../../../node_modules/viem/_esm/chains/definitions/newton.js","../../../node_modules/viem/_esm/chains/definitions/nexi.js","../../../node_modules/viem/_esm/chains/definitions/nexilix.js","../../../node_modules/viem/_esm/chains/definitions/nibiru.js","../../../node_modules/viem/_esm/chains/definitions/oasisTestnet.js","../../../node_modules/viem/_esm/chains/definitions/oasys.js","../../../node_modules/viem/_esm/chains/definitions/odysseyTestnet.js","../../../node_modules/viem/_esm/chains/definitions/okc.js","../../../node_modules/viem/_esm/chains/definitions/omax.js","../../../node_modules/viem/_esm/chains/definitions/omni.js","../../../node_modules/viem/_esm/chains/definitions/omniOmega.js","../../../node_modules/viem/_esm/chains/definitions/oneWorld.js","../../../node_modules/viem/_esm/chains/definitions/oortmainnetDev.js","../../../node_modules/viem/_esm/chains/definitions/opBNB.js","../../../node_modules/viem/_esm/chains/definitions/opBNBTestnet.js","../../../node_modules/viem/_esm/chains/definitions/optimism.js","../../../node_modules/viem/_esm/chains/definitions/optimismGoerli.js","../../../node_modules/viem/_esm/chains/definitions/optimismSepolia.js","../../../node_modules/viem/_esm/chains/definitions/optopia.js","../../../node_modules/viem/_esm/chains/definitions/optopiaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/orderly.js","../../../node_modules/viem/_esm/chains/definitions/orderlySepolia.js","../../../node_modules/viem/_esm/chains/definitions/otimDevnet.js","../../../node_modules/viem/_esm/chains/definitions/palm.js","../../../node_modules/viem/_esm/chains/definitions/palmTestnet.js","../../../node_modules/viem/_esm/chains/definitions/peaq.js","../../../node_modules/viem/_esm/chains/definitions/pgn.js","../../../node_modules/viem/_esm/chains/definitions/pgnTestnet.js","../../../node_modules/viem/_esm/chains/definitions/phoenix.js","../../../node_modules/viem/_esm/chains/definitions/planq.js","../../../node_modules/viem/_esm/chains/definitions/playfiAlbireo.js","../../../node_modules/viem/_esm/chains/definitions/plinga.js","../../../node_modules/viem/_esm/chains/definitions/plume.js","../../../node_modules/viem/_esm/chains/definitions/plumeDevnet.js","../../../node_modules/viem/_esm/chains/definitions/plumeMainnet.js","../../../node_modules/viem/_esm/chains/definitions/plumeSepolia.js","../../../node_modules/viem/_esm/chains/definitions/plumeTestnet.js","../../../node_modules/viem/_esm/chains/definitions/polterTestnet.js","../../../node_modules/viem/_esm/chains/definitions/polygon.js","../../../node_modules/viem/_esm/chains/definitions/polygonAmoy.js","../../../node_modules/viem/_esm/chains/definitions/polygonMumbai.js","../../../node_modules/viem/_esm/chains/definitions/polygonZkEvm.js","../../../node_modules/viem/_esm/chains/definitions/polygonZkEvmCardona.js","../../../node_modules/viem/_esm/chains/definitions/polygonZkEvmTestnet.js","../../../node_modules/viem/_esm/chains/definitions/polynomial.js","../../../node_modules/viem/_esm/chains/definitions/polynomialSepolia.js","../../../node_modules/viem/_esm/chains/definitions/premiumBlock.js","../../../node_modules/viem/_esm/chains/definitions/pulsechain.js","../../../node_modules/viem/_esm/chains/definitions/pulsechainV4.js","../../../node_modules/viem/_esm/chains/definitions/pumpfiTestnet.js","../../../node_modules/viem/_esm/chains/definitions/pyrope.js","../../../node_modules/viem/_esm/chains/definitions/ql1.js","../../../node_modules/viem/_esm/chains/definitions/qMainnet.js","../../../node_modules/viem/_esm/chains/definitions/qTestnet.js","../../../node_modules/viem/_esm/chains/definitions/real.js","../../../node_modules/viem/_esm/chains/definitions/redbellyMainnet.js","../../../node_modules/viem/_esm/chains/definitions/redbellyTestnet.js","../../../node_modules/viem/_esm/chains/definitions/redstone.js","../../../node_modules/viem/_esm/chains/definitions/rei.js","../../../node_modules/viem/_esm/chains/definitions/reyaNetwork.js","../../../node_modules/viem/_esm/chains/definitions/reddioSepolia.js","../../../node_modules/viem/_esm/chains/definitions/riseTestnet.js","../../../node_modules/viem/_esm/chains/definitions/rivalz.js","../../../node_modules/viem/_esm/chains/definitions/rollux.js","../../../node_modules/viem/_esm/chains/definitions/rolluxTestnet.js","../../../node_modules/viem/_esm/chains/definitions/ronin.js","../../../node_modules/viem/_esm/chains/definitions/root.js","../../../node_modules/viem/_esm/chains/definitions/rootPorcini.js","../../../node_modules/viem/_esm/chains/definitions/rootstock.js","../../../node_modules/viem/_esm/chains/definitions/rootstockTestnet.js","../../../node_modules/viem/_esm/chains/definitions/rss3.js","../../../node_modules/viem/_esm/chains/definitions/rss3Sepolia.js","../../../node_modules/viem/_esm/chains/definitions/saakuru.js","../../../node_modules/viem/_esm/chains/definitions/saga.js","../../../node_modules/viem/_esm/chains/definitions/saigon.js","../../../node_modules/viem/_esm/chains/definitions/sanko.js","../../../node_modules/viem/_esm/chains/definitions/sapphire.js","../../../node_modules/viem/_esm/chains/definitions/sapphireTestnet.js","../../../node_modules/viem/_esm/chains/definitions/satoshivm.js","../../../node_modules/viem/_esm/chains/definitions/satoshivmTestnet.js","../../../node_modules/viem/_esm/chains/definitions/scroll.js","../../../node_modules/viem/_esm/chains/definitions/scrollSepolia.js","../../../node_modules/viem/_esm/chains/definitions/sei.js","../../../node_modules/viem/_esm/chains/definitions/seiDevnet.js","../../../node_modules/viem/_esm/chains/definitions/seismicDevnet.js","../../../node_modules/viem/_esm/chains/definitions/seiTestnet.js","../../../node_modules/viem/_esm/chains/definitions/sepolia.js","../../../node_modules/viem/_esm/chains/definitions/shape.js","../../../node_modules/viem/_esm/chains/definitions/shapeSepolia.js","../../../node_modules/viem/_esm/chains/definitions/shardeum.js","../../../node_modules/viem/_esm/chains/definitions/shardeumSphinx.js","../../../node_modules/viem/_esm/chains/definitions/shibarium.js","../../../node_modules/viem/_esm/chains/definitions/shibariumTestnet.js","../../../node_modules/viem/_esm/chains/definitions/shiden.js","../../../node_modules/viem/_esm/chains/definitions/shimmer.js","../../../node_modules/viem/_esm/chains/definitions/shimmerTestnet.js","../../../node_modules/viem/_esm/chains/definitions/sidra.js","../../../node_modules/viem/_esm/chains/definitions/silicon.js","../../../node_modules/viem/_esm/chains/definitions/siliconSepolia.js","../../../node_modules/viem/_esm/chains/definitions/sixProtocol.js","../../../node_modules/viem/_esm/chains/definitions/skale/brawl.js","../../../node_modules/viem/_esm/chains/definitions/skale/calypso.js","../../../node_modules/viem/_esm/chains/definitions/skale/calypsoTestnet.js","../../../node_modules/viem/_esm/chains/definitions/skale/cryptoBlades.js","../../../node_modules/viem/_esm/chains/definitions/skale/cryptoColosseum.js","../../../node_modules/viem/_esm/chains/definitions/skale/europa.js","../../../node_modules/viem/_esm/chains/definitions/skale/europaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/skale/exorde.js","../../../node_modules/viem/_esm/chains/definitions/skale/humanProtocol.js","../../../node_modules/viem/_esm/chains/definitions/skale/nebula.js","../../../node_modules/viem/_esm/chains/definitions/skale/nebulaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/skale/razor.js","../../../node_modules/viem/_esm/chains/definitions/skale/titan.js","../../../node_modules/viem/_esm/chains/definitions/skale/titanTestnet.js","../../../node_modules/viem/_esm/chains/definitions/sketchpad.js","../../../node_modules/viem/_esm/chains/definitions/snax.js","../../../node_modules/viem/_esm/chains/definitions/snaxTestnet.js","../../../node_modules/viem/_esm/chains/definitions/somniaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/soneium.js","../../../node_modules/viem/_esm/chains/definitions/soneiumMinato.js","../../../node_modules/viem/_esm/chains/definitions/sonic.js","../../../node_modules/viem/_esm/chains/definitions/sonicTestnet.js","../../../node_modules/viem/_esm/chains/definitions/sonicBlazeTestnet.js","../../../node_modules/viem/_esm/chains/definitions/songbird.js","../../../node_modules/viem/_esm/chains/definitions/songbirdTestnet.js","../../../node_modules/viem/_esm/chains/definitions/sophon.js","../../../node_modules/viem/_esm/chains/definitions/sophonTestnet.js","../../../node_modules/viem/_esm/chains/definitions/spicy.js","../../../node_modules/viem/_esm/chains/definitions/statusNetworkSepolia.js","../../../node_modules/viem/_esm/chains/definitions/step.js","../../../node_modules/viem/_esm/chains/definitions/story.js","../../../node_modules/viem/_esm/chains/definitions/storyAeneid.js","../../../node_modules/viem/_esm/chains/definitions/storyOdyssey.js","../../../node_modules/viem/_esm/chains/definitions/storyTestnet.js","../../../node_modules/viem/_esm/chains/definitions/stratis.js","../../../node_modules/viem/_esm/chains/definitions/superlumio.js","../../../node_modules/viem/_esm/chains/definitions/superposition.js","../../../node_modules/viem/_esm/chains/definitions/superseed.js","../../../node_modules/viem/_esm/chains/definitions/superseedSepolia.js","../../../node_modules/viem/_esm/chains/definitions/swan.js","../../../node_modules/viem/_esm/chains/definitions/swanProximaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/swanSaturnTestnet.js","../../../node_modules/viem/_esm/chains/definitions/swellchain.js","../../../node_modules/viem/_esm/chains/definitions/swellchainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/swissdlt.js","../../../node_modules/viem/_esm/chains/definitions/syscoin.js","../../../node_modules/viem/_esm/chains/definitions/syscoinTestnet.js","../../../node_modules/viem/_esm/chains/definitions/tac.js","../../../node_modules/viem/_esm/chains/definitions/tacSPB.js","../../../node_modules/viem/_esm/chains/definitions/taiko.js","../../../node_modules/viem/_esm/chains/definitions/taikoHekla.js","../../../node_modules/viem/_esm/chains/definitions/taikoJolnir.js","../../../node_modules/viem/_esm/chains/definitions/taikoKatla.js","../../../node_modules/viem/_esm/chains/definitions/taikoTestnetSepolia.js","../../../node_modules/viem/_esm/chains/definitions/taraxa.js","../../../node_modules/viem/_esm/chains/definitions/taraxaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/telcoinTestnet.js","../../../node_modules/viem/_esm/chains/definitions/telos.js","../../../node_modules/viem/_esm/chains/definitions/telosTestnet.js","../../../node_modules/viem/_esm/chains/definitions/tenet.js","../../../node_modules/viem/_esm/chains/definitions/ternoa.js","../../../node_modules/viem/_esm/chains/definitions/thaiChain.js","../../../node_modules/viem/_esm/chains/definitions/that.js","../../../node_modules/viem/_esm/chains/definitions/theta.js","../../../node_modules/viem/_esm/chains/definitions/thetaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/thunderCore.js","../../../node_modules/viem/_esm/chains/definitions/thunderTestnet.js","../../../node_modules/viem/_esm/chains/definitions/tiktrixTestnet.js","../../../node_modules/viem/_esm/chains/definitions/tomb.js","../../../node_modules/viem/_esm/chains/definitions/treasure.js","../../../node_modules/viem/_esm/chains/definitions/treasureTopaz.js","../../../node_modules/viem/_esm/chains/definitions/tron.js","../../../node_modules/viem/_esm/chains/definitions/tronShasta.js","../../../node_modules/viem/_esm/chains/definitions/ubiq.js","../../../node_modules/viem/_esm/chains/definitions/ultra.js","../../../node_modules/viem/_esm/chains/definitions/ultraTestnet.js","../../../node_modules/viem/_esm/chains/definitions/ultron.js","../../../node_modules/viem/_esm/chains/definitions/ultronTestnet.js","../../../node_modules/viem/_esm/chains/definitions/unichain.js","../../../node_modules/viem/_esm/chains/definitions/unichainSepolia.js","../../../node_modules/viem/_esm/chains/definitions/unique.js","../../../node_modules/viem/_esm/chains/definitions/uniqueOpal.js","../../../node_modules/viem/_esm/chains/definitions/uniqueQuartz.js","../../../node_modules/viem/_esm/chains/definitions/unreal.js","../../../node_modules/viem/_esm/chains/definitions/vanar.js","../../../node_modules/viem/_esm/chains/definitions/vechain.js","../../../node_modules/viem/_esm/chains/definitions/velas.js","../../../node_modules/viem/_esm/chains/definitions/viction.js","../../../node_modules/viem/_esm/chains/definitions/victionTestnet.js","../../../node_modules/viem/_esm/chains/definitions/vision.js","../../../node_modules/viem/_esm/chains/definitions/visionTestnet.js","../../../node_modules/viem/_esm/chains/definitions/wanchain.js","../../../node_modules/viem/_esm/chains/definitions/wanchainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/weavevmAlphanet.js","../../../node_modules/viem/_esm/chains/definitions/wemix.js","../../../node_modules/viem/_esm/chains/definitions/wemixTestnet.js","../../../node_modules/viem/_esm/chains/definitions/westendAssetHub.js","../../../node_modules/viem/_esm/chains/definitions/whitechain.js","../../../node_modules/viem/_esm/chains/definitions/whitechainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/wmcTestnet.js","../../../node_modules/viem/_esm/chains/definitions/worldchain.js","../../../node_modules/viem/_esm/chains/definitions/worldchainSepolia.js","../../../node_modules/viem/_esm/chains/definitions/worldLand.js","../../../node_modules/viem/_esm/chains/definitions/xai.js","../../../node_modules/viem/_esm/chains/definitions/xaiTestnet.js","../../../node_modules/viem/_esm/chains/definitions/xdc.js","../../../node_modules/viem/_esm/chains/definitions/xdcTestnet.js","../../../node_modules/viem/_esm/chains/definitions/xLayer.js","../../../node_modules/viem/_esm/chains/definitions/xLayerTestnet.js","../../../node_modules/viem/_esm/chains/definitions/xrOne.js","../../../node_modules/viem/_esm/chains/definitions/xrplevmDevnet.js","../../../node_modules/viem/_esm/chains/definitions/xrplevmTestnet.js","../../../node_modules/viem/_esm/chains/definitions/xrSepolia.js","../../../node_modules/viem/_esm/chains/definitions/yooldoVerse.js","../../../node_modules/viem/_esm/chains/definitions/yooldoVerseTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zenchainTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zeniq.js","../../../node_modules/viem/_esm/chains/definitions/0g.js","../../../node_modules/viem/_esm/chains/definitions/zeroNetwork.js","../../../node_modules/viem/_esm/chains/definitions/zetachain.js","../../../node_modules/viem/_esm/chains/definitions/zetachainAthensTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zhejiang.js","../../../node_modules/viem/_esm/chains/definitions/zilliqa.js","../../../node_modules/viem/_esm/chains/definitions/zilliqaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zircuit.js","../../../node_modules/viem/_esm/chains/definitions/zircuitGarfieldTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zircuitTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zkFair.js","../../../node_modules/viem/_esm/chains/definitions/zkFairTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zkLinkNova.js","../../../node_modules/viem/_esm/chains/definitions/zkLinkNovaSepoliaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zksync.js","../../../node_modules/viem/_esm/chains/definitions/zksyncInMemoryNode.js","../../../node_modules/viem/_esm/chains/definitions/zksyncLocalCustomHyperchain.js","../../../node_modules/viem/_esm/chains/definitions/zksyncLocalHyperchain.js","../../../node_modules/viem/_esm/chains/definitions/zksyncLocalHyperchainL1.js","../../../node_modules/viem/_esm/chains/definitions/zksyncLocalNode.js","../../../node_modules/viem/_esm/chains/definitions/zksyncSepoliaTestnet.js","../../../node_modules/viem/_esm/chains/definitions/zora.js","../../../node_modules/viem/_esm/chains/definitions/zoraSepolia.js","../../../node_modules/viem/_esm/chains/definitions/zoraTestnet.js","../src/store/chain-clients/store.ts","../src/store/chain-clients/utils.ts","../../../node_modules/viem/_esm/account-abstraction/clients/createBundlerClient.js","../src/store/correlation-ids/store.ts","../src/util/assertSubAccount.ts","../src/util/cipher.ts","../src/util/provider.ts","../../../node_modules/idb-keyval/dist/index.js","../src/kms/crypto-key/index.ts","../src/kms/crypto-key/storage.ts","../../../node_modules/ox/_esm/core/WebCryptoP256.js","../src/sign/base-account/SCWKeyManager.ts","../src/util/get.ts","../src/sign/base-account/utils.ts","../src/util/encoding.ts","../src/sign/base-account/utils/createSmartAccount.ts","../../../node_modules/viem/_esm/account-abstraction/accounts/toSmartAccount.js","../../../node_modules/viem/_esm/utils/signature/parseSignature.js","../src/sign/base-account/utils/createSubAccountSigner.ts","../src/sign/base-account/utils/findOwnerIndex.ts","../src/sign/base-account/utils/handleAddSubAccountOwner.ts","../src/sign/base-account/utils/presentAddOwnerDialog.ts","../src/sign/base-account/utils/routeThroughGlobalAccount.ts","../src/sign/base-account/utils/handleInsufficientBalance.ts","../src/sign/base-account/Signer.ts","../src/core/telemetry/events/scw-sub-account.ts","../src/interface/builder/core/BaseAccountProvider.ts","../src/interface/builder/core/createBaseAccountSDK.ts","../src/core/telemetry/telemetry-content.ts","../src/interface/builder/core/getInjectedProvider.ts","../src/interface/payment/constants.ts","../src/core/telemetry/events/payment.ts","../src/interface/payment/getPaymentStatus.ts","../src/interface/public-utilities/spend-permission/withTelemetry.ts","../src/core/telemetry/events/spend-permission.ts","../src/interface/public-utilities/spend-permission/methods/fetchPermission.ts","../src/interface/public-utilities/spend-permission/methods/fetchPermissions.ts","../src/interface/public-utilities/spend-permission/methods/getHash.ts","../src/interface/public-utilities/spend-permission/utils.ts","../src/interface/public-utilities/spend-permission/methods/getPermissionStatus.ts","../src/interface/public-utilities/spend-permission/utils.node.ts","../src/interface/public-utilities/spend-permission/methods/prepareRevokeCallData.ts","../src/interface/public-utilities/spend-permission/methods/prepareSpendCallData.ts","../src/interface/public-utilities/spend-permission/methods/requestRevoke.ts","../src/interface/payment/utils/sdkManager.ts","../src/interface/payment/utils/translatePayment.ts","../src/interface/payment/utils/validation.ts","../src/interface/payment/pay.ts","../src/interface/public-utilities/spend-permission/methods/requestSpendPermission.ts","../src/interface/payment/subscribe.ts","../src/core/telemetry/events/subscription.ts","../src/interface/payment/base.browser.ts","../src/interface/payment/getSubscriptionStatus.ts","../src/interface/payment/prepareCharge.ts","../src/browser-entry.ts"],"sourcesContent":[null,"const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === undefined) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === undefined ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === undefined) {\n      connection == null ? undefined : connection.send(action, get());\n      return r;\n    }\n    connection == null ? undefined : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? undefined : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? undefined : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : undefined) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === undefined) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === undefined || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === undefined) {\n              return connection == null ? undefined : connection.init(api.getState());\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === undefined) {\n              connection == null ? undefined : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                connection == null ? undefined : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? undefined : _a.state;\n            if (!lastComputedState) return;\n            if (store === undefined) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? undefined : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== undefined) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? undefined : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? undefined : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? undefined : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? undefined : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? undefined : _b.call(options, (_a = get()) != null ? _a : configResult)) || undefined;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, undefined];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(stateFromStorage, undefined);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(undefined, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? undefined : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n",null,null,null,null,null,null,null,null,null,"import { version } from './version.js';\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        const details = args.cause instanceof BaseError\n            ? args.cause.details\n            : args.cause?.message\n                ? args.cause.message\n                : args.details;\n        const docsPath = args.cause instanceof BaseError\n            ? args.cause.docsPath || args.docsPath\n            : args.docsPath;\n        const message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsPath ? [`Docs: https://abitype.dev${docsPath}`] : []),\n            ...(details ? [`Details: ${details}`] : []),\n            `Version: abitype@${version}`,\n        ].join('\\n');\n        super(message);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiTypeError'\n        });\n        if (args.cause)\n            this.cause = args.cause;\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.shortMessage = shortMessage;\n    }\n}\n//# sourceMappingURL=errors.js.map","// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped(regex, string) {\n    const match = regex.exec(string);\n    return match?.groups;\n}\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nexport const isTupleRegex = /^\\(.+?\\).*?$/;\n//# sourceMappingURL=regex.js.map","import { execTyped } from '../regex.js';\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/;\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter(abiParameter) {\n    let type = abiParameter.type;\n    if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n        type = '(';\n        const length = abiParameter.components.length;\n        for (let i = 0; i < length; i++) {\n            const component = abiParameter.components[i];\n            type += formatAbiParameter(component);\n            if (i < length - 1)\n                type += ', ';\n        }\n        const result = execTyped(tupleRegex, abiParameter.type);\n        type += `)${result?.array ?? ''}`;\n        return formatAbiParameter({\n            ...abiParameter,\n            type,\n        });\n    }\n    // Add `indexed` to type if in `abiParameter`\n    if ('indexed' in abiParameter && abiParameter.indexed)\n        type = `${type} indexed`;\n    // Return human-readable ABI parameter\n    if (abiParameter.name)\n        return `${type} ${abiParameter.name}`;\n    return type;\n}\n//# sourceMappingURL=formatAbiParameter.js.map","import { formatAbiParameter, } from './formatAbiParameter.js';\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters(abiParameters) {\n    let params = '';\n    const length = abiParameters.length;\n    for (let i = 0; i < length; i++) {\n        const abiParameter = abiParameters[i];\n        params += formatAbiParameter(abiParameter);\n        if (i !== length - 1)\n            params += ', ';\n    }\n    return params;\n}\n//# sourceMappingURL=formatAbiParameters.js.map","import { formatAbiParameters, } from './formatAbiParameters.js';\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem(abiItem) {\n    if (abiItem.type === 'function')\n        return `function ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})${abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n            ? ` ${abiItem.stateMutability}`\n            : ''}${abiItem.outputs?.length\n            ? ` returns (${formatAbiParameters(abiItem.outputs)})`\n            : ''}`;\n    if (abiItem.type === 'event')\n        return `event ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})`;\n    if (abiItem.type === 'error')\n        return `error ${abiItem.name}(${formatAbiParameters(abiItem.inputs)})`;\n    if (abiItem.type === 'constructor')\n        return `constructor(${formatAbiParameters(abiItem.inputs)})${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;\n    if (abiItem.type === 'fallback')\n        return `fallback() external${abiItem.stateMutability === 'payable' ? ' payable' : ''}`;\n    return 'receive() external payable';\n}\n//# sourceMappingURL=formatAbiItem.js.map","import { execTyped } from '../../regex.js';\n// https://regexr.com/7gmok\nconst errorSignatureRegex = /^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/;\nexport function isErrorSignature(signature) {\n    return errorSignatureRegex.test(signature);\n}\nexport function execErrorSignature(signature) {\n    return execTyped(errorSignatureRegex, signature);\n}\n// https://regexr.com/7gmoq\nconst eventSignatureRegex = /^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$/;\nexport function isEventSignature(signature) {\n    return eventSignatureRegex.test(signature);\n}\nexport function execEventSignature(signature) {\n    return execTyped(eventSignatureRegex, signature);\n}\n// https://regexr.com/7gmot\nconst functionSignatureRegex = /^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\\s?\\((?<returns>.*?)\\))?$/;\nexport function isFunctionSignature(signature) {\n    return functionSignatureRegex.test(signature);\n}\nexport function execFunctionSignature(signature) {\n    return execTyped(functionSignatureRegex, signature);\n}\n// https://regexr.com/7gmp3\nconst structSignatureRegex = /^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \\{(?<properties>.*?)\\}$/;\nexport function isStructSignature(signature) {\n    return structSignatureRegex.test(signature);\n}\nexport function execStructSignature(signature) {\n    return execTyped(structSignatureRegex, signature);\n}\n// https://regexr.com/78u01\nconst constructorSignatureRegex = /^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$/;\nexport function isConstructorSignature(signature) {\n    return constructorSignatureRegex.test(signature);\n}\nexport function execConstructorSignature(signature) {\n    return execTyped(constructorSignatureRegex, signature);\n}\n// https://regexr.com/7srtn\nconst fallbackSignatureRegex = /^fallback\\(\\) external(?:\\s(?<stateMutability>payable{1}))?$/;\nexport function isFallbackSignature(signature) {\n    return fallbackSignatureRegex.test(signature);\n}\nexport function execFallbackSignature(signature) {\n    return execTyped(fallbackSignatureRegex, signature);\n}\n// https://regexr.com/78u1k\nconst receiveSignatureRegex = /^receive\\(\\) external payable$/;\nexport function isReceiveSignature(signature) {\n    return receiveSignatureRegex.test(signature);\n}\nexport const modifiers = new Set([\n    'memory',\n    'indexed',\n    'storage',\n    'calldata',\n]);\nexport const eventModifiers = new Set(['indexed']);\nexport const functionModifiers = new Set([\n    'calldata',\n    'memory',\n    'storage',\n]);\n//# sourceMappingURL=signatures.js.map","import { BaseError } from '../../errors.js';\nexport class InvalidAbiItemError extends BaseError {\n    constructor({ signature }) {\n        super('Failed to parse ABI item.', {\n            details: `parseAbiItem(${JSON.stringify(signature, null, 2)})`,\n            docsPath: '/api/human#parseabiitem-1',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAbiItemError'\n        });\n    }\n}\nexport class UnknownTypeError extends BaseError {\n    constructor({ type }) {\n        super('Unknown type.', {\n            metaMessages: [\n                `Type \"${type}\" is not a valid ABI type. Perhaps you forgot to include a struct signature?`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownTypeError'\n        });\n    }\n}\nexport class UnknownSolidityTypeError extends BaseError {\n    constructor({ type }) {\n        super('Unknown type.', {\n            metaMessages: [`Type \"${type}\" is not a valid ABI type.`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownSolidityTypeError'\n        });\n    }\n}\n//# sourceMappingURL=abiItem.js.map","import { BaseError } from '../../errors.js';\nexport class InvalidAbiParameterError extends BaseError {\n    constructor({ param }) {\n        super('Failed to parse ABI parameter.', {\n            details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n            docsPath: '/api/human#parseabiparameter-1',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAbiParameterError'\n        });\n    }\n}\nexport class InvalidAbiParametersError extends BaseError {\n    constructor({ params }) {\n        super('Failed to parse ABI parameters.', {\n            details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n            docsPath: '/api/human#parseabiparameters-1',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAbiParametersError'\n        });\n    }\n}\nexport class InvalidParameterError extends BaseError {\n    constructor({ param }) {\n        super('Invalid ABI parameter.', {\n            details: param,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidParameterError'\n        });\n    }\n}\nexport class SolidityProtectedKeywordError extends BaseError {\n    constructor({ param, name }) {\n        super('Invalid ABI parameter.', {\n            details: param,\n            metaMessages: [\n                `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'SolidityProtectedKeywordError'\n        });\n    }\n}\nexport class InvalidModifierError extends BaseError {\n    constructor({ param, type, modifier, }) {\n        super('Invalid ABI parameter.', {\n            details: param,\n            metaMessages: [\n                `Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidModifierError'\n        });\n    }\n}\nexport class InvalidFunctionModifierError extends BaseError {\n    constructor({ param, type, modifier, }) {\n        super('Invalid ABI parameter.', {\n            details: param,\n            metaMessages: [\n                `Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`,\n                `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidFunctionModifierError'\n        });\n    }\n}\nexport class InvalidAbiTypeParameterError extends BaseError {\n    constructor({ abiParameter, }) {\n        super('Invalid ABI parameter.', {\n            details: JSON.stringify(abiParameter, null, 2),\n            metaMessages: ['ABI parameter type is invalid.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidAbiTypeParameterError'\n        });\n    }\n}\n//# sourceMappingURL=abiParameter.js.map","import { BaseError } from '../../errors.js';\nexport class InvalidSignatureError extends BaseError {\n    constructor({ signature, type, }) {\n        super(`Invalid ${type} signature.`, {\n            details: signature,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidSignatureError'\n        });\n    }\n}\nexport class UnknownSignatureError extends BaseError {\n    constructor({ signature }) {\n        super('Unknown signature.', {\n            details: signature,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'UnknownSignatureError'\n        });\n    }\n}\nexport class InvalidStructSignatureError extends BaseError {\n    constructor({ signature }) {\n        super('Invalid struct signature.', {\n            details: signature,\n            metaMessages: ['No properties exist.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidStructSignatureError'\n        });\n    }\n}\n//# sourceMappingURL=signature.js.map","import { BaseError } from '../../errors.js';\nexport class CircularReferenceError extends BaseError {\n    constructor({ type }) {\n        super('Circular reference detected.', {\n            metaMessages: [`Struct \"${type}\" is a circular reference.`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'CircularReferenceError'\n        });\n    }\n}\n//# sourceMappingURL=struct.js.map","import { BaseError } from '../../errors.js';\nexport class InvalidParenthesisError extends BaseError {\n    constructor({ current, depth }) {\n        super('Unbalanced parentheses.', {\n            metaMessages: [\n                `\"${current.trim()}\" has too many ${depth > 0 ? 'opening' : 'closing'} parentheses.`,\n            ],\n            details: `Depth \"${depth}\"`,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'InvalidParenthesisError'\n        });\n    }\n}\n//# sourceMappingURL=splitParameters.js.map","/**\n * Gets {@link parameterCache} cache key namespaced by {@link type}. This prevents parameters from being accessible to types that don't allow them (e.g. `string indexed foo` not allowed outside of `type: 'event'`).\n * @param param ABI parameter string\n * @param type ABI parameter type\n * @returns Cache key for {@link parameterCache}\n */\nexport function getParameterCacheKey(param, type, structs) {\n    let structKey = '';\n    if (structs)\n        for (const struct of Object.entries(structs)) {\n            if (!struct)\n                continue;\n            let propertyKey = '';\n            for (const property of struct[1]) {\n                propertyKey += `[${property.type}${property.name ? `:${property.name}` : ''}]`;\n            }\n            structKey += `(${struct[0]}{${propertyKey}})`;\n        }\n    if (type)\n        return `${type}:${param}${structKey}`;\n    return param;\n}\n/**\n * Basic cache seeded with common ABI parameter strings.\n *\n * **Note: When seeding more parameters, make sure you benchmark performance. The current number is the ideal balance between performance and having an already existing cache.**\n */\nexport const parameterCache = new Map([\n    // Unnamed\n    ['address', { type: 'address' }],\n    ['bool', { type: 'bool' }],\n    ['bytes', { type: 'bytes' }],\n    ['bytes32', { type: 'bytes32' }],\n    ['int', { type: 'int256' }],\n    ['int256', { type: 'int256' }],\n    ['string', { type: 'string' }],\n    ['uint', { type: 'uint256' }],\n    ['uint8', { type: 'uint8' }],\n    ['uint16', { type: 'uint16' }],\n    ['uint24', { type: 'uint24' }],\n    ['uint32', { type: 'uint32' }],\n    ['uint64', { type: 'uint64' }],\n    ['uint96', { type: 'uint96' }],\n    ['uint112', { type: 'uint112' }],\n    ['uint160', { type: 'uint160' }],\n    ['uint192', { type: 'uint192' }],\n    ['uint256', { type: 'uint256' }],\n    // Named\n    ['address owner', { type: 'address', name: 'owner' }],\n    ['address to', { type: 'address', name: 'to' }],\n    ['bool approved', { type: 'bool', name: 'approved' }],\n    ['bytes _data', { type: 'bytes', name: '_data' }],\n    ['bytes data', { type: 'bytes', name: 'data' }],\n    ['bytes signature', { type: 'bytes', name: 'signature' }],\n    ['bytes32 hash', { type: 'bytes32', name: 'hash' }],\n    ['bytes32 r', { type: 'bytes32', name: 'r' }],\n    ['bytes32 root', { type: 'bytes32', name: 'root' }],\n    ['bytes32 s', { type: 'bytes32', name: 's' }],\n    ['string name', { type: 'string', name: 'name' }],\n    ['string symbol', { type: 'string', name: 'symbol' }],\n    ['string tokenURI', { type: 'string', name: 'tokenURI' }],\n    ['uint tokenId', { type: 'uint256', name: 'tokenId' }],\n    ['uint8 v', { type: 'uint8', name: 'v' }],\n    ['uint256 balance', { type: 'uint256', name: 'balance' }],\n    ['uint256 tokenId', { type: 'uint256', name: 'tokenId' }],\n    ['uint256 value', { type: 'uint256', name: 'value' }],\n    // Indexed\n    [\n        'event:address indexed from',\n        { type: 'address', name: 'from', indexed: true },\n    ],\n    ['event:address indexed to', { type: 'address', name: 'to', indexed: true }],\n    [\n        'event:uint indexed tokenId',\n        { type: 'uint256', name: 'tokenId', indexed: true },\n    ],\n    [\n        'event:uint256 indexed tokenId',\n        { type: 'uint256', name: 'tokenId', indexed: true },\n    ],\n]);\n//# sourceMappingURL=cache.js.map","import { bytesRegex, execTyped, integerRegex, isTupleRegex, } from '../../regex.js';\nimport { UnknownSolidityTypeError } from '../errors/abiItem.js';\nimport { InvalidFunctionModifierError, InvalidModifierError, InvalidParameterError, SolidityProtectedKeywordError, } from '../errors/abiParameter.js';\nimport { InvalidSignatureError, UnknownSignatureError, } from '../errors/signature.js';\nimport { InvalidParenthesisError } from '../errors/splitParameters.js';\nimport { getParameterCacheKey, parameterCache } from './cache.js';\nimport { eventModifiers, execConstructorSignature, execErrorSignature, execEventSignature, execFallbackSignature, execFunctionSignature, functionModifiers, isConstructorSignature, isErrorSignature, isEventSignature, isFallbackSignature, isFunctionSignature, isReceiveSignature, } from './signatures.js';\nexport function parseSignature(signature, structs = {}) {\n    if (isFunctionSignature(signature))\n        return parseFunctionSignature(signature, structs);\n    if (isEventSignature(signature))\n        return parseEventSignature(signature, structs);\n    if (isErrorSignature(signature))\n        return parseErrorSignature(signature, structs);\n    if (isConstructorSignature(signature))\n        return parseConstructorSignature(signature, structs);\n    if (isFallbackSignature(signature))\n        return parseFallbackSignature(signature);\n    if (isReceiveSignature(signature))\n        return {\n            type: 'receive',\n            stateMutability: 'payable',\n        };\n    throw new UnknownSignatureError({ signature });\n}\nexport function parseFunctionSignature(signature, structs = {}) {\n    const match = execFunctionSignature(signature);\n    if (!match)\n        throw new InvalidSignatureError({ signature, type: 'function' });\n    const inputParams = splitParameters(match.parameters);\n    const inputs = [];\n    const inputLength = inputParams.length;\n    for (let i = 0; i < inputLength; i++) {\n        inputs.push(parseAbiParameter(inputParams[i], {\n            modifiers: functionModifiers,\n            structs,\n            type: 'function',\n        }));\n    }\n    const outputs = [];\n    if (match.returns) {\n        const outputParams = splitParameters(match.returns);\n        const outputLength = outputParams.length;\n        for (let i = 0; i < outputLength; i++) {\n            outputs.push(parseAbiParameter(outputParams[i], {\n                modifiers: functionModifiers,\n                structs,\n                type: 'function',\n            }));\n        }\n    }\n    return {\n        name: match.name,\n        type: 'function',\n        stateMutability: match.stateMutability ?? 'nonpayable',\n        inputs,\n        outputs,\n    };\n}\nexport function parseEventSignature(signature, structs = {}) {\n    const match = execEventSignature(signature);\n    if (!match)\n        throw new InvalidSignatureError({ signature, type: 'event' });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++)\n        abiParameters.push(parseAbiParameter(params[i], {\n            modifiers: eventModifiers,\n            structs,\n            type: 'event',\n        }));\n    return { name: match.name, type: 'event', inputs: abiParameters };\n}\nexport function parseErrorSignature(signature, structs = {}) {\n    const match = execErrorSignature(signature);\n    if (!match)\n        throw new InvalidSignatureError({ signature, type: 'error' });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++)\n        abiParameters.push(parseAbiParameter(params[i], { structs, type: 'error' }));\n    return { name: match.name, type: 'error', inputs: abiParameters };\n}\nexport function parseConstructorSignature(signature, structs = {}) {\n    const match = execConstructorSignature(signature);\n    if (!match)\n        throw new InvalidSignatureError({ signature, type: 'constructor' });\n    const params = splitParameters(match.parameters);\n    const abiParameters = [];\n    const length = params.length;\n    for (let i = 0; i < length; i++)\n        abiParameters.push(parseAbiParameter(params[i], { structs, type: 'constructor' }));\n    return {\n        type: 'constructor',\n        stateMutability: match.stateMutability ?? 'nonpayable',\n        inputs: abiParameters,\n    };\n}\nexport function parseFallbackSignature(signature) {\n    const match = execFallbackSignature(signature);\n    if (!match)\n        throw new InvalidSignatureError({ signature, type: 'fallback' });\n    return {\n        type: 'fallback',\n        stateMutability: match.stateMutability ?? 'nonpayable',\n    };\n}\nconst abiParameterWithoutTupleRegex = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/;\nconst abiParameterWithTupleRegex = /^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$/;\nconst dynamicIntegerRegex = /^u?int$/;\nexport function parseAbiParameter(param, options) {\n    // optional namespace cache by `type`\n    const parameterCacheKey = getParameterCacheKey(param, options?.type, options?.structs);\n    if (parameterCache.has(parameterCacheKey))\n        return parameterCache.get(parameterCacheKey);\n    const isTuple = isTupleRegex.test(param);\n    const match = execTyped(isTuple ? abiParameterWithTupleRegex : abiParameterWithoutTupleRegex, param);\n    if (!match)\n        throw new InvalidParameterError({ param });\n    if (match.name && isSolidityKeyword(match.name))\n        throw new SolidityProtectedKeywordError({ param, name: match.name });\n    const name = match.name ? { name: match.name } : {};\n    const indexed = match.modifier === 'indexed' ? { indexed: true } : {};\n    const structs = options?.structs ?? {};\n    let type;\n    let components = {};\n    if (isTuple) {\n        type = 'tuple';\n        const params = splitParameters(match.type);\n        const components_ = [];\n        const length = params.length;\n        for (let i = 0; i < length; i++) {\n            // remove `modifiers` from `options` to prevent from being added to tuple components\n            components_.push(parseAbiParameter(params[i], { structs }));\n        }\n        components = { components: components_ };\n    }\n    else if (match.type in structs) {\n        type = 'tuple';\n        components = { components: structs[match.type] };\n    }\n    else if (dynamicIntegerRegex.test(match.type)) {\n        type = `${match.type}256`;\n    }\n    else {\n        type = match.type;\n        if (!(options?.type === 'struct') && !isSolidityType(type))\n            throw new UnknownSolidityTypeError({ type });\n    }\n    if (match.modifier) {\n        // Check if modifier exists, but is not allowed (e.g. `indexed` in `functionModifiers`)\n        if (!options?.modifiers?.has?.(match.modifier))\n            throw new InvalidModifierError({\n                param,\n                type: options?.type,\n                modifier: match.modifier,\n            });\n        // Check if resolved `type` is valid if there is a function modifier\n        if (functionModifiers.has(match.modifier) &&\n            !isValidDataLocation(type, !!match.array))\n            throw new InvalidFunctionModifierError({\n                param,\n                type: options?.type,\n                modifier: match.modifier,\n            });\n    }\n    const abiParameter = {\n        type: `${type}${match.array ?? ''}`,\n        ...name,\n        ...indexed,\n        ...components,\n    };\n    parameterCache.set(parameterCacheKey, abiParameter);\n    return abiParameter;\n}\n// s/o latika for this\nexport function splitParameters(params, result = [], current = '', depth = 0) {\n    const length = params.trim().length;\n    // biome-ignore lint/correctness/noUnreachable: recursive\n    for (let i = 0; i < length; i++) {\n        const char = params[i];\n        const tail = params.slice(i + 1);\n        switch (char) {\n            case ',':\n                return depth === 0\n                    ? splitParameters(tail, [...result, current.trim()])\n                    : splitParameters(tail, result, `${current}${char}`, depth);\n            case '(':\n                return splitParameters(tail, result, `${current}${char}`, depth + 1);\n            case ')':\n                return splitParameters(tail, result, `${current}${char}`, depth - 1);\n            default:\n                return splitParameters(tail, result, `${current}${char}`, depth);\n        }\n    }\n    if (current === '')\n        return result;\n    if (depth !== 0)\n        throw new InvalidParenthesisError({ current, depth });\n    result.push(current.trim());\n    return result;\n}\nexport function isSolidityType(type) {\n    return (type === 'address' ||\n        type === 'bool' ||\n        type === 'function' ||\n        type === 'string' ||\n        bytesRegex.test(type) ||\n        integerRegex.test(type));\n}\nconst protectedKeywordsRegex = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;\n/** @internal */\nexport function isSolidityKeyword(name) {\n    return (name === 'address' ||\n        name === 'bool' ||\n        name === 'function' ||\n        name === 'string' ||\n        name === 'tuple' ||\n        bytesRegex.test(name) ||\n        integerRegex.test(name) ||\n        protectedKeywordsRegex.test(name));\n}\n/** @internal */\nexport function isValidDataLocation(type, isArray) {\n    return isArray || type === 'bytes' || type === 'string' || type === 'tuple';\n}\n//# sourceMappingURL=utils.js.map","import { execTyped, isTupleRegex } from '../../regex.js';\nimport { UnknownTypeError } from '../errors/abiItem.js';\nimport { InvalidAbiTypeParameterError } from '../errors/abiParameter.js';\nimport { InvalidSignatureError, InvalidStructSignatureError, } from '../errors/signature.js';\nimport { CircularReferenceError } from '../errors/struct.js';\nimport { execStructSignature, isStructSignature } from './signatures.js';\nimport { isSolidityType, parseAbiParameter } from './utils.js';\nexport function parseStructs(signatures) {\n    // Create \"shallow\" version of each struct (and filter out non-structs or invalid structs)\n    const shallowStructs = {};\n    const signaturesLength = signatures.length;\n    for (let i = 0; i < signaturesLength; i++) {\n        const signature = signatures[i];\n        if (!isStructSignature(signature))\n            continue;\n        const match = execStructSignature(signature);\n        if (!match)\n            throw new InvalidSignatureError({ signature, type: 'struct' });\n        const properties = match.properties.split(';');\n        const components = [];\n        const propertiesLength = properties.length;\n        for (let k = 0; k < propertiesLength; k++) {\n            const property = properties[k];\n            const trimmed = property.trim();\n            if (!trimmed)\n                continue;\n            const abiParameter = parseAbiParameter(trimmed, {\n                type: 'struct',\n            });\n            components.push(abiParameter);\n        }\n        if (!components.length)\n            throw new InvalidStructSignatureError({ signature });\n        shallowStructs[match.name] = components;\n    }\n    // Resolve nested structs inside each parameter\n    const resolvedStructs = {};\n    const entries = Object.entries(shallowStructs);\n    const entriesLength = entries.length;\n    for (let i = 0; i < entriesLength; i++) {\n        const [name, parameters] = entries[i];\n        resolvedStructs[name] = resolveStructs(parameters, shallowStructs);\n    }\n    return resolvedStructs;\n}\nconst typeWithoutTupleRegex = /^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?$/;\nfunction resolveStructs(abiParameters, structs, ancestors = new Set()) {\n    const components = [];\n    const length = abiParameters.length;\n    for (let i = 0; i < length; i++) {\n        const abiParameter = abiParameters[i];\n        const isTuple = isTupleRegex.test(abiParameter.type);\n        if (isTuple)\n            components.push(abiParameter);\n        else {\n            const match = execTyped(typeWithoutTupleRegex, abiParameter.type);\n            if (!match?.type)\n                throw new InvalidAbiTypeParameterError({ abiParameter });\n            const { array, type } = match;\n            if (type in structs) {\n                if (ancestors.has(type))\n                    throw new CircularReferenceError({ type });\n                components.push({\n                    ...abiParameter,\n                    type: `tuple${array ?? ''}`,\n                    components: resolveStructs(structs[type] ?? [], structs, new Set([...ancestors, type])),\n                });\n            }\n            else {\n                if (isSolidityType(type))\n                    components.push(abiParameter);\n                else\n                    throw new UnknownTypeError({ type });\n            }\n        }\n    }\n    return components;\n}\n//# sourceMappingURL=structs.js.map","import { isStructSignature } from './runtime/signatures.js';\nimport { parseStructs } from './runtime/structs.js';\nimport { parseSignature } from './runtime/utils.js';\n/**\n * Parses human-readable ABI into JSON {@link Abi}\n *\n * @param signatures - Human-Readable ABI\n * @returns Parsed {@link Abi}\n *\n * @example\n * const abi = parseAbi([\n *   //  ^? const abi: readonly [{ name: \"balanceOf\"; type: \"function\"; stateMutability:...\n *   'function balanceOf(address owner) view returns (uint256)',\n *   'event Transfer(address indexed from, address indexed to, uint256 amount)',\n * ])\n */\nexport function parseAbi(signatures) {\n    const structs = parseStructs(signatures);\n    const abi = [];\n    const length = signatures.length;\n    for (let i = 0; i < length; i++) {\n        const signature = signatures[i];\n        if (isStructSignature(signature))\n            continue;\n        abi.push(parseSignature(signature, structs));\n    }\n    return abi;\n}\n//# sourceMappingURL=parseAbi.js.map","import { InvalidAbiItemError } from './errors/abiItem.js';\nimport { isStructSignature } from './runtime/signatures.js';\nimport { parseStructs } from './runtime/structs.js';\nimport { parseSignature } from './runtime/utils.js';\n/**\n * Parses human-readable ABI item (e.g. error, event, function) into {@link Abi} item\n *\n * @param signature - Human-readable ABI item\n * @returns Parsed {@link Abi} item\n *\n * @example\n * const abiItem = parseAbiItem('function balanceOf(address owner) view returns (uint256)')\n * //    ^? const abiItem: { name: \"balanceOf\"; type: \"function\"; stateMutability: \"view\";...\n *\n * @example\n * const abiItem = parseAbiItem([\n *   //  ^? const abiItem: { name: \"foo\"; type: \"function\"; stateMutability: \"view\"; inputs:...\n *   'function foo(Baz bar) view returns (string)',\n *   'struct Baz { string name; }',\n * ])\n */\nexport function parseAbiItem(signature) {\n    let abiItem;\n    if (typeof signature === 'string')\n        abiItem = parseSignature(signature);\n    else {\n        const structs = parseStructs(signature);\n        const length = signature.length;\n        for (let i = 0; i < length; i++) {\n            const signature_ = signature[i];\n            if (isStructSignature(signature_))\n                continue;\n            abiItem = parseSignature(signature_, structs);\n            break;\n        }\n    }\n    if (!abiItem)\n        throw new InvalidAbiItemError({ signature });\n    return abiItem;\n}\n//# sourceMappingURL=parseAbiItem.js.map","/**\n * Retrieves and returns an action from the client (if exists), and falls\n * back to the tree-shakable action.\n *\n * Useful for extracting overridden actions from a client (ie. if a consumer\n * wants to override the `sendTransaction` implementation).\n */\nexport function getAction(client, actionFn, \n// Some minifiers drop `Function.prototype.name`, or replace it with short letters,\n// meaning that `actionFn.name` will not always work. For that case, the consumer\n// needs to pass the name explicitly.\nname) {\n    const action_implicit = client[actionFn.name];\n    if (typeof action_implicit === 'function')\n        return action_implicit;\n    const action_explicit = client[name];\n    if (typeof action_explicit === 'function')\n        return action_explicit;\n    return (params) => actionFn(client, params);\n}\n//# sourceMappingURL=getAction.js.map","import { InvalidDefinitionTypeError, } from '../../errors/abi.js';\nexport function formatAbiItem(abiItem, { includeName = false } = {}) {\n    if (abiItem.type !== 'function' &&\n        abiItem.type !== 'event' &&\n        abiItem.type !== 'error')\n        throw new InvalidDefinitionTypeError(abiItem.type);\n    return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`;\n}\nexport function formatAbiParams(params, { includeName = false } = {}) {\n    if (!params)\n        return '';\n    return params\n        .map((param) => formatAbiParam(param, { includeName }))\n        .join(includeName ? ', ' : ',');\n}\nfunction formatAbiParam(param, { includeName }) {\n    if (param.type.startsWith('tuple')) {\n        return `(${formatAbiParams(param.components, { includeName })})${param.type.slice('tuple'.length)}`;\n    }\n    return param.type + (includeName && param.name ? ` ${param.name}` : '');\n}\n//# sourceMappingURL=formatAbiItem.js.map","export function isHex(value, { strict = true } = {}) {\n    if (!value)\n        return false;\n    if (typeof value !== 'string')\n        return false;\n    return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}\n//# sourceMappingURL=isHex.js.map","import { isHex } from './isHex.js';\n/**\n * @description Retrieves the size of the value (in bytes).\n *\n * @param value The value (hex or byte array) to retrieve the size of.\n * @returns The size of the value (in bytes).\n */\nexport function size(value) {\n    if (isHex(value, { strict: false }))\n        return Math.ceil((value.length - 2) / 2);\n    return value.length;\n}\n//# sourceMappingURL=size.js.map","export const version = '2.31.7';\n//# sourceMappingURL=version.js.map","import { version } from './version.js';\nlet errorConfig = {\n    getDocsUrl: ({ docsBaseUrl, docsPath = '', docsSlug, }) => docsPath\n        ? `${docsBaseUrl ?? 'https://viem.sh'}${docsPath}${docsSlug ? `#${docsSlug}` : ''}`\n        : undefined,\n    version: `viem@${version}`,\n};\nexport function setErrorConfig(config) {\n    errorConfig = config;\n}\nexport class BaseError extends Error {\n    constructor(shortMessage, args = {}) {\n        const details = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.details;\n            if (args.cause?.message)\n                return args.cause.message;\n            return args.details;\n        })();\n        const docsPath = (() => {\n            if (args.cause instanceof BaseError)\n                return args.cause.docsPath || args.docsPath;\n            return args.docsPath;\n        })();\n        const docsUrl = errorConfig.getDocsUrl?.({ ...args, docsPath });\n        const message = [\n            shortMessage || 'An error occurred.',\n            '',\n            ...(args.metaMessages ? [...args.metaMessages, ''] : []),\n            ...(docsUrl ? [`Docs: ${docsUrl}`] : []),\n            ...(details ? [`Details: ${details}`] : []),\n            ...(errorConfig.version ? [`Version: ${errorConfig.version}`] : []),\n        ].join('\\n');\n        super(message, args.cause ? { cause: args.cause } : undefined);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metaMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseError'\n        });\n        this.details = details;\n        this.docsPath = docsPath;\n        this.metaMessages = args.metaMessages;\n        this.name = args.name ?? this.name;\n        this.shortMessage = shortMessage;\n        this.version = version;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err &&\n        typeof err === 'object' &&\n        'cause' in err &&\n        err.cause !== undefined)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=base.js.map","import { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js';\nimport { size } from '../utils/data/size.js';\nimport { BaseError } from './base.js';\nexport class AbiConstructorNotFoundError extends BaseError {\n    constructor({ docsPath }) {\n        super([\n            'A constructor was not found on the ABI.',\n            'Make sure you are using the correct ABI and that the constructor exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiConstructorNotFoundError',\n        });\n    }\n}\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n    constructor({ docsPath }) {\n        super([\n            'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n            'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiConstructorParamsNotFoundError',\n        });\n    }\n}\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n    constructor({ data, size }) {\n        super([\n            `Data size of ${size} bytes is invalid.`,\n            'Size must be in increments of 32 bytes (size % 32 === 0).',\n        ].join('\\n'), {\n            metaMessages: [`Data: ${data} (${size} bytes)`],\n            name: 'AbiDecodingDataSizeInvalidError',\n        });\n    }\n}\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n    constructor({ data, params, size, }) {\n        super([`Data size of ${size} bytes is too small for given parameters.`].join('\\n'), {\n            metaMessages: [\n                `Params: (${formatAbiParams(params, { includeName: true })})`,\n                `Data:   ${data} (${size} bytes)`,\n            ],\n            name: 'AbiDecodingDataSizeTooSmallError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n        this.params = params;\n        this.size = size;\n    }\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n    constructor() {\n        super('Cannot decode zero data (\"0x\") with ABI parameters.', {\n            name: 'AbiDecodingZeroDataError',\n        });\n    }\n}\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n    constructor({ expectedLength, givenLength, type, }) {\n        super([\n            `ABI encoding array length mismatch for type ${type}.`,\n            `Expected length: ${expectedLength}`,\n            `Given length: ${givenLength}`,\n        ].join('\\n'), { name: 'AbiEncodingArrayLengthMismatchError' });\n    }\n}\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n    constructor({ expectedSize, value }) {\n        super(`Size of bytes \"${value}\" (bytes${size(value)}) does not match expected size (bytes${expectedSize}).`, { name: 'AbiEncodingBytesSizeMismatchError' });\n    }\n}\nexport class AbiEncodingLengthMismatchError extends BaseError {\n    constructor({ expectedLength, givenLength, }) {\n        super([\n            'ABI encoding params/values length mismatch.',\n            `Expected length (params): ${expectedLength}`,\n            `Given length (values): ${givenLength}`,\n        ].join('\\n'), { name: 'AbiEncodingLengthMismatchError' });\n    }\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n    constructor(errorName, { docsPath }) {\n        super([\n            `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n            'Cannot encode error result without knowing what the parameter types are.',\n            'Make sure you are using the correct ABI and that the inputs exist on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiErrorInputsNotFoundError',\n        });\n    }\n}\nexport class AbiErrorNotFoundError extends BaseError {\n    constructor(errorName, { docsPath } = {}) {\n        super([\n            `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the error exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiErrorNotFoundError',\n        });\n    }\n}\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded error signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the error exists on it.',\n            `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiErrorSignatureNotFoundError',\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.signature = signature;\n    }\n}\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n    constructor({ docsPath }) {\n        super('Cannot extract event signature from empty topics.', {\n            docsPath,\n            name: 'AbiEventSignatureEmptyTopicsError',\n        });\n    }\n}\nexport class AbiEventSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded event signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the event exists on it.',\n            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiEventSignatureNotFoundError',\n        });\n    }\n}\nexport class AbiEventNotFoundError extends BaseError {\n    constructor(eventName, { docsPath } = {}) {\n        super([\n            `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the event exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiEventNotFoundError',\n        });\n    }\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n    constructor(functionName, { docsPath } = {}) {\n        super([\n            `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n            'Make sure you are using the correct ABI and that the function exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiFunctionNotFoundError',\n        });\n    }\n}\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n    constructor(functionName, { docsPath }) {\n        super([\n            `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n            'Cannot decode function result without knowing what the parameter types are.',\n            'Make sure you are using the correct ABI and that the function exists on it.',\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiFunctionOutputsNotFoundError',\n        });\n    }\n}\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n    constructor(signature, { docsPath }) {\n        super([\n            `Encoded function signature \"${signature}\" not found on ABI.`,\n            'Make sure you are using the correct ABI and that the function exists on it.',\n            `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n        ].join('\\n'), {\n            docsPath,\n            name: 'AbiFunctionSignatureNotFoundError',\n        });\n    }\n}\nexport class AbiItemAmbiguityError extends BaseError {\n    constructor(x, y) {\n        super('Found ambiguous types in overloaded ABI items.', {\n            metaMessages: [\n                `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n                `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n                '',\n                'These types encode differently and cannot be distinguished at runtime.',\n                'Remove one of the ambiguous items in the ABI.',\n            ],\n            name: 'AbiItemAmbiguityError',\n        });\n    }\n}\nexport class BytesSizeMismatchError extends BaseError {\n    constructor({ expectedSize, givenSize, }) {\n        super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {\n            name: 'BytesSizeMismatchError',\n        });\n    }\n}\nexport class DecodeLogDataMismatch extends BaseError {\n    constructor({ abiItem, data, params, size, }) {\n        super([\n            `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n        ].join('\\n'), {\n            metaMessages: [\n                `Params: (${formatAbiParams(params, { includeName: true })})`,\n                `Data:   ${data} (${size} bytes)`,\n            ],\n            name: 'DecodeLogDataMismatch',\n        });\n        Object.defineProperty(this, \"abiItem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"size\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abiItem = abiItem;\n        this.data = data;\n        this.params = params;\n        this.size = size;\n    }\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n    constructor({ abiItem, param, }) {\n        super([\n            `Expected a topic for indexed event parameter${param.name ? ` \"${param.name}\"` : ''} on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n        ].join('\\n'), { name: 'DecodeLogTopicsMismatch' });\n        Object.defineProperty(this, \"abiItem\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abiItem = abiItem;\n    }\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n    constructor(type, { docsPath }) {\n        super([\n            `Type \"${type}\" is not a valid encoding type.`,\n            'Please provide a valid ABI type.',\n        ].join('\\n'), { docsPath, name: 'InvalidAbiEncodingType' });\n    }\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n    constructor(type, { docsPath }) {\n        super([\n            `Type \"${type}\" is not a valid decoding type.`,\n            'Please provide a valid ABI type.',\n        ].join('\\n'), { docsPath, name: 'InvalidAbiDecodingType' });\n    }\n}\nexport class InvalidArrayError extends BaseError {\n    constructor(value) {\n        super([`Value \"${value}\" is not a valid array.`].join('\\n'), {\n            name: 'InvalidArrayError',\n        });\n    }\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n    constructor(type) {\n        super([\n            `\"${type}\" is not a valid definition type.`,\n            'Valid types: \"function\", \"event\", \"error\"',\n        ].join('\\n'), { name: 'InvalidDefinitionTypeError' });\n    }\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n    constructor(type) {\n        super(`Type \"${type}\" is not supported for packed encoding.`, {\n            name: 'UnsupportedPackedAbiType',\n        });\n    }\n}\n//# sourceMappingURL=abi.js.map","import { BaseError } from './base.js';\nexport class FilterTypeNotSupportedError extends BaseError {\n    constructor(type) {\n        super(`Filter type \"${type}\" is not supported.`, {\n            name: 'FilterTypeNotSupportedError',\n        });\n    }\n}\n//# sourceMappingURL=log.js.map","import { BaseError } from './base.js';\nexport class SliceOffsetOutOfBoundsError extends BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \"${offset}\" is out-of-bounds (size: ${size}).`, { name: 'SliceOffsetOutOfBoundsError' });\n    }\n}\nexport class SizeExceedsPaddingSizeError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (${size}) exceeds padding size (${targetSize}).`, { name: 'SizeExceedsPaddingSizeError' });\n    }\n}\nexport class InvalidBytesLengthError extends BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} is expected to be ${targetSize} ${type} long, but is ${size} ${type} long.`, { name: 'InvalidBytesLengthError' });\n    }\n}\n//# sourceMappingURL=data.js.map","import { SizeExceedsPaddingSizeError, } from '../../errors/data.js';\nexport function pad(hexOrBytes, { dir, size = 32 } = {}) {\n    if (typeof hexOrBytes === 'string')\n        return padHex(hexOrBytes, { dir, size });\n    return padBytes(hexOrBytes, { dir, size });\n}\nexport function padHex(hex_, { dir, size = 32 } = {}) {\n    if (size === null)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes, { dir, size = 32 } = {}) {\n    if (size === null)\n        return bytes;\n    if (bytes.length > size)\n        throw new SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n//# sourceMappingURL=pad.js.map","import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, { name: 'IntegerOutOfRangeError' });\n    }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n    constructor(bytes) {\n        super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {\n            name: 'InvalidBytesBooleanError',\n        });\n    }\n}\nexport class InvalidHexBooleanError extends BaseError {\n    constructor(hex) {\n        super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`, { name: 'InvalidHexBooleanError' });\n    }\n}\nexport class InvalidHexValueError extends BaseError {\n    constructor(value) {\n        super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`, { name: 'InvalidHexValueError' });\n    }\n}\nexport class SizeOverflowError extends BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, { name: 'SizeOverflowError' });\n    }\n}\n//# sourceMappingURL=encoding.js.map","export function trim(hexOrBytes, { dir = 'left' } = {}) {\n    let data = typeof hexOrBytes === 'string' ? hexOrBytes.replace('0x', '') : hexOrBytes;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (typeof hexOrBytes === 'string') {\n        if (data.length === 1 && dir === 'right')\n            data = `${data}0`;\n        return `0x${data.length % 2 === 1 ? `0${data}` : data}`;\n    }\n    return data;\n}\n//# sourceMappingURL=trim.js.map","import { InvalidHexBooleanError, SizeOverflowError, } from '../../errors/encoding.js';\nimport { size as size_ } from '../data/size.js';\nimport { trim } from '../data/trim.js';\nimport { hexToBytes } from './toBytes.js';\nexport function assertSize(hexOrBytes, { size }) {\n    if (size_(hexOrBytes) > size)\n        throw new SizeOverflowError({\n            givenSize: size_(hexOrBytes),\n            maxSize: size,\n        });\n}\n/**\n * Decodes a hex string into a string, number, bigint, boolean, or byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex\n * - Example: https://viem.sh/docs/utilities/fromHex#usage\n *\n * @param hex Hex string to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x1a4', 'number')\n * // 420\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c6421', 'string')\n * // 'Hello world'\n *\n * @example\n * import { fromHex } from 'viem'\n * const data = fromHex('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *   size: 32,\n *   to: 'string'\n * })\n * // 'Hello world'\n */\nexport function fromHex(hex, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return hexToNumber(hex, opts);\n    if (to === 'bigint')\n        return hexToBigInt(hex, opts);\n    if (to === 'string')\n        return hexToString(hex, opts);\n    if (to === 'boolean')\n        return hexToBool(hex, opts);\n    return hexToBytes(hex, opts);\n}\n/**\n * Decodes a hex value into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobigint\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x1a4', { signed: true })\n * // 420n\n *\n * @example\n * import { hexToBigInt } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420n\n */\nexport function hexToBigInt(hex, opts = {}) {\n    const { signed } = opts;\n    if (opts.size)\n        assertSize(hex, { size: opts.size });\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n    if (value <= max)\n        return value;\n    return value - BigInt(`0x${'f'.padStart(size * 2, 'f')}`) - 1n;\n}\n/**\n * Decodes a hex value into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextobool\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x01')\n * // true\n *\n * @example\n * import { hexToBool } from 'viem'\n * const data = hexToBool('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // true\n */\nexport function hexToBool(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = trim(hex);\n    }\n    if (trim(hex) === '0x00')\n        return false;\n    if (trim(hex) === '0x01')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a hex string into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextonumber\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToNumber('0x1a4')\n * // 420\n *\n * @example\n * import { hexToNumber } from 'viem'\n * const data = hexToBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // 420\n */\nexport function hexToNumber(hex, opts = {}) {\n    return Number(hexToBigInt(hex, opts));\n}\n/**\n * Decodes a hex value into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromHex#hextostring\n *\n * @param hex Hex value to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c6421')\n * // 'Hello world!'\n *\n * @example\n * import { hexToString } from 'viem'\n * const data = hexToString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // 'Hello world'\n */\nexport function hexToString(hex, opts = {}) {\n    let bytes = hexToBytes(hex);\n    if (opts.size) {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromHex.js.map","import { IntegerOutOfRangeError, } from '../../errors/encoding.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Encodes a string, number, bigint, or ByteArray into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex\n * - Example: https://viem.sh/docs/utilities/toHex#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world')\n * // '0x48656c6c6f20776f726c6421'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex(420)\n * // '0x1a4'\n *\n * @example\n * import { toHex } from 'viem'\n * const data = toHex('Hello world', { size: 32 })\n * // '0x48656c6c6f20776f726c64210000000000000000000000000000000000000000'\n */\nexport function toHex(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToHex(value, opts);\n    if (typeof value === 'string') {\n        return stringToHex(value, opts);\n    }\n    if (typeof value === 'boolean')\n        return boolToHex(value, opts);\n    return bytesToHex(value, opts);\n}\n/**\n * Encodes a boolean into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#booltohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true)\n * // '0x1'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(false)\n * // '0x0'\n *\n * @example\n * import { boolToHex } from 'viem'\n * const data = boolToHex(true, { size: 32 })\n * // '0x0000000000000000000000000000000000000000000000000000000000000001'\n */\nexport function boolToHex(value, opts = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a bytes array into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#bytestohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { bytesToHex } from 'viem'\n * const data = bytesToHex(Uint8Array.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]), { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function bytesToHex(value, opts = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++) {\n        string += hexes[value[i]];\n    }\n    const hex = `0x${string}`;\n    if (typeof opts.size === 'number') {\n        assertSize(hex, { size: opts.size });\n        return pad(hex, { dir: 'right', size: opts.size });\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#numbertohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420)\n * // '0x1a4'\n *\n * @example\n * import { numberToHex } from 'viem'\n * const data = numberToHex(420, { size: 32 })\n * // '0x00000000000000000000000000000000000000000000000000000000000001a4'\n */\nexport function numberToHex(value_, opts = {}) {\n    const { signed, size } = opts;\n    const value = BigInt(value_);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value_ === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value > maxValue) || value < minValue) {\n        const suffix = typeof value_ === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value_}${suffix}`,\n        });\n    }\n    const hex = `0x${(signed && value < 0 ? (1n << BigInt(size * 8)) + BigInt(value) : value).toString(16)}`;\n    if (size)\n        return pad(hex, { size });\n    return hex;\n}\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string into a hex string\n *\n * - Docs: https://viem.sh/docs/utilities/toHex#stringtohex\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Hex value.\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * @example\n * import { stringToHex } from 'viem'\n * const data = stringToHex('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n */\nexport function stringToHex(value_, opts = {}) {\n    const value = encoder.encode(value_);\n    return bytesToHex(value, opts);\n}\n//# sourceMappingURL=toHex.js.map","import { BaseError } from '../../errors/base.js';\nimport { isHex } from '../data/isHex.js';\nimport { pad } from '../data/pad.js';\nimport { assertSize } from './fromHex.js';\nimport { numberToHex, } from './toHex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Encodes a UTF-8 string, hex value, bigint, number or boolean to a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes\n * - Example: https://viem.sh/docs/utilities/toBytes#usage\n *\n * @param value Value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes('Hello world')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { toBytes } from 'viem'\n * const data = toBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function toBytes(value, opts = {}) {\n    if (typeof value === 'number' || typeof value === 'bigint')\n        return numberToBytes(value, opts);\n    if (typeof value === 'boolean')\n        return boolToBytes(value, opts);\n    if (isHex(value))\n        return hexToBytes(value, opts);\n    return stringToBytes(value, opts);\n}\n/**\n * Encodes a boolean into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#booltobytes\n *\n * @param value Boolean value to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true)\n * // Uint8Array([1])\n *\n * @example\n * import { boolToBytes } from 'viem'\n * const data = boolToBytes(true, { size: 32 })\n * // Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n */\nexport function boolToBytes(value, opts = {}) {\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { size: opts.size });\n    }\n    return bytes;\n}\n// We use very optimized technique to convert hex string to byte array\nconst charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\nfunction charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/**\n * Encodes a hex string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#hextobytes\n *\n * @param hex Hex string to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n *\n * @example\n * import { hexToBytes } from 'viem'\n * const data = hexToBytes('0x48656c6c6f20776f726c6421', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function hexToBytes(hex_, opts = {}) {\n    let hex = hex_;\n    if (opts.size) {\n        assertSize(hex, { size: opts.size });\n        hex = pad(hex, { dir: 'right', size: opts.size });\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#numbertobytes\n *\n * @param value Number to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420)\n * // Uint8Array([1, 164])\n *\n * @example\n * import { numberToBytes } from 'viem'\n * const data = numberToBytes(420, { size: 4 })\n * // Uint8Array([0, 0, 1, 164])\n */\nexport function numberToBytes(value, opts) {\n    const hex = numberToHex(value, opts);\n    return hexToBytes(hex);\n}\n/**\n * Encodes a UTF-8 string into a byte array.\n *\n * - Docs: https://viem.sh/docs/utilities/toBytes#stringtobytes\n *\n * @param value String to encode.\n * @param opts Options.\n * @returns Byte array value.\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!')\n * // Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n *\n * @example\n * import { stringToBytes } from 'viem'\n * const data = stringToBytes('Hello world!', { size: 32 })\n * // Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n */\nexport function stringToBytes(value, opts = {}) {\n    const bytes = encoder.encode(value);\n    if (typeof opts.size === 'number') {\n        assertSize(bytes, { size: opts.size });\n        return pad(bytes, { dir: 'right', size: opts.size });\n    }\n    return bytes;\n}\n//# sourceMappingURL=toBytes.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    const len = lst.length;\n    let Ah = new Uint32Array(len);\n    let Al = new Uint32Array(len);\n    for (let i = 0; i < len; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { add, add3H, add3L, add4H, add4L, add5H, add5L, fromBig, rotlBH, rotlBL, rotlSH, rotlSL, rotr32H, rotr32L, rotrBH, rotrBL, rotrSH, rotrSL, shrSH, shrSL, split, toBig };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from \"./_u64.js\";\n// prettier-ignore\nimport { abytes, aexists, anumber, aoutput, clean, createHasher, createXOFer, Hash, swap32IfBE, toBytes, u32 } from \"./utils.js\";\n// No __PURE__ annotations in sha3 header:\n// EVERYTHING is in fact used on every export.\n// Various per round constants calculations\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst IOTAS = split(_SHA3_IOTA, true);\nconst SHA3_IOTA_H = IOTAS[0];\nconst SHA3_IOTA_L = IOTAS[1];\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    clean(B);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        this.enableXOF = false;\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (!(0 < blockLen && blockLen < 200))\n            throw new Error('only keccak-f1600 function is supported');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    keccak() {\n        swap32IfBE(this.state32);\n        keccakP(this.state32, this.rounds);\n        swap32IfBE(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { blockLen, state } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        clean(this.state);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => createHasher(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ (() => gen(0x06, 144, 224 / 8))();\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ (() => gen(0x06, 136, 256 / 8))();\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ (() => gen(0x06, 104, 384 / 8))();\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ (() => gen(0x06, 72, 512 / 8))();\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ (() => gen(0x01, 144, 224 / 8))();\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ (() => gen(0x01, 136, 256 / 8))();\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ (() => gen(0x01, 104, 384 / 8))();\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ (() => gen(0x01, 72, 512 / 8))();\nconst genShake = (suffix, blockLen, outputLen) => createXOFer((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ (() => genShake(0x1f, 168, 128 / 8))();\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ (() => genShake(0x1f, 136, 256 / 8))();\n//# sourceMappingURL=sha3.js.map","import { keccak_256 } from '@noble/hashes/sha3';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function keccak256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = keccak_256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=keccak256.js.map","import { toBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from './keccak256.js';\nconst hash = (value) => keccak256(toBytes(value));\nexport function hashSignature(sig) {\n    return hash(sig);\n}\n//# sourceMappingURL=hashSignature.js.map","import { formatAbiItem } from 'abitype';\nimport { normalizeSignature, } from './normalizeSignature.js';\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def) => {\n    const def_ = (() => {\n        if (typeof def === 'string')\n            return def;\n        return formatAbiItem(def);\n    })();\n    return normalizeSignature(def_);\n};\n//# sourceMappingURL=toSignature.js.map","import { BaseError } from '../../errors/base.js';\nexport function normalizeSignature(signature) {\n    let active = true;\n    let current = '';\n    let level = 0;\n    let result = '';\n    let valid = false;\n    for (let i = 0; i < signature.length; i++) {\n        const char = signature[i];\n        // If the character is a separator, we want to reactivate.\n        if (['(', ')', ','].includes(char))\n            active = true;\n        // If the character is a \"level\" token, we want to increment/decrement.\n        if (char === '(')\n            level++;\n        if (char === ')')\n            level--;\n        // If we aren't active, we don't want to mutate the result.\n        if (!active)\n            continue;\n        // If level === 0, we are at the definition level.\n        if (level === 0) {\n            if (char === ' ' && ['event', 'function', ''].includes(result))\n                result = '';\n            else {\n                result += char;\n                // If we are at the end of the definition, we must be finished.\n                if (char === ')') {\n                    valid = true;\n                    break;\n                }\n            }\n            continue;\n        }\n        // Ignore spaces\n        if (char === ' ') {\n            // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n            if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n                current = '';\n                active = false;\n            }\n            continue;\n        }\n        result += char;\n        current += char;\n    }\n    if (!valid)\n        throw new BaseError('Unable to normalize signature.');\n    return result;\n}\n//# sourceMappingURL=normalizeSignature.js.map","import { hashSignature } from './hashSignature.js';\nimport { toSignature } from './toSignature.js';\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn) {\n    return hashSignature(toSignature(fn));\n}\n//# sourceMappingURL=toSignatureHash.js.map","import { toSignatureHash, } from './toSignatureHash.js';\n/**\n * Returns the event selector for a given event definition.\n *\n * @example\n * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')\n * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n */\nexport const toEventSelector = toSignatureHash;\n//# sourceMappingURL=toEventSelector.js.map","import { BaseError } from './base.js';\nexport class InvalidAddressError extends BaseError {\n    constructor({ address }) {\n        super(`Address \"${address}\" is invalid.`, {\n            metaMessages: [\n                '- Address must be a hex value of 20 bytes (40 hex characters).',\n                '- Address must match its checksum counterpart.',\n            ],\n            name: 'InvalidAddressError',\n        });\n    }\n}\n//# sourceMappingURL=address.js.map","/**\n * Map with a LRU (Least recently used) policy.\n *\n * @link https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    get(key) {\n        const value = super.get(key);\n        if (super.has(key) && value !== undefined) {\n            this.delete(key);\n            super.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize) {\n            const firstKey = this.keys().next().value;\n            if (firstKey)\n                this.delete(firstKey);\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { stringToBytes, } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { LruMap } from '../lru.js';\nimport { isAddress } from './isAddress.js';\nconst checksumAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function checksumAddress(address_, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (checksumAddressCache.has(`${address_}.${chainId}`))\n        return checksumAddressCache.get(`${address_}.${chainId}`);\n    const hexAddress = chainId\n        ? `${chainId}${address_.toLowerCase()}`\n        : address_.substring(2).toLowerCase();\n    const hash = keccak256(stringToBytes(hexAddress), 'bytes');\n    const address = (chainId ? hexAddress.substring(`${chainId}0x`.length) : hexAddress).split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && address[i]) {\n            address[i] = address[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && address[i + 1]) {\n            address[i + 1] = address[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${address.join('')}`;\n    checksumAddressCache.set(`${address_}.${chainId}`, result);\n    return result;\n}\nexport function getAddress(address, \n/**\n * Warning: EIP-1191 checksum addresses are generally not backwards compatible with the\n * wider Ethereum ecosystem, meaning it will break when validated against an application/tool\n * that relies on EIP-55 checksum encoding (checksum without chainId).\n *\n * It is highly recommended to not use this feature unless you\n * know what you are doing.\n *\n * See more: https://github.com/ethereum/EIPs/issues/1121\n */\nchainId) {\n    if (!isAddress(address, { strict: false }))\n        throw new InvalidAddressError({ address });\n    return checksumAddress(address, chainId);\n}\n//# sourceMappingURL=getAddress.js.map","import { LruMap } from '../lru.js';\nimport { checksumAddress } from './getAddress.js';\nconst addressRegex = /^0x[a-fA-F0-9]{40}$/;\n/** @internal */\nexport const isAddressCache = /*#__PURE__*/ new LruMap(8192);\nexport function isAddress(address, options) {\n    const { strict = true } = options ?? {};\n    const cacheKey = `${address}.${strict}`;\n    if (isAddressCache.has(cacheKey))\n        return isAddressCache.get(cacheKey);\n    const result = (() => {\n        if (!addressRegex.test(address))\n            return false;\n        if (address.toLowerCase() === address)\n            return true;\n        if (strict)\n            return checksumAddress(address) === address;\n        return true;\n    })();\n    isAddressCache.set(cacheKey, result);\n    return result;\n}\n//# sourceMappingURL=isAddress.js.map","export function concat(values) {\n    if (typeof values[0] === 'string')\n        return concatHex(values);\n    return concatBytes(values);\n}\nexport function concatBytes(values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    let offset = 0;\n    for (const arr of values) {\n        result.set(arr, offset);\n        offset += arr.length;\n    }\n    return result;\n}\nexport function concatHex(values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n//# sourceMappingURL=concat.js.map","import { SliceOffsetOutOfBoundsError, } from '../../errors/data.js';\nimport { isHex } from './isHex.js';\nimport { size } from './size.js';\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice(value, start, end, { strict } = {}) {\n    if (isHex(value, { strict: false }))\n        return sliceHex(value, start, end, {\n            strict,\n        });\n    return sliceBytes(value, start, end, {\n        strict,\n    });\n}\nfunction assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n        throw new SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: size(value),\n        });\n}\nfunction assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        size(value) !== end - start) {\n        throw new SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: size(value),\n        });\n    }\n}\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = value_.slice(start, end);\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(value_, start, end, { strict } = {}) {\n    assertStartOffset(value_, start);\n    const value = `0x${value_\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}`;\n    if (strict)\n        assertEndOffset(value, start, end);\n    return value;\n}\n//# sourceMappingURL=slice.js.map","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/;\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\n//# sourceMappingURL=regex.js.map","import { AbiEncodingArrayLengthMismatchError, AbiEncodingBytesSizeMismatchError, AbiEncodingLengthMismatchError, InvalidAbiEncodingTypeError, InvalidArrayError, } from '../../errors/abi.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { IntegerOutOfRangeError } from '../../errors/encoding.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { concat } from '../data/concat.js';\nimport { padHex } from '../data/pad.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { boolToHex, numberToHex, stringToHex, } from '../encoding/toHex.js';\nimport { integerRegex } from '../regex.js';\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n *\n * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters\n *\n *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.\n *\n * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\n * @param values - a set of values (values) that correspond to the given params.\n * @example\n * ```typescript\n * import { encodeAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' }\n *   ],\n *   ['wagmi', 420n, true]\n * )\n * ```\n *\n * You can also pass in Human Readable parameters with the parseAbiParameters utility.\n *\n * @example\n * ```typescript\n * import { encodeAbiParameters, parseAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   parseAbiParameters('string x, uint y, bool z'),\n *   ['wagmi', 420n, true]\n * )\n * ```\n */\nexport function encodeAbiParameters(params, values) {\n    if (params.length !== values.length)\n        throw new AbiEncodingLengthMismatchError({\n            expectedLength: params.length,\n            givenLength: values.length,\n        });\n    // Prepare the parameters to determine dynamic types to encode.\n    const preparedParams = prepareParams({\n        params: params,\n        values: values,\n    });\n    const data = encodeParams(preparedParams);\n    if (data.length === 0)\n        return '0x';\n    return data;\n}\nfunction prepareParams({ params, values, }) {\n    const preparedParams = [];\n    for (let i = 0; i < params.length; i++) {\n        preparedParams.push(prepareParam({ param: params[i], value: values[i] }));\n    }\n    return preparedParams;\n}\nfunction prepareParam({ param, value, }) {\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return encodeArray(value, { length, param: { ...param, type } });\n    }\n    if (param.type === 'tuple') {\n        return encodeTuple(value, {\n            param: param,\n        });\n    }\n    if (param.type === 'address') {\n        return encodeAddress(value);\n    }\n    if (param.type === 'bool') {\n        return encodeBool(value);\n    }\n    if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n        const signed = param.type.startsWith('int');\n        const [, , size = '256'] = integerRegex.exec(param.type) ?? [];\n        return encodeNumber(value, {\n            signed,\n            size: Number(size),\n        });\n    }\n    if (param.type.startsWith('bytes')) {\n        return encodeBytes(value, { param });\n    }\n    if (param.type === 'string') {\n        return encodeString(value);\n    }\n    throw new InvalidAbiEncodingTypeError(param.type, {\n        docsPath: '/docs/contract/encodeAbiParameters',\n    });\n}\nfunction encodeParams(preparedParams) {\n    // 1. Compute the size of the static part of the parameters.\n    let staticSize = 0;\n    for (let i = 0; i < preparedParams.length; i++) {\n        const { dynamic, encoded } = preparedParams[i];\n        if (dynamic)\n            staticSize += 32;\n        else\n            staticSize += size(encoded);\n    }\n    // 2. Split the parameters into static and dynamic parts.\n    const staticParams = [];\n    const dynamicParams = [];\n    let dynamicSize = 0;\n    for (let i = 0; i < preparedParams.length; i++) {\n        const { dynamic, encoded } = preparedParams[i];\n        if (dynamic) {\n            staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }));\n            dynamicParams.push(encoded);\n            dynamicSize += size(encoded);\n        }\n        else {\n            staticParams.push(encoded);\n        }\n    }\n    // 3. Concatenate static and dynamic parts.\n    return concat([...staticParams, ...dynamicParams]);\n}\nfunction encodeAddress(value) {\n    if (!isAddress(value))\n        throw new InvalidAddressError({ address: value });\n    return { dynamic: false, encoded: padHex(value.toLowerCase()) };\n}\nfunction encodeArray(value, { length, param, }) {\n    const dynamic = length === null;\n    if (!Array.isArray(value))\n        throw new InvalidArrayError(value);\n    if (!dynamic && value.length !== length)\n        throw new AbiEncodingArrayLengthMismatchError({\n            expectedLength: length,\n            givenLength: value.length,\n            type: `${param.type}[${length}]`,\n        });\n    let dynamicChild = false;\n    const preparedParams = [];\n    for (let i = 0; i < value.length; i++) {\n        const preparedParam = prepareParam({ param, value: value[i] });\n        if (preparedParam.dynamic)\n            dynamicChild = true;\n        preparedParams.push(preparedParam);\n    }\n    if (dynamic || dynamicChild) {\n        const data = encodeParams(preparedParams);\n        if (dynamic) {\n            const length = numberToHex(preparedParams.length, { size: 32 });\n            return {\n                dynamic: true,\n                encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n            };\n        }\n        if (dynamicChild)\n            return { dynamic: true, encoded: data };\n    }\n    return {\n        dynamic: false,\n        encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n    };\n}\nfunction encodeBytes(value, { param }) {\n    const [, paramSize] = param.type.split('bytes');\n    const bytesSize = size(value);\n    if (!paramSize) {\n        let value_ = value;\n        // If the size is not divisible by 32 bytes, pad the end\n        // with empty bytes to the ceiling 32 bytes.\n        if (bytesSize % 32 !== 0)\n            value_ = padHex(value_, {\n                dir: 'right',\n                size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n            });\n        return {\n            dynamic: true,\n            encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n        };\n    }\n    if (bytesSize !== Number.parseInt(paramSize))\n        throw new AbiEncodingBytesSizeMismatchError({\n            expectedSize: Number.parseInt(paramSize),\n            value,\n        });\n    return { dynamic: false, encoded: padHex(value, { dir: 'right' }) };\n}\nfunction encodeBool(value) {\n    if (typeof value !== 'boolean')\n        throw new BaseError(`Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`);\n    return { dynamic: false, encoded: padHex(boolToHex(value)) };\n}\nfunction encodeNumber(value, { signed, size = 256 }) {\n    if (typeof size === 'number') {\n        const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n;\n        const min = signed ? -max - 1n : 0n;\n        if (value > max || value < min)\n            throw new IntegerOutOfRangeError({\n                max: max.toString(),\n                min: min.toString(),\n                signed,\n                size: size / 8,\n                value: value.toString(),\n            });\n    }\n    return {\n        dynamic: false,\n        encoded: numberToHex(value, {\n            size: 32,\n            signed,\n        }),\n    };\n}\nfunction encodeString(value) {\n    const hexValue = stringToHex(value);\n    const partsLength = Math.ceil(size(hexValue) / 32);\n    const parts = [];\n    for (let i = 0; i < partsLength; i++) {\n        parts.push(padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n            dir: 'right',\n        }));\n    }\n    return {\n        dynamic: true,\n        encoded: concat([\n            padHex(numberToHex(size(hexValue), { size: 32 })),\n            ...parts,\n        ]),\n    };\n}\nfunction encodeTuple(value, { param }) {\n    let dynamic = false;\n    const preparedParams = [];\n    for (let i = 0; i < param.components.length; i++) {\n        const param_ = param.components[i];\n        const index = Array.isArray(value) ? i : param_.name;\n        const preparedParam = prepareParam({\n            param: param_,\n            value: value[index],\n        });\n        preparedParams.push(preparedParam);\n        if (preparedParam.dynamic)\n            dynamic = true;\n    }\n    return {\n        dynamic,\n        encoded: dynamic\n            ? encodeParams(preparedParams)\n            : concat(preparedParams.map(({ encoded }) => encoded)),\n    };\n}\nexport function getArrayComponents(type) {\n    const matches = type.match(/^(.*)\\[(\\d+)?\\]$/);\n    return matches\n        ? // Return `null` if the array is dynamic.\n            [matches[2] ? Number(matches[2]) : null, matches[1]]\n        : undefined;\n}\n//# sourceMappingURL=encodeAbiParameters.js.map","import { slice } from '../data/slice.js';\nimport { toSignatureHash, } from './toSignatureHash.js';\n/**\n * Returns the function selector for a given function definition.\n *\n * @example\n * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')\n * // 0x6352211e\n */\nexport const toFunctionSelector = (fn) => slice(toSignatureHash(fn), 0, 4);\n//# sourceMappingURL=toFunctionSelector.js.map","import { AbiItemAmbiguityError, } from '../../errors/abi.js';\nimport { isHex } from '../../utils/data/isHex.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { toEventSelector } from '../hash/toEventSelector.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nexport function getAbiItem(parameters) {\n    const { abi, args = [], name } = parameters;\n    const isSelector = isHex(name, { strict: false });\n    const abiItems = abi.filter((abiItem) => {\n        if (isSelector) {\n            if (abiItem.type === 'function')\n                return toFunctionSelector(abiItem) === name;\n            if (abiItem.type === 'event')\n                return toEventSelector(abiItem) === name;\n            return false;\n        }\n        return 'name' in abiItem && abiItem.name === name;\n    });\n    if (abiItems.length === 0)\n        return undefined;\n    if (abiItems.length === 1)\n        return abiItems[0];\n    let matchedAbiItem = undefined;\n    for (const abiItem of abiItems) {\n        if (!('inputs' in abiItem))\n            continue;\n        if (!args || args.length === 0) {\n            if (!abiItem.inputs || abiItem.inputs.length === 0)\n                return abiItem;\n            continue;\n        }\n        if (!abiItem.inputs)\n            continue;\n        if (abiItem.inputs.length === 0)\n            continue;\n        if (abiItem.inputs.length !== args.length)\n            continue;\n        const matched = args.every((arg, index) => {\n            const abiParameter = 'inputs' in abiItem && abiItem.inputs[index];\n            if (!abiParameter)\n                return false;\n            return isArgOfType(arg, abiParameter);\n        });\n        if (matched) {\n            // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n            if (matchedAbiItem &&\n                'inputs' in matchedAbiItem &&\n                matchedAbiItem.inputs) {\n                const ambiguousTypes = getAmbiguousTypes(abiItem.inputs, matchedAbiItem.inputs, args);\n                if (ambiguousTypes)\n                    throw new AbiItemAmbiguityError({\n                        abiItem,\n                        type: ambiguousTypes[0],\n                    }, {\n                        abiItem: matchedAbiItem,\n                        type: ambiguousTypes[1],\n                    });\n            }\n            matchedAbiItem = abiItem;\n        }\n    }\n    if (matchedAbiItem)\n        return matchedAbiItem;\n    return abiItems[0];\n}\n/** @internal */\nexport function isArgOfType(arg, abiParameter) {\n    const argType = typeof arg;\n    const abiParameterType = abiParameter.type;\n    switch (abiParameterType) {\n        case 'address':\n            return isAddress(arg, { strict: false });\n        case 'bool':\n            return argType === 'boolean';\n        case 'function':\n            return argType === 'string';\n        case 'string':\n            return argType === 'string';\n        default: {\n            if (abiParameterType === 'tuple' && 'components' in abiParameter)\n                return Object.values(abiParameter.components).every((component, index) => {\n                    return isArgOfType(Object.values(arg)[index], component);\n                });\n            // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n            // https://regexr.com/6v8hp\n            if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType))\n                return argType === 'number' || argType === 'bigint';\n            // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n            // https://regexr.com/6va55\n            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n                return argType === 'string' || arg instanceof Uint8Array;\n            // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n            // https://regexr.com/6va6i\n            if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n                return (Array.isArray(arg) &&\n                    arg.every((x) => isArgOfType(x, {\n                        ...abiParameter,\n                        // Pop off `[]` or `[M]` from end of type\n                        type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n                    })));\n            }\n            return false;\n        }\n    }\n}\n/** @internal */\nexport function getAmbiguousTypes(sourceParameters, targetParameters, args) {\n    for (const parameterIndex in sourceParameters) {\n        const sourceParameter = sourceParameters[parameterIndex];\n        const targetParameter = targetParameters[parameterIndex];\n        if (sourceParameter.type === 'tuple' &&\n            targetParameter.type === 'tuple' &&\n            'components' in sourceParameter &&\n            'components' in targetParameter)\n            return getAmbiguousTypes(sourceParameter.components, targetParameter.components, args[parameterIndex]);\n        const types = [sourceParameter.type, targetParameter.type];\n        const ambiguous = (() => {\n            if (types.includes('address') && types.includes('bytes20'))\n                return true;\n            if (types.includes('address') && types.includes('string'))\n                return isAddress(args[parameterIndex], { strict: false });\n            if (types.includes('address') && types.includes('bytes'))\n                return isAddress(args[parameterIndex], { strict: false });\n            return false;\n        })();\n        if (ambiguous)\n            return types;\n    }\n    return;\n}\n//# sourceMappingURL=getAbiItem.js.map","import { AbiEventNotFoundError, } from '../../errors/abi.js';\nimport { FilterTypeNotSupportedError, } from '../../errors/log.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { toEventSelector, } from '../hash/toEventSelector.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeEventTopics';\nexport function encodeEventTopics(parameters) {\n    const { abi, eventName, args } = parameters;\n    let abiItem = abi[0];\n    if (eventName) {\n        const item = getAbiItem({ abi, name: eventName });\n        if (!item)\n            throw new AbiEventNotFoundError(eventName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'event')\n        throw new AbiEventNotFoundError(undefined, { docsPath });\n    const definition = formatAbiItem(abiItem);\n    const signature = toEventSelector(definition);\n    let topics = [];\n    if (args && 'inputs' in abiItem) {\n        const indexedInputs = abiItem.inputs?.filter((param) => 'indexed' in param && param.indexed);\n        const args_ = Array.isArray(args)\n            ? args\n            : Object.values(args).length > 0\n                ? (indexedInputs?.map((x) => args[x.name]) ?? [])\n                : [];\n        if (args_.length > 0) {\n            topics =\n                indexedInputs?.map((param, i) => {\n                    if (Array.isArray(args_[i]))\n                        return args_[i].map((_, j) => encodeArg({ param, value: args_[i][j] }));\n                    return typeof args_[i] !== 'undefined' && args_[i] !== null\n                        ? encodeArg({ param, value: args_[i] })\n                        : null;\n                }) ?? [];\n        }\n    }\n    return [signature, ...topics];\n}\nfunction encodeArg({ param, value, }) {\n    if (param.type === 'string' || param.type === 'bytes')\n        return keccak256(toBytes(value));\n    if (param.type === 'tuple' || param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n        throw new FilterTypeNotSupportedError(param.type);\n    return encodeAbiParameters([param], [value]);\n}\n//# sourceMappingURL=encodeEventTopics.js.map","/**\n * Scopes `request` to the filter ID. If the client is a fallback, it will\n * listen for responses and scope the child transport `request` function\n * to the successful filter ID.\n */\nexport function createFilterRequestScope(client, { method }) {\n    const requestMap = {};\n    if (client.transport.type === 'fallback')\n        client.transport.onResponse?.(({ method: method_, response: id, status, transport, }) => {\n            if (status === 'success' && method === method_)\n                requestMap[id] = transport.request;\n        });\n    return ((id) => requestMap[id] || client.request);\n}\n//# sourceMappingURL=createFilterRequestScope.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a Filter to retrieve event logs that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges) or [`getFilterLogs`](https://viem.sh/docs/actions/public/getFilterLogs).\n *\n * - Docs: https://viem.sh/docs/contract/createContractEventFilter\n *\n * @param client - Client to use\n * @param parameters - {@link CreateContractEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateContractEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n * })\n */\nexport async function createContractEventFilter(client, parameters) {\n    const { address, abi, args, eventName, fromBlock, strict, toBlock } = parameters;\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newFilter',\n    });\n    const topics = eventName\n        ? encodeEventTopics({\n            abi,\n            args,\n            eventName,\n        })\n        : undefined;\n    const id = await client.request({\n        method: 'eth_newFilter',\n        params: [\n            {\n                address,\n                fromBlock: typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n                toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n                topics,\n            },\n        ],\n    });\n    return {\n        abi,\n        args,\n        eventName,\n        id,\n        request: getRequest(id),\n        strict: Boolean(strict),\n        type: 'event',\n    };\n}\n//# sourceMappingURL=createContractEventFilter.js.map","export function parseAccount(account) {\n    if (typeof account === 'string')\n        return { address: account, type: 'json-rpc' };\n    return account;\n}\n//# sourceMappingURL=parseAccount.js.map","import { AbiFunctionNotFoundError, } from '../../errors/abi.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeFunctionData';\nexport function prepareEncodeFunctionData(parameters) {\n    const { abi, args, functionName } = parameters;\n    let abiItem = abi[0];\n    if (functionName) {\n        const item = getAbiItem({\n            abi,\n            args,\n            name: functionName,\n        });\n        if (!item)\n            throw new AbiFunctionNotFoundError(functionName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'function')\n        throw new AbiFunctionNotFoundError(undefined, { docsPath });\n    return {\n        abi: [abiItem],\n        functionName: toFunctionSelector(formatAbiItem(abiItem)),\n    };\n}\n//# sourceMappingURL=prepareEncodeFunctionData.js.map","import { concatHex } from '../data/concat.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js';\nexport function encodeFunctionData(parameters) {\n    const { args } = parameters;\n    const { abi, functionName } = (() => {\n        if (parameters.abi.length === 1 &&\n            parameters.functionName?.startsWith('0x'))\n            return parameters;\n        return prepareEncodeFunctionData(parameters);\n    })();\n    const abiItem = abi[0];\n    const signature = functionName;\n    const data = 'inputs' in abiItem && abiItem.inputs\n        ? encodeAbiParameters(abiItem.inputs, args ?? [])\n        : undefined;\n    return concatHex([signature, data ?? '0x']);\n}\n//# sourceMappingURL=encodeFunctionData.js.map","// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n    1: 'An `assert` condition failed.',\n    17: 'Arithmetic operation resulted in underflow or overflow.',\n    18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n    33: 'Attempted to convert to an invalid type.',\n    34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n    49: 'Performed `.pop()` on an empty array',\n    50: 'Array index is out of bounds.',\n    65: 'Allocated too much memory or created an array which is too large.',\n    81: 'Attempted to call a zero-initialized variable of internal function type.',\n};\nexport const solidityError = {\n    inputs: [\n        {\n            name: 'message',\n            type: 'string',\n        },\n    ],\n    name: 'Error',\n    type: 'error',\n};\nexport const solidityPanic = {\n    inputs: [\n        {\n            name: 'reason',\n            type: 'uint256',\n        },\n    ],\n    name: 'Panic',\n    type: 'error',\n};\n//# sourceMappingURL=solidity.js.map","import { BaseError } from './base.js';\nexport class NegativeOffsetError extends BaseError {\n    constructor({ offset }) {\n        super(`Offset \\`${offset}\\` cannot be negative.`, {\n            name: 'NegativeOffsetError',\n        });\n    }\n}\nexport class PositionOutOfBoundsError extends BaseError {\n    constructor({ length, position }) {\n        super(`Position \\`${position}\\` is out of bounds (\\`0 < position < ${length}\\`).`, { name: 'PositionOutOfBoundsError' });\n    }\n}\nexport class RecursiveReadLimitExceededError extends BaseError {\n    constructor({ count, limit }) {\n        super(`Recursive read limit of \\`${limit}\\` exceeded (recursive read count: \\`${count}\\`).`, { name: 'RecursiveReadLimitExceededError' });\n    }\n}\n//# sourceMappingURL=cursor.js.map","import { NegativeOffsetError, PositionOutOfBoundsError, RecursiveReadLimitExceededError, } from '../errors/cursor.js';\nconst staticCursor = {\n    bytes: new Uint8Array(),\n    dataView: new DataView(new ArrayBuffer(0)),\n    position: 0,\n    positionReadCount: new Map(),\n    recursiveReadCount: 0,\n    recursiveReadLimit: Number.POSITIVE_INFINITY,\n    assertReadLimit() {\n        if (this.recursiveReadCount >= this.recursiveReadLimit)\n            throw new RecursiveReadLimitExceededError({\n                count: this.recursiveReadCount + 1,\n                limit: this.recursiveReadLimit,\n            });\n    },\n    assertPosition(position) {\n        if (position < 0 || position > this.bytes.length - 1)\n            throw new PositionOutOfBoundsError({\n                length: this.bytes.length,\n                position,\n            });\n    },\n    decrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position - offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    getReadCount(position) {\n        return this.positionReadCount.get(position || this.position) || 0;\n    },\n    incrementPosition(offset) {\n        if (offset < 0)\n            throw new NegativeOffsetError({ offset });\n        const position = this.position + offset;\n        this.assertPosition(position);\n        this.position = position;\n    },\n    inspectByte(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectBytes(length, position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + length - 1);\n        return this.bytes.subarray(position, position + length);\n    },\n    inspectUint8(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position);\n        return this.bytes[position];\n    },\n    inspectUint16(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 1);\n        return this.dataView.getUint16(position);\n    },\n    inspectUint24(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 2);\n        return ((this.dataView.getUint16(position) << 8) +\n            this.dataView.getUint8(position + 2));\n    },\n    inspectUint32(position_) {\n        const position = position_ ?? this.position;\n        this.assertPosition(position + 3);\n        return this.dataView.getUint32(position);\n    },\n    pushByte(byte) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = byte;\n        this.position++;\n    },\n    pushBytes(bytes) {\n        this.assertPosition(this.position + bytes.length - 1);\n        this.bytes.set(bytes, this.position);\n        this.position += bytes.length;\n    },\n    pushUint8(value) {\n        this.assertPosition(this.position);\n        this.bytes[this.position] = value;\n        this.position++;\n    },\n    pushUint16(value) {\n        this.assertPosition(this.position + 1);\n        this.dataView.setUint16(this.position, value);\n        this.position += 2;\n    },\n    pushUint24(value) {\n        this.assertPosition(this.position + 2);\n        this.dataView.setUint16(this.position, value >> 8);\n        this.dataView.setUint8(this.position + 2, value & ~4294967040);\n        this.position += 3;\n    },\n    pushUint32(value) {\n        this.assertPosition(this.position + 3);\n        this.dataView.setUint32(this.position, value);\n        this.position += 4;\n    },\n    readByte() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectByte();\n        this.position++;\n        return value;\n    },\n    readBytes(length, size) {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectBytes(length);\n        this.position += size ?? length;\n        return value;\n    },\n    readUint8() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint8();\n        this.position += 1;\n        return value;\n    },\n    readUint16() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint16();\n        this.position += 2;\n        return value;\n    },\n    readUint24() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint24();\n        this.position += 3;\n        return value;\n    },\n    readUint32() {\n        this.assertReadLimit();\n        this._touch();\n        const value = this.inspectUint32();\n        this.position += 4;\n        return value;\n    },\n    get remaining() {\n        return this.bytes.length - this.position;\n    },\n    setPosition(position) {\n        const oldPosition = this.position;\n        this.assertPosition(position);\n        this.position = position;\n        return () => (this.position = oldPosition);\n    },\n    _touch() {\n        if (this.recursiveReadLimit === Number.POSITIVE_INFINITY)\n            return;\n        const count = this.getReadCount();\n        this.positionReadCount.set(this.position, count + 1);\n        if (count > 0)\n            this.recursiveReadCount++;\n    },\n};\nexport function createCursor(bytes, { recursiveReadLimit = 8_192 } = {}) {\n    const cursor = Object.create(staticCursor);\n    cursor.bytes = bytes;\n    cursor.dataView = new DataView(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    cursor.positionReadCount = new Map();\n    cursor.recursiveReadLimit = recursiveReadLimit;\n    return cursor;\n}\n//# sourceMappingURL=cursor.js.map","import { InvalidBytesBooleanError } from '../../errors/encoding.js';\nimport { trim } from '../data/trim.js';\nimport { assertSize, hexToBigInt, hexToNumber, } from './fromHex.js';\nimport { bytesToHex } from './toHex.js';\n/**\n * Decodes a byte array into a UTF-8 string, hex value, number, bigint or boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes\n * - Example: https://viem.sh/docs/utilities/fromBytes#usage\n *\n * @param bytes Byte array to decode.\n * @param toOrOpts Type to convert to or options.\n * @returns Decoded value.\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(new Uint8Array([1, 164]), 'number')\n * // 420\n *\n * @example\n * import { fromBytes } from 'viem'\n * const data = fromBytes(\n *   new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]),\n *   'string'\n * )\n * // 'Hello world'\n */\nexport function fromBytes(bytes, toOrOpts) {\n    const opts = typeof toOrOpts === 'string' ? { to: toOrOpts } : toOrOpts;\n    const to = opts.to;\n    if (to === 'number')\n        return bytesToNumber(bytes, opts);\n    if (to === 'bigint')\n        return bytesToBigInt(bytes, opts);\n    if (to === 'boolean')\n        return bytesToBool(bytes, opts);\n    if (to === 'string')\n        return bytesToString(bytes, opts);\n    return bytesToHex(bytes, opts);\n}\n/**\n * Decodes a byte array into a bigint.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobigint\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns BigInt value.\n *\n * @example\n * import { bytesToBigInt } from 'viem'\n * const data = bytesToBigInt(new Uint8Array([1, 164]))\n * // 420n\n */\nexport function bytesToBigInt(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToBigInt(hex, opts);\n}\n/**\n * Decodes a byte array into a boolean.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestobool\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Boolean value.\n *\n * @example\n * import { bytesToBool } from 'viem'\n * const data = bytesToBool(new Uint8Array([1]))\n * // true\n */\nexport function bytesToBool(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes);\n    }\n    if (bytes.length > 1 || bytes[0] > 1)\n        throw new InvalidBytesBooleanError(bytes);\n    return Boolean(bytes[0]);\n}\n/**\n * Decodes a byte array into a number.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestonumber\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns Number value.\n *\n * @example\n * import { bytesToNumber } from 'viem'\n * const data = bytesToNumber(new Uint8Array([1, 164]))\n * // 420\n */\nexport function bytesToNumber(bytes, opts = {}) {\n    if (typeof opts.size !== 'undefined')\n        assertSize(bytes, { size: opts.size });\n    const hex = bytesToHex(bytes, opts);\n    return hexToNumber(hex, opts);\n}\n/**\n * Decodes a byte array into a UTF-8 string.\n *\n * - Docs: https://viem.sh/docs/utilities/fromBytes#bytestostring\n *\n * @param bytes Byte array to decode.\n * @param opts Options.\n * @returns String value.\n *\n * @example\n * import { bytesToString } from 'viem'\n * const data = bytesToString(new Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // 'Hello world'\n */\nexport function bytesToString(bytes_, opts = {}) {\n    let bytes = bytes_;\n    if (typeof opts.size !== 'undefined') {\n        assertSize(bytes, { size: opts.size });\n        bytes = trim(bytes, { dir: 'right' });\n    }\n    return new TextDecoder().decode(bytes);\n}\n//# sourceMappingURL=fromBytes.js.map","import { AbiDecodingDataSizeTooSmallError, AbiDecodingZeroDataError, InvalidAbiDecodingTypeError, } from '../../errors/abi.js';\nimport { checksumAddress, } from '../address/getAddress.js';\nimport { createCursor, } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { sliceBytes } from '../data/slice.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToBigInt, bytesToBool, bytesToNumber, bytesToString, } from '../encoding/fromBytes.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { getArrayComponents } from './encodeAbiParameters.js';\nexport function decodeAbiParameters(params, data) {\n    const bytes = typeof data === 'string' ? hexToBytes(data) : data;\n    const cursor = createCursor(bytes);\n    if (size(bytes) === 0 && params.length > 0)\n        throw new AbiDecodingZeroDataError();\n    if (size(data) && size(data) < 32)\n        throw new AbiDecodingDataSizeTooSmallError({\n            data: typeof data === 'string' ? data : bytesToHex(data),\n            params: params,\n            size: size(data),\n        });\n    let consumed = 0;\n    const values = [];\n    for (let i = 0; i < params.length; ++i) {\n        const param = params[i];\n        cursor.setPosition(consumed);\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: 0,\n        });\n        consumed += consumed_;\n        values.push(data);\n    }\n    return values;\n}\nfunction decodeParameter(cursor, param, { staticPosition }) {\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return decodeArray(cursor, { ...param, type }, { length, staticPosition });\n    }\n    if (param.type === 'tuple')\n        return decodeTuple(cursor, param, { staticPosition });\n    if (param.type === 'address')\n        return decodeAddress(cursor);\n    if (param.type === 'bool')\n        return decodeBool(cursor);\n    if (param.type.startsWith('bytes'))\n        return decodeBytes(cursor, param, { staticPosition });\n    if (param.type.startsWith('uint') || param.type.startsWith('int'))\n        return decodeNumber(cursor, param);\n    if (param.type === 'string')\n        return decodeString(cursor, { staticPosition });\n    throw new InvalidAbiDecodingTypeError(param.type, {\n        docsPath: '/docs/contract/decodeAbiParameters',\n    });\n}\n////////////////////////////////////////////////////////////////////\n// Type Decoders\nconst sizeOfLength = 32;\nconst sizeOfOffset = 32;\nfunction decodeAddress(cursor) {\n    const value = cursor.readBytes(32);\n    return [checksumAddress(bytesToHex(sliceBytes(value, -20))), 32];\n}\nfunction decodeArray(cursor, param, { length, staticPosition }) {\n    // If the length of the array is not known in advance (dynamic array),\n    // this means we will need to wonder off to the pointer and decode.\n    if (!length) {\n        // Dealing with a dynamic type, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const startOfData = start + sizeOfLength;\n        // Get the length of the array from the offset.\n        cursor.setPosition(start);\n        const length = bytesToNumber(cursor.readBytes(sizeOfLength));\n        // Check if the array has any dynamic children.\n        const dynamicChild = hasDynamicChild(param);\n        let consumed = 0;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n            // Otherwise, elements will be the size of their encoding (consumed bytes).\n            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));\n            const [data, consumed_] = decodeParameter(cursor, param, {\n                staticPosition: startOfData,\n            });\n            consumed += consumed_;\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance,\n    // and the length of an element deeply nested in the array is not known,\n    // we need to decode the offset of the array data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the array data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // Move cursor along to the next slot (next offset pointer).\n            cursor.setPosition(start + i * 32);\n            const [data] = decodeParameter(cursor, param, {\n                staticPosition: start,\n            });\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance and the array is deeply static,\n    // then we can just decode each element in sequence.\n    let consumed = 0;\n    const value = [];\n    for (let i = 0; i < length; ++i) {\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            staticPosition: staticPosition + consumed,\n        });\n        consumed += consumed_;\n        value.push(data);\n    }\n    return [value, consumed];\n}\nfunction decodeBool(cursor) {\n    return [bytesToBool(cursor.readBytes(32), { size: 32 }), 32];\n}\nfunction decodeBytes(cursor, param, { staticPosition }) {\n    const [_, size] = param.type.split('bytes');\n    if (!size) {\n        // Dealing with dynamic types, so get the offset of the bytes data.\n        const offset = bytesToNumber(cursor.readBytes(32));\n        // Set position of the cursor to start of bytes data.\n        cursor.setPosition(staticPosition + offset);\n        const length = bytesToNumber(cursor.readBytes(32));\n        // If there is no length, we have zero data.\n        if (length === 0) {\n            // As we have gone wondering, restore to the original position + next slot.\n            cursor.setPosition(staticPosition + 32);\n            return ['0x', 32];\n        }\n        const data = cursor.readBytes(length);\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [bytesToHex(data), 32];\n    }\n    const value = bytesToHex(cursor.readBytes(Number.parseInt(size), 32));\n    return [value, 32];\n}\nfunction decodeNumber(cursor, param) {\n    const signed = param.type.startsWith('int');\n    const size = Number.parseInt(param.type.split('int')[1] || '256');\n    const value = cursor.readBytes(32);\n    return [\n        size > 48\n            ? bytesToBigInt(value, { signed })\n            : bytesToNumber(value, { signed }),\n        32,\n    ];\n}\nfunction decodeTuple(cursor, param, { staticPosition }) {\n    // Tuples can have unnamed components (i.e. they are arrays), so we must\n    // determine whether the tuple is named or unnamed. In the case of a named\n    // tuple, the value will be an object where each property is the name of the\n    // component. In the case of an unnamed tuple, the value will be an array.\n    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name }) => !name);\n    // Initialize the value to an object or an array, depending on whether the\n    // tuple is named or unnamed.\n    const value = hasUnnamedChild ? [] : {};\n    let consumed = 0;\n    // If the tuple has a dynamic child, we must first decode the offset to the\n    // tuple data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the tuple data.\n        const offset = bytesToNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of referencing slot + offset.\n        const start = staticPosition + offset;\n        for (let i = 0; i < param.components.length; ++i) {\n            const component = param.components[i];\n            cursor.setPosition(start + consumed);\n            const [data, consumed_] = decodeParameter(cursor, component, {\n                staticPosition: start,\n            });\n            consumed += consumed_;\n            value[hasUnnamedChild ? i : component?.name] = data;\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the tuple has static children, we can just decode each component\n    // in sequence.\n    for (let i = 0; i < param.components.length; ++i) {\n        const component = param.components[i];\n        const [data, consumed_] = decodeParameter(cursor, component, {\n            staticPosition,\n        });\n        value[hasUnnamedChild ? i : component?.name] = data;\n        consumed += consumed_;\n    }\n    return [value, consumed];\n}\nfunction decodeString(cursor, { staticPosition }) {\n    // Get offset to start of string data.\n    const offset = bytesToNumber(cursor.readBytes(32));\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset;\n    cursor.setPosition(start);\n    const length = bytesToNumber(cursor.readBytes(32));\n    // If there is no length, we have zero data (empty string).\n    if (length === 0) {\n        cursor.setPosition(staticPosition + 32);\n        return ['', 32];\n    }\n    const data = cursor.readBytes(length, 32);\n    const value = bytesToString(trim(data));\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32);\n    return [value, 32];\n}\nfunction hasDynamicChild(param) {\n    const { type } = param;\n    if (type === 'string')\n        return true;\n    if (type === 'bytes')\n        return true;\n    if (type.endsWith('[]'))\n        return true;\n    if (type === 'tuple')\n        return param.components?.some(hasDynamicChild);\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents &&\n        hasDynamicChild({ ...param, type: arrayComponents[1] }))\n        return true;\n    return false;\n}\n//# sourceMappingURL=decodeAbiParameters.js.map","import { solidityError, solidityPanic } from '../../constants/solidity.js';\nimport { AbiDecodingZeroDataError, AbiErrorSignatureNotFoundError, } from '../../errors/abi.js';\nimport { slice } from '../data/slice.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nexport function decodeErrorResult(parameters) {\n    const { abi, data } = parameters;\n    const signature = slice(data, 0, 4);\n    if (signature === '0x')\n        throw new AbiDecodingZeroDataError();\n    const abi_ = [...(abi || []), solidityError, solidityPanic];\n    const abiItem = abi_.find((x) => x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)));\n    if (!abiItem)\n        throw new AbiErrorSignatureNotFoundError(signature, {\n            docsPath: '/docs/contract/decodeErrorResult',\n        });\n    return {\n        abiItem,\n        args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n            ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n            : undefined,\n        errorName: abiItem.name,\n    };\n}\n//# sourceMappingURL=decodeErrorResult.js.map","export const stringify = (value, replacer, space) => JSON.stringify(value, (key, value_) => {\n    const value = typeof value_ === 'bigint' ? value_.toString() : value_;\n    return typeof replacer === 'function' ? replacer(key, value) : value;\n}, space);\n//# sourceMappingURL=stringify.js.map","import { stringify } from '../stringify.js';\nexport function formatAbiItemWithArgs({ abiItem, args, includeFunctionName = true, includeName = false, }) {\n    if (!('name' in abiItem))\n        return;\n    if (!('inputs' in abiItem))\n        return;\n    if (!abiItem.inputs)\n        return;\n    return `${includeFunctionName ? abiItem.name : ''}(${abiItem.inputs\n        .map((input, i) => `${includeName && input.name ? `${input.name}: ` : ''}${typeof args[i] === 'object' ? stringify(args[i]) : args[i]}`)\n        .join(', ')})`;\n}\n//# sourceMappingURL=formatAbiItemWithArgs.js.map","export const etherUnits = {\n    gwei: 9,\n    wei: 18,\n};\nexport const gweiUnits = {\n    ether: -9,\n    wei: 9,\n};\nexport const weiUnits = {\n    ether: -18,\n    gwei: -9,\n};\n//# sourceMappingURL=unit.js.map","/**\n *  Divides a number by a given exponent of base 10 (10exponent), and formats it into a string representation of the number..\n *\n * - Docs: https://viem.sh/docs/utilities/formatUnits\n *\n * @example\n * import { formatUnits } from 'viem'\n *\n * formatUnits(420000000000n, 9)\n * // '420'\n */\nexport function formatUnits(value, decimals) {\n    let display = value.toString();\n    const negative = display.startsWith('-');\n    if (negative)\n        display = display.slice(1);\n    display = display.padStart(decimals, '0');\n    let [integer, fraction] = [\n        display.slice(0, display.length - decimals),\n        display.slice(display.length - decimals),\n    ];\n    fraction = fraction.replace(/(0+)$/, '');\n    return `${negative ? '-' : ''}${integer || '0'}${fraction ? `.${fraction}` : ''}`;\n}\n//# sourceMappingURL=formatUnits.js.map","import { etherUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of ether.\n *\n * - Docs: https://viem.sh/docs/utilities/formatEther\n *\n * @example\n * import { formatEther } from 'viem'\n *\n * formatEther(1000000000000000000n)\n * // '1'\n */\nexport function formatEther(wei, unit = 'wei') {\n    return formatUnits(wei, etherUnits[unit]);\n}\n//# sourceMappingURL=formatEther.js.map","import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei, unit = 'wei') {\n    return formatUnits(wei, gweiUnits[unit]);\n}\n//# sourceMappingURL=formatGwei.js.map","import { BaseError } from './base.js';\nexport class AccountStateConflictError extends BaseError {\n    constructor({ address }) {\n        super(`State for account \"${address}\" is set multiple times.`, {\n            name: 'AccountStateConflictError',\n        });\n    }\n}\nexport class StateAssignmentConflictError extends BaseError {\n    constructor() {\n        super('state and stateDiff are set on the same account.', {\n            name: 'StateAssignmentConflictError',\n        });\n    }\n}\n/** @internal */\nexport function prettyStateMapping(stateMapping) {\n    return stateMapping.reduce((pretty, { slot, value }) => {\n        return `${pretty}        ${slot}: ${value}\\n`;\n    }, '');\n}\nexport function prettyStateOverride(stateOverride) {\n    return stateOverride\n        .reduce((pretty, { address, ...state }) => {\n        let val = `${pretty}    ${address}:\\n`;\n        if (state.nonce)\n            val += `      nonce: ${state.nonce}\\n`;\n        if (state.balance)\n            val += `      balance: ${state.balance}\\n`;\n        if (state.code)\n            val += `      code: ${state.code}\\n`;\n        if (state.state) {\n            val += '      state:\\n';\n            val += prettyStateMapping(state.state);\n        }\n        if (state.stateDiff) {\n            val += '      stateDiff:\\n';\n            val += prettyStateMapping(state.stateDiff);\n        }\n        return val;\n    }, '  State Override:\\n')\n        .slice(0, -1);\n}\n//# sourceMappingURL=stateOverride.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport function prettyPrint(args) {\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\nexport class FeeConflictError extends BaseError {\n    constructor() {\n        super([\n            'Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.',\n            'Use `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others.',\n        ].join('\\n'), { name: 'FeeConflictError' });\n    }\n}\nexport class InvalidLegacyVError extends BaseError {\n    constructor({ v }) {\n        super(`Invalid \\`v\\` value \"${v}\". Expected 27 or 28.`, {\n            name: 'InvalidLegacyVError',\n        });\n    }\n}\nexport class InvalidSerializableTransactionError extends BaseError {\n    constructor({ transaction }) {\n        super('Cannot infer a transaction type from provided transaction.', {\n            metaMessages: [\n                'Provided Transaction:',\n                '{',\n                prettyPrint(transaction),\n                '}',\n                '',\n                'To infer the type, either provide:',\n                '- a `type` to the Transaction, or',\n                '- an EIP-1559 Transaction with `maxFeePerGas`, or',\n                '- an EIP-2930 Transaction with `gasPrice` & `accessList`, or',\n                '- an EIP-4844 Transaction with `blobs`, `blobVersionedHashes`, `sidecars`, or',\n                '- an EIP-7702 Transaction with `authorizationList`, or',\n                '- a Legacy Transaction with `gasPrice`',\n            ],\n            name: 'InvalidSerializableTransactionError',\n        });\n    }\n}\nexport class InvalidSerializedTransactionTypeError extends BaseError {\n    constructor({ serializedType }) {\n        super(`Serialized transaction type \"${serializedType}\" is invalid.`, {\n            name: 'InvalidSerializedTransactionType',\n        });\n        Object.defineProperty(this, \"serializedType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedType = serializedType;\n    }\n}\nexport class InvalidSerializedTransactionError extends BaseError {\n    constructor({ attributes, serializedTransaction, type, }) {\n        const missing = Object.entries(attributes)\n            .map(([key, value]) => (typeof value === 'undefined' ? key : undefined))\n            .filter(Boolean);\n        super(`Invalid serialized transaction of type \"${type}\" was provided.`, {\n            metaMessages: [\n                `Serialized Transaction: \"${serializedTransaction}\"`,\n                missing.length > 0 ? `Missing Attributes: ${missing.join(', ')}` : '',\n            ].filter(Boolean),\n            name: 'InvalidSerializedTransactionError',\n        });\n        Object.defineProperty(this, \"serializedTransaction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.serializedTransaction = serializedTransaction;\n        this.type = type;\n    }\n}\nexport class InvalidStorageKeySizeError extends BaseError {\n    constructor({ storageKey }) {\n        super(`Size for storage key \"${storageKey}\" is invalid. Expected 32 bytes. Got ${Math.floor((storageKey.length - 2) / 2)} bytes.`, { name: 'InvalidStorageKeySizeError' });\n    }\n}\nexport class TransactionExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            chain: chain && `${chain?.name} (id: ${chain?.id})`,\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'TransactionExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class TransactionNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, blockTag, hash, index, }) {\n        let identifier = 'Transaction';\n        if (blockTag && index !== undefined)\n            identifier = `Transaction at block time \"${blockTag}\" at index \"${index}\"`;\n        if (blockHash && index !== undefined)\n            identifier = `Transaction at block hash \"${blockHash}\" at index \"${index}\"`;\n        if (blockNumber && index !== undefined)\n            identifier = `Transaction at block number \"${blockNumber}\" at index \"${index}\"`;\n        if (hash)\n            identifier = `Transaction with hash \"${hash}\"`;\n        super(`${identifier} could not be found.`, {\n            name: 'TransactionNotFoundError',\n        });\n    }\n}\nexport class TransactionReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`Transaction receipt with hash \"${hash}\" could not be found. The Transaction may not be processed on a block yet.`, {\n            name: 'TransactionReceiptNotFoundError',\n        });\n    }\n}\nexport class WaitForTransactionReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for transaction with hash \"${hash}\" to be confirmed.`, { name: 'WaitForTransactionReceiptTimeoutError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","import { parseAccount } from '../accounts/utils/parseAccount.js';\nimport { panicReasons } from '../constants/solidity.js';\nimport { decodeErrorResult, } from '../utils/abi/decodeErrorResult.js';\nimport { formatAbiItem } from '../utils/abi/formatAbiItem.js';\nimport { formatAbiItemWithArgs } from '../utils/abi/formatAbiItemWithArgs.js';\nimport { getAbiItem } from '../utils/abi/getAbiItem.js';\nimport { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { AbiErrorSignatureNotFoundError } from './abi.js';\nimport { BaseError } from './base.js';\nimport { prettyStateOverride } from './stateOverride.js';\nimport { prettyPrint } from './transaction.js';\nimport { getContractAddress } from './utils.js';\nexport class CallExecutionError extends BaseError {\n    constructor(cause, { account: account_, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, }) {\n        const account = account_ ? parseAccount(account_) : undefined;\n        let prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        if (stateOverride) {\n            prettyArgs += `\\n${prettyStateOverride(stateOverride)}`;\n        }\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Raw Call Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'CallExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class ContractFunctionExecutionError extends BaseError {\n    constructor(cause, { abi, args, contractAddress, docsPath, functionName, sender, }) {\n        const abiItem = getAbiItem({ abi, args, name: functionName });\n        const formattedArgs = abiItem\n            ? formatAbiItemWithArgs({\n                abiItem,\n                args,\n                includeFunctionName: false,\n                includeName: false,\n            })\n            : undefined;\n        const functionWithParams = abiItem\n            ? formatAbiItem(abiItem, { includeName: true })\n            : undefined;\n        const prettyArgs = prettyPrint({\n            address: contractAddress && getContractAddress(contractAddress),\n            function: functionWithParams,\n            args: formattedArgs &&\n                formattedArgs !== '()' &&\n                `${[...Array(functionName?.length ?? 0).keys()]\n                    .map(() => ' ')\n                    .join('')}${formattedArgs}`,\n            sender,\n        });\n        super(cause.shortMessage ||\n            `An unknown error occurred while executing the contract function \"${functionName}\".`, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                prettyArgs && 'Contract Call:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'ContractFunctionExecutionError',\n        });\n        Object.defineProperty(this, \"abi\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contractAddress\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"formattedArgs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"functionName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sender\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.abi = abi;\n        this.args = args;\n        this.cause = cause;\n        this.contractAddress = contractAddress;\n        this.functionName = functionName;\n        this.sender = sender;\n    }\n}\nexport class ContractFunctionRevertedError extends BaseError {\n    constructor({ abi, data, functionName, message, }) {\n        let cause;\n        let decodedData = undefined;\n        let metaMessages;\n        let reason;\n        if (data && data !== '0x') {\n            try {\n                decodedData = decodeErrorResult({ abi, data });\n                const { abiItem, errorName, args: errorArgs } = decodedData;\n                if (errorName === 'Error') {\n                    reason = errorArgs[0];\n                }\n                else if (errorName === 'Panic') {\n                    const [firstArg] = errorArgs;\n                    reason = panicReasons[firstArg];\n                }\n                else {\n                    const errorWithParams = abiItem\n                        ? formatAbiItem(abiItem, { includeName: true })\n                        : undefined;\n                    const formattedArgs = abiItem && errorArgs\n                        ? formatAbiItemWithArgs({\n                            abiItem,\n                            args: errorArgs,\n                            includeFunctionName: false,\n                            includeName: false,\n                        })\n                        : undefined;\n                    metaMessages = [\n                        errorWithParams ? `Error: ${errorWithParams}` : '',\n                        formattedArgs && formattedArgs !== '()'\n                            ? `       ${[...Array(errorName?.length ?? 0).keys()]\n                                .map(() => ' ')\n                                .join('')}${formattedArgs}`\n                            : '',\n                    ];\n                }\n            }\n            catch (err) {\n                cause = err;\n            }\n        }\n        else if (message)\n            reason = message;\n        let signature;\n        if (cause instanceof AbiErrorSignatureNotFoundError) {\n            signature = cause.signature;\n            metaMessages = [\n                `Unable to decode signature \"${signature}\" as it was not found on the provided ABI.`,\n                'Make sure you are using the correct ABI and that the error exists on it.',\n                `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n            ];\n        }\n        super((reason && reason !== 'execution reverted') || signature\n            ? [\n                `The contract function \"${functionName}\" reverted with the following ${signature ? 'signature' : 'reason'}:`,\n                reason || signature,\n            ].join('\\n')\n            : `The contract function \"${functionName}\" reverted.`, {\n            cause,\n            metaMessages,\n            name: 'ContractFunctionRevertedError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"raw\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reason\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"signature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = decodedData;\n        this.raw = data;\n        this.reason = reason;\n        this.signature = signature;\n    }\n}\nexport class ContractFunctionZeroDataError extends BaseError {\n    constructor({ functionName }) {\n        super(`The contract function \"${functionName}\" returned no data (\"0x\").`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                `  - The contract does not have the function \"${functionName}\",`,\n                '  - The parameters passed to the contract function may be invalid, or',\n                '  - The address is not a contract.',\n            ],\n            name: 'ContractFunctionZeroDataError',\n        });\n    }\n}\nexport class CounterfactualDeploymentFailedError extends BaseError {\n    constructor({ factory }) {\n        super(`Deployment for counterfactual contract call failed${factory ? ` for factory \"${factory}\".` : ''}`, {\n            metaMessages: [\n                'Please ensure:',\n                '- The `factory` is a valid contract deployment factory (ie. Create2 Factory, ERC-4337 Factory, etc).',\n                '- The `factoryData` is a valid encoded function call for contract deployment function on the factory.',\n            ],\n            name: 'CounterfactualDeploymentFailedError',\n        });\n    }\n}\nexport class RawContractError extends BaseError {\n    constructor({ data, message, }) {\n        super(message || '', { name: 'RawContractError' });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\n//# sourceMappingURL=contract.js.map","import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nimport { getUrl } from './utils.js';\nexport class HttpRequestError extends BaseError {\n    constructor({ body, cause, details, headers, status, url, }) {\n        super('HTTP request failed.', {\n            cause,\n            details,\n            metaMessages: [\n                status && `Status: ${status}`,\n                `URL: ${getUrl(url)}`,\n                body && `Request body: ${stringify(body)}`,\n            ].filter(Boolean),\n            name: 'HttpRequestError',\n        });\n        Object.defineProperty(this, \"body\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.url = url;\n    }\n}\nexport class WebSocketRequestError extends BaseError {\n    constructor({ body, cause, details, url, }) {\n        super('WebSocket request failed.', {\n            cause,\n            details,\n            metaMessages: [\n                `URL: ${getUrl(url)}`,\n                body && `Request body: ${stringify(body)}`,\n            ].filter(Boolean),\n            name: 'WebSocketRequestError',\n        });\n    }\n}\nexport class RpcRequestError extends BaseError {\n    constructor({ body, error, url, }) {\n        super('RPC Request failed.', {\n            cause: error,\n            details: error.message,\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n            name: 'RpcRequestError',\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.code = error.code;\n        this.data = error.data;\n    }\n}\nexport class SocketClosedError extends BaseError {\n    constructor({ url, } = {}) {\n        super('The socket has been closed.', {\n            metaMessages: [url && `URL: ${getUrl(url)}`].filter(Boolean),\n            name: 'SocketClosedError',\n        });\n    }\n}\nexport class TimeoutError extends BaseError {\n    constructor({ body, url, }) {\n        super('The request took too long to respond.', {\n            details: 'The request timed out.',\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n            name: 'TimeoutError',\n        });\n    }\n}\n//# sourceMappingURL=request.js.map","import { BaseError } from './base.js';\nimport { RpcRequestError } from './request.js';\nconst unknownErrorCode = -1;\nexport class RpcError extends BaseError {\n    constructor(cause, { code, docsPath, metaMessages, name, shortMessage, }) {\n        super(shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: metaMessages || cause?.metaMessages,\n            name: name || 'RpcError',\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name || cause.name;\n        this.code = (cause instanceof RpcRequestError ? cause.code : (code ?? unknownErrorCode));\n    }\n}\nexport class ProviderRpcError extends RpcError {\n    constructor(cause, options) {\n        super(cause, options);\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = options.data;\n    }\n}\nexport class ParseRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ParseRpcError.code,\n            name: 'ParseRpcError',\n            shortMessage: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n        });\n    }\n}\nObject.defineProperty(ParseRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32700\n});\nexport class InvalidRequestRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InvalidRequestRpcError.code,\n            name: 'InvalidRequestRpcError',\n            shortMessage: 'JSON is not a valid request object.',\n        });\n    }\n}\nObject.defineProperty(InvalidRequestRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32600\n});\nexport class MethodNotFoundRpcError extends RpcError {\n    constructor(cause, { method } = {}) {\n        super(cause, {\n            code: MethodNotFoundRpcError.code,\n            name: 'MethodNotFoundRpcError',\n            shortMessage: `The method${method ? ` \"${method}\"` : ''} does not exist / is not available.`,\n        });\n    }\n}\nObject.defineProperty(MethodNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32601\n});\nexport class InvalidParamsRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InvalidParamsRpcError.code,\n            name: 'InvalidParamsRpcError',\n            shortMessage: [\n                'Invalid parameters were provided to the RPC method.',\n                'Double check you have provided the correct parameters.',\n            ].join('\\n'),\n        });\n    }\n}\nObject.defineProperty(InvalidParamsRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32602\n});\nexport class InternalRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InternalRpcError.code,\n            name: 'InternalRpcError',\n            shortMessage: 'An internal error was received.',\n        });\n    }\n}\nObject.defineProperty(InternalRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32603\n});\nexport class InvalidInputRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: InvalidInputRpcError.code,\n            name: 'InvalidInputRpcError',\n            shortMessage: [\n                'Missing or invalid parameters.',\n                'Double check you have provided the correct parameters.',\n            ].join('\\n'),\n        });\n    }\n}\nObject.defineProperty(InvalidInputRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32000\n});\nexport class ResourceNotFoundRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ResourceNotFoundRpcError.code,\n            name: 'ResourceNotFoundRpcError',\n            shortMessage: 'Requested resource not found.',\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'ResourceNotFoundRpcError'\n        });\n    }\n}\nObject.defineProperty(ResourceNotFoundRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32001\n});\nexport class ResourceUnavailableRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ResourceUnavailableRpcError.code,\n            name: 'ResourceUnavailableRpcError',\n            shortMessage: 'Requested resource not available.',\n        });\n    }\n}\nObject.defineProperty(ResourceUnavailableRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32002\n});\nexport class TransactionRejectedRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: TransactionRejectedRpcError.code,\n            name: 'TransactionRejectedRpcError',\n            shortMessage: 'Transaction creation failed.',\n        });\n    }\n}\nObject.defineProperty(TransactionRejectedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32003\n});\nexport class MethodNotSupportedRpcError extends RpcError {\n    constructor(cause, { method } = {}) {\n        super(cause, {\n            code: MethodNotSupportedRpcError.code,\n            name: 'MethodNotSupportedRpcError',\n            shortMessage: `Method${method ? ` \"${method}\"` : ''} is not supported.`,\n        });\n    }\n}\nObject.defineProperty(MethodNotSupportedRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32004\n});\nexport class LimitExceededRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: LimitExceededRpcError.code,\n            name: 'LimitExceededRpcError',\n            shortMessage: 'Request exceeds defined limit.',\n        });\n    }\n}\nObject.defineProperty(LimitExceededRpcError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32005\n});\nexport class JsonRpcVersionUnsupportedError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            code: JsonRpcVersionUnsupportedError.code,\n            name: 'JsonRpcVersionUnsupportedError',\n            shortMessage: 'Version of JSON-RPC protocol is not supported.',\n        });\n    }\n}\nObject.defineProperty(JsonRpcVersionUnsupportedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32006\n});\nexport class UserRejectedRequestError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UserRejectedRequestError.code,\n            name: 'UserRejectedRequestError',\n            shortMessage: 'User rejected the request.',\n        });\n    }\n}\nObject.defineProperty(UserRejectedRequestError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4001\n});\nexport class UnauthorizedProviderError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UnauthorizedProviderError.code,\n            name: 'UnauthorizedProviderError',\n            shortMessage: 'The requested method and/or account has not been authorized by the user.',\n        });\n    }\n}\nObject.defineProperty(UnauthorizedProviderError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4100\n});\nexport class UnsupportedProviderMethodError extends ProviderRpcError {\n    constructor(cause, { method } = {}) {\n        super(cause, {\n            code: UnsupportedProviderMethodError.code,\n            name: 'UnsupportedProviderMethodError',\n            shortMessage: `The Provider does not support the requested method${method ? ` \" ${method}\"` : ''}.`,\n        });\n    }\n}\nObject.defineProperty(UnsupportedProviderMethodError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4200\n});\nexport class ProviderDisconnectedError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ProviderDisconnectedError.code,\n            name: 'ProviderDisconnectedError',\n            shortMessage: 'The Provider is disconnected from all chains.',\n        });\n    }\n}\nObject.defineProperty(ProviderDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4900\n});\nexport class ChainDisconnectedError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: ChainDisconnectedError.code,\n            name: 'ChainDisconnectedError',\n            shortMessage: 'The Provider is not connected to the requested chain.',\n        });\n    }\n}\nObject.defineProperty(ChainDisconnectedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4901\n});\nexport class SwitchChainError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: SwitchChainError.code,\n            name: 'SwitchChainError',\n            shortMessage: 'An error occurred when attempting to switch chain.',\n        });\n    }\n}\nObject.defineProperty(SwitchChainError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 4902\n});\nexport class UnsupportedNonOptionalCapabilityError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UnsupportedNonOptionalCapabilityError.code,\n            name: 'UnsupportedNonOptionalCapabilityError',\n            shortMessage: 'This Wallet does not support a capability that was not marked as optional.',\n        });\n    }\n}\nObject.defineProperty(UnsupportedNonOptionalCapabilityError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 5700\n});\nexport class UnsupportedChainIdError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UnsupportedChainIdError.code,\n            name: 'UnsupportedChainIdError',\n            shortMessage: 'This Wallet does not support the requested chain ID.',\n        });\n    }\n}\nObject.defineProperty(UnsupportedChainIdError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 5710\n});\nexport class DuplicateIdError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: DuplicateIdError.code,\n            name: 'DuplicateIdError',\n            shortMessage: 'There is already a bundle submitted with this ID.',\n        });\n    }\n}\nObject.defineProperty(DuplicateIdError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 5720\n});\nexport class UnknownBundleIdError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: UnknownBundleIdError.code,\n            name: 'UnknownBundleIdError',\n            shortMessage: 'This bundle id is unknown / has not been submitted',\n        });\n    }\n}\nObject.defineProperty(UnknownBundleIdError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 5730\n});\nexport class BundleTooLargeError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: BundleTooLargeError.code,\n            name: 'BundleTooLargeError',\n            shortMessage: 'The call bundle is too large for the Wallet to process.',\n        });\n    }\n}\nObject.defineProperty(BundleTooLargeError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 5740\n});\nexport class AtomicReadyWalletRejectedUpgradeError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: AtomicReadyWalletRejectedUpgradeError.code,\n            name: 'AtomicReadyWalletRejectedUpgradeError',\n            shortMessage: 'The Wallet can support atomicity after an upgrade, but the user rejected the upgrade.',\n        });\n    }\n}\nObject.defineProperty(AtomicReadyWalletRejectedUpgradeError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 5750\n});\nexport class AtomicityNotSupportedError extends ProviderRpcError {\n    constructor(cause) {\n        super(cause, {\n            code: AtomicityNotSupportedError.code,\n            name: 'AtomicityNotSupportedError',\n            shortMessage: 'The wallet does not support atomic execution but the request requires it.',\n        });\n    }\n}\nObject.defineProperty(AtomicityNotSupportedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 5760\n});\nexport class UnknownRpcError extends RpcError {\n    constructor(cause) {\n        super(cause, {\n            name: 'UnknownRpcError',\n            shortMessage: 'An unknown RPC error occurred.',\n        });\n    }\n}\n//# sourceMappingURL=rpc.js.map","import { AbiDecodingZeroDataError } from '../../errors/abi.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ContractFunctionExecutionError, ContractFunctionRevertedError, ContractFunctionZeroDataError, RawContractError, } from '../../errors/contract.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InternalRpcError } from '../../errors/rpc.js';\nconst EXECUTION_REVERTED_ERROR_CODE = 3;\nexport function getContractError(err, { abi, address, args, docsPath, functionName, sender, }) {\n    const error = (err instanceof RawContractError\n        ? err\n        : err instanceof BaseError\n            ? err.walk((err) => 'data' in err) || err.walk()\n            : {});\n    const { code, data, details, message, shortMessage } = error;\n    const cause = (() => {\n        if (err instanceof AbiDecodingZeroDataError)\n            return new ContractFunctionZeroDataError({ functionName });\n        if ([EXECUTION_REVERTED_ERROR_CODE, InternalRpcError.code].includes(code) &&\n            (data || details || message || shortMessage)) {\n            return new ContractFunctionRevertedError({\n                abi,\n                data: typeof data === 'object' ? data.data : data,\n                functionName,\n                message: error instanceof RpcRequestError\n                    ? details\n                    : (shortMessage ?? message),\n            });\n        }\n        return err;\n    })();\n    return new ContractFunctionExecutionError(cause, {\n        abi,\n        args,\n        contractAddress: address,\n        docsPath,\n        functionName,\n        sender,\n    });\n}\n//# sourceMappingURL=getContractError.js.map","import { isHex } from '../data/isHex.js';\nimport { size } from '../data/size.js';\nimport { hexToBigInt, hexToNumber, } from '../encoding/fromHex.js';\nimport { toHex } from '../encoding/toHex.js';\nexport async function recoverPublicKey({ hash, signature, }) {\n    const hashHex = isHex(hash) ? hash : toHex(hash);\n    const { secp256k1 } = await import('@noble/curves/secp256k1');\n    const signature_ = (() => {\n        // typeof signature: `Signature`\n        if (typeof signature === 'object' && 'r' in signature && 's' in signature) {\n            const { r, s, v, yParity } = signature;\n            const yParityOrV = Number(yParity ?? v);\n            const recoveryBit = toRecoveryBit(yParityOrV);\n            return new secp256k1.Signature(hexToBigInt(r), hexToBigInt(s)).addRecoveryBit(recoveryBit);\n        }\n        // typeof signature: `Hex | ByteArray`\n        const signatureHex = isHex(signature) ? signature : toHex(signature);\n        if (size(signatureHex) !== 65)\n            throw new Error('invalid signature length');\n        const yParityOrV = hexToNumber(`0x${signatureHex.slice(130)}`);\n        const recoveryBit = toRecoveryBit(yParityOrV);\n        return secp256k1.Signature.fromCompact(signatureHex.substring(2, 130)).addRecoveryBit(recoveryBit);\n    })();\n    const publicKey = signature_\n        .recoverPublicKey(hashHex.substring(2))\n        .toHex(false);\n    return `0x${publicKey}`;\n}\nfunction toRecoveryBit(yParityOrV) {\n    if (yParityOrV === 0 || yParityOrV === 1)\n        return yParityOrV;\n    if (yParityOrV === 27)\n        return 0;\n    if (yParityOrV === 28)\n        return 1;\n    throw new Error('Invalid yParityOrV value');\n}\n//# sourceMappingURL=recoverPublicKey.js.map","import { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js';\nimport { recoverPublicKey } from './recoverPublicKey.js';\nexport async function recoverAddress({ hash, signature, }) {\n    return publicKeyToAddress(await recoverPublicKey({ hash, signature }));\n}\n//# sourceMappingURL=recoverAddress.js.map","import { checksumAddress, } from '../../utils/address/getAddress.js';\nimport { keccak256, } from '../../utils/hash/keccak256.js';\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey) {\n    const address = keccak256(`0x${publicKey.substring(4)}`).substring(26);\n    return checksumAddress(`0x${address}`);\n}\n//# sourceMappingURL=publicKeyToAddress.js.map","import { BaseError } from '../../errors/base.js';\nimport { createCursor, } from '../cursor.js';\nimport { hexToBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(bytes, to = 'hex') {\n    const encodable = getEncodable(bytes);\n    const cursor = createCursor(new Uint8Array(encodable.length));\n    encodable.encode(cursor);\n    if (to === 'hex')\n        return bytesToHex(cursor.bytes);\n    return cursor.bytes;\n}\nexport function bytesToRlp(bytes, to = 'bytes') {\n    return toRlp(bytes, to);\n}\nexport function hexToRlp(hex, to = 'hex') {\n    return toRlp(hex, to);\n}\nfunction getEncodable(bytes) {\n    if (Array.isArray(bytes))\n        return getEncodableList(bytes.map((x) => getEncodable(x)));\n    return getEncodableBytes(bytes);\n}\nfunction getEncodableList(list) {\n    const bodyLength = list.reduce((acc, x) => acc + x.length, 0);\n    const sizeOfBodyLength = getSizeOfLength(bodyLength);\n    const length = (() => {\n        if (bodyLength <= 55)\n            return 1 + bodyLength;\n        return 1 + sizeOfBodyLength + bodyLength;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bodyLength <= 55) {\n                cursor.pushByte(0xc0 + bodyLength);\n            }\n            else {\n                cursor.pushByte(0xc0 + 55 + sizeOfBodyLength);\n                if (sizeOfBodyLength === 1)\n                    cursor.pushUint8(bodyLength);\n                else if (sizeOfBodyLength === 2)\n                    cursor.pushUint16(bodyLength);\n                else if (sizeOfBodyLength === 3)\n                    cursor.pushUint24(bodyLength);\n                else\n                    cursor.pushUint32(bodyLength);\n            }\n            for (const { encode } of list) {\n                encode(cursor);\n            }\n        },\n    };\n}\nfunction getEncodableBytes(bytesOrHex) {\n    const bytes = typeof bytesOrHex === 'string' ? hexToBytes(bytesOrHex) : bytesOrHex;\n    const sizeOfBytesLength = getSizeOfLength(bytes.length);\n    const length = (() => {\n        if (bytes.length === 1 && bytes[0] < 0x80)\n            return 1;\n        if (bytes.length <= 55)\n            return 1 + bytes.length;\n        return 1 + sizeOfBytesLength + bytes.length;\n    })();\n    return {\n        length,\n        encode(cursor) {\n            if (bytes.length === 1 && bytes[0] < 0x80) {\n                cursor.pushBytes(bytes);\n            }\n            else if (bytes.length <= 55) {\n                cursor.pushByte(0x80 + bytes.length);\n                cursor.pushBytes(bytes);\n            }\n            else {\n                cursor.pushByte(0x80 + 55 + sizeOfBytesLength);\n                if (sizeOfBytesLength === 1)\n                    cursor.pushUint8(bytes.length);\n                else if (sizeOfBytesLength === 2)\n                    cursor.pushUint16(bytes.length);\n                else if (sizeOfBytesLength === 3)\n                    cursor.pushUint24(bytes.length);\n                else\n                    cursor.pushUint32(bytes.length);\n                cursor.pushBytes(bytes);\n            }\n        },\n    };\n}\nfunction getSizeOfLength(length) {\n    if (length < 2 ** 8)\n        return 1;\n    if (length < 2 ** 16)\n        return 2;\n    if (length < 2 ** 24)\n        return 3;\n    if (length < 2 ** 32)\n        return 4;\n    throw new BaseError('Length is too large.');\n}\n//# sourceMappingURL=toRlp.js.map","import { concatHex } from '../data/concat.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { numberToHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { keccak256 } from '../hash/keccak256.js';\n/**\n * Computes an Authorization hash in [EIP-7702 format](https://eips.ethereum.org/EIPS/eip-7702): `keccak256('0x05' || rlp([chain_id, address, nonce]))`.\n */\nexport function hashAuthorization(parameters) {\n    const { chainId, nonce, to } = parameters;\n    const address = parameters.contractAddress ?? parameters.address;\n    const hash = keccak256(concatHex([\n        '0x05',\n        toRlp([\n            chainId ? numberToHex(chainId) : '0x',\n            address,\n            nonce ? numberToHex(nonce) : '0x',\n        ]),\n    ]));\n    if (to === 'bytes')\n        return hexToBytes(hash);\n    return hash;\n}\n//# sourceMappingURL=hashAuthorization.js.map","import { formatEther } from '../utils/unit/formatEther.js';\nimport { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nimport { prettyPrint } from './transaction.js';\nexport class EstimateGasExecutionError extends BaseError {\n    constructor(cause, { account, docsPath, chain, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, }) {\n        const prettyArgs = prettyPrint({\n            from: account?.address,\n            to,\n            value: typeof value !== 'undefined' &&\n                `${formatEther(value)} ${chain?.nativeCurrency?.symbol || 'ETH'}`,\n            data,\n            gas,\n            gasPrice: typeof gasPrice !== 'undefined' && `${formatGwei(gasPrice)} gwei`,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Estimate Gas Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'EstimateGasExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\n//# sourceMappingURL=estimateGas.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n            name: 'ExecutionRevertedError',\n        });\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: 3\n});\nObject.defineProperty(ExecutionRevertedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FeeCapTooHighError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}) cannot be higher than the maximum allowed value (2^256-1).`, {\n            cause,\n            name: 'FeeCapTooHighError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas higher than 2\\^256-1|fee cap higher than 2\\^256-1/\n});\nexport class FeeCapTooLowError extends BaseError {\n    constructor({ cause, maxFeePerGas, } = {}) {\n        super(`The fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)}` : ''} gwei) cannot be lower than the block base fee.`, {\n            cause,\n            name: 'FeeCapTooLowError',\n        });\n    }\n}\nObject.defineProperty(FeeCapTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/\n});\nexport class NonceTooHighError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is higher than the next one expected.`, { cause, name: 'NonceTooHighError' });\n    }\n}\nObject.defineProperty(NonceTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too high/\n});\nexport class NonceTooLowError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super([\n            `Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}is lower than the current nonce of the account.`,\n            'Try increasing the nonce or find the latest nonce with `getTransactionCount`.',\n        ].join('\\n'), { cause, name: 'NonceTooLowError' });\n    }\n}\nObject.defineProperty(NonceTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce too low|transaction already imported|already known/\n});\nexport class NonceMaxValueError extends BaseError {\n    constructor({ cause, nonce, } = {}) {\n        super(`Nonce provided for the transaction ${nonce ? `(${nonce}) ` : ''}exceeds the maximum allowed nonce.`, { cause, name: 'NonceMaxValueError' });\n    }\n}\nObject.defineProperty(NonceMaxValueError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /nonce has max value/\n});\nexport class InsufficientFundsError extends BaseError {\n    constructor({ cause } = {}) {\n        super([\n            'The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.',\n        ].join('\\n'), {\n            cause,\n            metaMessages: [\n                'This error could arise when the account does not have enough funds to:',\n                ' - pay for the total gas fee,',\n                ' - pay for the value to send.',\n                ' ',\n                'The cost of the transaction is calculated as `gas * gas fee + value`, where:',\n                ' - `gas` is the amount of gas needed for transaction to execute,',\n                ' - `gas fee` is the gas fee,',\n                ' - `value` is the amount of ether to send to the recipient.',\n            ],\n            name: 'InsufficientFundsError',\n        });\n    }\n}\nObject.defineProperty(InsufficientFundsError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /insufficient funds|exceeds transaction sender account balance/\n});\nexport class IntrinsicGasTooHighError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction exceeds the limit allowed for the block.`, {\n            cause,\n            name: 'IntrinsicGasTooHighError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooHighError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too high|gas limit reached/\n});\nexport class IntrinsicGasTooLowError extends BaseError {\n    constructor({ cause, gas, } = {}) {\n        super(`The amount of gas ${gas ? `(${gas}) ` : ''}provided for the transaction is too low.`, {\n            cause,\n            name: 'IntrinsicGasTooLowError',\n        });\n    }\n}\nObject.defineProperty(IntrinsicGasTooLowError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /intrinsic gas too low/\n});\nexport class TransactionTypeNotSupportedError extends BaseError {\n    constructor({ cause }) {\n        super('The transaction type is not supported for this chain.', {\n            cause,\n            name: 'TransactionTypeNotSupportedError',\n        });\n    }\n}\nObject.defineProperty(TransactionTypeNotSupportedError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /transaction type not valid/\n});\nexport class TipAboveFeeCapError extends BaseError {\n    constructor({ cause, maxPriorityFeePerGas, maxFeePerGas, } = {}) {\n        super([\n            `The provided tip (\\`maxPriorityFeePerGas\\`${maxPriorityFeePerGas\n                ? ` = ${formatGwei(maxPriorityFeePerGas)} gwei`\n                : ''}) cannot be higher than the fee cap (\\`maxFeePerGas\\`${maxFeePerGas ? ` = ${formatGwei(maxFeePerGas)} gwei` : ''}).`,\n        ].join('\\n'), {\n            cause,\n            name: 'TipAboveFeeCapError',\n        });\n    }\n}\nObject.defineProperty(TipAboveFeeCapError, \"nodeMessage\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/\n});\nexport class UnknownNodeError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing: ${cause?.shortMessage}`, {\n            cause,\n            name: 'UnknownNodeError',\n        });\n    }\n}\n//# sourceMappingURL=node.js.map","import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError, } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError, } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n    return (err instanceof TransactionRejectedRpcError ||\n        err instanceof InvalidInputRpcError ||\n        (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code));\n}\nexport function getNodeError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    const executionRevertedError = err instanceof BaseError\n        ? err.walk((e) => e?.code ===\n            ExecutionRevertedError.code)\n        : err;\n    if (executionRevertedError instanceof BaseError)\n        return new ExecutionRevertedError({\n            cause: err,\n            message: executionRevertedError.details,\n        });\n    if (ExecutionRevertedError.nodeMessage.test(message))\n        return new ExecutionRevertedError({\n            cause: err,\n            message: err.details,\n        });\n    if (FeeCapTooHighError.nodeMessage.test(message))\n        return new FeeCapTooHighError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (FeeCapTooLowError.nodeMessage.test(message))\n        return new FeeCapTooLowError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n        });\n    if (NonceTooHighError.nodeMessage.test(message))\n        return new NonceTooHighError({ cause: err, nonce: args?.nonce });\n    if (NonceTooLowError.nodeMessage.test(message))\n        return new NonceTooLowError({ cause: err, nonce: args?.nonce });\n    if (NonceMaxValueError.nodeMessage.test(message))\n        return new NonceMaxValueError({ cause: err, nonce: args?.nonce });\n    if (InsufficientFundsError.nodeMessage.test(message))\n        return new InsufficientFundsError({ cause: err });\n    if (IntrinsicGasTooHighError.nodeMessage.test(message))\n        return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas });\n    if (IntrinsicGasTooLowError.nodeMessage.test(message))\n        return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas });\n    if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n        return new TransactionTypeNotSupportedError({ cause: err });\n    if (TipAboveFeeCapError.nodeMessage.test(message))\n        return new TipAboveFeeCapError({\n            cause: err,\n            maxFeePerGas: args?.maxFeePerGas,\n            maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n        });\n    return new UnknownNodeError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getNodeError.js.map","/**\n * @description Picks out the keys from `value` that exist in the formatter..\n */\nexport function extract(value_, { format }) {\n    if (!format)\n        return {};\n    const value = {};\n    function extract_(formatted) {\n        const keys = Object.keys(formatted);\n        for (const key of keys) {\n            if (key in value_)\n                value[key] = value_[key];\n            if (formatted[key] &&\n                typeof formatted[key] === 'object' &&\n                !Array.isArray(formatted[key]))\n                extract_(formatted[key]);\n        }\n    }\n    const formatted = format(value_ || {});\n    extract_(formatted);\n    return value;\n}\n//# sourceMappingURL=extract.js.map","export function defineFormatter(type, format) {\n    return ({ exclude, format: overrides, }) => {\n        return {\n            exclude,\n            format: (args) => {\n                const formatted = format(args);\n                if (exclude) {\n                    for (const key of exclude) {\n                        delete formatted[key];\n                    }\n                }\n                return {\n                    ...formatted,\n                    ...overrides(args),\n                };\n            },\n            type,\n        };\n    };\n}\n//# sourceMappingURL=formatter.js.map","import { bytesToHex, numberToHex } from '../encoding/toHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const rpcTransactionType = {\n    legacy: '0x0',\n    eip2930: '0x1',\n    eip1559: '0x2',\n    eip4844: '0x3',\n    eip7702: '0x4',\n};\nexport function formatTransactionRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.authorizationList !== 'undefined')\n        rpcRequest.authorizationList = formatAuthorizationList(request.authorizationList);\n    if (typeof request.accessList !== 'undefined')\n        rpcRequest.accessList = request.accessList;\n    if (typeof request.blobVersionedHashes !== 'undefined')\n        rpcRequest.blobVersionedHashes = request.blobVersionedHashes;\n    if (typeof request.blobs !== 'undefined') {\n        if (typeof request.blobs[0] !== 'string')\n            rpcRequest.blobs = request.blobs.map((x) => bytesToHex(x));\n        else\n            rpcRequest.blobs = request.blobs;\n    }\n    if (typeof request.data !== 'undefined')\n        rpcRequest.data = request.data;\n    if (typeof request.from !== 'undefined')\n        rpcRequest.from = request.from;\n    if (typeof request.gas !== 'undefined')\n        rpcRequest.gas = numberToHex(request.gas);\n    if (typeof request.gasPrice !== 'undefined')\n        rpcRequest.gasPrice = numberToHex(request.gasPrice);\n    if (typeof request.maxFeePerBlobGas !== 'undefined')\n        rpcRequest.maxFeePerBlobGas = numberToHex(request.maxFeePerBlobGas);\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.to !== 'undefined')\n        rpcRequest.to = request.to;\n    if (typeof request.type !== 'undefined')\n        rpcRequest.type = rpcTransactionType[request.type];\n    if (typeof request.value !== 'undefined')\n        rpcRequest.value = numberToHex(request.value);\n    return rpcRequest;\n}\nexport const defineTransactionRequest = /*#__PURE__*/ defineFormatter('transactionRequest', formatTransactionRequest);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.address,\n        r: authorization.r\n            ? numberToHex(BigInt(authorization.r))\n            : authorization.r,\n        s: authorization.s\n            ? numberToHex(BigInt(authorization.s))\n            : authorization.s,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        ...(typeof authorization.yParity !== 'undefined'\n            ? { yParity: numberToHex(authorization.yParity) }\n            : {}),\n        ...(typeof authorization.v !== 'undefined' &&\n            typeof authorization.yParity === 'undefined'\n            ? { v: numberToHex(authorization.v) }\n            : {}),\n    }));\n}\n//# sourceMappingURL=transactionRequest.js.map","import { InvalidAddressError, } from '../errors/address.js';\nimport { InvalidBytesLengthError, } from '../errors/data.js';\nimport { AccountStateConflictError, StateAssignmentConflictError, } from '../errors/stateOverride.js';\nimport { isAddress } from './address/isAddress.js';\nimport { numberToHex } from './encoding/toHex.js';\n/** @internal */\nexport function serializeStateMapping(stateMapping) {\n    if (!stateMapping || stateMapping.length === 0)\n        return undefined;\n    return stateMapping.reduce((acc, { slot, value }) => {\n        if (slot.length !== 66)\n            throw new InvalidBytesLengthError({\n                size: slot.length,\n                targetSize: 66,\n                type: 'hex',\n            });\n        if (value.length !== 66)\n            throw new InvalidBytesLengthError({\n                size: value.length,\n                targetSize: 66,\n                type: 'hex',\n            });\n        acc[slot] = value;\n        return acc;\n    }, {});\n}\n/** @internal */\nexport function serializeAccountStateOverride(parameters) {\n    const { balance, nonce, state, stateDiff, code } = parameters;\n    const rpcAccountStateOverride = {};\n    if (code !== undefined)\n        rpcAccountStateOverride.code = code;\n    if (balance !== undefined)\n        rpcAccountStateOverride.balance = numberToHex(balance);\n    if (nonce !== undefined)\n        rpcAccountStateOverride.nonce = numberToHex(nonce);\n    if (state !== undefined)\n        rpcAccountStateOverride.state = serializeStateMapping(state);\n    if (stateDiff !== undefined) {\n        if (rpcAccountStateOverride.state)\n            throw new StateAssignmentConflictError();\n        rpcAccountStateOverride.stateDiff = serializeStateMapping(stateDiff);\n    }\n    return rpcAccountStateOverride;\n}\n/** @internal */\nexport function serializeStateOverride(parameters) {\n    if (!parameters)\n        return undefined;\n    const rpcStateOverride = {};\n    for (const { address, ...accountState } of parameters) {\n        if (!isAddress(address, { strict: false }))\n            throw new InvalidAddressError({ address });\n        if (rpcStateOverride[address])\n            throw new AccountStateConflictError({ address: address });\n        rpcStateOverride[address] = serializeAccountStateOverride(accountState);\n    }\n    return rpcStateOverride;\n}\n//# sourceMappingURL=stateOverride.js.map","export const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=number.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { FeeConflictError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n    const { account: account_, gasPrice, maxFeePerGas, maxPriorityFeePerGas, to, } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    if (account && !isAddress(account.address))\n        throw new InvalidAddressError({ address: account.address });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof gasPrice !== 'undefined' &&\n        (typeof maxFeePerGas !== 'undefined' ||\n            typeof maxPriorityFeePerGas !== 'undefined'))\n        throw new FeeConflictError();\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\n//# sourceMappingURL=assertRequest.js.map","import { formatGwei } from '../utils/unit/formatGwei.js';\nimport { BaseError } from './base.js';\nexport class BaseFeeScalarError extends BaseError {\n    constructor() {\n        super('`baseFeeMultiplier` must be greater than 1.', {\n            name: 'BaseFeeScalarError',\n        });\n    }\n}\nexport class Eip1559FeesNotSupportedError extends BaseError {\n    constructor() {\n        super('Chain does not support EIP-1559 fees.', {\n            name: 'Eip1559FeesNotSupportedError',\n        });\n    }\n}\nexport class MaxFeePerGasTooLowError extends BaseError {\n    constructor({ maxPriorityFeePerGas }) {\n        super(`\\`maxFeePerGas\\` cannot be less than the \\`maxPriorityFeePerGas\\` (${formatGwei(maxPriorityFeePerGas)} gwei).`, { name: 'MaxFeePerGasTooLowError' });\n    }\n}\n//# sourceMappingURL=fee.js.map","import { BaseError } from './base.js';\nexport class BlockNotFoundError extends BaseError {\n    constructor({ blockHash, blockNumber, }) {\n        let identifier = 'Block';\n        if (blockHash)\n            identifier = `Block at hash \"${blockHash}\"`;\n        if (blockNumber)\n            identifier = `Block at number \"${blockNumber}\"`;\n        super(`${identifier} could not be found.`, { name: 'BlockNotFoundError' });\n    }\n}\n//# sourceMappingURL=block.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nexport const transactionType = {\n    '0x0': 'legacy',\n    '0x1': 'eip2930',\n    '0x2': 'eip1559',\n    '0x3': 'eip4844',\n    '0x4': 'eip7702',\n};\nexport function formatTransaction(transaction) {\n    const transaction_ = {\n        ...transaction,\n        blockHash: transaction.blockHash ? transaction.blockHash : null,\n        blockNumber: transaction.blockNumber\n            ? BigInt(transaction.blockNumber)\n            : null,\n        chainId: transaction.chainId ? hexToNumber(transaction.chainId) : undefined,\n        gas: transaction.gas ? BigInt(transaction.gas) : undefined,\n        gasPrice: transaction.gasPrice ? BigInt(transaction.gasPrice) : undefined,\n        maxFeePerBlobGas: transaction.maxFeePerBlobGas\n            ? BigInt(transaction.maxFeePerBlobGas)\n            : undefined,\n        maxFeePerGas: transaction.maxFeePerGas\n            ? BigInt(transaction.maxFeePerGas)\n            : undefined,\n        maxPriorityFeePerGas: transaction.maxPriorityFeePerGas\n            ? BigInt(transaction.maxPriorityFeePerGas)\n            : undefined,\n        nonce: transaction.nonce ? hexToNumber(transaction.nonce) : undefined,\n        to: transaction.to ? transaction.to : null,\n        transactionIndex: transaction.transactionIndex\n            ? Number(transaction.transactionIndex)\n            : null,\n        type: transaction.type\n            ? transactionType[transaction.type]\n            : undefined,\n        typeHex: transaction.type ? transaction.type : undefined,\n        value: transaction.value ? BigInt(transaction.value) : undefined,\n        v: transaction.v ? BigInt(transaction.v) : undefined,\n    };\n    if (transaction.authorizationList)\n        transaction_.authorizationList = formatAuthorizationList(transaction.authorizationList);\n    transaction_.yParity = (() => {\n        // If `yParity` is provided, we will use it.\n        if (transaction.yParity)\n            return Number(transaction.yParity);\n        // If no `yParity` provided, try derive from `v`.\n        if (typeof transaction_.v === 'bigint') {\n            if (transaction_.v === 0n || transaction_.v === 27n)\n                return 0;\n            if (transaction_.v === 1n || transaction_.v === 28n)\n                return 1;\n            if (transaction_.v >= 35n)\n                return transaction_.v % 2n === 0n ? 1 : 0;\n        }\n        return undefined;\n    })();\n    if (transaction_.type === 'legacy') {\n        delete transaction_.accessList;\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n        delete transaction_.yParity;\n    }\n    if (transaction_.type === 'eip2930') {\n        delete transaction_.maxFeePerBlobGas;\n        delete transaction_.maxFeePerGas;\n        delete transaction_.maxPriorityFeePerGas;\n    }\n    if (transaction_.type === 'eip1559') {\n        delete transaction_.maxFeePerBlobGas;\n    }\n    return transaction_;\n}\nexport const defineTransaction = /*#__PURE__*/ defineFormatter('transaction', formatTransaction);\n//////////////////////////////////////////////////////////////////////////////\nfunction formatAuthorizationList(authorizationList) {\n    return authorizationList.map((authorization) => ({\n        address: authorization.address,\n        chainId: Number(authorization.chainId),\n        nonce: Number(authorization.nonce),\n        r: authorization.r,\n        s: authorization.s,\n        yParity: Number(authorization.yParity),\n    }));\n}\n//# sourceMappingURL=transaction.js.map","import { defineFormatter } from './formatter.js';\nimport { formatTransaction } from './transaction.js';\nexport function formatBlock(block) {\n    const transactions = (block.transactions ?? []).map((transaction) => {\n        if (typeof transaction === 'string')\n            return transaction;\n        return formatTransaction(transaction);\n    });\n    return {\n        ...block,\n        baseFeePerGas: block.baseFeePerGas ? BigInt(block.baseFeePerGas) : null,\n        blobGasUsed: block.blobGasUsed ? BigInt(block.blobGasUsed) : undefined,\n        difficulty: block.difficulty ? BigInt(block.difficulty) : undefined,\n        excessBlobGas: block.excessBlobGas\n            ? BigInt(block.excessBlobGas)\n            : undefined,\n        gasLimit: block.gasLimit ? BigInt(block.gasLimit) : undefined,\n        gasUsed: block.gasUsed ? BigInt(block.gasUsed) : undefined,\n        hash: block.hash ? block.hash : null,\n        logsBloom: block.logsBloom ? block.logsBloom : null,\n        nonce: block.nonce ? block.nonce : null,\n        number: block.number ? BigInt(block.number) : null,\n        size: block.size ? BigInt(block.size) : undefined,\n        timestamp: block.timestamp ? BigInt(block.timestamp) : undefined,\n        transactions,\n        totalDifficulty: block.totalDifficulty\n            ? BigInt(block.totalDifficulty)\n            : null,\n    };\n}\nexport const defineBlock = /*#__PURE__*/ defineFormatter('block', formatBlock);\n//# sourceMappingURL=block.js.map","import { BlockNotFoundError, } from '../../errors/block.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatBlock, } from '../../utils/formatters/block.js';\n/**\n * Returns information about a block at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlock\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockParameters}\n * @returns Information about the block. {@link GetBlockReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlock } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getBlock(client)\n */\nexport async function getBlock(client, { blockHash, blockNumber, blockTag: blockTag_, includeTransactions: includeTransactions_, } = {}) {\n    const blockTag = blockTag_ ?? 'latest';\n    const includeTransactions = includeTransactions_ ?? false;\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    let block = null;\n    if (blockHash) {\n        block = await client.request({\n            method: 'eth_getBlockByHash',\n            params: [blockHash, includeTransactions],\n        }, { dedupe: true });\n    }\n    else {\n        block = await client.request({\n            method: 'eth_getBlockByNumber',\n            params: [blockNumberHex || blockTag, includeTransactions],\n        }, { dedupe: Boolean(blockNumberHex) });\n    }\n    if (!block)\n        throw new BlockNotFoundError({ blockHash, blockNumber });\n    const format = client.chain?.formatters?.block?.format || formatBlock;\n    return format(block);\n}\n//# sourceMappingURL=getBlock.js.map","/**\n * Returns the current price of gas (in wei).\n *\n * - Docs: https://viem.sh/docs/actions/public/getGasPrice\n * - JSON-RPC Methods: [`eth_gasPrice`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gasprice)\n *\n * @param client - Client to use\n * @returns The gas price (in wei). {@link GetGasPriceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getGasPrice } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasPrice = await getGasPrice(client)\n */\nexport async function getGasPrice(client) {\n    const gasPrice = await client.request({\n        method: 'eth_gasPrice',\n    });\n    return BigInt(gasPrice);\n}\n//# sourceMappingURL=getGasPrice.js.map","import { Eip1559FeesNotSupportedError, } from '../../errors/fee.js';\nimport { hexToBigInt, } from '../../utils/encoding/fromHex.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { getBlock } from './getBlock.js';\nimport { getGasPrice } from './getGasPrice.js';\n/**\n * Returns an estimate for the max priority fee per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.defaultPriorityFee`](/docs/clients/chains#fees-defaultpriorityfee) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateMaxPriorityFeePerGas\n *\n * @param client - Client to use\n * @returns An estimate (in wei) for the max priority fee per gas. {@link EstimateMaxPriorityFeePerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateMaxPriorityFeePerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateMaxPriorityFeePerGas(client)\n * // 10000000n\n */\nexport async function estimateMaxPriorityFeePerGas(client, args) {\n    return internal_estimateMaxPriorityFeePerGas(client, args);\n}\nexport async function internal_estimateMaxPriorityFeePerGas(client, args) {\n    const { block: block_, chain = client.chain, request } = args || {};\n    try {\n        const maxPriorityFeePerGas = chain?.fees?.maxPriorityFeePerGas ?? chain?.fees?.defaultPriorityFee;\n        if (typeof maxPriorityFeePerGas === 'function') {\n            const block = block_ || (await getAction(client, getBlock, 'getBlock')({}));\n            const maxPriorityFeePerGas_ = await maxPriorityFeePerGas({\n                block,\n                client,\n                request,\n            });\n            if (maxPriorityFeePerGas_ === null)\n                throw new Error();\n            return maxPriorityFeePerGas_;\n        }\n        if (typeof maxPriorityFeePerGas !== 'undefined')\n            return maxPriorityFeePerGas;\n        const maxPriorityFeePerGasHex = await client.request({\n            method: 'eth_maxPriorityFeePerGas',\n        });\n        return hexToBigInt(maxPriorityFeePerGasHex);\n    }\n    catch {\n        // If the RPC Provider does not support `eth_maxPriorityFeePerGas`\n        // fall back to calculating it manually via `gasPrice - baseFeePerGas`.\n        // See: https://github.com/ethereum/pm/issues/328#:~:text=eth_maxPriorityFeePerGas%20after%20London%20will%20effectively%20return%20eth_gasPrice%20%2D%20baseFee\n        const [block, gasPrice] = await Promise.all([\n            block_\n                ? Promise.resolve(block_)\n                : getAction(client, getBlock, 'getBlock')({}),\n            getAction(client, getGasPrice, 'getGasPrice')({}),\n        ]);\n        if (typeof block.baseFeePerGas !== 'bigint')\n            throw new Eip1559FeesNotSupportedError();\n        const maxPriorityFeePerGas = gasPrice - block.baseFeePerGas;\n        if (maxPriorityFeePerGas < 0n)\n            return 0n;\n        return maxPriorityFeePerGas;\n    }\n}\n//# sourceMappingURL=estimateMaxPriorityFeePerGas.js.map","import { BaseFeeScalarError, Eip1559FeesNotSupportedError, } from '../../errors/fee.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { internal_estimateMaxPriorityFeePerGas, } from './estimateMaxPriorityFeePerGas.js';\nimport { getBlock } from './getBlock.js';\nimport { getGasPrice } from './getGasPrice.js';\n/**\n * Returns an estimate for the fees per gas (in wei) for a\n * transaction to be likely included in the next block.\n * Defaults to [`chain.fees.estimateFeesPerGas`](/docs/clients/chains#fees-estimatefeespergas) if set.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateFeesPerGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateFeesPerGasParameters}\n * @returns An estimate (in wei) for the fees per gas. {@link EstimateFeesPerGasReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateFeesPerGas } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const maxPriorityFeePerGas = await estimateFeesPerGas(client)\n * // { maxFeePerGas: ..., maxPriorityFeePerGas: ... }\n */\nexport async function estimateFeesPerGas(client, args) {\n    return internal_estimateFeesPerGas(client, args);\n}\nexport async function internal_estimateFeesPerGas(client, args) {\n    const { block: block_, chain = client.chain, request, type = 'eip1559', } = args || {};\n    const baseFeeMultiplier = await (async () => {\n        if (typeof chain?.fees?.baseFeeMultiplier === 'function')\n            return chain.fees.baseFeeMultiplier({\n                block: block_,\n                client,\n                request,\n            });\n        return chain?.fees?.baseFeeMultiplier ?? 1.2;\n    })();\n    if (baseFeeMultiplier < 1)\n        throw new BaseFeeScalarError();\n    const decimals = baseFeeMultiplier.toString().split('.')[1]?.length ?? 0;\n    const denominator = 10 ** decimals;\n    const multiply = (base) => (base * BigInt(Math.ceil(baseFeeMultiplier * denominator))) /\n        BigInt(denominator);\n    const block = block_\n        ? block_\n        : await getAction(client, getBlock, 'getBlock')({});\n    if (typeof chain?.fees?.estimateFeesPerGas === 'function') {\n        const fees = (await chain.fees.estimateFeesPerGas({\n            block: block_,\n            client,\n            multiply,\n            request,\n            type,\n        }));\n        if (fees !== null)\n            return fees;\n    }\n    if (type === 'eip1559') {\n        if (typeof block.baseFeePerGas !== 'bigint')\n            throw new Eip1559FeesNotSupportedError();\n        const maxPriorityFeePerGas = typeof request?.maxPriorityFeePerGas === 'bigint'\n            ? request.maxPriorityFeePerGas\n            : await internal_estimateMaxPriorityFeePerGas(client, {\n                block: block,\n                chain,\n                request,\n            });\n        const baseFeePerGas = multiply(block.baseFeePerGas);\n        const maxFeePerGas = request?.maxFeePerGas ?? baseFeePerGas + maxPriorityFeePerGas;\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n        };\n    }\n    const gasPrice = request?.gasPrice ??\n        multiply(await getAction(client, getGasPrice, 'getGasPrice')({}));\n    return {\n        gasPrice,\n    };\n}\n//# sourceMappingURL=estimateFeesPerGas.js.map","import { hexToNumber, } from '../../utils/encoding/fromHex.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the number of [Transactions](https://viem.sh/docs/glossary/terms#transaction) an Account has sent.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionCount\n * - JSON-RPC Methods: [`eth_getTransactionCount`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactioncount)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionCountParameters}\n * @returns The number of transactions an account has sent. {@link GetTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionCount = await getTransactionCount(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function getTransactionCount(client, { address, blockTag = 'latest', blockNumber }) {\n    const count = await client.request({\n        method: 'eth_getTransactionCount',\n        params: [\n            address,\n            typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : blockTag,\n        ],\n    }, {\n        dedupe: Boolean(blockNumber),\n    });\n    return hexToNumber(count);\n}\n//# sourceMappingURL=getTransactionCount.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute commitments from a list of blobs.\n *\n * @example\n * ```ts\n * import { blobsToCommitments, toBlobs } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * ```\n */\nexport function blobsToCommitments(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = [];\n    for (const blob of blobs)\n        commitments.push(Uint8Array.from(kzg.blobToKzgCommitment(blob)));\n    return (to === 'bytes'\n        ? commitments\n        : commitments.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToCommitments.js.map","import { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Compute the proofs for a list of blobs and their commitments.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n * ```\n */\nexport function blobsToProofs(parameters) {\n    const { kzg } = parameters;\n    const to = parameters.to ?? (typeof parameters.blobs[0] === 'string' ? 'hex' : 'bytes');\n    const blobs = (typeof parameters.blobs[0] === 'string'\n        ? parameters.blobs.map((x) => hexToBytes(x))\n        : parameters.blobs);\n    const commitments = (typeof parameters.commitments[0] === 'string'\n        ? parameters.commitments.map((x) => hexToBytes(x))\n        : parameters.commitments);\n    const proofs = [];\n    for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n        const commitment = commitments[i];\n        proofs.push(Uint8Array.from(kzg.computeBlobKzgProof(blob, commitment)));\n    }\n    return (to === 'bytes'\n        ? proofs\n        : proofs.map((x) => bytesToHex(x)));\n}\n//# sourceMappingURL=blobsToProofs.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n * @deprecated\n */\nimport { SHA224 as SHA224n, sha224 as sha224n, SHA256 as SHA256n, sha256 as sha256n, } from \"./sha2.js\";\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA256 = SHA256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha256 = sha256n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const SHA224 = SHA224n;\n/** @deprecated Use import from `noble/hashes/sha2` module */\nexport const sha224 = sha224n;\n//# sourceMappingURL=sha256.js.map","import { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport { isHex } from '../data/isHex.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { toHex } from '../encoding/toHex.js';\nexport function sha256(value, to_) {\n    const to = to_ || 'hex';\n    const bytes = noble_sha256(isHex(value, { strict: false }) ? toBytes(value) : value);\n    if (to === 'bytes')\n        return bytes;\n    return toHex(bytes);\n}\n//# sourceMappingURL=sha256.js.map","import { bytesToHex } from '../encoding/toHex.js';\nimport { sha256 } from '../hash/sha256.js';\n/**\n * Transform a commitment to it's versioned hash.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentToVersionedHash,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const [commitment] = blobsToCommitments({ blobs, kzg })\n * const versionedHash = commitmentToVersionedHash({ commitment })\n * ```\n */\nexport function commitmentToVersionedHash(parameters) {\n    const { commitment, version = 1 } = parameters;\n    const to = parameters.to ?? (typeof commitment === 'string' ? 'hex' : 'bytes');\n    const versionedHash = sha256(commitment, 'bytes');\n    versionedHash.set([version], 0);\n    return (to === 'bytes' ? versionedHash : bytesToHex(versionedHash));\n}\n//# sourceMappingURL=commitmentToVersionedHash.js.map","import { commitmentToVersionedHash, } from './commitmentToVersionedHash.js';\n/**\n * Transform a list of commitments to their versioned hashes.\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   commitmentsToVersionedHashes,\n *   toBlobs\n * } from 'viem'\n * import { kzg } from './kzg'\n *\n * const blobs = toBlobs({ data: '0x1234' })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const versionedHashes = commitmentsToVersionedHashes({ commitments })\n * ```\n */\nexport function commitmentsToVersionedHashes(parameters) {\n    const { commitments, version } = parameters;\n    const to = parameters.to ?? (typeof commitments[0] === 'string' ? 'hex' : 'bytes');\n    const hashes = [];\n    for (const commitment of commitments) {\n        hashes.push(commitmentToVersionedHash({\n            commitment,\n            to,\n            version,\n        }));\n    }\n    return hashes;\n}\n//# sourceMappingURL=commitmentsToVersionedHashes.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\n/** Blob limit per transaction. */\nconst blobsPerTransaction = 6;\n/** The number of bytes in a BLS scalar field element. */\nexport const bytesPerFieldElement = 32;\n/** The number of field elements in a blob. */\nexport const fieldElementsPerBlob = 4096;\n/** The number of bytes in a blob. */\nexport const bytesPerBlob = bytesPerFieldElement * fieldElementsPerBlob;\n/** Blob bytes limit per transaction. */\nexport const maxBytesPerTransaction = bytesPerBlob * blobsPerTransaction -\n    // terminator byte (0x80).\n    1 -\n    // zero byte (0x00) appended to each field element.\n    1 * fieldElementsPerBlob * blobsPerTransaction;\n//# sourceMappingURL=blob.js.map","import { versionedHashVersionKzg } from '../constants/kzg.js';\nimport { BaseError } from './base.js';\nexport class BlobSizeTooLargeError extends BaseError {\n    constructor({ maxSize, size }) {\n        super('Blob size is too large.', {\n            metaMessages: [`Max: ${maxSize} bytes`, `Given: ${size} bytes`],\n            name: 'BlobSizeTooLargeError',\n        });\n    }\n}\nexport class EmptyBlobError extends BaseError {\n    constructor() {\n        super('Blob data must not be empty.', { name: 'EmptyBlobError' });\n    }\n}\nexport class InvalidVersionedHashSizeError extends BaseError {\n    constructor({ hash, size, }) {\n        super(`Versioned hash \"${hash}\" size is invalid.`, {\n            metaMessages: ['Expected: 32', `Received: ${size}`],\n            name: 'InvalidVersionedHashSizeError',\n        });\n    }\n}\nexport class InvalidVersionedHashVersionError extends BaseError {\n    constructor({ hash, version, }) {\n        super(`Versioned hash \"${hash}\" version is invalid.`, {\n            metaMessages: [\n                `Expected: ${versionedHashVersionKzg}`,\n                `Received: ${version}`,\n            ],\n            name: 'InvalidVersionedHashVersionError',\n        });\n    }\n}\n//# sourceMappingURL=blob.js.map","import { blobsToCommitments, } from './blobsToCommitments.js';\nimport { blobsToProofs } from './blobsToProofs.js';\nimport { toBlobs } from './toBlobs.js';\n/**\n * Transforms arbitrary data (or blobs, commitments, & proofs) into a sidecar array.\n *\n * @example\n * ```ts\n * import { toBlobSidecars, stringToHex } from 'viem'\n *\n * const sidecars = toBlobSidecars({ data: stringToHex('hello world') })\n * ```\n *\n * @example\n * ```ts\n * import {\n *   blobsToCommitments,\n *   toBlobs,\n *   blobsToProofs,\n *   toBlobSidecars,\n *   stringToHex\n * } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * const commitments = blobsToCommitments({ blobs, kzg })\n * const proofs = blobsToProofs({ blobs, commitments, kzg })\n *\n * const sidecars = toBlobSidecars({ blobs, commitments, proofs })\n * ```\n */\nexport function toBlobSidecars(parameters) {\n    const { data, kzg, to } = parameters;\n    const blobs = parameters.blobs ?? toBlobs({ data: data, to });\n    const commitments = parameters.commitments ?? blobsToCommitments({ blobs, kzg: kzg, to });\n    const proofs = parameters.proofs ?? blobsToProofs({ blobs, commitments, kzg: kzg, to });\n    const sidecars = [];\n    for (let i = 0; i < blobs.length; i++)\n        sidecars.push({\n            blob: blobs[i],\n            commitment: commitments[i],\n            proof: proofs[i],\n        });\n    return sidecars;\n}\n//# sourceMappingURL=toBlobSidecars.js.map","import { bytesPerBlob, bytesPerFieldElement, fieldElementsPerBlob, maxBytesPerTransaction, } from '../../constants/blob.js';\nimport { BlobSizeTooLargeError, EmptyBlobError, } from '../../errors/blob.js';\nimport { createCursor } from '../cursor.js';\nimport { size } from '../data/size.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\n/**\n * Transforms arbitrary data to blobs.\n *\n * @example\n * ```ts\n * import { toBlobs, stringToHex } from 'viem'\n *\n * const blobs = toBlobs({ data: stringToHex('hello world') })\n * ```\n */\nexport function toBlobs(parameters) {\n    const to = parameters.to ?? (typeof parameters.data === 'string' ? 'hex' : 'bytes');\n    const data = (typeof parameters.data === 'string'\n        ? hexToBytes(parameters.data)\n        : parameters.data);\n    const size_ = size(data);\n    if (!size_)\n        throw new EmptyBlobError();\n    if (size_ > maxBytesPerTransaction)\n        throw new BlobSizeTooLargeError({\n            maxSize: maxBytesPerTransaction,\n            size: size_,\n        });\n    const blobs = [];\n    let active = true;\n    let position = 0;\n    while (active) {\n        const blob = createCursor(new Uint8Array(bytesPerBlob));\n        let size = 0;\n        while (size < fieldElementsPerBlob) {\n            const bytes = data.slice(position, position + (bytesPerFieldElement - 1));\n            // Push a zero byte so the field element doesn't overflow the BLS modulus.\n            blob.pushByte(0x00);\n            // Push the current segment of data bytes.\n            blob.pushBytes(bytes);\n            // If we detect that the current segment of data bytes is less than 31 bytes,\n            // we can stop processing and push a terminator byte to indicate the end of the blob.\n            if (bytes.length < 31) {\n                blob.pushByte(0x80);\n                active = false;\n                break;\n            }\n            size++;\n            position += 31;\n        }\n        blobs.push(blob);\n    }\n    return (to === 'bytes'\n        ? blobs.map((x) => x.bytes)\n        : blobs.map((x) => bytesToHex(x.bytes)));\n}\n//# sourceMappingURL=toBlobs.js.map","import { InvalidSerializableTransactionError, } from '../../errors/transaction.js';\nexport function getTransactionType(transaction) {\n    if (transaction.type)\n        return transaction.type;\n    if (typeof transaction.authorizationList !== 'undefined')\n        return 'eip7702';\n    if (typeof transaction.blobs !== 'undefined' ||\n        typeof transaction.blobVersionedHashes !== 'undefined' ||\n        typeof transaction.maxFeePerBlobGas !== 'undefined' ||\n        typeof transaction.sidecars !== 'undefined')\n        return 'eip4844';\n    if (typeof transaction.maxFeePerGas !== 'undefined' ||\n        typeof transaction.maxPriorityFeePerGas !== 'undefined') {\n        return 'eip1559';\n    }\n    if (typeof transaction.gasPrice !== 'undefined') {\n        if (typeof transaction.accessList !== 'undefined')\n            return 'eip2930';\n        return 'legacy';\n    }\n    throw new InvalidSerializableTransactionError({ transaction });\n}\n//# sourceMappingURL=getTransactionType.js.map","import { hexToNumber, } from '../../utils/encoding/fromHex.js';\n/**\n * Returns the chain ID associated with the current network.\n *\n * - Docs: https://viem.sh/docs/actions/public/getChainId\n * - JSON-RPC Methods: [`eth_chainId`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_chainid)\n *\n * @param client - Client to use\n * @returns The current chain ID. {@link GetChainIdReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getChainId } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const chainId = await getChainId(client)\n * // 1\n */\nexport async function getChainId(client) {\n    const chainIdHex = await client.request({\n        method: 'eth_chainId',\n    }, { dedupe: true });\n    return hexToNumber(chainIdHex);\n}\n//# sourceMappingURL=getChainId.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { internal_estimateFeesPerGas, } from '../../actions/public/estimateFeesPerGas.js';\nimport { estimateGas, } from '../../actions/public/estimateGas.js';\nimport { getBlock as getBlock_, } from '../../actions/public/getBlock.js';\nimport { getTransactionCount, } from '../../actions/public/getTransactionCount.js';\nimport { Eip1559FeesNotSupportedError, MaxFeePerGasTooLowError, } from '../../errors/fee.js';\nimport { blobsToCommitments } from '../../utils/blob/blobsToCommitments.js';\nimport { blobsToProofs } from '../../utils/blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes } from '../../utils/blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars } from '../../utils/blob/toBlobSidecars.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\nimport { getTransactionType, } from '../../utils/transaction/getTransactionType.js';\nimport { getChainId as getChainId_ } from '../public/getChainId.js';\nexport const defaultParameters = [\n    'blobVersionedHashes',\n    'chainId',\n    'fees',\n    'gas',\n    'nonce',\n    'type',\n];\n/** @internal */\nexport const eip1559NetworkCache = /*#__PURE__*/ new Map();\n/**\n * Prepares a transaction request for signing.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/prepareTransactionRequest\n *\n * @param args - {@link PrepareTransactionRequestParameters}\n * @returns The transaction request. {@link PrepareTransactionRequestReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n *\n * @example\n * // Account Hoisting\n * import { createWalletClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareTransactionRequest } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const request = await prepareTransactionRequest(client, {\n *   to: '0x0000000000000000000000000000000000000000',\n *   value: 1n,\n * })\n */\nexport async function prepareTransactionRequest(client, args) {\n    const { account: account_ = client.account, blobs, chain, gas, kzg, nonce, nonceManager, parameters = defaultParameters, type, } = args;\n    const account = account_ ? parseAccount(account_) : account_;\n    const request = { ...args, ...(account ? { from: account?.address } : {}) };\n    let block;\n    async function getBlock() {\n        if (block)\n            return block;\n        block = await getAction(client, getBlock_, 'getBlock')({ blockTag: 'latest' });\n        return block;\n    }\n    let chainId;\n    async function getChainId() {\n        if (chainId)\n            return chainId;\n        if (chain)\n            return chain.id;\n        if (typeof args.chainId !== 'undefined')\n            return args.chainId;\n        const chainId_ = await getAction(client, getChainId_, 'getChainId')({});\n        chainId = chainId_;\n        return chainId;\n    }\n    if (parameters.includes('nonce') && typeof nonce === 'undefined' && account) {\n        if (nonceManager) {\n            const chainId = await getChainId();\n            request.nonce = await nonceManager.consume({\n                address: account.address,\n                chainId,\n                client,\n            });\n        }\n        else {\n            request.nonce = await getAction(client, getTransactionCount, 'getTransactionCount')({\n                address: account.address,\n                blockTag: 'pending',\n            });\n        }\n    }\n    if ((parameters.includes('blobVersionedHashes') ||\n        parameters.includes('sidecars')) &&\n        blobs &&\n        kzg) {\n        const commitments = blobsToCommitments({ blobs, kzg });\n        if (parameters.includes('blobVersionedHashes')) {\n            const versionedHashes = commitmentsToVersionedHashes({\n                commitments,\n                to: 'hex',\n            });\n            request.blobVersionedHashes = versionedHashes;\n        }\n        if (parameters.includes('sidecars')) {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            const sidecars = toBlobSidecars({\n                blobs,\n                commitments,\n                proofs,\n                to: 'hex',\n            });\n            request.sidecars = sidecars;\n        }\n    }\n    if (parameters.includes('chainId'))\n        request.chainId = await getChainId();\n    if ((parameters.includes('fees') || parameters.includes('type')) &&\n        typeof type === 'undefined') {\n        try {\n            request.type = getTransactionType(request);\n        }\n        catch {\n            let isEip1559Network = eip1559NetworkCache.get(client.uid);\n            if (typeof isEip1559Network === 'undefined') {\n                const block = await getBlock();\n                isEip1559Network = typeof block?.baseFeePerGas === 'bigint';\n                eip1559NetworkCache.set(client.uid, isEip1559Network);\n            }\n            request.type = isEip1559Network ? 'eip1559' : 'legacy';\n        }\n    }\n    if (parameters.includes('fees')) {\n        // TODO(4844): derive blob base fees once https://github.com/ethereum/execution-apis/pull/486 is merged.\n        if (request.type !== 'legacy' && request.type !== 'eip2930') {\n            // EIP-1559 fees\n            if (typeof request.maxFeePerGas === 'undefined' ||\n                typeof request.maxPriorityFeePerGas === 'undefined') {\n                const block = await getBlock();\n                const { maxFeePerGas, maxPriorityFeePerGas } = await internal_estimateFeesPerGas(client, {\n                    block: block,\n                    chain,\n                    request: request,\n                });\n                if (typeof args.maxPriorityFeePerGas === 'undefined' &&\n                    args.maxFeePerGas &&\n                    args.maxFeePerGas < maxPriorityFeePerGas)\n                    throw new MaxFeePerGasTooLowError({\n                        maxPriorityFeePerGas,\n                    });\n                request.maxPriorityFeePerGas = maxPriorityFeePerGas;\n                request.maxFeePerGas = maxFeePerGas;\n            }\n        }\n        else {\n            // Legacy fees\n            if (typeof args.maxFeePerGas !== 'undefined' ||\n                typeof args.maxPriorityFeePerGas !== 'undefined')\n                throw new Eip1559FeesNotSupportedError();\n            if (typeof args.gasPrice === 'undefined') {\n                const block = await getBlock();\n                const { gasPrice: gasPrice_ } = await internal_estimateFeesPerGas(client, {\n                    block: block,\n                    chain,\n                    request: request,\n                    type: 'legacy',\n                });\n                request.gasPrice = gasPrice_;\n            }\n        }\n    }\n    if (parameters.includes('gas') && typeof gas === 'undefined')\n        request.gas = await getAction(client, estimateGas, 'estimateGas')({\n            ...request,\n            account: account\n                ? { address: account.address, type: 'json-rpc' }\n                : account,\n        });\n    assertRequest(request);\n    delete request.parameters;\n    return request;\n}\n//# sourceMappingURL=prepareTransactionRequest.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the balance of an address in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBalance\n * - JSON-RPC Methods: [`eth_getBalance`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getbalance)\n *\n * You can convert the balance to ether units with [`formatEther`](https://viem.sh/docs/utilities/formatEther).\n *\n * ```ts\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   blockTag: 'safe'\n * })\n * const balanceAsEther = formatEther(balance)\n * // \"6.942\"\n * ```\n *\n * @param client - Client to use\n * @param parameters - {@link GetBalanceParameters}\n * @returns The balance of the address in wei. {@link GetBalanceReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBalance } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const balance = await getBalance(client, {\n *   address: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n * // 10000000000000000000000n (wei)\n */\nexport async function getBalance(client, { address, blockNumber, blockTag = 'latest' }) {\n    const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n    const balance = await client.request({\n        method: 'eth_getBalance',\n        params: [address, blockNumberHex || blockTag],\n    });\n    return BigInt(balance);\n}\n//# sourceMappingURL=getBalance.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { BaseError } from '../../errors/base.js';\nimport { recoverAuthorizationAddress, } from '../../utils/authorization/recoverAuthorizationAddress.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { getEstimateGasError, } from '../../utils/errors/getEstimateGasError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { serializeStateOverride } from '../../utils/stateOverride.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\nimport { prepareTransactionRequest, } from '../wallet/prepareTransactionRequest.js';\nimport { getBalance } from './getBalance.js';\n/**\n * Estimates the gas necessary to complete a transaction without submitting it to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/estimateGas\n * - JSON-RPC Methods: [`eth_estimateGas`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_estimategas)\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns The gas estimate (in gas units). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateGas } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: parseEther('1'),\n * })\n */\nexport async function estimateGas(client, args) {\n    const { account: account_ = client.account } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    try {\n        const { accessList, authorizationList, blobs, blobVersionedHashes, blockNumber, blockTag, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, value, stateOverride, ...rest } = (await prepareTransactionRequest(client, {\n            ...args,\n            parameters: \n            // Some RPC Providers do not compute versioned hashes from blobs. We will need\n            // to compute them.\n            account?.type === 'local' ? undefined : ['blobVersionedHashes'],\n        }));\n        const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        const rpcStateOverride = serializeStateOverride(stateOverride);\n        const to = await (async () => {\n            // If `to` exists on the parameters, use that.\n            if (rest.to)\n                return rest.to;\n            // If no `to` exists, and we are sending a EIP-7702 transaction, use the\n            // address of the first authorization in the list.\n            if (authorizationList && authorizationList.length > 0)\n                return await recoverAuthorizationAddress({\n                    authorization: authorizationList[0],\n                }).catch(() => {\n                    throw new BaseError('`to` is required. Could not infer from `authorizationList`');\n                });\n            // Otherwise, we are sending a deployment transaction.\n            return undefined;\n        })();\n        assertRequest(args);\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            accessList,\n            authorizationList,\n            blobs,\n            blobVersionedHashes,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerBlobGas,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to,\n            value,\n        });\n        function estimateGas_rpc(parameters) {\n            const { block, request, rpcStateOverride } = parameters;\n            return client.request({\n                method: 'eth_estimateGas',\n                params: rpcStateOverride\n                    ? [request, block ?? 'latest', rpcStateOverride]\n                    : block\n                        ? [request, block]\n                        : [request],\n            });\n        }\n        let estimate = BigInt(await estimateGas_rpc({ block, request, rpcStateOverride }));\n        // TODO(7702): Remove this once https://github.com/ethereum/execution-apis/issues/561 is resolved.\n        //       Authorization list schema is not implemented on JSON-RPC spec yet, so we need to\n        //       manually estimate the gas.\n        if (authorizationList) {\n            const value = await getBalance(client, { address: request.from });\n            const estimates = await Promise.all(authorizationList.map(async (authorization) => {\n                const { address } = authorization;\n                const estimate = await estimateGas_rpc({\n                    block,\n                    request: {\n                        authorizationList: undefined,\n                        data,\n                        from: account?.address,\n                        to: address,\n                        value: numberToHex(value),\n                    },\n                    rpcStateOverride,\n                }).catch(() => 100000n);\n                return 2n * BigInt(estimate);\n            }));\n            estimate += estimates.reduce((acc, curr) => acc + curr, 0n);\n        }\n        return estimate;\n    }\n    catch (err) {\n        throw getEstimateGasError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n//# sourceMappingURL=estimateGas.js.map","import { recoverAddress, } from '../signature/recoverAddress.js';\nimport { hashAuthorization, } from './hashAuthorization.js';\nexport async function recoverAuthorizationAddress(parameters) {\n    const { authorization, signature } = parameters;\n    return recoverAddress({\n        hash: hashAuthorization(authorization),\n        signature: (signature ?? authorization),\n    });\n}\n//# sourceMappingURL=recoverAuthorizationAddress.js.map","import { EstimateGasExecutionError, } from '../../errors/estimateGas.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getEstimateGasError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new EstimateGasExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getEstimateGasError.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { isAddress } from './isAddress.js';\nexport function isAddressEqual(a, b) {\n    if (!isAddress(a, { strict: false }))\n        throw new InvalidAddressError({ address: a });\n    if (!isAddress(b, { strict: false }))\n        throw new InvalidAddressError({ address: b });\n    return a.toLowerCase() === b.toLowerCase();\n}\n//# sourceMappingURL=isAddressEqual.js.map","import { AbiDecodingDataSizeTooSmallError, AbiEventSignatureEmptyTopicsError, AbiEventSignatureNotFoundError, DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { size } from '../data/size.js';\nimport { toEventSelector, } from '../hash/toEventSelector.js';\nimport { PositionOutOfBoundsError } from '../../errors/cursor.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nconst docsPath = '/docs/contract/decodeEventLog';\nexport function decodeEventLog(parameters) {\n    const { abi, data, strict: strict_, topics, } = parameters;\n    const strict = strict_ ?? true;\n    const [signature, ...argTopics] = topics;\n    if (!signature)\n        throw new AbiEventSignatureEmptyTopicsError({ docsPath });\n    const abiItem = abi.find((x) => x.type === 'event' &&\n        signature === toEventSelector(formatAbiItem(x)));\n    if (!(abiItem && 'name' in abiItem) || abiItem.type !== 'event')\n        throw new AbiEventSignatureNotFoundError(signature, { docsPath });\n    const { name, inputs } = abiItem;\n    const isUnnamed = inputs?.some((x) => !('name' in x && x.name));\n    const args = isUnnamed ? [] : {};\n    // Decode topics (indexed args).\n    const indexedInputs = inputs\n        .map((x, i) => [x, i])\n        .filter(([x]) => 'indexed' in x && x.indexed);\n    for (let i = 0; i < indexedInputs.length; i++) {\n        const [param, argIndex] = indexedInputs[i];\n        const topic = argTopics[i];\n        if (!topic)\n            throw new DecodeLogTopicsMismatch({\n                abiItem,\n                param: param,\n            });\n        args[isUnnamed ? argIndex : param.name || argIndex] = decodeTopic({\n            param,\n            value: topic,\n        });\n    }\n    // Decode data (non-indexed args).\n    const nonIndexedInputs = inputs.filter((x) => !('indexed' in x && x.indexed));\n    if (nonIndexedInputs.length > 0) {\n        if (data && data !== '0x') {\n            try {\n                const decodedData = decodeAbiParameters(nonIndexedInputs, data);\n                if (decodedData) {\n                    if (isUnnamed)\n                        for (let i = 0; i < inputs.length; i++)\n                            args[i] = args[i] ?? decodedData.shift();\n                    else\n                        for (let i = 0; i < nonIndexedInputs.length; i++)\n                            args[nonIndexedInputs[i].name] = decodedData[i];\n                }\n            }\n            catch (err) {\n                if (strict) {\n                    if (err instanceof AbiDecodingDataSizeTooSmallError ||\n                        err instanceof PositionOutOfBoundsError)\n                        throw new DecodeLogDataMismatch({\n                            abiItem,\n                            data: data,\n                            params: nonIndexedInputs,\n                            size: size(data),\n                        });\n                    throw err;\n                }\n            }\n        }\n        else if (strict) {\n            throw new DecodeLogDataMismatch({\n                abiItem,\n                data: '0x',\n                params: nonIndexedInputs,\n                size: 0,\n            });\n        }\n    }\n    return {\n        eventName: name,\n        args: Object.values(args).length > 0 ? args : undefined,\n    };\n}\nfunction decodeTopic({ param, value }) {\n    if (param.type === 'string' ||\n        param.type === 'bytes' ||\n        param.type === 'tuple' ||\n        param.type.match(/^(.*)\\[(\\d+)?\\]$/))\n        return value;\n    const decodedArg = decodeAbiParameters([param], value) || [];\n    return decodedArg[0];\n}\n//# sourceMappingURL=decodeEventLog.js.map","// TODO(v3): checksum address.\nimport { AbiEventSignatureNotFoundError, DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { isAddressEqual } from '../address/isAddressEqual.js';\nimport { toBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { toEventSelector } from '../hash/toEventSelector.js';\nimport { decodeEventLog, } from './decodeEventLog.js';\n/**\n * Extracts & decodes logs matching the provided signature(s) (`abi` + optional `eventName`)\n * from a set of opaque logs.\n *\n * @param parameters - {@link ParseEventLogsParameters}\n * @returns The logs. {@link ParseEventLogsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { parseEventLogs } from 'viem/op-stack'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getTransactionReceipt(client, {\n *   hash: '0xec23b2ba4bc59ba61554507c1b1bc91649e6586eb2dd00c728e8ed0db8bb37ea',\n * })\n *\n * const logs = parseEventLogs({ logs: receipt.logs })\n * // [{ args: { ... }, eventName: 'TransactionDeposited', ... }, ...]\n */\nexport function parseEventLogs(parameters) {\n    const { abi, args, logs, strict = true } = parameters;\n    const eventName = (() => {\n        if (!parameters.eventName)\n            return undefined;\n        if (Array.isArray(parameters.eventName))\n            return parameters.eventName;\n        return [parameters.eventName];\n    })();\n    return logs\n        .map((log) => {\n        try {\n            const abiItem = abi.find((abiItem) => abiItem.type === 'event' &&\n                log.topics[0] === toEventSelector(abiItem));\n            if (!abiItem)\n                return null;\n            const event = decodeEventLog({\n                ...log,\n                abi: [abiItem],\n                strict,\n            });\n            // Check that the decoded event name matches the provided event name.\n            if (eventName && !eventName.includes(event.eventName))\n                return null;\n            // Check that the decoded event args match the provided args.\n            if (!includesArgs({\n                args: event.args,\n                inputs: abiItem.inputs,\n                matchArgs: args,\n            }))\n                return null;\n            return { ...event, ...log };\n        }\n        catch (err) {\n            let eventName;\n            let isUnnamed;\n            if (err instanceof AbiEventSignatureNotFoundError)\n                return null;\n            if (err instanceof DecodeLogDataMismatch ||\n                err instanceof DecodeLogTopicsMismatch) {\n                // If strict mode is on, and log data/topics do not match event definition, skip.\n                if (strict)\n                    return null;\n                eventName = err.abiItem.name;\n                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n            }\n            // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n            return { ...log, args: isUnnamed ? [] : {}, eventName };\n        }\n    })\n        .filter(Boolean);\n}\nfunction includesArgs(parameters) {\n    const { args, inputs, matchArgs } = parameters;\n    if (!matchArgs)\n        return true;\n    if (!args)\n        return false;\n    function isEqual(input, value, arg) {\n        try {\n            if (input.type === 'address')\n                return isAddressEqual(value, arg);\n            if (input.type === 'string' || input.type === 'bytes')\n                return keccak256(toBytes(value)) === arg;\n            return value === arg;\n        }\n        catch {\n            return false;\n        }\n    }\n    if (Array.isArray(args) && Array.isArray(matchArgs)) {\n        return matchArgs.every((value, index) => {\n            if (value === null || value === undefined)\n                return true;\n            const input = inputs[index];\n            if (!input)\n                return false;\n            const value_ = Array.isArray(value) ? value : [value];\n            return value_.some((value) => isEqual(input, value, args[index]));\n        });\n    }\n    if (typeof args === 'object' &&\n        !Array.isArray(args) &&\n        typeof matchArgs === 'object' &&\n        !Array.isArray(matchArgs))\n        return Object.entries(matchArgs).every(([key, value]) => {\n            if (value === null || value === undefined)\n                return true;\n            const input = inputs.find((input) => input.name === key);\n            if (!input)\n                return false;\n            const value_ = Array.isArray(value) ? value : [value];\n            return value_.some((value) => isEqual(input, value, args[key]));\n        });\n    return false;\n}\n//# sourceMappingURL=parseEventLogs.js.map","export function formatLog(log, { args, eventName, } = {}) {\n    return {\n        ...log,\n        blockHash: log.blockHash ? log.blockHash : null,\n        blockNumber: log.blockNumber ? BigInt(log.blockNumber) : null,\n        logIndex: log.logIndex ? Number(log.logIndex) : null,\n        transactionHash: log.transactionHash ? log.transactionHash : null,\n        transactionIndex: log.transactionIndex\n            ? Number(log.transactionIndex)\n            : null,\n        ...(eventName ? { args, eventName } : {}),\n    };\n}\n//# sourceMappingURL=log.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { parseEventLogs } from '../../utils/abi/parseEventLogs.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatLog, } from '../../utils/formatters/log.js';\n/**\n * Returns a list of event logs matching the provided parameters.\n *\n * - Docs: https://viem.sh/docs/actions/public/getLogs\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/logs_event-logs\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetLogsParameters}\n * @returns A list of event logs. {@link GetLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getLogs(client)\n */\nexport async function getLogs(client, { address, blockHash, fromBlock, toBlock, event, events: events_, args, strict: strict_, } = {}) {\n    const strict = strict_ ?? false;\n    const events = events_ ?? (event ? [event] : undefined);\n    let topics = [];\n    if (events) {\n        const encoded = events.flatMap((event) => encodeEventTopics({\n            abi: [event],\n            eventName: event.name,\n            args: events_ ? undefined : args,\n        }));\n        // TODO: Clean up type casting\n        topics = [encoded];\n        if (event)\n            topics = topics[0];\n    }\n    let logs;\n    if (blockHash) {\n        logs = await client.request({\n            method: 'eth_getLogs',\n            params: [{ address, topics, blockHash }],\n        });\n    }\n    else {\n        logs = await client.request({\n            method: 'eth_getLogs',\n            params: [\n                {\n                    address,\n                    topics,\n                    fromBlock: typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n                    toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n                },\n            ],\n        });\n    }\n    const formattedLogs = logs.map((log) => formatLog(log));\n    if (!events)\n        return formattedLogs;\n    return parseEventLogs({\n        abi: events,\n        args: args,\n        logs: formattedLogs,\n        strict,\n    });\n}\n//# sourceMappingURL=getLogs.js.map","import { getAbiItem, } from '../../utils/abi/getAbiItem.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { getLogs, } from './getLogs.js';\n/**\n * Returns a list of event logs emitted by a contract.\n *\n * - Docs: https://viem.sh/docs/contract/getContractEvents#getcontractevents\n * - JSON-RPC Methods: [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs)\n *\n * @param client - Client to use\n * @param parameters - {@link GetContractEventsParameters}\n * @returns A list of event logs. {@link GetContractEventsReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getContractEvents } from 'viem/public'\n * import { wagmiAbi } from './abi'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const logs = await getContractEvents(client, {\n *  address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *  abi: wagmiAbi,\n *  eventName: 'Transfer'\n * })\n */\nexport async function getContractEvents(client, parameters) {\n    const { abi, address, args, blockHash, eventName, fromBlock, toBlock, strict, } = parameters;\n    const event = eventName\n        ? getAbiItem({ abi, name: eventName })\n        : undefined;\n    const events = !event\n        ? abi.filter((x) => x.type === 'event')\n        : undefined;\n    return getAction(client, getLogs, 'getLogs')({\n        address,\n        args,\n        blockHash,\n        event,\n        events,\n        fromBlock,\n        toBlock,\n        strict,\n    });\n}\n//# sourceMappingURL=getContractEvents.js.map","import { AbiFunctionNotFoundError, AbiFunctionOutputsNotFoundError, } from '../../errors/abi.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/decodeFunctionResult';\nexport function decodeFunctionResult(parameters) {\n    const { abi, args, functionName, data } = parameters;\n    let abiItem = abi[0];\n    if (functionName) {\n        const item = getAbiItem({ abi, args, name: functionName });\n        if (!item)\n            throw new AbiFunctionNotFoundError(functionName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'function')\n        throw new AbiFunctionNotFoundError(undefined, { docsPath });\n    if (!abiItem.outputs)\n        throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath });\n    const values = decodeAbiParameters(abiItem.outputs, data);\n    if (values && values.length > 1)\n        return values;\n    if (values && values.length === 1)\n        return values[0];\n    return undefined;\n}\n//# sourceMappingURL=decodeFunctionResult.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// 100 lines of code in the file are duplicated from noble-hashes (utils).\n// This is OK: `abstract` directory does not use noble-hashes.\n// User may opt-in into using different hashing library. This way, noble-hashes\n// won't be included into their bundle.\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\nexport function abytes(item) {\n    if (!isBytes(item))\n        throw new Error('Uint8Array expected');\n}\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes(bytes);\n    return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_2n << BigInt(n - 1)) - _1n;\n// DRBG\nconst u8n = (data) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr) => Uint8Array.from(arr); // another shortcut\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n()) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","import { getVersion } from './internal/errors.js';\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError extends Error {\n    constructor(shortMessage, options = {}) {\n        const details = (() => {\n            if (options.cause instanceof BaseError) {\n                if (options.cause.details)\n                    return options.cause.details;\n                if (options.cause.shortMessage)\n                    return options.cause.shortMessage;\n            }\n            if (options.cause?.message)\n                return options.cause.message;\n            return options.details;\n        })();\n        const docsPath = (() => {\n            if (options.cause instanceof BaseError)\n                return options.cause.docsPath || options.docsPath;\n            return options.docsPath;\n        })();\n        const docsBaseUrl = 'https://oxlib.sh';\n        const docs = `${docsBaseUrl}${docsPath ?? ''}`;\n        const message = [\n            shortMessage || 'An error occurred.',\n            ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n            ...(details || docsPath\n                ? [\n                    '',\n                    details ? `Details: ${details}` : undefined,\n                    docsPath ? `See: ${docs}` : undefined,\n                ]\n                : []),\n        ]\n            .filter((x) => typeof x === 'string')\n            .join('\\n');\n        super(message, options.cause ? { cause: options.cause } : undefined);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseError'\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `ox@${getVersion()}`\n        });\n        this.cause = options.cause;\n        this.details = details;\n        this.docs = docs;\n        this.docsPath = docsPath;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\n/** @internal */\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err && typeof err === 'object' && 'cause' in err && err.cause)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=Errors.js.map","const bigIntSuffix = '#__bigint';\n/**\n * Parses a JSON string, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.parse('{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}')\n * // @log: {\n * // @log:   foo: 'bar',\n * // @log:   baz: 69420694206942069420694206942069420694206942069420n\n * // @log: }\n * ```\n *\n * @param string - The value to parse.\n * @param reviver - A function that transforms the results.\n * @returns The parsed value.\n */\nexport function parse(string, reviver) {\n    return JSON.parse(string, (key, value_) => {\n        const value = value_;\n        if (typeof value === 'string' && value.endsWith(bigIntSuffix))\n            return BigInt(value.slice(0, -bigIntSuffix.length));\n        return typeof reviver === 'function' ? reviver(key, value) : value;\n    });\n}\n/**\n * Stringifies a value to its JSON representation, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.stringify({\n *   foo: 'bar',\n *   baz: 69420694206942069420694206942069420694206942069420n,\n * })\n * // @log: '{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}'\n * ```\n *\n * @param value - The value to stringify.\n * @param replacer - A function that transforms the results. It is passed the key and value of the property, and must return the value to be used in the JSON string. If this function returns `undefined`, the property is not included in the resulting JSON string.\n * @param space - A string or number that determines the indentation of the JSON string. If it is a number, it indicates the number of spaces to use as indentation; if it is a string (e.g. `'\\t'`), it uses the string as the indentation character.\n * @returns The JSON string.\n */\nexport function stringify(value, replacer, space) {\n    return JSON.stringify(value, (key, value) => {\n        if (typeof replacer === 'function')\n            return replacer(key, value);\n        if (typeof value === 'bigint')\n            return value.toString() + bigIntSuffix;\n        return value;\n    }, space);\n}\n//# sourceMappingURL=Json.js.map","import * as Bytes from '../Bytes.js';\n/** @internal */\nexport function assertSize(bytes, size_) {\n    if (Bytes.size(bytes) > size_)\n        throw new Bytes.SizeOverflowError({\n            givenSize: Bytes.size(bytes),\n            maxSize: size_,\n        });\n}\n/** @internal */\nexport function assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > Bytes.size(value) - 1)\n        throw new Bytes.SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: Bytes.size(value),\n        });\n}\n/** @internal */\nexport function assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        Bytes.size(value) !== end - start) {\n        throw new Bytes.SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: Bytes.size(value),\n        });\n    }\n}\n/** @internal */\nexport const charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\n/** @internal */\nexport function charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/** @internal */\nexport function pad(bytes, options = {}) {\n    const { dir, size = 32 } = options;\n    if (size === 0)\n        return bytes;\n    if (bytes.length > size)\n        throw new Bytes.SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'Bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n/** @internal */\nexport function trim(value, options = {}) {\n    const { dir = 'left' } = options;\n    let data = value;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    return data;\n}\n//# sourceMappingURL=bytes.js.map","import * as Hex from '../Hex.js';\n/** @internal */\nexport function assertSize(hex, size_) {\n    if (Hex.size(hex) > size_)\n        throw new Hex.SizeOverflowError({\n            givenSize: Hex.size(hex),\n            maxSize: size_,\n        });\n}\n/** @internal */\nexport function assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > Hex.size(value) - 1)\n        throw new Hex.SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: Hex.size(value),\n        });\n}\n/** @internal */\nexport function assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        Hex.size(value) !== end - start) {\n        throw new Hex.SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: Hex.size(value),\n        });\n    }\n}\n/** @internal */\nexport function pad(hex_, options = {}) {\n    const { dir, size = 32 } = options;\n    if (size === 0)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new Hex.SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'Hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\n/** @internal */\nexport function trim(value, options = {}) {\n    const { dir = 'left' } = options;\n    let data = value.replace('0x', '');\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (data === '0')\n        return '0x';\n    if (dir === 'right' && data.length % 2 === 1)\n        return `0x${data}0`;\n    return `0x${data}`;\n}\n//# sourceMappingURL=hex.js.map","import { equalBytes } from '@noble/curves/abstract/utils';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Json from './Json.js';\nimport * as internal from './internal/bytes.js';\nimport * as internal_hex from './internal/hex.js';\nconst decoder = /*#__PURE__*/ new TextDecoder();\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Asserts if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.assert('abc')\n * // @error: Bytes.InvalidBytesTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid Bytes value.\n * // @error: Bytes values must be of type `Uint8Array`.\n * ```\n *\n * @param value - Value to assert.\n */\nexport function assert(value) {\n    if (value instanceof Uint8Array)\n        return;\n    if (!value)\n        throw new InvalidBytesTypeError(value);\n    if (typeof value !== 'object')\n        throw new InvalidBytesTypeError(value);\n    if (!('BYTES_PER_ELEMENT' in value))\n        throw new InvalidBytesTypeError(value);\n    if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')\n        throw new InvalidBytesTypeError(value);\n}\n/**\n * Concatenates two or more {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.concat(\n *   Bytes.from([1]),\n *   Bytes.from([69]),\n *   Bytes.from([420, 69]),\n * )\n * // @log: Uint8Array [ 1, 69, 420, 69 ]\n * ```\n *\n * @param values - Values to concatenate.\n * @returns Concatenated {@link ox#Bytes.Bytes}.\n */\nexport function concat(...values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    for (let i = 0, index = 0; i < values.length; i++) {\n        const arr = values[i];\n        result.set(arr, index);\n        index += arr.length;\n    }\n    return result;\n}\n/**\n * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Bytes.fromBoolean`\n *\n * - `Bytes.fromString`\n *\n * - `Bytes.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.from([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n *\n * const data = Bytes.from('0xdeadbeef')\n * // @log: Uint8Array([222, 173, 190, 239])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function from(value) {\n    if (value instanceof Uint8Array)\n        return value;\n    if (typeof value === 'string')\n        return fromHex(value);\n    return fromArray(value);\n}\n/**\n * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromArray([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function fromArray(value) {\n    return value instanceof Uint8Array ? value : new Uint8Array(value);\n}\n/**\n * Encodes a boolean value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true)\n * // @log: Uint8Array([1])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true, { size: 32 })\n * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n * ```\n *\n * @param value - Boolean value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromBoolean(value, options = {}) {\n    const { size } = options;\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof size === 'number') {\n        internal.assertSize(bytes, size);\n        return padLeft(bytes, size);\n    }\n    return bytes;\n}\n/**\n * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Hex.Hex} value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromHex(value, options = {}) {\n    const { size } = options;\n    let hex = value;\n    if (size) {\n        internal_hex.assertSize(value, size);\n        hex = Hex.padRight(value, size);\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = internal.charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = internal.charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new Errors.BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420)\n * // @log: Uint8Array([1, 164])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420, { size: 4 })\n * // @log: Uint8Array([0, 0, 1, 164])\n * ```\n *\n * @param value - Number value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromNumber(value, options) {\n    const hex = Hex.fromNumber(value, options);\n    return fromHex(hex);\n}\n/**\n * Encodes a string into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - String to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromString(value, options = {}) {\n    const { size } = options;\n    const bytes = encoder.encode(value);\n    if (typeof size === 'number') {\n        internal.assertSize(bytes, size);\n        return padRight(bytes, size);\n    }\n    return bytes;\n}\n/**\n * Checks if two {@link ox#Bytes.Bytes} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))\n * // @log: true\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))\n * // @log: false\n * ```\n *\n * @param bytesA - First {@link ox#Bytes.Bytes} value.\n * @param bytesB - Second {@link ox#Bytes.Bytes} value.\n * @returns `true` if the two values are equal, otherwise `false`.\n */\nexport function isEqual(bytesA, bytesB) {\n    return equalBytes(bytesA, bytesB);\n}\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.from([1]), 4)\n * // @log: Uint8Array([0, 0, 0, 1])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padLeft(value, size) {\n    return internal.pad(value, { dir: 'left', size });\n}\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padRight(Bytes.from([1]), 4)\n * // @log: Uint8Array([1, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padRight(value, size) {\n    return internal.pad(value, { dir: 'right', size });\n}\n/**\n * Generates random {@link ox#Bytes.Bytes} of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.random(32)\n * // @log: Uint8Array([... x32])\n * ```\n *\n * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.\n * @returns Random {@link ox#Bytes.Bytes} of the specified length.\n */\nexport function random(length) {\n    return crypto.getRandomValues(new Uint8Array(length));\n}\n/**\n * Retrieves the size of a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.size(Bytes.from([1, 2, 3, 4]))\n * // @log: 4\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Size of the {@link ox#Bytes.Bytes} value.\n */\nexport function size(value) {\n    return value.length;\n}\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(\n *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n *   1,\n *   4,\n * )\n * // @log: Uint8Array([2, 3, 4])\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value.\n * @param start - Start offset.\n * @param end - End offset.\n * @param options - Slice options.\n * @returns Sliced {@link ox#Bytes.Bytes} value.\n */\nexport function slice(value, start, end, options = {}) {\n    const { strict } = options;\n    internal.assertStartOffset(value, start);\n    const value_ = value.slice(start, end);\n    if (strict)\n        internal.assertEndOffset(value_, start, end);\n    return value_;\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a bigint.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBigInt(Bytes.from([1, 164]))\n * // @log: 420n\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded bigint.\n */\nexport function toBigInt(bytes, options = {}) {\n    const { size } = options;\n    if (typeof size !== 'undefined')\n        internal.assertSize(bytes, size);\n    const hex = Hex.fromBytes(bytes, options);\n    return Hex.toBigInt(hex, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a boolean.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([1]))\n * // @log: true\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded boolean.\n */\nexport function toBoolean(bytes, options = {}) {\n    const { size } = options;\n    let bytes_ = bytes;\n    if (typeof size !== 'undefined') {\n        internal.assertSize(bytes_, size);\n        bytes_ = trimLeft(bytes_);\n    }\n    if (bytes_.length > 1 || bytes_[0] > 1)\n        throw new InvalidBytesBooleanError(bytes_);\n    return Boolean(bytes_[0]);\n}\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded {@link ox#Hex.Hex} value.\n */\nexport function toHex(value, options = {}) {\n    return Hex.fromBytes(value, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a number.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toNumber(Bytes.from([1, 164]))\n * // @log: 420\n * ```\n */\nexport function toNumber(bytes, options = {}) {\n    const { size } = options;\n    if (typeof size !== 'undefined')\n        internal.assertSize(bytes, size);\n    const hex = Hex.fromBytes(bytes, options);\n    return Hex.toNumber(hex, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a string.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: 'Hello world'\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded string.\n */\nexport function toString(bytes, options = {}) {\n    const { size } = options;\n    let bytes_ = bytes;\n    if (typeof size !== 'undefined') {\n        internal.assertSize(bytes_, size);\n        bytes_ = trimRight(bytes_);\n    }\n    return decoder.decode(bytes_);\n}\n/**\n * Trims leading zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimLeft(value) {\n    return internal.trim(value, { dir: 'left' });\n}\n/**\n * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimRight(value) {\n    return internal.trim(value, { dir: 'right' });\n}\n/**\n * Checks if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.validate('0x')\n * // @log: false\n *\n * Bytes.validate(Bytes.from([1, 2, 3]))\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.\n */\nexport function validate(value) {\n    try {\n        assert(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Thrown when the bytes value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([5]))\n * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.\n * // @error: The bytes array must contain a single byte of either a `0` or `1` value.\n * ```\n */\nexport class InvalidBytesBooleanError extends Errors.BaseError {\n    constructor(bytes) {\n        super(`Bytes value \\`${bytes}\\` is not a valid boolean.`, {\n            metaMessages: [\n                'The bytes array must contain a single byte of either a `0` or `1` value.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.InvalidBytesBooleanError'\n        });\n    }\n}\n/**\n * Thrown when a value cannot be converted to bytes.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * Bytes.from('foo')\n * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.\n * ```\n */\nexport class InvalidBytesTypeError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid Bytes value.`, {\n            metaMessages: ['Bytes values must be of type `Bytes`.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.InvalidBytesTypeError'\n        });\n    }\n}\n/**\n * Thrown when a size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromString('Hello World!', { size: 8 })\n * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SizeOverflowError'\n        });\n    }\n}\n/**\n * Thrown when a slice offset is out-of-bounds.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(Bytes.from([1, 2, 3]), 4)\n * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SliceOffsetOutOfBoundsError'\n        });\n    }\n}\n/**\n * Thrown when a the padding size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)\n * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SizeExceedsPaddingSizeError'\n        });\n    }\n}\n//# sourceMappingURL=Bytes.js.map","import { equalBytes } from '@noble/curves/abstract/utils';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Json from './Json.js';\nimport * as internal_bytes from './internal/bytes.js';\nimport * as internal from './internal/hex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Asserts if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('abc')\n * // @error: InvalidHexValueTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid hex type.\n * // @error: Hex types must be represented as `\"0x\\${string}\"`.\n * ```\n *\n * @param value - The value to assert.\n * @param options - Options.\n */\nexport function assert(value, options = {}) {\n    const { strict = false } = options;\n    if (!value)\n        throw new InvalidHexTypeError(value);\n    if (typeof value !== 'string')\n        throw new InvalidHexTypeError(value);\n    if (strict) {\n        if (!/^0x[0-9a-fA-F]*$/.test(value))\n            throw new InvalidHexValueError(value);\n    }\n    if (!value.startsWith('0x'))\n        throw new InvalidHexValueError(value);\n}\n/**\n * Concatenates two or more {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.concat('0x123', '0x456')\n * // @log: '0x123456'\n * ```\n *\n * @param values - The {@link ox#Hex.Hex} values to concatenate.\n * @returns The concatenated {@link ox#Hex.Hex} value.\n */\nexport function concat(...values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n/**\n * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Hex.fromBoolean`\n *\n * - `Hex.fromString`\n *\n * - `Hex.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.from('0x48656c6c6f20576f726c6421')\n * // @log: '0x48656c6c6f20576f726c6421'\n *\n * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function from(value) {\n    if (value instanceof Uint8Array)\n        return fromBytes(value);\n    if (Array.isArray(value))\n        return fromBytes(new Uint8Array(value));\n    return value;\n}\n/**\n * Encodes a boolean into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromBoolean(true)\n * // @log: '0x1'\n *\n * Hex.fromBoolean(false)\n * // @log: '0x0'\n *\n * Hex.fromBoolean(true, { size: 32 })\n * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'\n * ```\n *\n * @param value - The boolean value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBoolean(value, options = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof options.size === 'number') {\n        internal.assertSize(hex, options.size);\n        return padLeft(hex, options.size);\n    }\n    return hex;\n}\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBytes(value, options = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++)\n        string += hexes[value[i]];\n    const hex = `0x${string}`;\n    if (typeof options.size === 'number') {\n        internal.assertSize(hex, options.size);\n        return padRight(hex, options.size);\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420)\n * // @log: '0x1a4'\n *\n * Hex.fromNumber(420, { size: 32 })\n * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'\n * ```\n *\n * @param value - The number or bigint value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromNumber(value, options = {}) {\n    const { signed, size } = options;\n    const value_ = BigInt(value);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value_ > maxValue) || value_ < minValue) {\n        const suffix = typeof value === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value}${suffix}`,\n        });\n    }\n    const stringValue = (signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_).toString(16);\n    const hex = `0x${stringValue}`;\n    if (size)\n        return padLeft(hex, size);\n    return hex;\n}\n/**\n * Encodes a string into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n * Hex.fromString('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * Hex.fromString('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n * ```\n *\n * @param value - The string value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromString(value, options = {}) {\n    return fromBytes(encoder.encode(value), options);\n}\n/**\n * Checks if two {@link ox#Hex.Hex} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.isEqual('0xdeadbeef', '0xdeadbeef')\n * // @log: true\n *\n * Hex.isEqual('0xda', '0xba')\n * // @log: false\n * ```\n *\n * @param hexA - The first {@link ox#Hex.Hex} value.\n * @param hexB - The second {@link ox#Hex.Hex} value.\n * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.\n */\nexport function isEqual(hexA, hexB) {\n    return equalBytes(Bytes.fromHex(hexA), Bytes.fromHex(hexB));\n}\n/**\n * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1234', 4)\n * // @log: '0x00001234'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padLeft(value, size) {\n    return internal.pad(value, { dir: 'left', size });\n}\n/**\n * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts\n * import { Hex } from 'ox'\n *\n * Hex.padRight('0x1234', 4)\n * // @log: '0x12340000'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padRight(value, size) {\n    return internal.pad(value, { dir: 'right', size });\n}\n/**\n * Generates a random {@link ox#Hex.Hex} value of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const hex = Hex.random(32)\n * // @log: '0x...'\n * ```\n *\n * @returns Random {@link ox#Hex.Hex} value.\n */\nexport function random(length) {\n    return fromBytes(Bytes.random(length));\n}\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 1, 4)\n * // @log: '0x234567'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to slice.\n * @param start - The start offset (in bytes).\n * @param end - The end offset (in bytes).\n * @param options - Options.\n * @returns The sliced {@link ox#Hex.Hex} value.\n */\nexport function slice(value, start, end, options = {}) {\n    const { strict } = options;\n    internal.assertStartOffset(value, start);\n    const value_ = `0x${value\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value.length) * 2)}`;\n    if (strict)\n        internal.assertEndOffset(value_, start, end);\n    return value_;\n}\n/**\n * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.size('0xdeadbeef')\n * // @log: 4\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to get the size of.\n * @returns The size of the {@link ox#Hex.Hex} value (in bytes).\n */\nexport function size(value) {\n    return Math.ceil((value.length - 2) / 2);\n}\n/**\n * Trims leading zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimLeft('0x00000000deadbeef')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimLeft(value) {\n    return internal.trim(value, { dir: 'left' });\n}\n/**\n * Trims trailing zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimRight('0xdeadbeef00000000')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimRight(value) {\n    return internal.trim(value, { dir: 'right' });\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a BigInt.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBigInt('0x1a4')\n * // @log: 420n\n *\n * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420n\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded BigInt.\n */\nexport function toBigInt(hex, options = {}) {\n    const { signed } = options;\n    if (options.size)\n        internal.assertSize(hex, options.size);\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n;\n    const max_signed = max_unsigned >> 1n;\n    if (value <= max_signed)\n        return value;\n    return value - max_unsigned - 1n;\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0x01')\n * // @log: true\n *\n * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // @log: true\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded boolean.\n */\nexport function toBoolean(hex, options = {}) {\n    if (options.size)\n        internal.assertSize(hex, options.size);\n    const hex_ = trimLeft(hex);\n    if (hex_ === '0x')\n        return false;\n    if (hex_ === '0x1')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(hex, options = {}) {\n    return Bytes.fromHex(hex, options);\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a number.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toNumber('0x1a4')\n * // @log: 420\n *\n * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded number.\n */\nexport function toNumber(hex, options = {}) {\n    const { signed, size } = options;\n    if (!signed && !size)\n        return Number(hex);\n    return Number(toBigInt(hex, options));\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a string.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toString('0x48656c6c6f20576f726c6421')\n * // @log: 'Hello world!'\n *\n * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // @log: 'Hello world'\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded string.\n */\nexport function toString(hex, options = {}) {\n    const { size } = options;\n    let bytes = Bytes.fromHex(hex);\n    if (size) {\n        internal_bytes.assertSize(bytes, size);\n        bytes = Bytes.trimRight(bytes);\n    }\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Checks if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.validate('0xdeadbeef')\n * // @log: true\n *\n * Hex.validate(Bytes.from([1, 2, 3]))\n * // @log: false\n * ```\n *\n * @param value - The value to check.\n * @param options - Options.\n * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.\n */\nexport function validate(value, options = {}) {\n    const { strict = false } = options;\n    try {\n        assert(value, { strict });\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Thrown when the provided integer is out of range, and cannot be represented as a hex value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420182738912731283712937129)\n * // @error: Hex.IntegerOutOfRangeError: Number \\`4.2018273891273126e+26\\` is not in safe unsigned integer range (`0` to `9007199254740991`)\n * ```\n */\nexport class IntegerOutOfRangeError extends Errors.BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \\`${value}\\` is not in safe${size ? ` ${size * 8}-bit` : ''}${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\\`${min}\\` to \\`${max}\\`)` : `(above \\`${min}\\`)`}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.IntegerOutOfRangeError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0xa')\n * // @error: Hex.InvalidHexBooleanError: Hex value `\"0xa\"` is not a valid boolean.\n * // @error: The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).\n * ```\n */\nexport class InvalidHexBooleanError extends Errors.BaseError {\n    constructor(hex) {\n        super(`Hex value \\`\"${hex}\"\\` is not a valid boolean.`, {\n            metaMessages: [\n                'The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexBooleanError'\n        });\n    }\n}\n/**\n * Thrown when the provided value is not a valid hex type.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert(1)\n * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.\n * ```\n */\nexport class InvalidHexTypeError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid hex type.`, {\n            metaMessages: ['Hex types must be represented as `\"0x${string}\"`.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexTypeError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('0x0123456789abcdefg')\n * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.\n * // @error: Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).\n * ```\n */\nexport class InvalidHexValueError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${value}\\` is an invalid hex value.`, {\n            metaMessages: [\n                'Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexValueError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value is an odd length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromHex('0xabcde')\n * // @error: Hex.InvalidLengthError: Hex value `\"0xabcde\"` is an odd length (5 nibbles).\n * ```\n */\nexport class InvalidLengthError extends Errors.BaseError {\n    constructor(value) {\n        super(`Hex value \\`\"${value}\"\\` is an odd length (${value.length - 2} nibbles).`, {\n            metaMessages: ['It must be an even length.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidLengthError'\n        });\n    }\n}\n/**\n * Thrown when the size of the value exceeds the expected max size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromString('Hello World!', { size: 8 })\n * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SizeOverflowError'\n        });\n    }\n}\n/**\n * Thrown when the slice offset exceeds the bounds of the value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 6)\n * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SliceOffsetOutOfBoundsError'\n        });\n    }\n}\n/**\n * Thrown when the size of the value exceeds the pad size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)\n * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SizeExceedsPaddingSizeError'\n        });\n    }\n}\n//# sourceMappingURL=Hex.js.map","import * as Hex from './Hex.js';\n/**\n * Converts a {@link ox#Withdrawal.Rpc} to an {@link ox#Withdrawal.Withdrawal}.\n *\n * @example\n * ```ts twoslash\n * import { Withdrawal } from 'ox'\n *\n * const withdrawal = Withdrawal.fromRpc({\n *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n *   amount: '0x620323',\n *   index: '0x0',\n *   validatorIndex: '0x1',\n * })\n * // @log: {\n * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n * // @log:   amount: 6423331n,\n * // @log:   index: 0,\n * // @log:   validatorIndex: 1\n * // @log: }\n * ```\n *\n * @param withdrawal - The RPC withdrawal to convert.\n * @returns An instantiated {@link ox#Withdrawal.Withdrawal}.\n */\nexport function fromRpc(withdrawal) {\n    return {\n        ...withdrawal,\n        amount: BigInt(withdrawal.amount),\n        index: Number(withdrawal.index),\n        validatorIndex: Number(withdrawal.validatorIndex),\n    };\n}\n/**\n * Converts a {@link ox#Withdrawal.Withdrawal} to an {@link ox#Withdrawal.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Withdrawal } from 'ox'\n *\n * const withdrawal = Withdrawal.toRpc({\n *   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n *   amount: 6423331n,\n *   index: 0,\n *   validatorIndex: 1,\n * })\n * // @log: {\n * // @log:   address: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n * // @log:   amount: '0x620323',\n * // @log:   index: '0x0',\n * // @log:   validatorIndex: '0x1',\n * // @log: }\n * ```\n *\n * @param withdrawal - The Withdrawal to convert.\n * @returns An RPC Withdrawal.\n */\nexport function toRpc(withdrawal) {\n    return {\n        address: withdrawal.address,\n        amount: Hex.fromNumber(withdrawal.amount),\n        index: Hex.fromNumber(withdrawal.index),\n        validatorIndex: Hex.fromNumber(withdrawal.validatorIndex),\n    };\n}\n//# sourceMappingURL=Withdrawal.js.map","import * as Hex from './Hex.js';\nimport * as Withdrawal from './Withdrawal.js';\n/**\n * Converts an {@link ox#BlockOverrides.Rpc} to an {@link ox#BlockOverrides.BlockOverrides}.\n *\n * @example\n * ```ts twoslash\n * import { BlockOverrides } from 'ox'\n *\n * const blockOverrides = BlockOverrides.fromRpc({\n *   baseFeePerGas: '0x1',\n *   blobBaseFee: '0x2',\n *   feeRecipient: '0x0000000000000000000000000000000000000000',\n *   gasLimit: '0x4',\n *   number: '0x5',\n *   prevRandao: '0x6',\n *   time: '0x1234567890',\n *   withdrawals: [\n *     {\n *       address: '0x0000000000000000000000000000000000000000',\n *       amount: '0x1',\n *       index: '0x0',\n *       validatorIndex: '0x1',\n *     },\n *   ],\n * })\n * ```\n *\n * @param rpcBlockOverrides - The RPC block overrides to convert.\n * @returns An instantiated {@link ox#BlockOverrides.BlockOverrides}.\n */\nexport function fromRpc(rpcBlockOverrides) {\n    return {\n        ...(rpcBlockOverrides.baseFeePerGas && {\n            baseFeePerGas: BigInt(rpcBlockOverrides.baseFeePerGas),\n        }),\n        ...(rpcBlockOverrides.blobBaseFee && {\n            blobBaseFee: BigInt(rpcBlockOverrides.blobBaseFee),\n        }),\n        ...(rpcBlockOverrides.feeRecipient && {\n            feeRecipient: rpcBlockOverrides.feeRecipient,\n        }),\n        ...(rpcBlockOverrides.gasLimit && {\n            gasLimit: BigInt(rpcBlockOverrides.gasLimit),\n        }),\n        ...(rpcBlockOverrides.number && {\n            number: BigInt(rpcBlockOverrides.number),\n        }),\n        ...(rpcBlockOverrides.prevRandao && {\n            prevRandao: BigInt(rpcBlockOverrides.prevRandao),\n        }),\n        ...(rpcBlockOverrides.time && {\n            time: BigInt(rpcBlockOverrides.time),\n        }),\n        ...(rpcBlockOverrides.withdrawals && {\n            withdrawals: rpcBlockOverrides.withdrawals.map(Withdrawal.fromRpc),\n        }),\n    };\n}\n/**\n * Converts an {@link ox#BlockOverrides.BlockOverrides} to an {@link ox#BlockOverrides.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { BlockOverrides } from 'ox'\n *\n * const blockOverrides = BlockOverrides.toRpc({\n *   baseFeePerGas: 1n,\n *   blobBaseFee: 2n,\n *   feeRecipient: '0x0000000000000000000000000000000000000000',\n *   gasLimit: 4n,\n *   number: 5n,\n *   prevRandao: 6n,\n *   time: 78187493520n,\n *   withdrawals: [\n *     {\n *       address: '0x0000000000000000000000000000000000000000',\n *       amount: 1n,\n *       index: 0,\n *       validatorIndex: 1,\n *     },\n *   ],\n * })\n * ```\n *\n * @param blockOverrides - The block overrides to convert.\n * @returns An instantiated {@link ox#BlockOverrides.Rpc}.\n */\nexport function toRpc(blockOverrides) {\n    return {\n        ...(typeof blockOverrides.baseFeePerGas === 'bigint' && {\n            baseFeePerGas: Hex.fromNumber(blockOverrides.baseFeePerGas),\n        }),\n        ...(typeof blockOverrides.blobBaseFee === 'bigint' && {\n            blobBaseFee: Hex.fromNumber(blockOverrides.blobBaseFee),\n        }),\n        ...(typeof blockOverrides.feeRecipient === 'string' && {\n            feeRecipient: blockOverrides.feeRecipient,\n        }),\n        ...(typeof blockOverrides.gasLimit === 'bigint' && {\n            gasLimit: Hex.fromNumber(blockOverrides.gasLimit),\n        }),\n        ...(typeof blockOverrides.number === 'bigint' && {\n            number: Hex.fromNumber(blockOverrides.number),\n        }),\n        ...(typeof blockOverrides.prevRandao === 'bigint' && {\n            prevRandao: Hex.fromNumber(blockOverrides.prevRandao),\n        }),\n        ...(typeof blockOverrides.time === 'bigint' && {\n            time: Hex.fromNumber(blockOverrides.time),\n        }),\n        ...(blockOverrides.withdrawals && {\n            withdrawals: blockOverrides.withdrawals.map(Withdrawal.toRpc),\n        }),\n    };\n}\n//# sourceMappingURL=BlockOverrides.js.map","/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        name: 'target',\n                        type: 'address',\n                    },\n                    {\n                        name: 'allowFailure',\n                        type: 'bool',\n                    },\n                    {\n                        name: 'callData',\n                        type: 'bytes',\n                    },\n                ],\n                name: 'calls',\n                type: 'tuple[]',\n            },\n        ],\n        name: 'aggregate3',\n        outputs: [\n            {\n                components: [\n                    {\n                        name: 'success',\n                        type: 'bool',\n                    },\n                    {\n                        name: 'returnData',\n                        type: 'bytes',\n                    },\n                ],\n                name: 'returnData',\n                type: 'tuple[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\nexport const batchGatewayAbi = [\n    {\n        name: 'query',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            {\n                type: 'tuple[]',\n                name: 'queries',\n                components: [\n                    {\n                        type: 'address',\n                        name: 'sender',\n                    },\n                    {\n                        type: 'string[]',\n                        name: 'urls',\n                    },\n                    {\n                        type: 'bytes',\n                        name: 'data',\n                    },\n                ],\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool[]',\n                name: 'failures',\n            },\n            {\n                type: 'bytes[]',\n                name: 'responses',\n            },\n        ],\n    },\n    {\n        name: 'HttpError',\n        type: 'error',\n        inputs: [\n            {\n                type: 'uint16',\n                name: 'status',\n            },\n            {\n                type: 'string',\n                name: 'message',\n            },\n        ],\n    },\n];\nconst universalResolverErrors = [\n    {\n        inputs: [],\n        name: 'ResolverNotFound',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'ResolverWildcardNotSupported',\n        type: 'error',\n    },\n    {\n        inputs: [],\n        name: 'ResolverNotContract',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                name: 'returnData',\n                type: 'bytes',\n            },\n        ],\n        name: 'ResolverError',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        name: 'status',\n                        type: 'uint16',\n                    },\n                    {\n                        name: 'message',\n                        type: 'string',\n                    },\n                ],\n                name: 'errors',\n                type: 'tuple[]',\n            },\n        ],\n        name: 'HttpError',\n        type: 'error',\n    },\n];\nexport const universalResolverResolveAbi = [\n    ...universalResolverErrors,\n    {\n        name: 'resolve',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes' },\n            { name: 'data', type: 'bytes' },\n        ],\n        outputs: [\n            { name: '', type: 'bytes' },\n            { name: 'address', type: 'address' },\n        ],\n    },\n    {\n        name: 'resolve',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes' },\n            { name: 'data', type: 'bytes' },\n            { name: 'gateways', type: 'string[]' },\n        ],\n        outputs: [\n            { name: '', type: 'bytes' },\n            { name: 'address', type: 'address' },\n        ],\n    },\n];\nexport const universalResolverReverseAbi = [\n    ...universalResolverErrors,\n    {\n        name: 'reverse',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [{ type: 'bytes', name: 'reverseName' }],\n        outputs: [\n            { type: 'string', name: 'resolvedName' },\n            { type: 'address', name: 'resolvedAddress' },\n            { type: 'address', name: 'reverseResolver' },\n            { type: 'address', name: 'resolver' },\n        ],\n    },\n    {\n        name: 'reverse',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { type: 'bytes', name: 'reverseName' },\n            { type: 'string[]', name: 'gateways' },\n        ],\n        outputs: [\n            { type: 'string', name: 'resolvedName' },\n            { type: 'address', name: 'resolvedAddress' },\n            { type: 'address', name: 'reverseResolver' },\n            { type: 'address', name: 'resolver' },\n        ],\n    },\n];\nexport const textResolverAbi = [\n    {\n        name: 'text',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes32' },\n            { name: 'key', type: 'string' },\n        ],\n        outputs: [{ name: '', type: 'string' }],\n    },\n];\nexport const addressResolverAbi = [\n    {\n        name: 'addr',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [{ name: 'name', type: 'bytes32' }],\n        outputs: [{ name: '', type: 'address' }],\n    },\n    {\n        name: 'addr',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'name', type: 'bytes32' },\n            { name: 'coinType', type: 'uint256' },\n        ],\n        outputs: [{ name: '', type: 'bytes' }],\n    },\n];\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\n/** @internal */\nexport const smartAccountAbi = [\n    {\n        name: 'isValidSignature',\n        type: 'function',\n        stateMutability: 'view',\n        inputs: [\n            { name: 'hash', type: 'bytes32' },\n            { name: 'signature', type: 'bytes' },\n        ],\n        outputs: [{ name: '', type: 'bytes4' }],\n    },\n];\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n    {\n        inputs: [\n            {\n                name: '_signer',\n                type: 'address',\n            },\n            {\n                name: '_hash',\n                type: 'bytes32',\n            },\n            {\n                name: '_signature',\n                type: 'bytes',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n    },\n    {\n        inputs: [\n            {\n                name: '_signer',\n                type: 'address',\n            },\n            {\n                name: '_hash',\n                type: 'bytes32',\n            },\n            {\n                name: '_signature',\n                type: 'bytes',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n        name: 'isValidSig',\n    },\n];\n/** [ERC-20 Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-20) */\nexport const erc20Abi = [\n    {\n        type: 'event',\n        name: 'Approval',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'Transfer',\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'allowance',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'spender',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'approve',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'balanceOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'decimals',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint8',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'name',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'symbol',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'totalSupply',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transfer',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transferFrom',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n];\n/**\n * [bytes32-flavored ERC-20](https://docs.makerdao.com/smart-contract-modules/mkr-module#4.-gotchas-potential-source-of-user-error)\n * for tokens (ie. Maker) that use bytes32 instead of string.\n */\nexport const erc20Abi_bytes32 = [\n    {\n        type: 'event',\n        name: 'Approval',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'Transfer',\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'allowance',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'spender',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'approve',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'balanceOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'decimals',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint8',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'name',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'bytes32',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'symbol',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'bytes32',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'totalSupply',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transfer',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transferFrom',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n];\n/** [ERC-1155 Multi Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-1155) */\nexport const erc1155Abi = [\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'balance',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'needed',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        name: 'ERC1155InsufficientBalance',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'approver',\n                type: 'address',\n            },\n        ],\n        name: 'ERC1155InvalidApprover',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: 'idsLength',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'valuesLength',\n                type: 'uint256',\n            },\n        ],\n        name: 'ERC1155InvalidArrayLength',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        name: 'ERC1155InvalidOperator',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'receiver',\n                type: 'address',\n            },\n        ],\n        name: 'ERC1155InvalidReceiver',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n        ],\n        name: 'ERC1155InvalidSender',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'ERC1155MissingApprovalForAll',\n        type: 'error',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'bool',\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        name: 'ApprovalForAll',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256[]',\n                name: 'values',\n                type: 'uint256[]',\n            },\n        ],\n        name: 'TransferBatch',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'TransferSingle',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: 'string',\n                name: 'value',\n                type: 'string',\n            },\n            {\n                indexed: true,\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n        ],\n        name: 'URI',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address[]',\n                name: 'accounts',\n                type: 'address[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n        ],\n        name: 'balanceOfBatch',\n        outputs: [\n            {\n                internalType: 'uint256[]',\n                name: '',\n                type: 'uint256[]',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'ids',\n                type: 'uint256[]',\n            },\n            {\n                internalType: 'uint256[]',\n                name: 'values',\n                type: 'uint256[]',\n            },\n            {\n                internalType: 'bytes',\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        name: 'safeBatchTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'from',\n                type: 'address',\n            },\n            {\n                internalType: 'address',\n                name: 'to',\n                type: 'address',\n            },\n            {\n                internalType: 'uint256',\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                internalType: 'uint256',\n                name: 'value',\n                type: 'uint256',\n            },\n            {\n                internalType: 'bytes',\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address',\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                internalType: 'bool',\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        name: 'setApprovalForAll',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'bytes4',\n                name: 'interfaceId',\n                type: 'bytes4',\n            },\n        ],\n        name: 'supportsInterface',\n        outputs: [\n            {\n                internalType: 'bool',\n                name: '',\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'uint256',\n                name: '',\n                type: 'uint256',\n            },\n        ],\n        name: 'uri',\n        outputs: [\n            {\n                internalType: 'string',\n                name: '',\n                type: 'string',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\n/** [ERC-721 Non-Fungible Token Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-721) */\nexport const erc721Abi = [\n    {\n        type: 'event',\n        name: 'Approval',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'ApprovalForAll',\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'event',\n        name: 'Transfer',\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'approve',\n        stateMutability: 'payable',\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'balanceOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'getApproved',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'address',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'isApprovedForAll',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'operator',\n                type: 'address',\n            },\n        ],\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'name',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'ownerOf',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'safeTransferFrom',\n        stateMutability: 'payable',\n        inputs: [\n            {\n                name: 'from',\n                type: 'address',\n            },\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'safeTransferFrom',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'from',\n                type: 'address',\n            },\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'id',\n                type: 'uint256',\n            },\n            {\n                name: 'data',\n                type: 'bytes',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'setApprovalForAll',\n        stateMutability: 'nonpayable',\n        inputs: [\n            {\n                name: 'operator',\n                type: 'address',\n            },\n            {\n                name: 'approved',\n                type: 'bool',\n            },\n        ],\n        outputs: [],\n    },\n    {\n        type: 'function',\n        name: 'symbol',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'tokenByIndex',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'index',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'tokenByIndex',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'index',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'tokenURI',\n        stateMutability: 'view',\n        inputs: [\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [\n            {\n                type: 'string',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'totalSupply',\n        stateMutability: 'view',\n        inputs: [],\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n    },\n    {\n        type: 'function',\n        name: 'transferFrom',\n        stateMutability: 'payable',\n        inputs: [\n            {\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                name: 'recipient',\n                type: 'address',\n            },\n            {\n                name: 'tokenId',\n                type: 'uint256',\n            },\n        ],\n        outputs: [],\n    },\n];\n/** [ERC-4626 Tokenized Vaults Standard](https://ethereum.org/en/developers/docs/standards/tokens/erc-4626) */\nexport const erc4626Abi = [\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Approval',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposit',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'from',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'to',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'value',\n                type: 'uint256',\n            },\n        ],\n        name: 'Transfer',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdraw',\n        type: 'event',\n    },\n    {\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n            {\n                name: 'spender',\n                type: 'address',\n            },\n        ],\n        name: 'allowance',\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'spender',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'approve',\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'asset',\n        outputs: [\n            {\n                name: 'assetTokenAddress',\n                type: 'address',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'account',\n                type: 'address',\n            },\n        ],\n        name: 'balanceOf',\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'convertToAssets',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        name: 'convertToShares',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n        ],\n        name: 'deposit',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'caller',\n                type: 'address',\n            },\n        ],\n        name: 'maxDeposit',\n        outputs: [\n            {\n                name: 'maxAssets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'caller',\n                type: 'address',\n            },\n        ],\n        name: 'maxMint',\n        outputs: [\n            {\n                name: 'maxShares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'maxRedeem',\n        outputs: [\n            {\n                name: 'maxShares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'maxWithdraw',\n        outputs: [\n            {\n                name: 'maxAssets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n        ],\n        name: 'mint',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewDeposit',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewMint',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewRedeem',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        name: 'previewWithdraw',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'redeem',\n        outputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'totalAssets',\n        outputs: [\n            {\n                name: 'totalManagedAssets',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [\n            {\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'transfer',\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'from',\n                type: 'address',\n            },\n            {\n                name: 'to',\n                type: 'address',\n            },\n            {\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'transferFrom',\n        outputs: [\n            {\n                type: 'bool',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'assets',\n                type: 'uint256',\n            },\n            {\n                name: 'receiver',\n                type: 'address',\n            },\n            {\n                name: 'owner',\n                type: 'address',\n            },\n        ],\n        name: 'withdraw',\n        outputs: [\n            {\n                name: 'shares',\n                type: 'uint256',\n            },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n];\n//# sourceMappingURL=abis.js.map","export const aggregate3Signature = '0x82ad56cb';\n//# sourceMappingURL=contract.js.map","export const deploylessCallViaBytecodeBytecode = '0x608060405234801561001057600080fd5b5060405161018e38038061018e83398101604081905261002f91610124565b6000808351602085016000f59050803b61004857600080fd5b6000808351602085016000855af16040513d6000823e81610067573d81fd5b3d81f35b634e487b7160e01b600052604160045260246000fd5b600082601f83011261009257600080fd5b81516001600160401b038111156100ab576100ab61006b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100d9576100d961006b565b6040528181528382016020018510156100f157600080fd5b60005b82811015610110576020818601810151838301820152016100f4565b506000918101602001919091529392505050565b6000806040838503121561013757600080fd5b82516001600160401b0381111561014d57600080fd5b61015985828601610081565b602085015190935090506001600160401b0381111561017757600080fd5b61018385828601610081565b915050925092905056fe';\nexport const deploylessCallViaFactoryBytecode = '0x608060405234801561001057600080fd5b506040516102c03803806102c083398101604081905261002f916101e6565b836001600160a01b03163b6000036100e457600080836001600160a01b03168360405161005c9190610270565b6000604051808303816000865af19150503d8060008114610099576040519150601f19603f3d011682016040523d82523d6000602084013e61009e565b606091505b50915091508115806100b857506001600160a01b0386163b155b156100e1578060405163101bb98d60e01b81526004016100d8919061028c565b60405180910390fd5b50505b6000808451602086016000885af16040513d6000823e81610103573d81fd5b3d81f35b80516001600160a01b038116811461011e57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561015457818101518382015260200161013c565b50506000910152565b600082601f83011261016e57600080fd5b81516001600160401b0381111561018757610187610123565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101b5576101b5610123565b6040528181528382016020018510156101cd57600080fd5b6101de826020830160208701610139565b949350505050565b600080600080608085870312156101fc57600080fd5b61020585610107565b60208601519094506001600160401b0381111561022157600080fd5b61022d8782880161015d565b93505061023c60408601610107565b60608601519092506001600160401b0381111561025857600080fd5b6102648782880161015d565b91505092959194509250565b60008251610282818460208701610139565b9190910192915050565b60208152600082518060208401526102ab816040850160208701610139565b601f01601f1916919091016040019291505056fe';\nexport const universalSignatureValidatorByteCode = '0x608060405234801561001057600080fd5b5060405161069438038061069483398101604081905261002f9161051e565b600061003c848484610048565b9050806000526001601ff35b60007f64926492649264926492649264926492649264926492649264926492649264926100748361040c565b036101e7576000606080848060200190518101906100929190610577565b60405192955090935091506000906001600160a01b038516906100b69085906105dd565b6000604051808303816000865af19150503d80600081146100f3576040519150601f19603f3d011682016040523d82523d6000602084013e6100f8565b606091505b50509050876001600160a01b03163b60000361016057806101605760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90610190908b9087906004016105f9565b602060405180830381865afa1580156101ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d19190610633565b6001600160e01b03191614945050505050610405565b6001600160a01b0384163b1561027a57604051630b135d3f60e11b808252906001600160a01b03861690631626ba7e9061022790879087906004016105f9565b602060405180830381865afa158015610244573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102689190610633565b6001600160e01b031916149050610405565b81516041146102df5760405162461bcd60e51b815260206004820152603a602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e6774680000000000006064820152608401610157565b6102e7610425565b5060208201516040808401518451859392600091859190811061030c5761030c61065d565b016020015160f81c9050601b811480159061032b57508060ff16601c14155b1561038c5760405162461bcd60e51b815260206004820152603b602482015260008051602061067483398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c756500000000006064820152608401610157565b60408051600081526020810180835289905260ff83169181019190915260608101849052608081018390526001600160a01b0389169060019060a0016020604051602081039080840390855afa1580156103ea573d6000803e3d6000fd5b505050602060405103516001600160a01b0316149450505050505b9392505050565b600060208251101561041d57600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b038116811461045857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561048c578181015183820152602001610474565b50506000910152565b600082601f8301126104a657600080fd5b81516001600160401b038111156104bf576104bf61045b565b604051601f8201601f19908116603f011681016001600160401b03811182821017156104ed576104ed61045b565b60405281815283820160200185101561050557600080fd5b610516826020830160208701610471565b949350505050565b60008060006060848603121561053357600080fd5b835161053e81610443565b6020850151604086015191945092506001600160401b0381111561056157600080fd5b61056d86828701610495565b9150509250925092565b60008060006060848603121561058c57600080fd5b835161059781610443565b60208501519093506001600160401b038111156105b357600080fd5b6105bf86828701610495565b604086015190935090506001600160401b0381111561056157600080fd5b600082516105ef818460208701610471565b9190910192915050565b828152604060208201526000825180604084015261061e816060850160208701610471565b601f01601f1916919091016060019392505050565b60006020828403121561064557600080fd5b81516001600160e01b03198116811461040557600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572';\n//# sourceMappingURL=contracts.js.map","import { BaseError } from './base.js';\nexport class ChainDoesNotSupportContract extends BaseError {\n    constructor({ blockNumber, chain, contract, }) {\n        super(`Chain \"${chain.name}\" does not support contract \"${contract.name}\".`, {\n            metaMessages: [\n                'This could be due to any of the following:',\n                ...(blockNumber &&\n                    contract.blockCreated &&\n                    contract.blockCreated > blockNumber\n                    ? [\n                        `- The contract \"${contract.name}\" was not deployed until block ${contract.blockCreated} (current block ${blockNumber}).`,\n                    ]\n                    : [\n                        `- The chain does not have the contract \"${contract.name}\" configured.`,\n                    ]),\n            ],\n            name: 'ChainDoesNotSupportContract',\n        });\n    }\n}\nexport class ChainMismatchError extends BaseError {\n    constructor({ chain, currentChainId, }) {\n        super(`The current chain of the wallet (id: ${currentChainId}) does not match the target chain for the transaction (id: ${chain.id} – ${chain.name}).`, {\n            metaMessages: [\n                `Current Chain ID:  ${currentChainId}`,\n                `Expected Chain ID: ${chain.id} – ${chain.name}`,\n            ],\n            name: 'ChainMismatchError',\n        });\n    }\n}\nexport class ChainNotFoundError extends BaseError {\n    constructor() {\n        super([\n            'No chain was provided to the request.',\n            'Please provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient.',\n        ].join('\\n'), {\n            name: 'ChainNotFoundError',\n        });\n    }\n}\nexport class ClientChainNotConfiguredError extends BaseError {\n    constructor() {\n        super('No chain was provided to the Client.', {\n            name: 'ClientChainNotConfiguredError',\n        });\n    }\n}\nexport class InvalidChainIdError extends BaseError {\n    constructor({ chainId }) {\n        super(typeof chainId === 'number'\n            ? `Chain ID \"${chainId}\" is invalid.`\n            : 'Chain ID is invalid.', { name: 'InvalidChainIdError' });\n    }\n}\n//# sourceMappingURL=chain.js.map","import { AbiConstructorNotFoundError, AbiConstructorParamsNotFoundError, } from '../../errors/abi.js';\nimport { concatHex } from '../data/concat.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nconst docsPath = '/docs/contract/encodeDeployData';\nexport function encodeDeployData(parameters) {\n    const { abi, args, bytecode } = parameters;\n    if (!args || args.length === 0)\n        return bytecode;\n    const description = abi.find((x) => 'type' in x && x.type === 'constructor');\n    if (!description)\n        throw new AbiConstructorNotFoundError({ docsPath });\n    if (!('inputs' in description))\n        throw new AbiConstructorParamsNotFoundError({ docsPath });\n    if (!description.inputs || description.inputs.length === 0)\n        throw new AbiConstructorParamsNotFoundError({ docsPath });\n    const data = encodeAbiParameters(description.inputs, args);\n    return concatHex([bytecode, data]);\n}\n//# sourceMappingURL=encodeDeployData.js.map","import { ChainDoesNotSupportContract, } from '../../errors/chain.js';\nexport function getChainContractAddress({ blockNumber, chain, contract: name, }) {\n    const contract = chain?.contracts?.[name];\n    if (!contract)\n        throw new ChainDoesNotSupportContract({\n            chain,\n            contract: { name },\n        });\n    if (blockNumber &&\n        contract.blockCreated &&\n        contract.blockCreated > blockNumber)\n        throw new ChainDoesNotSupportContract({\n            blockNumber,\n            chain,\n            contract: {\n                name,\n                blockCreated: contract.blockCreated,\n            },\n        });\n    return contract.address;\n}\n//# sourceMappingURL=getChainContractAddress.js.map","import { CallExecutionError, } from '../../errors/contract.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { getNodeError, } from './getNodeError.js';\nexport function getCallError(err, { docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getNodeError(err, args);\n        if (cause instanceof UnknownNodeError)\n            return err;\n        return cause;\n    })();\n    return new CallExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n//# sourceMappingURL=getCallError.js.map","/** @internal */\nexport function withResolvers() {\n    let resolve = () => undefined;\n    let reject = () => undefined;\n    const promise = new Promise((resolve_, reject_) => {\n        resolve = resolve_;\n        reject = reject_;\n    });\n    return { promise, resolve, reject };\n}\n//# sourceMappingURL=withResolvers.js.map","import { withResolvers } from './withResolvers.js';\nconst schedulerCache = /*#__PURE__*/ new Map();\n/** @internal */\nexport function createBatchScheduler({ fn, id, shouldSplitBatch, wait = 0, sort, }) {\n    const exec = async () => {\n        const scheduler = getScheduler();\n        flush();\n        const args = scheduler.map(({ args }) => args);\n        if (args.length === 0)\n            return;\n        fn(args)\n            .then((data) => {\n            if (sort && Array.isArray(data))\n                data.sort(sort);\n            for (let i = 0; i < scheduler.length; i++) {\n                const { resolve } = scheduler[i];\n                resolve?.([data[i], data]);\n            }\n        })\n            .catch((err) => {\n            for (let i = 0; i < scheduler.length; i++) {\n                const { reject } = scheduler[i];\n                reject?.(err);\n            }\n        });\n    };\n    const flush = () => schedulerCache.delete(id);\n    const getBatchedArgs = () => getScheduler().map(({ args }) => args);\n    const getScheduler = () => schedulerCache.get(id) || [];\n    const setScheduler = (item) => schedulerCache.set(id, [...getScheduler(), item]);\n    return {\n        flush,\n        async schedule(args) {\n            const { promise, resolve, reject } = withResolvers();\n            const split = shouldSplitBatch?.([...getBatchedArgs(), args]);\n            if (split)\n                exec();\n            const hasActiveScheduler = getScheduler().length > 0;\n            if (hasActiveScheduler) {\n                setScheduler({ args, resolve, reject });\n                return promise;\n            }\n            setScheduler({ args, resolve, reject });\n            setTimeout(exec, wait);\n            return promise;\n        },\n    };\n}\n//# sourceMappingURL=createBatchScheduler.js.map","import { parseAbi } from 'abitype';\nimport * as BlockOverrides from 'ox/BlockOverrides';\nimport { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { multicall3Abi } from '../../constants/abis.js';\nimport { aggregate3Signature } from '../../constants/contract.js';\nimport { deploylessCallViaBytecodeBytecode, deploylessCallViaFactoryBytecode, } from '../../constants/contracts.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ChainDoesNotSupportContract, ClientChainNotConfiguredError, } from '../../errors/chain.js';\nimport { CounterfactualDeploymentFailedError, RawContractError, } from '../../errors/contract.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeDeployData, } from '../../utils/abi/encodeDeployData.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { getCallError, } from '../../utils/errors/getCallError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { createBatchScheduler, } from '../../utils/promise/createBatchScheduler.js';\nimport { serializeStateOverride, } from '../../utils/stateOverride.js';\nimport { assertRequest } from '../../utils/transaction/assertRequest.js';\n/**\n * Executes a new message call immediately without submitting a transaction to the network.\n *\n * - Docs: https://viem.sh/docs/actions/public/call\n * - JSON-RPC Methods: [`eth_call`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_call)\n *\n * @param client - Client to use\n * @param parameters - {@link CallParameters}\n * @returns The call data. {@link CallReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { call } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await call(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function call(client, args) {\n    const { account: account_ = client.account, authorizationList, batch = Boolean(client.batch?.multicall), blockNumber, blockTag = 'latest', accessList, blobs, blockOverrides, code, data: data_, factory, factoryData, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, stateOverride, ...rest } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    if (code && (factory || factoryData))\n        throw new BaseError('Cannot provide both `code` & `factory`/`factoryData` as parameters.');\n    if (code && to)\n        throw new BaseError('Cannot provide both `code` & `to` as parameters.');\n    // Check if the call is deployless via bytecode.\n    const deploylessCallViaBytecode = code && data_;\n    // Check if the call is deployless via a factory.\n    const deploylessCallViaFactory = factory && factoryData && to && data_;\n    const deploylessCall = deploylessCallViaBytecode || deploylessCallViaFactory;\n    const data = (() => {\n        if (deploylessCallViaBytecode)\n            return toDeploylessCallViaBytecodeData({\n                code,\n                data: data_,\n            });\n        if (deploylessCallViaFactory)\n            return toDeploylessCallViaFactoryData({\n                data: data_,\n                factory,\n                factoryData,\n                to,\n            });\n        return data_;\n    })();\n    try {\n        assertRequest(args);\n        const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        const rpcBlockOverrides = blockOverrides\n            ? BlockOverrides.toRpc(blockOverrides)\n            : undefined;\n        const rpcStateOverride = serializeStateOverride(stateOverride);\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            accessList,\n            authorizationList,\n            blobs,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerBlobGas,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to: deploylessCall ? undefined : to,\n            value,\n        });\n        if (batch &&\n            shouldPerformMulticall({ request }) &&\n            !rpcStateOverride &&\n            !rpcBlockOverrides) {\n            try {\n                return await scheduleMulticall(client, {\n                    ...request,\n                    blockNumber,\n                    blockTag,\n                });\n            }\n            catch (err) {\n                if (!(err instanceof ClientChainNotConfiguredError) &&\n                    !(err instanceof ChainDoesNotSupportContract))\n                    throw err;\n            }\n        }\n        const params = (() => {\n            const base = [\n                request,\n                block,\n            ];\n            if (rpcStateOverride && rpcBlockOverrides)\n                return [...base, rpcStateOverride, rpcBlockOverrides];\n            if (rpcStateOverride)\n                return [...base, rpcStateOverride];\n            if (rpcBlockOverrides)\n                return [...base, {}, rpcBlockOverrides];\n            return base;\n        })();\n        const response = await client.request({\n            method: 'eth_call',\n            params,\n        });\n        if (response === '0x')\n            return { data: undefined };\n        return { data: response };\n    }\n    catch (err) {\n        const data = getRevertErrorData(err);\n        // Check for CCIP-Read offchain lookup signature.\n        const { offchainLookup, offchainLookupSignature } = await import('../../utils/ccip.js');\n        if (client.ccipRead !== false &&\n            data?.slice(0, 10) === offchainLookupSignature &&\n            to)\n            return { data: await offchainLookup(client, { data, to }) };\n        // Check for counterfactual deployment error.\n        if (deploylessCall && data?.slice(0, 10) === '0x101bb98d')\n            throw new CounterfactualDeploymentFailedError({ factory });\n        throw getCallError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n// We only want to perform a scheduled multicall if:\n// - The request has calldata,\n// - The request has a target address,\n// - The target address is not already the aggregate3 signature,\n// - The request has no other properties (`nonce`, `gas`, etc cannot be sent with a multicall).\nfunction shouldPerformMulticall({ request }) {\n    const { data, to, ...request_ } = request;\n    if (!data)\n        return false;\n    if (data.startsWith(aggregate3Signature))\n        return false;\n    if (!to)\n        return false;\n    if (Object.values(request_).filter((x) => typeof x !== 'undefined').length > 0)\n        return false;\n    return true;\n}\nasync function scheduleMulticall(client, args) {\n    const { batchSize = 1024, wait = 0 } = typeof client.batch?.multicall === 'object' ? client.batch.multicall : {};\n    const { blockNumber, blockTag = 'latest', data, multicallAddress: multicallAddress_, to, } = args;\n    let multicallAddress = multicallAddress_;\n    if (!multicallAddress) {\n        if (!client.chain)\n            throw new ClientChainNotConfiguredError();\n        multicallAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'multicall3',\n        });\n    }\n    const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n    const block = blockNumberHex || blockTag;\n    const { schedule } = createBatchScheduler({\n        id: `${client.uid}.${block}`,\n        wait,\n        shouldSplitBatch(args) {\n            const size = args.reduce((size, { data }) => size + (data.length - 2), 0);\n            return size > batchSize * 2;\n        },\n        fn: async (requests) => {\n            const calls = requests.map((request) => ({\n                allowFailure: true,\n                callData: request.data,\n                target: request.to,\n            }));\n            const calldata = encodeFunctionData({\n                abi: multicall3Abi,\n                args: [calls],\n                functionName: 'aggregate3',\n            });\n            const data = await client.request({\n                method: 'eth_call',\n                params: [\n                    {\n                        data: calldata,\n                        to: multicallAddress,\n                    },\n                    block,\n                ],\n            });\n            return decodeFunctionResult({\n                abi: multicall3Abi,\n                args: [calls],\n                functionName: 'aggregate3',\n                data: data || '0x',\n            });\n        },\n    });\n    const [{ returnData, success }] = await schedule({ data, to });\n    if (!success)\n        throw new RawContractError({ data: returnData });\n    if (returnData === '0x')\n        return { data: undefined };\n    return { data: returnData };\n}\nfunction toDeploylessCallViaBytecodeData(parameters) {\n    const { code, data } = parameters;\n    return encodeDeployData({\n        abi: parseAbi(['constructor(bytes, bytes)']),\n        bytecode: deploylessCallViaBytecodeBytecode,\n        args: [code, data],\n    });\n}\nfunction toDeploylessCallViaFactoryData(parameters) {\n    const { data, factory, factoryData, to } = parameters;\n    return encodeDeployData({\n        abi: parseAbi(['constructor(address, bytes, address, bytes)']),\n        bytecode: deploylessCallViaFactoryBytecode,\n        args: [to, data, factory, factoryData],\n    });\n}\n/** @internal */\nexport function getRevertErrorData(err) {\n    if (!(err instanceof BaseError))\n        return undefined;\n    const error = err.walk();\n    return typeof error?.data === 'object' ? error.data?.data : error.data;\n}\n//# sourceMappingURL=call.js.map","import { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { call } from './call.js';\n/**\n * Calls a read-only function on a contract, and returns the response.\n *\n * - Docs: https://viem.sh/docs/contract/readContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_reading-contracts\n *\n * A \"read-only\" function (constant function) on a Solidity contract is denoted by a `view` or `pure` keyword. They can only read the state of the contract, and cannot make any changes to it. Since read-only methods do not change the state of the contract, they do not require any gas to be executed, and can be called by any user without the need to pay for gas.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link ReadContractParameters}\n * @returns The response from the contract. Type is inferred. {@link ReadContractReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { readContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await readContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function balanceOf(address) view returns (uint256)']),\n *   functionName: 'balanceOf',\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // 424122n\n */\nexport async function readContract(client, parameters) {\n    const { abi, address, args, functionName, ...rest } = parameters;\n    const calldata = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n    });\n    try {\n        const { data } = await getAction(client, call, 'call')({\n            ...rest,\n            data: calldata,\n            to: address,\n        });\n        return decodeFunctionResult({\n            abi,\n            args,\n            functionName,\n            data: data || '0x',\n        });\n    }\n    catch (error) {\n        throw getContractError(error, {\n            abi,\n            address,\n            args,\n            docsPath: '/docs/contract/readContract',\n            functionName,\n        });\n    }\n}\n//# sourceMappingURL=readContract.js.map","/** @internal */\nexport const listenersCache = /*#__PURE__*/ new Map();\n/** @internal */\nexport const cleanupCache = /*#__PURE__*/ new Map();\nlet callbackCount = 0;\n/**\n * @description Sets up an observer for a given function. If another function\n * is set up under the same observer id, the function will only be called once\n * for both instances of the observer.\n */\nexport function observe(observerId, callbacks, fn) {\n    const callbackId = ++callbackCount;\n    const getListeners = () => listenersCache.get(observerId) || [];\n    const unsubscribe = () => {\n        const listeners = getListeners();\n        listenersCache.set(observerId, listeners.filter((cb) => cb.id !== callbackId));\n    };\n    const unwatch = () => {\n        const listeners = getListeners();\n        if (!listeners.some((cb) => cb.id === callbackId))\n            return;\n        const cleanup = cleanupCache.get(observerId);\n        if (listeners.length === 1 && cleanup) {\n            const p = cleanup();\n            if (p instanceof Promise)\n                p.catch(() => { });\n        }\n        unsubscribe();\n    };\n    const listeners = getListeners();\n    listenersCache.set(observerId, [\n        ...listeners,\n        { id: callbackId, fns: callbacks },\n    ]);\n    if (listeners && listeners.length > 0)\n        return unwatch;\n    const emit = {};\n    for (const key in callbacks) {\n        emit[key] = ((...args) => {\n            const listeners = getListeners();\n            if (listeners.length === 0)\n                return;\n            for (const listener of listeners)\n                listener.fns[key]?.(...args);\n        });\n    }\n    const cleanup = fn(emit);\n    if (typeof cleanup === 'function')\n        cleanupCache.set(observerId, cleanup);\n    return unwatch;\n}\n//# sourceMappingURL=observe.js.map","export async function wait(time) {\n    return new Promise((res) => setTimeout(res, time));\n}\n//# sourceMappingURL=wait.js.map","import { wait } from './wait.js';\n/**\n * @description Polls a function at a specified interval.\n */\nexport function poll(fn, { emitOnBegin, initialWaitTime, interval }) {\n    let active = true;\n    const unwatch = () => (active = false);\n    const watch = async () => {\n        let data = undefined;\n        if (emitOnBegin)\n            data = await fn({ unpoll: unwatch });\n        const initialWait = (await initialWaitTime?.(data)) ?? interval;\n        await wait(initialWait);\n        const poll = async () => {\n            if (!active)\n                return;\n            await fn({ unpoll: unwatch });\n            await wait(interval);\n            poll();\n        };\n        poll();\n    };\n    watch();\n    return unwatch;\n}\n//# sourceMappingURL=poll.js.map","/** @internal */\nexport const promiseCache = /*#__PURE__*/ new Map();\n/** @internal */\nexport const responseCache = /*#__PURE__*/ new Map();\nexport function getCache(cacheKey) {\n    const buildCache = (cacheKey, cache) => ({\n        clear: () => cache.delete(cacheKey),\n        get: () => cache.get(cacheKey),\n        set: (data) => cache.set(cacheKey, data),\n    });\n    const promise = buildCache(cacheKey, promiseCache);\n    const response = buildCache(cacheKey, responseCache);\n    return {\n        clear: () => {\n            promise.clear();\n            response.clear();\n        },\n        promise,\n        response,\n    };\n}\n/**\n * @description Returns the result of a given promise, and caches the result for\n * subsequent invocations against a provided cache key.\n */\nexport async function withCache(fn, { cacheKey, cacheTime = Number.POSITIVE_INFINITY }) {\n    const cache = getCache(cacheKey);\n    // If a response exists in the cache, and it's not expired, return it\n    // and do not invoke the promise.\n    // If the max age is 0, the cache is disabled.\n    const response = cache.response.get();\n    if (response && cacheTime > 0) {\n        const age = new Date().getTime() - response.created.getTime();\n        if (age < cacheTime)\n            return response.data;\n    }\n    let promise = cache.promise.get();\n    if (!promise) {\n        promise = fn();\n        // Store the promise in the cache so that subsequent invocations\n        // will wait for the same promise to resolve (deduping).\n        cache.promise.set(promise);\n    }\n    try {\n        const data = await promise;\n        // Store the response in the cache so that subsequent invocations\n        // will return the same response.\n        cache.response.set({ created: new Date(), data });\n        return data;\n    }\n    finally {\n        // Clear the promise cache so that subsequent invocations will\n        // invoke the promise again.\n        cache.promise.clear();\n    }\n}\n//# sourceMappingURL=withCache.js.map","import { getCache, withCache, } from '../../utils/promise/withCache.js';\nconst cacheKey = (id) => `blockNumber.${id}`;\n/** @internal */\nexport function getBlockNumberCache(id) {\n    return getCache(cacheKey(id));\n}\n/**\n * Returns the number of the most recent block seen.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_fetching-blocks\n * - JSON-RPC Methods: [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber)\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockNumberParameters}\n * @returns The number of the block. {@link GetBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockNumber } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blockNumber = await getBlockNumber(client)\n * // 69420n\n */\nexport async function getBlockNumber(client, { cacheTime = client.cacheTime } = {}) {\n    const blockNumberHex = await withCache(() => client.request({\n        method: 'eth_blockNumber',\n    }), { cacheKey: cacheKey(client.uid), cacheTime });\n    return BigInt(blockNumberHex);\n}\n//# sourceMappingURL=getBlockNumber.js.map","import { parseEventLogs } from '../../utils/abi/parseEventLogs.js';\nimport { formatLog, } from '../../utils/formatters/log.js';\n/**\n * Returns a list of logs or hashes based on a [Filter](/docs/glossary/terms#filter) since the last time it was called.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterChanges\n * - JSON-RPC Methods: [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges)\n *\n * A Filter can be created from the following actions:\n *\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createContractEventFilter`](https://viem.sh/docs/contract/createContractEventFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * Depending on the type of filter, the return value will be different:\n *\n * - If the filter was created with `createContractEventFilter` or `createEventFilter`, it returns a list of logs.\n * - If the filter was created with `createPendingTransactionFilter`, it returns a list of transaction hashes.\n * - If the filter was created with `createBlockFilter`, it returns a list of block hashes.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterChangesParameters}\n * @returns Logs or hashes. {@link GetFilterChangesReturnType}\n *\n * @example\n * // Blocks\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n *\n * @example\n * // Contract Events\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createContractEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createContractEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   abi: parseAbi(['event Transfer(address indexed, address indexed, uint256)']),\n *   eventName: 'Transfer',\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Raw Events\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterChanges(client, { filter })\n *\n * @example\n * // Transactions\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, getFilterChanges } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * const hashes = await getFilterChanges(client, { filter })\n */\nexport async function getFilterChanges(_client, { filter, }) {\n    const strict = 'strict' in filter && filter.strict;\n    const logs = await filter.request({\n        method: 'eth_getFilterChanges',\n        params: [filter.id],\n    });\n    if (typeof logs[0] === 'string')\n        return logs;\n    const formattedLogs = logs.map((log) => formatLog(log));\n    if (!('abi' in filter) || !filter.abi)\n        return formattedLogs;\n    return parseEventLogs({\n        abi: filter.abi,\n        logs: formattedLogs,\n        strict,\n    });\n}\n//# sourceMappingURL=getFilterChanges.js.map","/**\n * Destroys a [`Filter`](https://viem.sh/docs/glossary/types#filter).\n *\n * - Docs: https://viem.sh/docs/actions/public/uninstallFilter\n * - JSON-RPC Methods: [`eth_uninstallFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_uninstallFilter)\n *\n * Destroys a Filter that was created from one of the following Actions:\n * - [`createBlockFilter`](https://viem.sh/docs/actions/public/createBlockFilter)\n * - [`createEventFilter`](https://viem.sh/docs/actions/public/createEventFilter)\n * - [`createPendingTransactionFilter`](https://viem.sh/docs/actions/public/createPendingTransactionFilter)\n *\n * @param client - Client to use\n * @param parameters - {@link UninstallFilterParameters}\n * @returns A boolean indicating if the Filter was successfully uninstalled. {@link UninstallFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter, uninstallFilter } from 'viem/public'\n *\n * const filter = await createPendingTransactionFilter(client)\n * const uninstalled = await uninstallFilter(client, { filter })\n * // true\n */\nexport async function uninstallFilter(_client, { filter }) {\n    return filter.request({\n        method: 'eth_uninstallFilter',\n        params: [filter.id],\n    });\n}\n//# sourceMappingURL=uninstallFilter.js.map","import { BaseError } from './base.js';\nexport class AccountNotFoundError extends BaseError {\n    constructor({ docsPath } = {}) {\n        super([\n            'Could not find an Account to execute with this Action.',\n            'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n        ].join('\\n'), {\n            docsPath,\n            docsSlug: 'account',\n            name: 'AccountNotFoundError',\n        });\n    }\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n    constructor({ docsPath, metaMessages, type, }) {\n        super(`Account type \"${type}\" is not supported.`, {\n            docsPath,\n            metaMessages,\n            name: 'AccountTypeNotSupportedError',\n        });\n    }\n}\n//# sourceMappingURL=account.js.map","import { hexToNumber } from '../encoding/fromHex.js';\nimport { defineFormatter } from './formatter.js';\nimport { formatLog } from './log.js';\nimport { transactionType } from './transaction.js';\nexport const receiptStatuses = {\n    '0x0': 'reverted',\n    '0x1': 'success',\n};\nexport function formatTransactionReceipt(transactionReceipt) {\n    const receipt = {\n        ...transactionReceipt,\n        blockNumber: transactionReceipt.blockNumber\n            ? BigInt(transactionReceipt.blockNumber)\n            : null,\n        contractAddress: transactionReceipt.contractAddress\n            ? transactionReceipt.contractAddress\n            : null,\n        cumulativeGasUsed: transactionReceipt.cumulativeGasUsed\n            ? BigInt(transactionReceipt.cumulativeGasUsed)\n            : null,\n        effectiveGasPrice: transactionReceipt.effectiveGasPrice\n            ? BigInt(transactionReceipt.effectiveGasPrice)\n            : null,\n        gasUsed: transactionReceipt.gasUsed\n            ? BigInt(transactionReceipt.gasUsed)\n            : null,\n        logs: transactionReceipt.logs\n            ? transactionReceipt.logs.map((log) => formatLog(log))\n            : null,\n        to: transactionReceipt.to ? transactionReceipt.to : null,\n        transactionIndex: transactionReceipt.transactionIndex\n            ? hexToNumber(transactionReceipt.transactionIndex)\n            : null,\n        status: transactionReceipt.status\n            ? receiptStatuses[transactionReceipt.status]\n            : null,\n        type: transactionReceipt.type\n            ? transactionType[transactionReceipt.type] || transactionReceipt.type\n            : null,\n    };\n    if (transactionReceipt.blobGasPrice)\n        receipt.blobGasPrice = BigInt(transactionReceipt.blobGasPrice);\n    if (transactionReceipt.blobGasUsed)\n        receipt.blobGasUsed = BigInt(transactionReceipt.blobGasUsed);\n    return receipt;\n}\nexport const defineTransactionReceipt = /*#__PURE__*/ defineFormatter('transactionReceipt', formatTransactionReceipt);\n//# sourceMappingURL=transactionReceipt.js.map","import { parseAccount } from '../../accounts/utils/parseAccount.js';\nimport { BaseError } from '../../errors/base.js';\nimport { AtomicityNotSupportedError, UnsupportedNonOptionalCapabilityError, } from '../../errors/rpc.js';\nimport { encodeFunctionData } from '../../utils/abi/encodeFunctionData.js';\nimport { concat } from '../../utils/data/concat.js';\nimport { hexToBigInt } from '../../utils/encoding/fromHex.js';\nimport { numberToHex } from '../../utils/encoding/toHex.js';\nimport { getTransactionError } from '../../utils/errors/getTransactionError.js';\nimport { sendTransaction } from './sendTransaction.js';\nexport const fallbackMagicIdentifier = '0x5792579257925792579257925792579257925792579257925792579257925792';\nexport const fallbackTransactionErrorMagicIdentifier = numberToHex(0, {\n    size: 32,\n});\n/**\n * Requests the connected wallet to send a batch of calls.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendCalls\n * - JSON-RPC Methods: [`wallet_sendCalls`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Transaction identifier. {@link SendCallsReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendCalls } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const id = await sendCalls(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   calls: [\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: 69420n,\n *     },\n *   ],\n * })\n */\nexport async function sendCalls(client, parameters) {\n    const { account: account_ = client.account, capabilities, chain = client.chain, experimental_fallback, experimental_fallbackDelay = 32, forceAtomic = false, id, version = '2.0.0', } = parameters;\n    const account = account_ ? parseAccount(account_) : null;\n    const calls = parameters.calls.map((call_) => {\n        const call = call_;\n        const data = call.abi\n            ? encodeFunctionData({\n                abi: call.abi,\n                functionName: call.functionName,\n                args: call.args,\n            })\n            : call.data;\n        return {\n            data: call.dataSuffix && data ? concat([data, call.dataSuffix]) : data,\n            to: call.to,\n            value: call.value ? numberToHex(call.value) : undefined,\n        };\n    });\n    try {\n        const response = await client.request({\n            method: 'wallet_sendCalls',\n            params: [\n                {\n                    atomicRequired: forceAtomic,\n                    calls,\n                    capabilities,\n                    chainId: numberToHex(chain.id),\n                    from: account?.address,\n                    id,\n                    version,\n                },\n            ],\n        }, { retryCount: 0 });\n        if (typeof response === 'string')\n            return { id: response };\n        return response;\n    }\n    catch (err) {\n        const error = err;\n        // If the transport does not support EIP-5792, fall back to\n        // `eth_sendTransaction`.\n        if (experimental_fallback &&\n            (error.name === 'MethodNotFoundRpcError' ||\n                error.name === 'MethodNotSupportedRpcError' ||\n                error.name === 'UnknownRpcError' ||\n                error.details\n                    .toLowerCase()\n                    .includes('does not exist / is not available') ||\n                error.details.toLowerCase().includes('missing or invalid. request()') ||\n                error.details\n                    .toLowerCase()\n                    .includes('did not match any variant of untagged enum') ||\n                error.details\n                    .toLowerCase()\n                    .includes('account upgraded to unsupported contract') ||\n                error.details.toLowerCase().includes('eip-7702 not supported') ||\n                error.details.toLowerCase().includes('unsupported wc_ method'))) {\n            if (capabilities) {\n                const hasNonOptionalCapability = Object.values(capabilities).some((capability) => !capability.optional);\n                if (hasNonOptionalCapability) {\n                    const message = 'non-optional `capabilities` are not supported on fallback to `eth_sendTransaction`.';\n                    throw new UnsupportedNonOptionalCapabilityError(new BaseError(message, {\n                        details: message,\n                    }));\n                }\n            }\n            if (forceAtomic && calls.length > 1) {\n                const message = '`forceAtomic` is not supported on fallback to `eth_sendTransaction`.';\n                throw new AtomicityNotSupportedError(new BaseError(message, {\n                    details: message,\n                }));\n            }\n            const promises = [];\n            for (const call of calls) {\n                const promise = sendTransaction(client, {\n                    account,\n                    chain,\n                    data: call.data,\n                    to: call.to,\n                    value: call.value ? hexToBigInt(call.value) : undefined,\n                });\n                promises.push(promise);\n                // Note: some browser wallets require a small delay between transactions\n                // to prevent duplicate JSON-RPC requests.\n                if (experimental_fallbackDelay > 0)\n                    await new Promise((resolve) => setTimeout(resolve, experimental_fallbackDelay));\n            }\n            const results = await Promise.allSettled(promises);\n            if (results.every((r) => r.status === 'rejected'))\n                throw results[0].reason;\n            const hashes = results.map((result) => {\n                if (result.status === 'fulfilled')\n                    return result.value;\n                return fallbackTransactionErrorMagicIdentifier;\n            });\n            return {\n                id: concat([\n                    ...hashes,\n                    numberToHex(chain.id, { size: 32 }),\n                    fallbackMagicIdentifier,\n                ]),\n            };\n        }\n        throw getTransactionError(err, {\n            ...parameters,\n            account,\n            chain: parameters.chain,\n        });\n    }\n}\n//# sourceMappingURL=sendCalls.js.map","import { BaseError } from '../../errors/base.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { withResolvers } from '../../utils/promise/withResolvers.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { getCallsStatus, } from './getCallsStatus.js';\n/**\n * Waits for the status & receipts of a call bundle that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/waitForCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForCallsStatusParameters}\n * @returns Status & receipts of the call bundle. {@link WaitForCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const { receipts, status } = await waitForCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function waitForCallsStatus(client, parameters) {\n    const { id, pollingInterval = client.pollingInterval, status = ({ statusCode }) => statusCode >= 200, timeout = 60_000, } = parameters;\n    const observerId = stringify(['waitForCallsStatus', client.uid, id]);\n    const { promise, resolve, reject } = withResolvers();\n    let timer = undefined;\n    const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n        const unpoll = poll(async () => {\n            const done = (fn) => {\n                clearTimeout(timer);\n                unpoll();\n                fn();\n                unobserve();\n            };\n            try {\n                const result = await getCallsStatus(client, { id });\n                if (!status(result))\n                    return;\n                done(() => emit.resolve(result));\n            }\n            catch (error) {\n                done(() => emit.reject(error));\n            }\n        }, {\n            interval: pollingInterval,\n            emitOnBegin: true,\n        });\n        return unpoll;\n    });\n    timer = timeout\n        ? setTimeout(() => {\n            unobserve();\n            clearTimeout(timer);\n            reject(new WaitForCallsStatusTimeoutError({ id }));\n        }, timeout)\n        : undefined;\n    return await promise;\n}\nexport class WaitForCallsStatusTimeoutError extends BaseError {\n    constructor({ id }) {\n        super(`Timed out while waiting for call bundle with id \"${id}\" to be confirmed.`, { name: 'WaitForCallsStatusTimeoutError' });\n    }\n}\n//# sourceMappingURL=waitForCallsStatus.js.map","import { sliceHex } from '../../utils/data/slice.js';\nimport { trim } from '../../utils/data/trim.js';\nimport { hexToBigInt, hexToNumber } from '../../utils/encoding/fromHex.js';\nimport { receiptStatuses } from '../../utils/formatters/transactionReceipt.js';\nimport { fallbackMagicIdentifier, fallbackTransactionErrorMagicIdentifier, } from './sendCalls.js';\n/**\n * Returns the status of a call batch that was sent via `sendCalls`.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getCallsStatus\n * - JSON-RPC Methods: [`wallet_getCallsStatus`](https://eips.ethereum.org/EIPS/eip-5792)\n *\n * @param client - Client to use\n * @returns Status of the calls. {@link GetCallsStatusReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCallsStatus } from 'viem/actions'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const { receipts, status } = await getCallsStatus(client, { id: '0xdeadbeef' })\n */\nexport async function getCallsStatus(client, parameters) {\n    async function getStatus(id) {\n        const isTransactions = id.endsWith(fallbackMagicIdentifier.slice(2));\n        if (isTransactions) {\n            const chainId = trim(sliceHex(id, -64, -32));\n            const hashes = sliceHex(id, 0, -64)\n                .slice(2)\n                .match(/.{1,64}/g);\n            const receipts = await Promise.all(hashes.map((hash) => fallbackTransactionErrorMagicIdentifier.slice(2) !== hash\n                ? client.request({\n                    method: 'eth_getTransactionReceipt',\n                    params: [`0x${hash}`],\n                }, { dedupe: true })\n                : undefined));\n            const status = (() => {\n                if (receipts.some((r) => r === null))\n                    return 100; // pending\n                if (receipts.every((r) => r?.status === '0x1'))\n                    return 200; // success\n                if (receipts.every((r) => r?.status === '0x0'))\n                    return 500; // complete failure\n                return 600; // partial failure\n            })();\n            return {\n                atomic: false,\n                chainId: hexToNumber(chainId),\n                receipts: receipts.filter(Boolean),\n                status,\n                version: '2.0.0',\n            };\n        }\n        return client.request({\n            method: 'wallet_getCallsStatus',\n            params: [id],\n        });\n    }\n    const { atomic = false, chainId, receipts, version = '2.0.0', ...response } = await getStatus(parameters.id);\n    const [status, statusCode] = (() => {\n        const statusCode = response.status;\n        if (statusCode >= 100 && statusCode < 200)\n            return ['pending', statusCode];\n        if (statusCode >= 200 && statusCode < 300)\n            return ['success', statusCode];\n        if (statusCode >= 300 && statusCode < 700)\n            return ['failure', statusCode];\n        // @ts-expect-error: for backwards compatibility\n        if (statusCode === 'CONFIRMED')\n            return ['success', 200];\n        // @ts-expect-error: for backwards compatibility\n        if (statusCode === 'PENDING')\n            return ['pending', 100];\n        return [undefined, statusCode];\n    })();\n    return {\n        ...response,\n        atomic,\n        // @ts-expect-error: for backwards compatibility\n        chainId: chainId ? hexToNumber(chainId) : undefined,\n        receipts: receipts?.map((receipt) => ({\n            ...receipt,\n            blockNumber: hexToBigInt(receipt.blockNumber),\n            gasUsed: hexToBigInt(receipt.gasUsed),\n            status: receiptStatuses[receipt.status],\n        })) ?? [],\n        statusCode,\n        status,\n        version,\n    };\n}\n//# sourceMappingURL=getCallsStatus.js.map","const size = 256;\nlet index = size;\nlet buffer;\nexport function uid(length = 11) {\n    if (!buffer || index + length > size * 2) {\n        buffer = '';\n        index = 0;\n        for (let i = 0; i < size; i++) {\n            buffer += ((256 + Math.random() * 256) | 0).toString(16).substring(1);\n        }\n    }\n    return buffer.substring(index, index++ + length);\n}\n//# sourceMappingURL=uid.js.map","import { parseAccount, } from '../accounts/utils/parseAccount.js';\nimport { uid } from '../utils/uid.js';\nexport function createClient(parameters) {\n    const { batch, chain, ccipRead, key = 'base', name = 'Base Client', type = 'base', } = parameters;\n    const blockTime = chain?.blockTime ?? 12_000;\n    const defaultPollingInterval = Math.min(Math.max(Math.floor(blockTime / 2), 500), 4_000);\n    const pollingInterval = parameters.pollingInterval ?? defaultPollingInterval;\n    const cacheTime = parameters.cacheTime ?? pollingInterval;\n    const account = parameters.account\n        ? parseAccount(parameters.account)\n        : undefined;\n    const { config, request, value } = parameters.transport({\n        chain,\n        pollingInterval,\n    });\n    const transport = { ...config, ...value };\n    const client = {\n        account,\n        batch,\n        cacheTime,\n        ccipRead,\n        chain,\n        key,\n        name,\n        pollingInterval,\n        request,\n        transport,\n        type,\n        uid: uid(),\n    };\n    function extend(base) {\n        return (extendFn) => {\n            const extended = extendFn(base);\n            for (const key in client)\n                delete extended[key];\n            const combined = { ...base, ...extended };\n            return Object.assign(combined, { extend: extend(combined) });\n        };\n    }\n    return Object.assign(client, { extend: extend(client) });\n}\n/**\n * Defines a typed JSON-RPC schema for the client.\n * Note: This is a runtime noop function.\n */\nexport function rpcSchema() {\n    return null;\n}\n//# sourceMappingURL=createClient.js.map","import { LruMap } from '../lru.js';\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new LruMap(8192);\n/** Deduplicates in-flight promises. */\nexport function withDedupe(fn, { enabled = true, id }) {\n    if (!enabled || !id)\n        return fn();\n    if (promiseCache.get(id))\n        return promiseCache.get(id);\n    const promise = fn().finally(() => promiseCache.delete(id));\n    promiseCache.set(id, promise);\n    return promise;\n}\n//# sourceMappingURL=withDedupe.js.map","import { wait } from '../wait.js';\nexport function withRetry(fn, { delay: delay_ = 100, retryCount = 2, shouldRetry = () => true, } = {}) {\n    return new Promise((resolve, reject) => {\n        const attemptRetry = async ({ count = 0 } = {}) => {\n            const retry = async ({ error }) => {\n                const delay = typeof delay_ === 'function' ? delay_({ count, error }) : delay_;\n                if (delay)\n                    await wait(delay);\n                attemptRetry({ count: count + 1 });\n            };\n            try {\n                const data = await fn();\n                resolve(data);\n            }\n            catch (err) {\n                if (count < retryCount &&\n                    (await shouldRetry({ count, error: err })))\n                    return retry({ error: err });\n                reject(err);\n            }\n        };\n        attemptRetry();\n    });\n}\n//# sourceMappingURL=withRetry.js.map","import { BaseError } from '../errors/base.js';\nimport { HttpRequestError, } from '../errors/request.js';\nimport { AtomicReadyWalletRejectedUpgradeError, AtomicityNotSupportedError, BundleTooLargeError, ChainDisconnectedError, DuplicateIdError, InternalRpcError, InvalidInputRpcError, InvalidParamsRpcError, InvalidRequestRpcError, JsonRpcVersionUnsupportedError, LimitExceededRpcError, MethodNotFoundRpcError, MethodNotSupportedRpcError, ParseRpcError, ProviderDisconnectedError, ResourceNotFoundRpcError, ResourceUnavailableRpcError, SwitchChainError, TransactionRejectedRpcError, UnauthorizedProviderError, UnknownBundleIdError, UnknownRpcError, UnsupportedChainIdError, UnsupportedNonOptionalCapabilityError, UnsupportedProviderMethodError, UserRejectedRequestError, } from '../errors/rpc.js';\nimport { stringToHex } from './encoding/toHex.js';\nimport { withDedupe } from './promise/withDedupe.js';\nimport { withRetry } from './promise/withRetry.js';\nimport { stringify } from './stringify.js';\nexport function buildRequest(request, options = {}) {\n    return async (args, overrideOptions = {}) => {\n        const { dedupe = false, methods, retryDelay = 150, retryCount = 3, uid, } = {\n            ...options,\n            ...overrideOptions,\n        };\n        const { method } = args;\n        if (methods?.exclude?.includes(method))\n            throw new MethodNotSupportedRpcError(new Error('method not supported'), {\n                method,\n            });\n        if (methods?.include && !methods.include.includes(method))\n            throw new MethodNotSupportedRpcError(new Error('method not supported'), {\n                method,\n            });\n        const requestId = dedupe\n            ? stringToHex(`${uid}.${stringify(args)}`)\n            : undefined;\n        return withDedupe(() => withRetry(async () => {\n            try {\n                return await request(args);\n            }\n            catch (err_) {\n                const err = err_;\n                switch (err.code) {\n                    // -32700\n                    case ParseRpcError.code:\n                        throw new ParseRpcError(err);\n                    // -32600\n                    case InvalidRequestRpcError.code:\n                        throw new InvalidRequestRpcError(err);\n                    // -32601\n                    case MethodNotFoundRpcError.code:\n                        throw new MethodNotFoundRpcError(err, { method: args.method });\n                    // -32602\n                    case InvalidParamsRpcError.code:\n                        throw new InvalidParamsRpcError(err);\n                    // -32603\n                    case InternalRpcError.code:\n                        throw new InternalRpcError(err);\n                    // -32000\n                    case InvalidInputRpcError.code:\n                        throw new InvalidInputRpcError(err);\n                    // -32001\n                    case ResourceNotFoundRpcError.code:\n                        throw new ResourceNotFoundRpcError(err);\n                    // -32002\n                    case ResourceUnavailableRpcError.code:\n                        throw new ResourceUnavailableRpcError(err);\n                    // -32003\n                    case TransactionRejectedRpcError.code:\n                        throw new TransactionRejectedRpcError(err);\n                    // -32004\n                    case MethodNotSupportedRpcError.code:\n                        throw new MethodNotSupportedRpcError(err, {\n                            method: args.method,\n                        });\n                    // -32005\n                    case LimitExceededRpcError.code:\n                        throw new LimitExceededRpcError(err);\n                    // -32006\n                    case JsonRpcVersionUnsupportedError.code:\n                        throw new JsonRpcVersionUnsupportedError(err);\n                    // 4001\n                    case UserRejectedRequestError.code:\n                        throw new UserRejectedRequestError(err);\n                    // 4100\n                    case UnauthorizedProviderError.code:\n                        throw new UnauthorizedProviderError(err);\n                    // 4200\n                    case UnsupportedProviderMethodError.code:\n                        throw new UnsupportedProviderMethodError(err);\n                    // 4900\n                    case ProviderDisconnectedError.code:\n                        throw new ProviderDisconnectedError(err);\n                    // 4901\n                    case ChainDisconnectedError.code:\n                        throw new ChainDisconnectedError(err);\n                    // 4902\n                    case SwitchChainError.code:\n                        throw new SwitchChainError(err);\n                    // 5700\n                    case UnsupportedNonOptionalCapabilityError.code:\n                        throw new UnsupportedNonOptionalCapabilityError(err);\n                    // 5710\n                    case UnsupportedChainIdError.code:\n                        throw new UnsupportedChainIdError(err);\n                    // 5720\n                    case DuplicateIdError.code:\n                        throw new DuplicateIdError(err);\n                    // 5730\n                    case UnknownBundleIdError.code:\n                        throw new UnknownBundleIdError(err);\n                    // 5740\n                    case BundleTooLargeError.code:\n                        throw new BundleTooLargeError(err);\n                    // 5750\n                    case AtomicReadyWalletRejectedUpgradeError.code:\n                        throw new AtomicReadyWalletRejectedUpgradeError(err);\n                    // 5760\n                    case AtomicityNotSupportedError.code:\n                        throw new AtomicityNotSupportedError(err);\n                    // CAIP-25: User Rejected Error\n                    // https://docs.walletconnect.com/2.0/specs/clients/sign/error-codes#rejected-caip-25\n                    case 5000:\n                        throw new UserRejectedRequestError(err);\n                    default:\n                        if (err_ instanceof BaseError)\n                            throw err_;\n                        throw new UnknownRpcError(err);\n                }\n            }\n        }, {\n            delay: ({ count, error }) => {\n                // If we find a Retry-After header, let's retry after the given time.\n                if (error && error instanceof HttpRequestError) {\n                    const retryAfter = error?.headers?.get('Retry-After');\n                    if (retryAfter?.match(/\\d/))\n                        return Number.parseInt(retryAfter) * 1000;\n                }\n                // Otherwise, let's retry with an exponential backoff.\n                return ~~(1 << count) * retryDelay;\n            },\n            retryCount,\n            shouldRetry: ({ error }) => shouldRetry(error),\n        }), { enabled: dedupe, id: requestId });\n    };\n}\n/** @internal */\nexport function shouldRetry(error) {\n    if ('code' in error && typeof error.code === 'number') {\n        if (error.code === -1)\n            return true; // Unknown error\n        if (error.code === LimitExceededRpcError.code)\n            return true;\n        if (error.code === InternalRpcError.code)\n            return true;\n        return false;\n    }\n    if (error instanceof HttpRequestError && error.status) {\n        // Forbidden\n        if (error.status === 403)\n            return true;\n        // Request Timeout\n        if (error.status === 408)\n            return true;\n        // Request Entity Too Large\n        if (error.status === 413)\n            return true;\n        // Too Many Requests\n        if (error.status === 429)\n            return true;\n        // Internal Server Error\n        if (error.status === 500)\n            return true;\n        // Bad Gateway\n        if (error.status === 502)\n            return true;\n        // Service Unavailable\n        if (error.status === 503)\n            return true;\n        // Gateway Timeout\n        if (error.status === 504)\n            return true;\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=buildRequest.js.map","import { BaseError } from './base.js';\nexport class UrlRequiredError extends BaseError {\n    constructor() {\n        super('No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.', {\n            docsPath: '/docs/clients/intro',\n            name: 'UrlRequiredError',\n        });\n    }\n}\n//# sourceMappingURL=transport.js.map","function createIdStore() {\n    return {\n        current: 0,\n        take() {\n            return this.current++;\n        },\n        reset() {\n            this.current = 0;\n        },\n    };\n}\nexport const idCache = /*#__PURE__*/ createIdStore();\n//# sourceMappingURL=id.js.map","import { HttpRequestError, TimeoutError, } from '../../errors/request.js';\nimport { withTimeout, } from '../promise/withTimeout.js';\nimport { stringify } from '../stringify.js';\nimport { idCache } from './id.js';\nexport function getHttpRpcClient(url, options = {}) {\n    return {\n        async request(params) {\n            const { body, onRequest = options.onRequest, onResponse = options.onResponse, timeout = options.timeout ?? 10_000, } = params;\n            const fetchOptions = {\n                ...(options.fetchOptions ?? {}),\n                ...(params.fetchOptions ?? {}),\n            };\n            const { headers, method, signal: signal_ } = fetchOptions;\n            try {\n                const response = await withTimeout(async ({ signal }) => {\n                    const init = {\n                        ...fetchOptions,\n                        body: Array.isArray(body)\n                            ? stringify(body.map((body) => ({\n                                jsonrpc: '2.0',\n                                id: body.id ?? idCache.take(),\n                                ...body,\n                            })))\n                            : stringify({\n                                jsonrpc: '2.0',\n                                id: body.id ?? idCache.take(),\n                                ...body,\n                            }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            ...headers,\n                        },\n                        method: method || 'POST',\n                        signal: signal_ || (timeout > 0 ? signal : null),\n                    };\n                    const request = new Request(url, init);\n                    const args = (await onRequest?.(request, init)) ?? { ...init, url };\n                    const response = await fetch(args.url ?? url, args);\n                    return response;\n                }, {\n                    errorInstance: new TimeoutError({ body, url }),\n                    timeout,\n                    signal: true,\n                });\n                if (onResponse)\n                    await onResponse(response);\n                let data;\n                if (response.headers.get('Content-Type')?.startsWith('application/json'))\n                    data = await response.json();\n                else {\n                    data = await response.text();\n                    try {\n                        data = JSON.parse(data || '{}');\n                    }\n                    catch (err) {\n                        if (response.ok)\n                            throw err;\n                        data = { error: data };\n                    }\n                }\n                if (!response.ok) {\n                    throw new HttpRequestError({\n                        body,\n                        details: stringify(data.error) || response.statusText,\n                        headers: response.headers,\n                        status: response.status,\n                        url,\n                    });\n                }\n                return data;\n            }\n            catch (err) {\n                if (err instanceof HttpRequestError)\n                    throw err;\n                if (err instanceof TimeoutError)\n                    throw err;\n                throw new HttpRequestError({\n                    body,\n                    cause: err,\n                    url,\n                });\n            }\n        },\n    };\n}\n//# sourceMappingURL=http.js.map","export function withTimeout(fn, { errorInstance = new Error('timed out'), timeout, signal, }) {\n    return new Promise((resolve, reject) => {\n        ;\n        (async () => {\n            let timeoutId;\n            try {\n                const controller = new AbortController();\n                if (timeout > 0) {\n                    timeoutId = setTimeout(() => {\n                        if (signal) {\n                            controller.abort();\n                        }\n                        else {\n                            reject(errorInstance);\n                        }\n                    }, timeout); // need to cast because bun globals.d.ts overrides @types/node\n                }\n                resolve(await fn({ signal: controller?.signal || null }));\n            }\n            catch (err) {\n                if (err?.name === 'AbortError')\n                    reject(errorInstance);\n                reject(err);\n            }\n            finally {\n                clearTimeout(timeoutId);\n            }\n        })();\n    });\n}\n//# sourceMappingURL=withTimeout.js.map","import { RpcRequestError } from '../../errors/request.js';\nimport { UrlRequiredError, } from '../../errors/transport.js';\nimport { createBatchScheduler } from '../../utils/promise/createBatchScheduler.js';\nimport { getHttpRpcClient, } from '../../utils/rpc/http.js';\nimport { createTransport, } from './createTransport.js';\n/**\n * @description Creates a HTTP transport that connects to a JSON-RPC API.\n */\nexport function http(\n/** URL of the JSON-RPC API. Defaults to the chain's public RPC URL. */\nurl, config = {}) {\n    const { batch, fetchOptions, key = 'http', methods, name = 'HTTP JSON-RPC', onFetchRequest, onFetchResponse, retryDelay, raw, } = config;\n    return ({ chain, retryCount: retryCount_, timeout: timeout_ }) => {\n        const { batchSize = 1000, wait = 0 } = typeof batch === 'object' ? batch : {};\n        const retryCount = config.retryCount ?? retryCount_;\n        const timeout = timeout_ ?? config.timeout ?? 10_000;\n        const url_ = url || chain?.rpcUrls.default.http[0];\n        if (!url_)\n            throw new UrlRequiredError();\n        const rpcClient = getHttpRpcClient(url_, {\n            fetchOptions,\n            onRequest: onFetchRequest,\n            onResponse: onFetchResponse,\n            timeout,\n        });\n        return createTransport({\n            key,\n            methods,\n            name,\n            async request({ method, params }) {\n                const body = { method, params };\n                const { schedule } = createBatchScheduler({\n                    id: url_,\n                    wait,\n                    shouldSplitBatch(requests) {\n                        return requests.length > batchSize;\n                    },\n                    fn: (body) => rpcClient.request({\n                        body,\n                    }),\n                    sort: (a, b) => a.id - b.id,\n                });\n                const fn = async (body) => batch\n                    ? schedule(body)\n                    : [\n                        await rpcClient.request({\n                            body,\n                        }),\n                    ];\n                const [{ error, result }] = await fn(body);\n                if (raw)\n                    return { error, result };\n                if (error)\n                    throw new RpcRequestError({\n                        body,\n                        error,\n                        url: url_,\n                    });\n                return result;\n            },\n            retryCount,\n            retryDelay,\n            timeout,\n            type: 'http',\n        }, {\n            fetchOptions,\n            url: url_,\n        });\n    };\n}\n//# sourceMappingURL=http.js.map","import { buildRequest } from '../../utils/buildRequest.js';\nimport { uid as uid_ } from '../../utils/uid.js';\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport({ key, methods, name, request, retryCount = 3, retryDelay = 150, timeout, type, }, value) {\n    const uid = uid_();\n    return {\n        config: {\n            key,\n            methods,\n            name,\n            request,\n            retryCount,\n            retryDelay,\n            timeout,\n            type,\n        },\n        request: buildRequest(request, { methods, retryCount, retryDelay, uid }),\n        value,\n    };\n}\n//# sourceMappingURL=createTransport.js.map","import { panicReasons } from '../../constants/solidity.js';\nimport { BaseError } from '../../errors/base.js';\nimport { ContractFunctionRevertedError } from '../../errors/contract.js';\n/*\n * @description Checks if error is a valid null result UniversalResolver error\n */\nexport function isNullUniversalResolverError(err, callType) {\n    if (!(err instanceof BaseError))\n        return false;\n    const cause = err.walk((e) => e instanceof ContractFunctionRevertedError);\n    if (!(cause instanceof ContractFunctionRevertedError))\n        return false;\n    if (cause.data?.errorName === 'ResolverNotFound')\n        return true;\n    if (cause.data?.errorName === 'ResolverWildcardNotSupported')\n        return true;\n    if (cause.data?.errorName === 'ResolverNotContract')\n        return true;\n    if (cause.data?.errorName === 'ResolverError')\n        return true;\n    if (cause.data?.errorName === 'HttpError')\n        return true;\n    // Backwards compatibility for older UniversalResolver contracts\n    if (cause.reason?.includes('Wildcard on non-extended resolvers is not supported'))\n        return true;\n    // No primary name set for address.\n    if (callType === 'reverse' && cause.reason === panicReasons[50])\n        return true;\n    return false;\n}\n//# sourceMappingURL=errors.js.map","import { AbiFunctionSignatureNotFoundError } from '../../errors/abi.js';\nimport { slice } from '../data/slice.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nexport function decodeFunctionData(parameters) {\n    const { abi, data } = parameters;\n    const signature = slice(data, 0, 4);\n    const description = abi.find((x) => x.type === 'function' &&\n        signature === toFunctionSelector(formatAbiItem(x)));\n    if (!description)\n        throw new AbiFunctionSignatureNotFoundError(signature, {\n            docsPath: '/docs/contract/decodeFunctionData',\n        });\n    return {\n        functionName: description.name,\n        args: ('inputs' in description &&\n            description.inputs &&\n            description.inputs.length > 0\n            ? decodeAbiParameters(description.inputs, slice(data, 4))\n            : undefined),\n    };\n}\n//# sourceMappingURL=decodeFunctionData.js.map","import { AbiErrorInputsNotFoundError, AbiErrorNotFoundError, } from '../../errors/abi.js';\nimport { concatHex } from '../data/concat.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeErrorResult';\nexport function encodeErrorResult(parameters) {\n    const { abi, errorName, args } = parameters;\n    let abiItem = abi[0];\n    if (errorName) {\n        const item = getAbiItem({ abi, args, name: errorName });\n        if (!item)\n            throw new AbiErrorNotFoundError(errorName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'error')\n        throw new AbiErrorNotFoundError(undefined, { docsPath });\n    const definition = formatAbiItem(abiItem);\n    const signature = toFunctionSelector(definition);\n    let data = '0x';\n    if (args && args.length > 0) {\n        if (!abiItem.inputs)\n            throw new AbiErrorInputsNotFoundError(abiItem.name, { docsPath });\n        data = encodeAbiParameters(abiItem.inputs, args);\n    }\n    return concatHex([signature, data]);\n}\n//# sourceMappingURL=encodeErrorResult.js.map","import { AbiFunctionNotFoundError, AbiFunctionOutputsNotFoundError, InvalidArrayError, } from '../../errors/abi.js';\nimport { encodeAbiParameters, } from './encodeAbiParameters.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeFunctionResult';\nexport function encodeFunctionResult(parameters) {\n    const { abi, functionName, result } = parameters;\n    let abiItem = abi[0];\n    if (functionName) {\n        const item = getAbiItem({ abi, name: functionName });\n        if (!item)\n            throw new AbiFunctionNotFoundError(functionName, { docsPath });\n        abiItem = item;\n    }\n    if (abiItem.type !== 'function')\n        throw new AbiFunctionNotFoundError(undefined, { docsPath });\n    if (!abiItem.outputs)\n        throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath });\n    const values = (() => {\n        if (abiItem.outputs.length === 0)\n            return [];\n        if (abiItem.outputs.length === 1)\n            return [result];\n        if (Array.isArray(result))\n            return result;\n        throw new InvalidArrayError(result);\n    })();\n    return encodeAbiParameters(abiItem.outputs, values);\n}\n//# sourceMappingURL=encodeFunctionResult.js.map","import { batchGatewayAbi } from '../../constants/abis.js';\nimport { solidityError } from '../../constants/solidity.js';\nimport { decodeFunctionData } from '../abi/decodeFunctionData.js';\nimport { encodeErrorResult } from '../abi/encodeErrorResult.js';\nimport { encodeFunctionResult } from '../abi/encodeFunctionResult.js';\nexport const localBatchGatewayUrl = 'x-batch-gateway:true';\nexport async function localBatchGatewayRequest(parameters) {\n    const { data, ccipRequest } = parameters;\n    const { args: [queries], } = decodeFunctionData({ abi: batchGatewayAbi, data });\n    const failures = [];\n    const responses = [];\n    await Promise.all(queries.map(async (query, i) => {\n        try {\n            responses[i] = query.urls.includes(localBatchGatewayUrl)\n                ? await localBatchGatewayRequest({ data: query.data, ccipRequest })\n                : await ccipRequest(query);\n            failures[i] = false;\n        }\n        catch (err) {\n            failures[i] = true;\n            responses[i] = encodeError(err);\n        }\n    }));\n    return encodeFunctionResult({\n        abi: batchGatewayAbi,\n        functionName: 'query',\n        result: [failures, responses],\n    });\n}\nfunction encodeError(error) {\n    if (error.name === 'HttpRequestError' && error.status)\n        return encodeErrorResult({\n            abi: batchGatewayAbi,\n            errorName: 'HttpError',\n            args: [error.status, error.shortMessage],\n        });\n    return encodeErrorResult({\n        abi: [solidityError],\n        errorName: 'Error',\n        args: ['shortMessage' in error ? error.shortMessage : error.message],\n    });\n}\n//# sourceMappingURL=localBatchGatewayRequest.js.map","import { isHex } from '../data/isHex.js';\nexport function encodedLabelToLabelhash(label) {\n    if (label.length !== 66)\n        return null;\n    if (label.indexOf('[') !== 0)\n        return null;\n    if (label.indexOf(']') !== 65)\n        return null;\n    const hash = `0x${label.slice(1, 65)}`;\n    if (!isHex(hash))\n        return null;\n    return hash;\n}\n//# sourceMappingURL=encodedLabelToLabelhash.js.map","import { concat } from '../data/concat.js';\nimport { stringToBytes, toBytes, } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { encodedLabelToLabelhash, } from './encodedLabelToLabelhash.js';\n/**\n * @description Hashes ENS name\n *\n * - Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `namehash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * namehash('wevm.eth')\n * '0x08c85f2f4059e930c45a6aeff9dcd3bd95dc3c5c1cddef6a0626b31152248560'\n *\n * @link https://eips.ethereum.org/EIPS/eip-137\n */\nexport function namehash(name) {\n    let result = new Uint8Array(32).fill(0);\n    if (!name)\n        return bytesToHex(result);\n    const labels = name.split('.');\n    // Iterate in reverse order building up hash\n    for (let i = labels.length - 1; i >= 0; i -= 1) {\n        const hashFromEncodedLabel = encodedLabelToLabelhash(labels[i]);\n        const hashed = hashFromEncodedLabel\n            ? toBytes(hashFromEncodedLabel)\n            : keccak256(stringToBytes(labels[i]), 'bytes');\n        result = keccak256(concat([result, hashed]), 'bytes');\n    }\n    return bytesToHex(result);\n}\n//# sourceMappingURL=namehash.js.map","export function encodeLabelhash(hash) {\n    return `[${hash.slice(2)}]`;\n}\n//# sourceMappingURL=encodeLabelhash.js.map","import { stringToBytes, } from '../encoding/toBytes.js';\nimport { bytesToHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { encodedLabelToLabelhash, } from './encodedLabelToLabelhash.js';\n/**\n * @description Hashes ENS label\n *\n * - Since ENS labels prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS labels](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `labelhash`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @example\n * labelhash('eth')\n * '0x4f5b812789fc606be1b3b16908db13fc7a9adf7ca72641f84d75b47069d3d7f0'\n */\nexport function labelhash(label) {\n    const result = new Uint8Array(32).fill(0);\n    if (!label)\n        return bytesToHex(result);\n    return encodedLabelToLabelhash(label) || keccak256(stringToBytes(label));\n}\n//# sourceMappingURL=labelhash.js.map","import { stringToBytes, } from '../encoding/toBytes.js';\nimport { encodeLabelhash, } from './encodeLabelhash.js';\nimport { labelhash } from './labelhash.js';\n/*\n * @description Encodes a DNS packet into a ByteArray containing a UDP payload.\n *\n * @example\n * packetToBytes('awkweb.eth')\n * '0x0661776b7765620365746800'\n *\n * @see https://docs.ens.domains/resolution/names#dns\n *\n */\nexport function packetToBytes(packet) {\n    // strip leading and trailing `.`\n    const value = packet.replace(/^\\.|\\.$/gm, '');\n    if (value.length === 0)\n        return new Uint8Array(1);\n    const bytes = new Uint8Array(stringToBytes(value).byteLength + 2);\n    let offset = 0;\n    const list = value.split('.');\n    for (let i = 0; i < list.length; i++) {\n        let encoded = stringToBytes(list[i]);\n        // if the length is > 255, make the encoded label value a labelhash\n        // this is compatible with the universal resolver\n        if (encoded.byteLength > 255)\n            encoded = stringToBytes(encodeLabelhash(labelhash(list[i])));\n        bytes[offset] = encoded.length;\n        bytes.set(encoded, offset + 1);\n        offset += encoded.length + 1;\n    }\n    if (bytes.byteLength !== offset + 1)\n        return bytes.slice(0, offset + 1);\n    return bytes;\n}\n//# sourceMappingURL=packetToBytes.js.map","import { BaseError } from './base.js';\nexport class EnsAvatarInvalidMetadataError extends BaseError {\n    constructor({ data }) {\n        super('Unable to extract image from metadata. The metadata may be malformed or invalid.', {\n            metaMessages: [\n                '- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.',\n                '',\n                `Provided data: ${JSON.stringify(data)}`,\n            ],\n            name: 'EnsAvatarInvalidMetadataError',\n        });\n    }\n}\nexport class EnsAvatarInvalidNftUriError extends BaseError {\n    constructor({ reason }) {\n        super(`ENS NFT avatar URI is invalid. ${reason}`, {\n            name: 'EnsAvatarInvalidNftUriError',\n        });\n    }\n}\nexport class EnsAvatarUriResolutionError extends BaseError {\n    constructor({ uri }) {\n        super(`Unable to resolve ENS avatar URI \"${uri}\". The URI may be malformed, invalid, or does not respond with a valid image.`, { name: 'EnsAvatarUriResolutionError' });\n    }\n}\nexport class EnsAvatarUnsupportedNamespaceError extends BaseError {\n    constructor({ namespace }) {\n        super(`ENS NFT avatar namespace \"${namespace}\" is not supported. Must be \"erc721\" or \"erc1155\".`, { name: 'EnsAvatarUnsupportedNamespaceError' });\n    }\n}\n//# sourceMappingURL=ens.js.map","import { readContract, } from '../../../actions/public/readContract.js';\nimport { EnsAvatarInvalidMetadataError, EnsAvatarInvalidNftUriError, EnsAvatarUnsupportedNamespaceError, EnsAvatarUriResolutionError, } from '../../../errors/ens.js';\nconst networkRegex = /(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/;\nconst ipfsHashRegex = /^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$/;\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/;\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;\n/** @internal */\nexport async function isImageUri(uri) {\n    try {\n        const res = await fetch(uri, { method: 'HEAD' });\n        // retrieve content type header to check if content is image\n        if (res.status === 200) {\n            const contentType = res.headers.get('content-type');\n            return contentType?.startsWith('image/');\n        }\n        return false;\n    }\n    catch (error) {\n        // if error is not cors related then fail\n        if (typeof error === 'object' && typeof error.response !== 'undefined') {\n            return false;\n        }\n        // fail in NodeJS, since the error is not cors but any other network issue\n        // biome-ignore lint/suspicious/noPrototypeBuiltins:\n        if (!globalThis.hasOwnProperty('Image'))\n            return false;\n        // in case of cors, use image api to validate if given url is an actual image\n        return new Promise((resolve) => {\n            const img = new Image();\n            img.onload = () => {\n                resolve(true);\n            };\n            img.onerror = () => {\n                resolve(false);\n            };\n            img.src = uri;\n        });\n    }\n}\n/** @internal */\nexport function getGateway(custom, defaultGateway) {\n    if (!custom)\n        return defaultGateway;\n    if (custom.endsWith('/'))\n        return custom.slice(0, -1);\n    return custom;\n}\nexport function resolveAvatarUri({ uri, gatewayUrls, }) {\n    const isEncoded = base64Regex.test(uri);\n    if (isEncoded)\n        return { uri, isOnChain: true, isEncoded };\n    const ipfsGateway = getGateway(gatewayUrls?.ipfs, 'https://ipfs.io');\n    const arweaveGateway = getGateway(gatewayUrls?.arweave, 'https://arweave.net');\n    const networkRegexMatch = uri.match(networkRegex);\n    const { protocol, subpath, target, subtarget = '', } = networkRegexMatch?.groups || {};\n    const isIPNS = protocol === 'ipns:/' || subpath === 'ipns/';\n    const isIPFS = protocol === 'ipfs:/' || subpath === 'ipfs/' || ipfsHashRegex.test(uri);\n    if (uri.startsWith('http') && !isIPNS && !isIPFS) {\n        let replacedUri = uri;\n        if (gatewayUrls?.arweave)\n            replacedUri = uri.replace(/https:\\/\\/arweave.net/g, gatewayUrls?.arweave);\n        return { uri: replacedUri, isOnChain: false, isEncoded: false };\n    }\n    if ((isIPNS || isIPFS) && target) {\n        return {\n            uri: `${ipfsGateway}/${isIPNS ? 'ipns' : 'ipfs'}/${target}${subtarget}`,\n            isOnChain: false,\n            isEncoded: false,\n        };\n    }\n    if (protocol === 'ar:/' && target) {\n        return {\n            uri: `${arweaveGateway}/${target}${subtarget || ''}`,\n            isOnChain: false,\n            isEncoded: false,\n        };\n    }\n    let parsedUri = uri.replace(dataURIRegex, '');\n    if (parsedUri.startsWith('<svg')) {\n        // if svg, base64 encode\n        parsedUri = `data:image/svg+xml;base64,${btoa(parsedUri)}`;\n    }\n    if (parsedUri.startsWith('data:') || parsedUri.startsWith('{')) {\n        return {\n            uri: parsedUri,\n            isOnChain: true,\n            isEncoded: false,\n        };\n    }\n    throw new EnsAvatarUriResolutionError({ uri });\n}\nexport function getJsonImage(data) {\n    // validation check for json data, must include one of theses properties\n    if (typeof data !== 'object' ||\n        (!('image' in data) && !('image_url' in data) && !('image_data' in data))) {\n        throw new EnsAvatarInvalidMetadataError({ data });\n    }\n    return data.image || data.image_url || data.image_data;\n}\nexport async function getMetadataAvatarUri({ gatewayUrls, uri, }) {\n    try {\n        const res = await fetch(uri).then((res) => res.json());\n        const image = await parseAvatarUri({\n            gatewayUrls,\n            uri: getJsonImage(res),\n        });\n        return image;\n    }\n    catch {\n        throw new EnsAvatarUriResolutionError({ uri });\n    }\n}\nexport async function parseAvatarUri({ gatewayUrls, uri, }) {\n    const { uri: resolvedURI, isOnChain } = resolveAvatarUri({ uri, gatewayUrls });\n    if (isOnChain)\n        return resolvedURI;\n    // check if resolvedURI is an image, if it is return the url\n    const isImage = await isImageUri(resolvedURI);\n    if (isImage)\n        return resolvedURI;\n    throw new EnsAvatarUriResolutionError({ uri });\n}\nexport function parseNftUri(uri_) {\n    let uri = uri_;\n    // parse valid nft spec (CAIP-22/CAIP-29)\n    // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\n    if (uri.startsWith('did:nft:')) {\n        // convert DID to CAIP\n        uri = uri.replace('did:nft:', '').replace(/_/g, '/');\n    }\n    const [reference, asset_namespace, tokenID] = uri.split('/');\n    const [eip_namespace, chainID] = reference.split(':');\n    const [erc_namespace, contractAddress] = asset_namespace.split(':');\n    if (!eip_namespace || eip_namespace.toLowerCase() !== 'eip155')\n        throw new EnsAvatarInvalidNftUriError({ reason: 'Only EIP-155 supported' });\n    if (!chainID)\n        throw new EnsAvatarInvalidNftUriError({ reason: 'Chain ID not found' });\n    if (!contractAddress)\n        throw new EnsAvatarInvalidNftUriError({\n            reason: 'Contract address not found',\n        });\n    if (!tokenID)\n        throw new EnsAvatarInvalidNftUriError({ reason: 'Token ID not found' });\n    if (!erc_namespace)\n        throw new EnsAvatarInvalidNftUriError({ reason: 'ERC namespace not found' });\n    return {\n        chainID: Number.parseInt(chainID),\n        namespace: erc_namespace.toLowerCase(),\n        contractAddress: contractAddress,\n        tokenID,\n    };\n}\nexport async function getNftTokenUri(client, { nft }) {\n    if (nft.namespace === 'erc721') {\n        return readContract(client, {\n            address: nft.contractAddress,\n            abi: [\n                {\n                    name: 'tokenURI',\n                    type: 'function',\n                    stateMutability: 'view',\n                    inputs: [{ name: 'tokenId', type: 'uint256' }],\n                    outputs: [{ name: '', type: 'string' }],\n                },\n            ],\n            functionName: 'tokenURI',\n            args: [BigInt(nft.tokenID)],\n        });\n    }\n    if (nft.namespace === 'erc1155') {\n        return readContract(client, {\n            address: nft.contractAddress,\n            abi: [\n                {\n                    name: 'uri',\n                    type: 'function',\n                    stateMutability: 'view',\n                    inputs: [{ name: '_id', type: 'uint256' }],\n                    outputs: [{ name: '', type: 'string' }],\n                },\n            ],\n            functionName: 'uri',\n            args: [BigInt(nft.tokenID)],\n        });\n    }\n    throw new EnsAvatarUnsupportedNamespaceError({ namespace: nft.namespace });\n}\n//# sourceMappingURL=utils.js.map","import { getJsonImage, getMetadataAvatarUri, getNftTokenUri, parseAvatarUri, parseNftUri, resolveAvatarUri, } from './utils.js';\n/*\n * @description Parses an ENS avatar record.\n *\n * @example\n * parseAvatarRecord('eip155:1/erc1155:0xb32979486938aa9694bfc898f35dbed459f44424/10063')\n * 'https://ipfs.io/ipfs/QmSP4nq9fnN9dAiCj42ug9Wa79rqmQerZXZch82VqpiH7U/image.gif'\n *\n * @see https://docs.ens.domains/web/avatars\n *\n */\nexport async function parseAvatarRecord(client, { gatewayUrls, record, }) {\n    if (/eip155:/i.test(record))\n        return parseNftAvatarUri(client, { gatewayUrls, record });\n    return parseAvatarUri({ uri: record, gatewayUrls });\n}\nasync function parseNftAvatarUri(client, { gatewayUrls, record, }) {\n    // parse NFT URI into properties\n    const nft = parseNftUri(record);\n    // fetch tokenURI from the NFT contract\n    const nftUri = await getNftTokenUri(client, { nft });\n    // resolve the URI from the fetched tokenURI\n    const { uri: resolvedNftUri, isOnChain, isEncoded, } = resolveAvatarUri({ uri: nftUri, gatewayUrls });\n    // if the resolved URI is on chain, return the data\n    if (isOnChain &&\n        (resolvedNftUri.includes('data:application/json;base64,') ||\n            resolvedNftUri.startsWith('{'))) {\n        const encodedJson = isEncoded\n            ? // if it is encoded, decode it\n                atob(resolvedNftUri.replace('data:application/json;base64,', ''))\n            : // if it isn't encoded assume it is a JSON string, but it could be anything (it will error if it is)\n                resolvedNftUri;\n        const decoded = JSON.parse(encodedJson);\n        return parseAvatarUri({ uri: getJsonImage(decoded), gatewayUrls });\n    }\n    let uriTokenId = nft.tokenID;\n    if (nft.namespace === 'erc1155')\n        uriTokenId = uriTokenId.replace('0x', '').padStart(64, '0');\n    return getMetadataAvatarUri({\n        gatewayUrls,\n        uri: resolvedNftUri.replace(/(?:0x)?{id}/, uriTokenId),\n    });\n}\n//# sourceMappingURL=parseAvatarRecord.js.map","import { textResolverAbi, universalResolverResolveAbi, } from '../../constants/abis.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js';\nimport { localBatchGatewayUrl } from '../../utils/ens/localBatchGatewayRequest.js';\nimport { namehash } from '../../utils/ens/namehash.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets a text record for specified ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsTextParameters}\n * @returns Address for ENS resolver. {@link GetEnsTextReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsText, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const twitterRecord = await getEnsText(client, {\n *   name: normalize('wevm.eth'),\n *   key: 'com.twitter',\n * })\n * // 'wevm_dev'\n */\nexport async function getEnsText(client, parameters) {\n    const { blockNumber, blockTag, key, name, gatewayUrls, strict } = parameters;\n    const { chain } = client;\n    const universalResolverAddress = (() => {\n        if (parameters.universalResolverAddress)\n            return parameters.universalResolverAddress;\n        if (!chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        return getChainContractAddress({\n            blockNumber,\n            chain,\n            contract: 'ensUniversalResolver',\n        });\n    })();\n    const tlds = chain?.ensTlds;\n    if (tlds && !tlds.some((tld) => name.endsWith(tld)))\n        return null;\n    try {\n        const readContractParameters = {\n            address: universalResolverAddress,\n            abi: universalResolverResolveAbi,\n            functionName: 'resolve',\n            args: [\n                toHex(packetToBytes(name)),\n                encodeFunctionData({\n                    abi: textResolverAbi,\n                    functionName: 'text',\n                    args: [namehash(name), key],\n                }),\n                gatewayUrls ?? [localBatchGatewayUrl],\n            ],\n            blockNumber,\n            blockTag,\n        };\n        const readContractAction = getAction(client, readContract, 'readContract');\n        const res = await readContractAction(readContractParameters);\n        if (res[0] === '0x')\n            return null;\n        const record = decodeFunctionResult({\n            abi: textResolverAbi,\n            functionName: 'text',\n            data: res[0],\n        });\n        return record === '' ? null : record;\n    }\n    catch (err) {\n        if (strict)\n            throw err;\n        if (isNullUniversalResolverError(err, 'resolve'))\n            return null;\n        throw err;\n    }\n}\n//# sourceMappingURL=getEnsText.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { getCallError, } from '../../utils/errors/getCallError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { assertRequest } from '../../utils/transaction/assertRequest.js';\n/**\n * Creates an EIP-2930 access list.\n *\n * - Docs: https://viem.sh/docs/actions/public/createAccessList\n * - JSON-RPC Methods: `eth_createAccessList`\n *\n * @param client - Client to use\n * @param parameters - {@link CreateAccessListParameters}\n * @returns The access list. {@link CreateAccessListReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createAccessList } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const data = await createAccessList(client, {\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n *   data: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n * })\n */\nexport async function createAccessList(client, args) {\n    const { account: account_ = client.account, blockNumber, blockTag = 'latest', blobs, data, gas, gasPrice, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, to, value, ...rest } = args;\n    const account = account_ ? parseAccount(account_) : undefined;\n    try {\n        assertRequest(args);\n        const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            blobs,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerBlobGas,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            to,\n            value,\n        });\n        const response = await client.request({\n            method: 'eth_createAccessList',\n            params: [request, block],\n        });\n        return {\n            accessList: response.accessList,\n            gasUsed: BigInt(response.gasUsed),\n        };\n    }\n    catch (err) {\n        throw getCallError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n//# sourceMappingURL=createAccessList.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new events that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createEventFilter\n * - JSON-RPC Methods: [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter)\n *\n * @param client - Client to use\n * @param parameters - {@link CreateEventFilterParameters}\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateEventFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n * })\n */\nexport async function createEventFilter(client, { address, args, event, events: events_, fromBlock, strict, toBlock, } = {}) {\n    const events = events_ ?? (event ? [event] : undefined);\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newFilter',\n    });\n    let topics = [];\n    if (events) {\n        const encoded = events.flatMap((event) => encodeEventTopics({\n            abi: [event],\n            eventName: event.name,\n            args,\n        }));\n        // TODO: Clean up type casting\n        topics = [encoded];\n        if (event)\n            topics = topics[0];\n    }\n    const id = await client.request({\n        method: 'eth_newFilter',\n        params: [\n            {\n                address,\n                fromBlock: typeof fromBlock === 'bigint' ? numberToHex(fromBlock) : fromBlock,\n                toBlock: typeof toBlock === 'bigint' ? numberToHex(toBlock) : toBlock,\n                ...(topics.length ? { topics } : {}),\n            },\n        ],\n    });\n    return {\n        abi: events,\n        args,\n        eventName: event ? event.name : undefined,\n        fromBlock,\n        id,\n        request: getRequest(id),\n        strict: Boolean(strict),\n        toBlock,\n        type: 'event',\n    };\n}\n//# sourceMappingURL=createEventFilter.js.map","import { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a Filter to listen for new pending transaction hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createPendingTransactionFilter\n * - JSON-RPC Methods: [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createPendingTransactionFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createPendingTransactionFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'transaction' }\n */\nexport async function createPendingTransactionFilter(client) {\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newPendingTransactionFilter',\n    });\n    const id = await client.request({\n        method: 'eth_newPendingTransactionFilter',\n    });\n    return { id, request: getRequest(id), type: 'transaction' };\n}\n//# sourceMappingURL=createPendingTransactionFilter.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Retrieves the bytecode at an address.\n *\n * - Docs: https://viem.sh/docs/contract/getCode\n * - JSON-RPC Methods: [`eth_getCode`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getcode)\n *\n * @param client - Client to use\n * @param parameters - {@link GetCodeParameters}\n * @returns The contract's bytecode. {@link GetCodeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getCode } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getCode(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n * })\n */\nexport async function getCode(client, { address, blockNumber, blockTag = 'latest' }) {\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    const hex = await client.request({\n        method: 'eth_getCode',\n        params: [address, blockNumberHex || blockTag],\n    }, { dedupe: Boolean(blockNumberHex) });\n    if (hex === '0x')\n        return undefined;\n    return hex;\n}\n//# sourceMappingURL=getCode.js.map","import { BaseError } from './base.js';\nexport class Eip712DomainNotFoundError extends BaseError {\n    constructor({ address }) {\n        super(`No EIP-712 domain found on contract \"${address}\".`, {\n            metaMessages: [\n                'Ensure that:',\n                `- The contract is deployed at the address \"${address}\".`,\n                '- `eip712Domain()` function exists on the contract.',\n                '- `eip712Domain()` function matches signature to ERC-5267 specification.',\n            ],\n            name: 'Eip712DomainNotFoundError',\n        });\n    }\n}\n//# sourceMappingURL=eip712.js.map","import { Eip712DomainNotFoundError, } from '../../errors/eip712.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from './readContract.js';\n/**\n * Reads the EIP-712 domain from a contract, based on the ERC-5267 specification.\n *\n * @param client - A {@link Client} instance.\n * @param parameters - The parameters of the action. {@link GetEip712DomainParameters}\n * @returns The EIP-712 domain, fields, and extensions. {@link GetEip712DomainReturnType}\n *\n * @example\n * ```ts\n * import { createPublicClient, http, getEip712Domain } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const domain = await getEip712Domain(client, {\n *   address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * })\n * // {\n * //   domain: {\n * //     name: 'ExampleContract',\n * //     version: '1',\n * //     chainId: 1,\n * //     verifyingContract: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n * //   },\n * //   fields: '0x0f',\n * //   extensions: [],\n * // }\n * ```\n */\nexport async function getEip712Domain(client, parameters) {\n    const { address, factory, factoryData } = parameters;\n    try {\n        const [fields, name, version, chainId, verifyingContract, salt, extensions,] = await getAction(client, readContract, 'readContract')({\n            abi,\n            address,\n            functionName: 'eip712Domain',\n            factory,\n            factoryData,\n        });\n        return {\n            domain: {\n                name,\n                version,\n                chainId: Number(chainId),\n                verifyingContract,\n                salt,\n            },\n            extensions,\n            fields,\n        };\n    }\n    catch (e) {\n        const error = e;\n        if (error.name === 'ContractFunctionExecutionError' &&\n            error.cause.name === 'ContractFunctionZeroDataError') {\n            throw new Eip712DomainNotFoundError({ address });\n        }\n        throw error;\n    }\n}\nconst abi = [\n    {\n        inputs: [],\n        name: 'eip712Domain',\n        outputs: [\n            { name: 'fields', type: 'bytes1' },\n            { name: 'name', type: 'string' },\n            { name: 'version', type: 'string' },\n            { name: 'chainId', type: 'uint256' },\n            { name: 'verifyingContract', type: 'address' },\n            { name: 'salt', type: 'bytes32' },\n            { name: 'extensions', type: 'uint256[]' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n];\n//# sourceMappingURL=getEip712Domain.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatFeeHistory, } from '../../utils/formatters/feeHistory.js';\n/**\n * Returns a collection of historical gas information.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFeeHistory\n * - JSON-RPC Methods: [`eth_feeHistory`](https://docs.alchemy.com/reference/eth-feehistory)\n *\n * @param client - Client to use\n * @param parameters - {@link GetFeeHistoryParameters}\n * @returns The gas estimate (in wei). {@link GetFeeHistoryReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getFeeHistory } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const feeHistory = await getFeeHistory(client, {\n *   blockCount: 4,\n *   rewardPercentiles: [25, 75],\n * })\n */\nexport async function getFeeHistory(client, { blockCount, blockNumber, blockTag = 'latest', rewardPercentiles, }) {\n    const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n    const feeHistory = await client.request({\n        method: 'eth_feeHistory',\n        params: [\n            numberToHex(blockCount),\n            blockNumberHex || blockTag,\n            rewardPercentiles,\n        ],\n    }, { dedupe: Boolean(blockNumberHex) });\n    return formatFeeHistory(feeHistory);\n}\n//# sourceMappingURL=getFeeHistory.js.map","export function formatFeeHistory(feeHistory) {\n    return {\n        baseFeePerGas: feeHistory.baseFeePerGas.map((value) => BigInt(value)),\n        gasUsedRatio: feeHistory.gasUsedRatio,\n        oldestBlock: BigInt(feeHistory.oldestBlock),\n        reward: feeHistory.reward?.map((reward) => reward.map((value) => BigInt(value))),\n    };\n}\n//# sourceMappingURL=feeHistory.js.map","import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nimport { getUrl } from './utils.js';\nexport class OffchainLookupError extends BaseError {\n    constructor({ callbackSelector, cause, data, extraData, sender, urls, }) {\n        super(cause.shortMessage ||\n            'An error occurred while fetching for an offchain result.', {\n            cause,\n            metaMessages: [\n                ...(cause.metaMessages || []),\n                cause.metaMessages?.length ? '' : [],\n                'Offchain Gateway Call:',\n                urls && [\n                    '  Gateway URL(s):',\n                    ...urls.map((url) => `    ${getUrl(url)}`),\n                ],\n                `  Sender: ${sender}`,\n                `  Data: ${data}`,\n                `  Callback selector: ${callbackSelector}`,\n                `  Extra data: ${extraData}`,\n            ].flat(),\n            name: 'OffchainLookupError',\n        });\n    }\n}\nexport class OffchainLookupResponseMalformedError extends BaseError {\n    constructor({ result, url }) {\n        super('Offchain gateway response is malformed. Response data must be a hex value.', {\n            metaMessages: [\n                `Gateway URL: ${getUrl(url)}`,\n                `Response: ${stringify(result)}`,\n            ],\n            name: 'OffchainLookupResponseMalformedError',\n        });\n    }\n}\nexport class OffchainLookupSenderMismatchError extends BaseError {\n    constructor({ sender, to }) {\n        super('Reverted sender address does not match target contract address (`to`).', {\n            metaMessages: [\n                `Contract address: ${to}`,\n                `OffchainLookup sender address: ${sender}`,\n            ],\n            name: 'OffchainLookupSenderMismatchError',\n        });\n    }\n}\n//# sourceMappingURL=ccip.js.map","import { call } from '../actions/public/call.js';\nimport { OffchainLookupError, OffchainLookupResponseMalformedError, OffchainLookupSenderMismatchError, } from '../errors/ccip.js';\nimport { HttpRequestError, } from '../errors/request.js';\nimport { decodeErrorResult } from './abi/decodeErrorResult.js';\nimport { encodeAbiParameters } from './abi/encodeAbiParameters.js';\nimport { isAddressEqual } from './address/isAddressEqual.js';\nimport { concat } from './data/concat.js';\nimport { isHex } from './data/isHex.js';\nimport { localBatchGatewayRequest, localBatchGatewayUrl, } from './ens/localBatchGatewayRequest.js';\nimport { stringify } from './stringify.js';\nexport const offchainLookupSignature = '0x556f1830';\nexport const offchainLookupAbiItem = {\n    name: 'OffchainLookup',\n    type: 'error',\n    inputs: [\n        {\n            name: 'sender',\n            type: 'address',\n        },\n        {\n            name: 'urls',\n            type: 'string[]',\n        },\n        {\n            name: 'callData',\n            type: 'bytes',\n        },\n        {\n            name: 'callbackFunction',\n            type: 'bytes4',\n        },\n        {\n            name: 'extraData',\n            type: 'bytes',\n        },\n    ],\n};\nexport async function offchainLookup(client, { blockNumber, blockTag, data, to, }) {\n    const { args } = decodeErrorResult({\n        data,\n        abi: [offchainLookupAbiItem],\n    });\n    const [sender, urls, callData, callbackSelector, extraData] = args;\n    const { ccipRead } = client;\n    const ccipRequest_ = ccipRead && typeof ccipRead?.request === 'function'\n        ? ccipRead.request\n        : ccipRequest;\n    try {\n        if (!isAddressEqual(to, sender))\n            throw new OffchainLookupSenderMismatchError({ sender, to });\n        const result = urls.includes(localBatchGatewayUrl)\n            ? await localBatchGatewayRequest({\n                data: callData,\n                ccipRequest: ccipRequest_,\n            })\n            : await ccipRequest_({ data: callData, sender, urls });\n        const { data: data_ } = await call(client, {\n            blockNumber,\n            blockTag,\n            data: concat([\n                callbackSelector,\n                encodeAbiParameters([{ type: 'bytes' }, { type: 'bytes' }], [result, extraData]),\n            ]),\n            to,\n        });\n        return data_;\n    }\n    catch (err) {\n        throw new OffchainLookupError({\n            callbackSelector,\n            cause: err,\n            data,\n            extraData,\n            sender,\n            urls,\n        });\n    }\n}\nexport async function ccipRequest({ data, sender, urls, }) {\n    let error = new Error('An unknown error occurred.');\n    for (let i = 0; i < urls.length; i++) {\n        const url = urls[i];\n        const method = url.includes('{data}') ? 'GET' : 'POST';\n        const body = method === 'POST' ? { data, sender } : undefined;\n        const headers = method === 'POST' ? { 'Content-Type': 'application/json' } : {};\n        try {\n            const response = await fetch(url.replace('{sender}', sender.toLowerCase()).replace('{data}', data), {\n                body: JSON.stringify(body),\n                headers,\n                method,\n            });\n            let result;\n            if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n                result = (await response.json()).data;\n            }\n            else {\n                result = (await response.text());\n            }\n            if (!response.ok) {\n                error = new HttpRequestError({\n                    body,\n                    details: result?.error\n                        ? stringify(result.error)\n                        : response.statusText,\n                    headers: response.headers,\n                    status: response.status,\n                    url,\n                });\n                continue;\n            }\n            if (!isHex(result)) {\n                error = new OffchainLookupResponseMalformedError({\n                    result,\n                    url,\n                });\n                continue;\n            }\n            return result;\n        }\n        catch (err) {\n            error = new HttpRequestError({\n                body,\n                details: err.message,\n                url,\n            });\n        }\n    }\n    throw error;\n}\n//# sourceMappingURL=ccip.js.map","export function defineChain(chain) {\n    return {\n        formatters: undefined,\n        fees: undefined,\n        serializers: undefined,\n        ...chain,\n    };\n}\n//# sourceMappingURL=defineChain.js.map","import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nexport class InvalidDomainError extends BaseError {\n    constructor({ domain }) {\n        super(`Invalid domain \"${stringify(domain)}\".`, {\n            metaMessages: ['Must be a valid EIP-712 domain.'],\n        });\n    }\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n    constructor({ primaryType, types, }) {\n        super(`Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`, {\n            docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n            metaMessages: ['Check that the primary type is a key in `types`.'],\n        });\n    }\n}\nexport class InvalidStructTypeError extends BaseError {\n    constructor({ type }) {\n        super(`Struct type \"${type}\" is invalid.`, {\n            metaMessages: ['Struct type must not be a Solidity type.'],\n            name: 'InvalidStructTypeError',\n        });\n    }\n}\n//# sourceMappingURL=typedData.js.map","// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\nimport { encodeAbiParameters, } from '../abi/encodeAbiParameters.js';\nimport { concat } from '../data/concat.js';\nimport { toHex } from '../encoding/toHex.js';\nimport { keccak256 } from '../hash/keccak256.js';\nimport { getTypesForEIP712Domain, validateTypedData, } from '../typedData.js';\nexport function hashTypedData(parameters) {\n    const { domain = {}, message, primaryType, } = parameters;\n    const types = {\n        EIP712Domain: getTypesForEIP712Domain({ domain }),\n        ...parameters.types,\n    };\n    // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n    // as we can't statically check this with TypeScript.\n    validateTypedData({\n        domain,\n        message,\n        primaryType,\n        types,\n    });\n    const parts = ['0x1901'];\n    if (domain)\n        parts.push(hashDomain({\n            domain,\n            types: types,\n        }));\n    if (primaryType !== 'EIP712Domain')\n        parts.push(hashStruct({\n            data: message,\n            primaryType,\n            types: types,\n        }));\n    return keccak256(concat(parts));\n}\nexport function hashDomain({ domain, types, }) {\n    return hashStruct({\n        data: domain,\n        primaryType: 'EIP712Domain',\n        types,\n    });\n}\nexport function hashStruct({ data, primaryType, types, }) {\n    const encoded = encodeData({\n        data,\n        primaryType,\n        types,\n    });\n    return keccak256(encoded);\n}\nfunction encodeData({ data, primaryType, types, }) {\n    const encodedTypes = [{ type: 'bytes32' }];\n    const encodedValues = [hashType({ primaryType, types })];\n    for (const field of types[primaryType]) {\n        const [type, value] = encodeField({\n            types,\n            name: field.name,\n            type: field.type,\n            value: data[field.name],\n        });\n        encodedTypes.push(type);\n        encodedValues.push(value);\n    }\n    return encodeAbiParameters(encodedTypes, encodedValues);\n}\nfunction hashType({ primaryType, types, }) {\n    const encodedHashType = toHex(encodeType({ primaryType, types }));\n    return keccak256(encodedHashType);\n}\nexport function encodeType({ primaryType, types, }) {\n    let result = '';\n    const unsortedDeps = findTypeDependencies({ primaryType, types });\n    unsortedDeps.delete(primaryType);\n    const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n    for (const type of deps) {\n        result += `${type}(${types[type]\n            .map(({ name, type: t }) => `${t} ${name}`)\n            .join(',')})`;\n    }\n    return result;\n}\nfunction findTypeDependencies({ primaryType: primaryType_, types, }, results = new Set()) {\n    const match = primaryType_.match(/^\\w*/u);\n    const primaryType = match?.[0];\n    if (results.has(primaryType) || types[primaryType] === undefined) {\n        return results;\n    }\n    results.add(primaryType);\n    for (const field of types[primaryType]) {\n        findTypeDependencies({ primaryType: field.type, types }, results);\n    }\n    return results;\n}\nfunction encodeField({ types, name, type, value, }) {\n    if (types[type] !== undefined) {\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeData({ data: value, primaryType: type, types })),\n        ];\n    }\n    if (type === 'bytes') {\n        const prepend = value.length % 2 ? '0' : '';\n        value = `0x${prepend + value.slice(2)}`;\n        return [{ type: 'bytes32' }, keccak256(value)];\n    }\n    if (type === 'string')\n        return [{ type: 'bytes32' }, keccak256(toHex(value))];\n    if (type.lastIndexOf(']') === type.length - 1) {\n        const parsedType = type.slice(0, type.lastIndexOf('['));\n        const typeValuePairs = value.map((item) => encodeField({\n            name,\n            type: parsedType,\n            types,\n            value: item,\n        }));\n        return [\n            { type: 'bytes32' },\n            keccak256(encodeAbiParameters(typeValuePairs.map(([t]) => t), typeValuePairs.map(([, v]) => v))),\n        ];\n    }\n    return [{ type }, value];\n}\n//# sourceMappingURL=hashTypedData.js.map","import { BytesSizeMismatchError } from '../errors/abi.js';\nimport { InvalidAddressError } from '../errors/address.js';\nimport { InvalidDomainError, InvalidPrimaryTypeError, InvalidStructTypeError, } from '../errors/typedData.js';\nimport { isAddress } from './address/isAddress.js';\nimport { size } from './data/size.js';\nimport { numberToHex } from './encoding/toHex.js';\nimport { bytesRegex, integerRegex } from './regex.js';\nimport { hashDomain, } from './signature/hashTypedData.js';\nimport { stringify } from './stringify.js';\nexport function serializeTypedData(parameters) {\n    const { domain: domain_, message: message_, primaryType, types, } = parameters;\n    const normalizeData = (struct, data_) => {\n        const data = { ...data_ };\n        for (const param of struct) {\n            const { name, type } = param;\n            if (type === 'address')\n                data[name] = data[name].toLowerCase();\n        }\n        return data;\n    };\n    const domain = (() => {\n        if (!types.EIP712Domain)\n            return {};\n        if (!domain_)\n            return {};\n        return normalizeData(types.EIP712Domain, domain_);\n    })();\n    const message = (() => {\n        if (primaryType === 'EIP712Domain')\n            return undefined;\n        return normalizeData(types[primaryType], message_);\n    })();\n    return stringify({ domain, message, primaryType, types });\n}\nexport function validateTypedData(parameters) {\n    const { domain, message, primaryType, types } = parameters;\n    const validateData = (struct, data) => {\n        for (const param of struct) {\n            const { name, type } = param;\n            const value = data[name];\n            const integerMatch = type.match(integerRegex);\n            if (integerMatch &&\n                (typeof value === 'number' || typeof value === 'bigint')) {\n                const [_type, base, size_] = integerMatch;\n                // If number cannot be cast to a sized hex value, it is out of range\n                // and will throw.\n                numberToHex(value, {\n                    signed: base === 'int',\n                    size: Number.parseInt(size_) / 8,\n                });\n            }\n            if (type === 'address' && typeof value === 'string' && !isAddress(value))\n                throw new InvalidAddressError({ address: value });\n            const bytesMatch = type.match(bytesRegex);\n            if (bytesMatch) {\n                const [_type, size_] = bytesMatch;\n                if (size_ && size(value) !== Number.parseInt(size_))\n                    throw new BytesSizeMismatchError({\n                        expectedSize: Number.parseInt(size_),\n                        givenSize: size(value),\n                    });\n            }\n            const struct = types[type];\n            if (struct) {\n                validateReference(type);\n                validateData(struct, value);\n            }\n        }\n    };\n    // Validate domain types.\n    if (types.EIP712Domain && domain) {\n        if (typeof domain !== 'object')\n            throw new InvalidDomainError({ domain });\n        validateData(types.EIP712Domain, domain);\n    }\n    // Validate message types.\n    if (primaryType !== 'EIP712Domain') {\n        if (types[primaryType])\n            validateData(types[primaryType], message);\n        else\n            throw new InvalidPrimaryTypeError({ primaryType, types });\n    }\n}\nexport function getTypesForEIP712Domain({ domain, }) {\n    return [\n        typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n        domain?.version && { name: 'version', type: 'string' },\n        (typeof domain?.chainId === 'number' ||\n            typeof domain?.chainId === 'bigint') && {\n            name: 'chainId',\n            type: 'uint256',\n        },\n        domain?.verifyingContract && {\n            name: 'verifyingContract',\n            type: 'address',\n        },\n        domain?.salt && { name: 'salt', type: 'bytes32' },\n    ].filter(Boolean);\n}\nexport function domainSeparator({ domain }) {\n    return hashDomain({\n        domain,\n        types: {\n            EIP712Domain: getTypesForEIP712Domain({ domain }),\n        },\n    });\n}\n/** @internal */\nfunction validateReference(type) {\n    // Struct type must not be a Solidity type.\n    if (type === 'address' ||\n        type === 'bool' ||\n        type === 'string' ||\n        type.startsWith('bytes') ||\n        type.startsWith('uint') ||\n        type.startsWith('int'))\n        throw new InvalidStructTypeError({ type });\n}\n//# sourceMappingURL=typedData.js.map","import { AbiEncodingLengthMismatchError, BytesSizeMismatchError, UnsupportedPackedAbiType, } from '../../errors/abi.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { concatHex } from '../data/concat.js';\nimport { pad } from '../data/pad.js';\nimport { boolToHex, numberToHex, stringToHex, } from '../encoding/toHex.js';\nimport { arrayRegex, bytesRegex, integerRegex } from '../regex.js';\nexport function encodePacked(types, values) {\n    if (types.length !== values.length)\n        throw new AbiEncodingLengthMismatchError({\n            expectedLength: types.length,\n            givenLength: values.length,\n        });\n    const data = [];\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i];\n        const value = values[i];\n        data.push(encode(type, value));\n    }\n    return concatHex(data);\n}\nfunction encode(type, value, isArray = false) {\n    if (type === 'address') {\n        const address = value;\n        if (!isAddress(address))\n            throw new InvalidAddressError({ address });\n        return pad(address.toLowerCase(), {\n            size: isArray ? 32 : null,\n        });\n    }\n    if (type === 'string')\n        return stringToHex(value);\n    if (type === 'bytes')\n        return value;\n    if (type === 'bool')\n        return pad(boolToHex(value), { size: isArray ? 32 : 1 });\n    const intMatch = type.match(integerRegex);\n    if (intMatch) {\n        const [_type, baseType, bits = '256'] = intMatch;\n        const size = Number.parseInt(bits) / 8;\n        return numberToHex(value, {\n            size: isArray ? 32 : size,\n            signed: baseType === 'int',\n        });\n    }\n    const bytesMatch = type.match(bytesRegex);\n    if (bytesMatch) {\n        const [_type, size] = bytesMatch;\n        if (Number.parseInt(size) !== (value.length - 2) / 2)\n            throw new BytesSizeMismatchError({\n                expectedSize: Number.parseInt(size),\n                givenSize: (value.length - 2) / 2,\n            });\n        return pad(value, { dir: 'right', size: isArray ? 32 : null });\n    }\n    const arrayMatch = type.match(arrayRegex);\n    if (arrayMatch && Array.isArray(value)) {\n        const [_type, childType] = arrayMatch;\n        const data = [];\n        for (let i = 0; i < value.length; i++) {\n            data.push(encode(childType, value[i], true));\n        }\n        if (data.length === 0)\n            return '0x';\n        return concatHex(data);\n    }\n    throw new UnsupportedPackedAbiType(type);\n}\n//# sourceMappingURL=encodePacked.js.map","import { versionedHashVersionKzg } from '../../constants/kzg.js';\nimport { maxUint256 } from '../../constants/number.js';\nimport { InvalidAddressError, } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { EmptyBlobError, InvalidVersionedHashSizeError, InvalidVersionedHashVersionError, } from '../../errors/blob.js';\nimport { InvalidChainIdError, } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError, } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nimport { size } from '../data/size.js';\nimport { slice } from '../data/slice.js';\nimport { hexToNumber } from '../encoding/fromHex.js';\nexport function assertTransactionEIP7702(transaction) {\n    const { authorizationList } = transaction;\n    if (authorizationList) {\n        for (const authorization of authorizationList) {\n            const { chainId } = authorization;\n            const address = authorization.address;\n            if (!isAddress(address))\n                throw new InvalidAddressError({ address });\n            if (chainId < 0)\n                throw new InvalidChainIdError({ chainId });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP4844(transaction) {\n    const { blobVersionedHashes } = transaction;\n    if (blobVersionedHashes) {\n        if (blobVersionedHashes.length === 0)\n            throw new EmptyBlobError();\n        for (const hash of blobVersionedHashes) {\n            const size_ = size(hash);\n            const version = hexToNumber(slice(hash, 0, 1));\n            if (size_ !== 32)\n                throw new InvalidVersionedHashSizeError({ hash, size: size_ });\n            if (version !== versionedHashVersionKzg)\n                throw new InvalidVersionedHashVersionError({\n                    hash,\n                    version,\n                });\n        }\n    }\n    assertTransactionEIP1559(transaction);\n}\nexport function assertTransactionEIP1559(transaction) {\n    const { chainId, maxPriorityFeePerGas, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxFeePerGas && maxFeePerGas > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (maxPriorityFeePerGas &&\n        maxFeePerGas &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n}\nexport function assertTransactionEIP2930(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n    if (gasPrice && gasPrice > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\nexport function assertTransactionLegacy(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } = transaction;\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (typeof chainId !== 'undefined' && chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (maxPriorityFeePerGas || maxFeePerGas)\n        throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n    if (gasPrice && gasPrice > maxUint256)\n        throw new FeeCapTooHighError({ maxFeePerGas: gasPrice });\n}\n//# sourceMappingURL=assertTransaction.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { InvalidStorageKeySizeError, } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\n/*\n * Serialize an  EIP-2930 access list\n * @remarks\n * Use to create a transaction serializer with support for EIP-2930 access lists\n *\n * @param accessList - Array of objects of address and arrays of Storage Keys\n * @throws InvalidAddressError, InvalidStorageKeySizeError\n * @returns Array of hex strings\n */\nexport function serializeAccessList(accessList) {\n    if (!accessList || accessList.length === 0)\n        return [];\n    const serializedAccessList = [];\n    for (let i = 0; i < accessList.length; i++) {\n        const { address, storageKeys } = accessList[i];\n        for (let j = 0; j < storageKeys.length; j++) {\n            if (storageKeys[j].length - 2 !== 64) {\n                throw new InvalidStorageKeySizeError({ storageKey: storageKeys[j] });\n            }\n        }\n        if (!isAddress(address, { strict: false })) {\n            throw new InvalidAddressError({ address });\n        }\n        serializedAccessList.push([address, storageKeys]);\n    }\n    return serializedAccessList;\n}\n//# sourceMappingURL=serializeAccessList.js.map","import { InvalidLegacyVError, } from '../../errors/transaction.js';\nimport { serializeAuthorizationList, } from '../authorization/serializeAuthorizationList.js';\nimport { blobsToCommitments, } from '../blob/blobsToCommitments.js';\nimport { blobsToProofs, } from '../blob/blobsToProofs.js';\nimport { commitmentsToVersionedHashes, } from '../blob/commitmentsToVersionedHashes.js';\nimport { toBlobSidecars, } from '../blob/toBlobSidecars.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { bytesToHex, numberToHex, } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionEIP4844, assertTransactionEIP7702, assertTransactionLegacy, } from './assertTransaction.js';\nimport { getTransactionType, } from './getTransactionType.js';\nimport { serializeAccessList, } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n    const type = getTransactionType(transaction);\n    if (type === 'eip1559')\n        return serializeTransactionEIP1559(transaction, signature);\n    if (type === 'eip2930')\n        return serializeTransactionEIP2930(transaction, signature);\n    if (type === 'eip4844')\n        return serializeTransactionEIP4844(transaction, signature);\n    if (type === 'eip7702')\n        return serializeTransactionEIP7702(transaction, signature);\n    return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP7702(transaction, signature) {\n    const { authorizationList, chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP7702(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedAuthorizationList = serializeAuthorizationList(authorizationList);\n    return concatHex([\n        '0x04',\n        toRlp([\n            numberToHex(chainId),\n            nonce ? numberToHex(nonce) : '0x',\n            maxPriorityFeePerGas ? numberToHex(maxPriorityFeePerGas) : '0x',\n            maxFeePerGas ? numberToHex(maxFeePerGas) : '0x',\n            gas ? numberToHex(gas) : '0x',\n            to ?? '0x',\n            value ? numberToHex(value) : '0x',\n            data ?? '0x',\n            serializedAccessList,\n            serializedAuthorizationList,\n            ...toYParitySignatureArray(transaction, signature),\n        ]),\n    ]);\n}\nfunction serializeTransactionEIP4844(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerBlobGas, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP4844(transaction);\n    let blobVersionedHashes = transaction.blobVersionedHashes;\n    let sidecars = transaction.sidecars;\n    // If `blobs` are passed, we will need to compute the KZG commitments & proofs.\n    if (transaction.blobs &&\n        (typeof blobVersionedHashes === 'undefined' ||\n            typeof sidecars === 'undefined')) {\n        const blobs = (typeof transaction.blobs[0] === 'string'\n            ? transaction.blobs\n            : transaction.blobs.map((x) => bytesToHex(x)));\n        const kzg = transaction.kzg;\n        const commitments = blobsToCommitments({\n            blobs,\n            kzg,\n        });\n        if (typeof blobVersionedHashes === 'undefined')\n            blobVersionedHashes = commitmentsToVersionedHashes({\n                commitments,\n            });\n        if (typeof sidecars === 'undefined') {\n            const proofs = blobsToProofs({ blobs, commitments, kzg });\n            sidecars = toBlobSidecars({ blobs, commitments, proofs });\n        }\n    }\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        numberToHex(chainId),\n        nonce ? numberToHex(nonce) : '0x',\n        maxPriorityFeePerGas ? numberToHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? numberToHex(maxFeePerGas) : '0x',\n        gas ? numberToHex(gas) : '0x',\n        to ?? '0x',\n        value ? numberToHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        maxFeePerBlobGas ? numberToHex(maxFeePerBlobGas) : '0x',\n        blobVersionedHashes ?? [],\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    const blobs = [];\n    const commitments = [];\n    const proofs = [];\n    if (sidecars)\n        for (let i = 0; i < sidecars.length; i++) {\n            const { blob, commitment, proof } = sidecars[i];\n            blobs.push(blob);\n            commitments.push(commitment);\n            proofs.push(proof);\n        }\n    return concatHex([\n        '0x03',\n        sidecars\n            ? // If sidecars are enabled, envelope turns into a \"wrapper\":\n                toRlp([serializedTransaction, blobs, commitments, proofs])\n            : // If sidecars are disabled, standard envelope is used:\n                toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, data, } = transaction;\n    assertTransactionEIP1559(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        numberToHex(chainId),\n        nonce ? numberToHex(nonce) : '0x',\n        maxPriorityFeePerGas ? numberToHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? numberToHex(maxFeePerGas) : '0x',\n        gas ? numberToHex(gas) : '0x',\n        to ?? '0x',\n        value ? numberToHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x02',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n    const { chainId, gas, data, nonce, to, value, accessList, gasPrice } = transaction;\n    assertTransactionEIP2930(transaction);\n    const serializedAccessList = serializeAccessList(accessList);\n    const serializedTransaction = [\n        numberToHex(chainId),\n        nonce ? numberToHex(nonce) : '0x',\n        gasPrice ? numberToHex(gasPrice) : '0x',\n        gas ? numberToHex(gas) : '0x',\n        to ?? '0x',\n        value ? numberToHex(value) : '0x',\n        data ?? '0x',\n        serializedAccessList,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x01',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n    const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction;\n    assertTransactionLegacy(transaction);\n    let serializedTransaction = [\n        nonce ? numberToHex(nonce) : '0x',\n        gasPrice ? numberToHex(gasPrice) : '0x',\n        gas ? numberToHex(gas) : '0x',\n        to ?? '0x',\n        value ? numberToHex(value) : '0x',\n        data ?? '0x',\n    ];\n    if (signature) {\n        const v = (() => {\n            // EIP-155 (inferred chainId)\n            if (signature.v >= 35n) {\n                const inferredChainId = (signature.v - 35n) / 2n;\n                if (inferredChainId > 0)\n                    return signature.v;\n                return 27n + (signature.v === 35n ? 0n : 1n);\n            }\n            // EIP-155 (explicit chainId)\n            if (chainId > 0)\n                return BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);\n            // Pre-EIP-155 (no chainId)\n            const v = 27n + (signature.v === 27n ? 0n : 1n);\n            if (signature.v !== v)\n                throw new InvalidLegacyVError({ v: signature.v });\n            return v;\n        })();\n        const r = trim(signature.r);\n        const s = trim(signature.s);\n        serializedTransaction = [\n            ...serializedTransaction,\n            numberToHex(v),\n            r === '0x00' ? '0x' : r,\n            s === '0x00' ? '0x' : s,\n        ];\n    }\n    else if (chainId > 0) {\n        serializedTransaction = [\n            ...serializedTransaction,\n            numberToHex(chainId),\n            '0x',\n            '0x',\n        ];\n    }\n    return toRlp(serializedTransaction);\n}\nexport function toYParitySignatureArray(transaction, signature_) {\n    const signature = signature_ ?? transaction;\n    const { v, yParity } = signature;\n    if (typeof signature.r === 'undefined')\n        return [];\n    if (typeof signature.s === 'undefined')\n        return [];\n    if (typeof v === 'undefined' && typeof yParity === 'undefined')\n        return [];\n    const r = trim(signature.r);\n    const s = trim(signature.s);\n    const yParity_ = (() => {\n        if (typeof yParity === 'number')\n            return yParity ? numberToHex(1) : '0x';\n        if (v === 0n)\n            return '0x';\n        if (v === 1n)\n            return numberToHex(1);\n        return v === 27n ? '0x' : numberToHex(1);\n    })();\n    return [yParity_, r === '0x00' ? '0x' : r, s === '0x00' ? '0x' : s];\n}\n//# sourceMappingURL=serializeTransaction.js.map","// https://github.com/ethereum/EIPs/blob/master/EIPS/eip-4844.md#parameters\nexport const versionedHashVersionKzg = 1;\n//# sourceMappingURL=kzg.js.map","import { toHex } from '../encoding/toHex.js';\nimport { toYParitySignatureArray } from '../transaction/serializeTransaction.js';\n/*\n * Serializes an EIP-7702 authorization list.\n */\nexport function serializeAuthorizationList(authorizationList) {\n    if (!authorizationList || authorizationList.length === 0)\n        return [];\n    const serializedAuthorizationList = [];\n    for (const authorization of authorizationList) {\n        const { chainId, nonce, ...signature } = authorization;\n        const contractAddress = authorization.address;\n        serializedAuthorizationList.push([\n            chainId ? toHex(chainId) : '0x',\n            contractAddress,\n            nonce ? toHex(nonce) : '0x',\n            ...toYParitySignatureArray({}, signature),\n        ]);\n    }\n    return serializedAuthorizationList;\n}\n//# sourceMappingURL=serializeAuthorizationList.js.map","import { keccak256 } from '../hash/keccak256.js';\nimport { toPrefixedMessage } from './toPrefixedMessage.js';\nexport function hashMessage(message, to_) {\n    return keccak256(toPrefixedMessage(message), to_);\n}\n//# sourceMappingURL=hashMessage.js.map","import { presignMessagePrefix } from '../../constants/strings.js';\nimport { concat } from '../data/concat.js';\nimport { size } from '../data/size.js';\nimport { bytesToHex, stringToHex, } from '../encoding/toHex.js';\nexport function toPrefixedMessage(message_) {\n    const message = (() => {\n        if (typeof message_ === 'string')\n            return stringToHex(message_);\n        if (typeof message_.raw === 'string')\n            return message_.raw;\n        return bytesToHex(message_.raw);\n    })();\n    const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`);\n    return concat([prefix, message]);\n}\n//# sourceMappingURL=toPrefixedMessage.js.map","export const erc6492MagicBytes = '0x6492649264926492649264926492649264926492649264926492649264926492';\nexport const zeroHash = '0x0000000000000000000000000000000000000000000000000000000000000000';\n//# sourceMappingURL=bytes.js.map","import { erc6492MagicBytes } from '../../constants/bytes.js';\nimport { encodeAbiParameters } from '../abi/encodeAbiParameters.js';\nimport { concatHex } from '../data/concat.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\n/**\n * @description Serializes a ERC-6492 flavoured signature into hex format.\n *\n * @param signature ERC-6492 signature in object format.\n * @returns ERC-6492 signature in hex format.\n *\n * @example\n * serializeSignature({ address: '0x...', data: '0x...', signature: '0x...' })\n * // '0x000000000000000000000000cafebabecafebabecafebabecafebabecafebabe000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000004deadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041a461f509887bd19e312c0c58467ce8ff8e300d3c1a90b608a760c5b80318eaf15fe57c96f9175d6cd4daad4663763baa7e78836e067d0163e9a2ccf2ff753f5b1b000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492'\n */\nexport function serializeErc6492Signature(parameters) {\n    const { address, data, signature, to = 'hex' } = parameters;\n    const signature_ = concatHex([\n        encodeAbiParameters([{ type: 'address' }, { type: 'bytes' }, { type: 'bytes' }], [address, data, signature]),\n        erc6492MagicBytes,\n    ]);\n    if (to === 'hex')\n        return signature_;\n    return hexToBytes(signature_);\n}\n//# sourceMappingURL=serializeErc6492Signature.js.map","import { BaseError } from './base.js';\nexport class InvalidDecimalNumberError extends BaseError {\n    constructor({ value }) {\n        super(`Number \\`${value}\\` is not a valid decimal number.`, {\n            name: 'InvalidDecimalNumberError',\n        });\n    }\n}\n//# sourceMappingURL=unit.js.map","import { InvalidDecimalNumberError } from '../../errors/unit.js';\n/**\n * Multiplies a string representation of a number by a given exponent of base 10 (10exponent).\n *\n * - Docs: https://viem.sh/docs/utilities/parseUnits\n *\n * @example\n * import { parseUnits } from 'viem'\n *\n * parseUnits('420', 9)\n * // 420000000000n\n */\nexport function parseUnits(value, decimals) {\n    if (!/^(-?)([0-9]*)\\.?([0-9]*)$/.test(value))\n        throw new InvalidDecimalNumberError({ value });\n    let [integer, fraction = '0'] = value.split('.');\n    const negative = integer.startsWith('-');\n    if (negative)\n        integer = integer.slice(1);\n    // trim trailing zeros.\n    fraction = fraction.replace(/(0+)$/, '');\n    // round off if the fraction is larger than the number of decimals.\n    if (decimals === 0) {\n        if (Math.round(Number(`.${fraction}`)) === 1)\n            integer = `${BigInt(integer) + 1n}`;\n        fraction = '';\n    }\n    else if (fraction.length > decimals) {\n        const [left, unit, right] = [\n            fraction.slice(0, decimals - 1),\n            fraction.slice(decimals - 1, decimals),\n            fraction.slice(decimals),\n        ];\n        const rounded = Math.round(Number(`${unit}.${right}`));\n        if (rounded > 9)\n            fraction = `${BigInt(left) + BigInt(1)}0`.padStart(left.length + 1, '0');\n        else\n            fraction = `${left}${rounded}`;\n        if (fraction.length > decimals) {\n            fraction = fraction.slice(1);\n            integer = `${BigInt(integer) + 1n}`;\n        }\n        fraction = fraction.slice(0, decimals);\n    }\n    else {\n        fraction = fraction.padEnd(decimals, '0');\n    }\n    return BigInt(`${negative ? '-' : ''}${integer}${fraction}`);\n}\n//# sourceMappingURL=parseUnits.js.map","import { getTransactionCount } from '../actions/public/getTransactionCount.js';\nimport { LruMap } from './lru.js';\n/**\n * Creates a nonce manager for auto-incrementing transaction nonces.\n *\n * - Docs: https://viem.sh/docs/accounts/createNonceManager\n *\n * @example\n * ```ts\n * const nonceManager = createNonceManager({\n *   source: jsonRpc(),\n * })\n * ```\n */\nexport function createNonceManager(parameters) {\n    const { source } = parameters;\n    const deltaMap = new Map();\n    const nonceMap = new LruMap(8192);\n    const promiseMap = new Map();\n    const getKey = ({ address, chainId }) => `${address}.${chainId}`;\n    return {\n        async consume({ address, chainId, client }) {\n            const key = getKey({ address, chainId });\n            const promise = this.get({ address, chainId, client });\n            this.increment({ address, chainId });\n            const nonce = await promise;\n            await source.set({ address, chainId }, nonce);\n            nonceMap.set(key, nonce);\n            return nonce;\n        },\n        async increment({ address, chainId }) {\n            const key = getKey({ address, chainId });\n            const delta = deltaMap.get(key) ?? 0;\n            deltaMap.set(key, delta + 1);\n        },\n        async get({ address, chainId, client }) {\n            const key = getKey({ address, chainId });\n            let promise = promiseMap.get(key);\n            if (!promise) {\n                promise = (async () => {\n                    try {\n                        const nonce = await source.get({ address, chainId, client });\n                        const previousNonce = nonceMap.get(key) ?? 0;\n                        if (previousNonce > 0 && nonce <= previousNonce)\n                            return previousNonce + 1;\n                        nonceMap.delete(key);\n                        return nonce;\n                    }\n                    finally {\n                        this.reset({ address, chainId });\n                    }\n                })();\n                promiseMap.set(key, promise);\n            }\n            const delta = deltaMap.get(key) ?? 0;\n            return delta + (await promise);\n        },\n        reset({ address, chainId }) {\n            const key = getKey({ address, chainId });\n            deltaMap.delete(key);\n            promiseMap.delete(key);\n        },\n    };\n}\n/** JSON-RPC source for a nonce manager. */\nexport function jsonRpc() {\n    return {\n        async get(parameters) {\n            const { address, client } = parameters;\n            return getTransactionCount(client, {\n                address,\n                blockTag: 'pending',\n            });\n        },\n        set() { },\n    };\n}\n////////////////////////////////////////////////////////////////////////////////////////////\n// Default\n/** Default Nonce Manager with a JSON-RPC source. */\nexport const nonceManager = /*#__PURE__*/ createNonceManager({\n    source: jsonRpc(),\n});\n//# sourceMappingURL=nonceManager.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatProof, } from '../../utils/formatters/proof.js';\n/**\n * Returns the account and storage values of the specified account including the Merkle-proof.\n *\n * - Docs: https://viem.sh/docs/actions/public/getProof\n * - JSON-RPC Methods:\n *   - Calls [`eth_getProof`](https://eips.ethereum.org/EIPS/eip-1186)\n *\n * @param client - Client to use\n * @param parameters - {@link GetProofParameters}\n * @returns Proof data. {@link GetProofReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getProof } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const block = await getProof(client, {\n *  address: '0x...',\n *  storageKeys: ['0x...'],\n * })\n */\nexport async function getProof(client, { address, blockNumber, blockTag: blockTag_, storageKeys, }) {\n    const blockTag = blockTag_ ?? 'latest';\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    const proof = await client.request({\n        method: 'eth_getProof',\n        params: [address, storageKeys, blockNumberHex || blockTag],\n    });\n    return formatProof(proof);\n}\n//# sourceMappingURL=getProof.js.map","import { hexToNumber } from '../index.js';\nfunction formatStorageProof(storageProof) {\n    return storageProof.map((proof) => ({\n        ...proof,\n        value: BigInt(proof.value),\n    }));\n}\nexport function formatProof(proof) {\n    return {\n        ...proof,\n        balance: proof.balance ? BigInt(proof.balance) : undefined,\n        nonce: proof.nonce ? hexToNumber(proof.nonce) : undefined,\n        storageProof: proof.storageProof\n            ? formatStorageProof(proof.storageProof)\n            : undefined,\n    };\n}\n//# sourceMappingURL=proof.js.map","import { TransactionNotFoundError, } from '../../errors/transaction.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { formatTransaction, } from '../../utils/formatters/transaction.js';\n/**\n * Returns information about a [Transaction](https://viem.sh/docs/glossary/terms#transaction) given a hash or block identifier.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransaction\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionByHash)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionParameters}\n * @returns The transaction information. {@link GetTransactionReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransaction } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transaction = await getTransaction(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransaction(client, { blockHash, blockNumber, blockTag: blockTag_, hash, index, }) {\n    const blockTag = blockTag_ || 'latest';\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    let transaction = null;\n    if (hash) {\n        transaction = await client.request({\n            method: 'eth_getTransactionByHash',\n            params: [hash],\n        }, { dedupe: true });\n    }\n    else if (blockHash) {\n        transaction = await client.request({\n            method: 'eth_getTransactionByBlockHashAndIndex',\n            params: [blockHash, numberToHex(index)],\n        }, { dedupe: true });\n    }\n    else if (blockNumberHex || blockTag) {\n        transaction = await client.request({\n            method: 'eth_getTransactionByBlockNumberAndIndex',\n            params: [blockNumberHex || blockTag, numberToHex(index)],\n        }, { dedupe: Boolean(blockNumberHex) });\n    }\n    if (!transaction)\n        throw new TransactionNotFoundError({\n            blockHash,\n            blockNumber,\n            blockTag,\n            hash,\n            index,\n        });\n    const format = client.chain?.formatters?.transaction?.format || formatTransaction;\n    return format(transaction);\n}\n//# sourceMappingURL=getTransaction.js.map","import { TransactionReceiptNotFoundError, } from '../../errors/transaction.js';\nimport { formatTransactionReceipt, } from '../../utils/formatters/transactionReceipt.js';\n/**\n * Returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt) given a [Transaction](https://viem.sh/docs/glossary/terms#transaction) hash.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_gettransactionreceipt)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionReceiptParameters}\n * @returns The transaction receipt. {@link GetTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionReceipt } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await getTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionReceipt(client, { hash }) {\n    const receipt = await client.request({\n        method: 'eth_getTransactionReceipt',\n        params: [hash],\n    }, { dedupe: true });\n    if (!receipt)\n        throw new TransactionReceiptNotFoundError({ hash });\n    const format = client.chain?.formatters?.transactionReceipt?.format ||\n        formatTransactionReceipt;\n    return format(receipt);\n}\n//# sourceMappingURL=getTransactionReceipt.js.map","import * as BlockOverrides from 'ox/BlockOverrides';\nimport { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js';\nimport { RawContractError } from '../../errors/contract.js';\nimport { UnknownNodeError } from '../../errors/node.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { concat } from '../../utils/data/concat.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\nimport { getContractError } from '../../utils/errors/getContractError.js';\nimport { getNodeError, } from '../../utils/errors/getNodeError.js';\nimport { formatBlock, } from '../../utils/formatters/block.js';\nimport { formatLog } from '../../utils/formatters/log.js';\nimport { formatTransactionRequest, } from '../../utils/formatters/transactionRequest.js';\nimport { serializeStateOverride, } from '../../utils/stateOverride.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\n/**\n * Simulates a set of calls on block(s) with optional block and state overrides.\n *\n * @example\n * ```ts\n * import { createClient, http, parseEther } from 'viem'\n * import { simulate } from 'viem/actions'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const result = await simulate(client, {\n *   blocks: [{\n *     blockOverrides: {\n *       number: 69420n,\n *     },\n *     calls: [{\n *       {\n *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *         data: '0xdeadbeef',\n *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       },\n *       {\n *         account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *         to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *         value: parseEther('1'),\n *       },\n *     }],\n *     stateOverrides: [{\n *       address: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *       balance: parseEther('10'),\n *     }],\n *   }]\n * })\n * ```\n *\n * @param client - Client to use.\n * @param parameters - {@link SimulateBlocksParameters}\n * @returns Simulated blocks. {@link SimulateBlocksReturnType}\n */\nexport async function simulateBlocks(client, parameters) {\n    const { blockNumber, blockTag = 'latest', blocks, returnFullTransactions, traceTransfers, validation, } = parameters;\n    try {\n        const blockStateCalls = [];\n        for (const block of blocks) {\n            const blockOverrides = block.blockOverrides\n                ? BlockOverrides.toRpc(block.blockOverrides)\n                : undefined;\n            const calls = block.calls.map((call_) => {\n                const call = call_;\n                const account = call.account ? parseAccount(call.account) : undefined;\n                const data = call.abi ? encodeFunctionData(call) : call.data;\n                const request = {\n                    ...call,\n                    data: call.dataSuffix\n                        ? concat([data || '0x', call.dataSuffix])\n                        : data,\n                    from: call.from ?? account?.address,\n                };\n                assertRequest(request);\n                return formatTransactionRequest(request);\n            });\n            const stateOverrides = block.stateOverrides\n                ? serializeStateOverride(block.stateOverrides)\n                : undefined;\n            blockStateCalls.push({\n                blockOverrides,\n                calls,\n                stateOverrides,\n            });\n        }\n        const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        const result = await client.request({\n            method: 'eth_simulateV1',\n            params: [\n                { blockStateCalls, returnFullTransactions, traceTransfers, validation },\n                block,\n            ],\n        });\n        return result.map((block, i) => ({\n            ...formatBlock(block),\n            calls: block.calls.map((call, j) => {\n                const { abi, args, functionName, to } = blocks[i].calls[j];\n                const data = call.error?.data ?? call.returnData;\n                const gasUsed = BigInt(call.gasUsed);\n                const logs = call.logs?.map((log) => formatLog(log));\n                const status = call.status === '0x1' ? 'success' : 'failure';\n                const result = abi && status === 'success' && data !== '0x'\n                    ? decodeFunctionResult({\n                        abi,\n                        data,\n                        functionName,\n                    })\n                    : null;\n                const error = (() => {\n                    if (status === 'success')\n                        return undefined;\n                    let error = undefined;\n                    if (call.error?.data === '0x')\n                        error = new AbiDecodingZeroDataError();\n                    else if (call.error)\n                        error = new RawContractError(call.error);\n                    if (!error)\n                        return undefined;\n                    return getContractError(error, {\n                        abi: (abi ?? []),\n                        address: to ?? '0x',\n                        args,\n                        functionName: functionName ?? '<unknown>',\n                    });\n                })();\n                return {\n                    data,\n                    gasUsed,\n                    logs,\n                    status,\n                    ...(status === 'success'\n                        ? {\n                            result,\n                        }\n                        : {\n                            error,\n                        }),\n                };\n            }),\n        }));\n    }\n    catch (e) {\n        const cause = e;\n        const error = getNodeError(cause, {});\n        if (error instanceof UnknownNodeError)\n            throw cause;\n        throw error;\n    }\n}\n//# sourceMappingURL=simulateBlocks.js.map","/**\n * Internal assertion helpers.\n * @module\n */\n/** Asserts something is positive integer. */\nfunction anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Is number an Uint8Array? Copied from utils for perf. */\nfunction isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is Uint8Array. */\nfunction abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nfunction ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nfunction aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nfunction aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\nexport { anumber, abytes, ahash, aexists, aoutput };\n//# sourceMappingURL=_assert.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n// Cast array to different type\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n// Cast array to view\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n// The byte swap operation for uint32\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const byteSwapIfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Convert JS string to byte array.\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('utf8ToBytes expected string, got ' + typeof str);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { aexists, aoutput } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","/**\n * Internal helpers for u64. BigUint64Array is too slow as per 2025, so we implement it using Uint32Array.\n * @todo re-check https://issues.chromium.org/issues/42212588\n * @module\n */\nconst U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","/**\n * SHA3 (keccak) hash function, based on a new \"Sponge function\" design.\n * Different from older hashes, the internal state is bigger than output size.\n *\n * Check out [FIPS-202](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf),\n * [Website](https://keccak.team/keccak.html),\n * [the differences between SHA-3 and Keccak](https://crypto.stackexchange.com/questions/15727/what-are-the-key-differences-between-the-draft-sha-3-standard-and-the-keccak-sub).\n *\n * Check out `sha3-addons` module for cSHAKE, k12, and others.\n * @module\n */\nimport { abytes, aexists, anumber, aoutput } from './_assert.js';\nimport { rotlBH, rotlBL, rotlSH, rotlSL, split } from './_u64.js';\nimport { byteSwap32, Hash, isLE, toBytes, u32, wrapConstructor, wrapXOFConstructorWithOpts, } from './utils.js';\n// Various per round constants calculations\nconst SHA3_PI = [];\nconst SHA3_ROTL = [];\nconst _SHA3_IOTA = [];\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nconst _2n = /* @__PURE__ */ BigInt(2);\nconst _7n = /* @__PURE__ */ BigInt(7);\nconst _256n = /* @__PURE__ */ BigInt(256);\nconst _0x71n = /* @__PURE__ */ BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n    // Pi\n    [x, y] = [y, (2 * x + 3 * y) % 5];\n    SHA3_PI.push(2 * (5 * y + x));\n    // Rotational\n    SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n    // Iota\n    let t = _0n;\n    for (let j = 0; j < 7; j++) {\n        R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n        if (R & _2n)\n            t ^= _1n << ((_1n << /* @__PURE__ */ BigInt(j)) - _1n);\n    }\n    _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = /* @__PURE__ */ split(_SHA3_IOTA, true);\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h, l, s) => (s > 32 ? rotlBH(h, l, s) : rotlSH(h, l, s));\nconst rotlL = (h, l, s) => (s > 32 ? rotlBL(h, l, s) : rotlSL(h, l, s));\n/** `keccakf1600` internal function, additionally allows to adjust round count. */\nexport function keccakP(s, rounds = 24) {\n    const B = new Uint32Array(5 * 2);\n    // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n    for (let round = 24 - rounds; round < 24; round++) {\n        // Theta θ\n        for (let x = 0; x < 10; x++)\n            B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n        for (let x = 0; x < 10; x += 2) {\n            const idx1 = (x + 8) % 10;\n            const idx0 = (x + 2) % 10;\n            const B0 = B[idx0];\n            const B1 = B[idx0 + 1];\n            const Th = rotlH(B0, B1, 1) ^ B[idx1];\n            const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n            for (let y = 0; y < 50; y += 10) {\n                s[x + y] ^= Th;\n                s[x + y + 1] ^= Tl;\n            }\n        }\n        // Rho (ρ) and Pi (π)\n        let curH = s[2];\n        let curL = s[3];\n        for (let t = 0; t < 24; t++) {\n            const shift = SHA3_ROTL[t];\n            const Th = rotlH(curH, curL, shift);\n            const Tl = rotlL(curH, curL, shift);\n            const PI = SHA3_PI[t];\n            curH = s[PI];\n            curL = s[PI + 1];\n            s[PI] = Th;\n            s[PI + 1] = Tl;\n        }\n        // Chi (χ)\n        for (let y = 0; y < 50; y += 10) {\n            for (let x = 0; x < 10; x++)\n                B[x] = s[y + x];\n            for (let x = 0; x < 10; x++)\n                s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n        }\n        // Iota (ι)\n        s[0] ^= SHA3_IOTA_H[round];\n        s[1] ^= SHA3_IOTA_L[round];\n    }\n    B.fill(0);\n}\n/** Keccak sponge function. */\nexport class Keccak extends Hash {\n    // NOTE: we accept arguments in bytes instead of bits here.\n    constructor(blockLen, suffix, outputLen, enableXOF = false, rounds = 24) {\n        super();\n        this.blockLen = blockLen;\n        this.suffix = suffix;\n        this.outputLen = outputLen;\n        this.enableXOF = enableXOF;\n        this.rounds = rounds;\n        this.pos = 0;\n        this.posOut = 0;\n        this.finished = false;\n        this.destroyed = false;\n        // Can be passed from user as dkLen\n        anumber(outputLen);\n        // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n        // 0 < blockLen < 200\n        if (0 >= this.blockLen || this.blockLen >= 200)\n            throw new Error('Sha3 supports only keccak-f1600 function');\n        this.state = new Uint8Array(200);\n        this.state32 = u32(this.state);\n    }\n    keccak() {\n        if (!isLE)\n            byteSwap32(this.state32);\n        keccakP(this.state32, this.rounds);\n        if (!isLE)\n            byteSwap32(this.state32);\n        this.posOut = 0;\n        this.pos = 0;\n    }\n    update(data) {\n        aexists(this);\n        const { blockLen, state } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            for (let i = 0; i < take; i++)\n                state[this.pos++] ^= data[pos++];\n            if (this.pos === blockLen)\n                this.keccak();\n        }\n        return this;\n    }\n    finish() {\n        if (this.finished)\n            return;\n        this.finished = true;\n        const { state, suffix, pos, blockLen } = this;\n        // Do the padding\n        state[pos] ^= suffix;\n        if ((suffix & 0x80) !== 0 && pos === blockLen - 1)\n            this.keccak();\n        state[blockLen - 1] ^= 0x80;\n        this.keccak();\n    }\n    writeInto(out) {\n        aexists(this, false);\n        abytes(out);\n        this.finish();\n        const bufferOut = this.state;\n        const { blockLen } = this;\n        for (let pos = 0, len = out.length; pos < len;) {\n            if (this.posOut >= blockLen)\n                this.keccak();\n            const take = Math.min(blockLen - this.posOut, len - pos);\n            out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n            this.posOut += take;\n            pos += take;\n        }\n        return out;\n    }\n    xofInto(out) {\n        // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n        if (!this.enableXOF)\n            throw new Error('XOF is not possible for this instance');\n        return this.writeInto(out);\n    }\n    xof(bytes) {\n        anumber(bytes);\n        return this.xofInto(new Uint8Array(bytes));\n    }\n    digestInto(out) {\n        aoutput(out, this);\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.writeInto(out);\n        this.destroy();\n        return out;\n    }\n    digest() {\n        return this.digestInto(new Uint8Array(this.outputLen));\n    }\n    destroy() {\n        this.destroyed = true;\n        this.state.fill(0);\n    }\n    _cloneInto(to) {\n        const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n        to || (to = new Keccak(blockLen, suffix, outputLen, enableXOF, rounds));\n        to.state32.set(this.state32);\n        to.pos = this.pos;\n        to.posOut = this.posOut;\n        to.finished = this.finished;\n        to.rounds = rounds;\n        // Suffix can change in cSHAKE\n        to.suffix = suffix;\n        to.outputLen = outputLen;\n        to.enableXOF = enableXOF;\n        to.destroyed = this.destroyed;\n        return to;\n    }\n}\nconst gen = (suffix, blockLen, outputLen) => wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n/** SHA3-224 hash function. */\nexport const sha3_224 = /* @__PURE__ */ gen(0x06, 144, 224 / 8);\n/** SHA3-256 hash function. Different from keccak-256. */\nexport const sha3_256 = /* @__PURE__ */ gen(0x06, 136, 256 / 8);\n/** SHA3-384 hash function. */\nexport const sha3_384 = /* @__PURE__ */ gen(0x06, 104, 384 / 8);\n/** SHA3-512 hash function. */\nexport const sha3_512 = /* @__PURE__ */ gen(0x06, 72, 512 / 8);\n/** keccak-224 hash function. */\nexport const keccak_224 = /* @__PURE__ */ gen(0x01, 144, 224 / 8);\n/** keccak-256 hash function. Different from SHA3-256. */\nexport const keccak_256 = /* @__PURE__ */ gen(0x01, 136, 256 / 8);\n/** keccak-384 hash function. */\nexport const keccak_384 = /* @__PURE__ */ gen(0x01, 104, 384 / 8);\n/** keccak-512 hash function. */\nexport const keccak_512 = /* @__PURE__ */ gen(0x01, 72, 512 / 8);\nconst genShake = (suffix, blockLen, outputLen) => wrapXOFConstructorWithOpts((opts = {}) => new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true));\n/** SHAKE128 XOF with 128-bit security. */\nexport const shake128 = /* @__PURE__ */ genShake(0x1f, 168, 128 / 8);\n/** SHAKE256 XOF with 256-bit security. */\nexport const shake256 = /* @__PURE__ */ genShake(0x1f, 136, 256 / 8);\n//# sourceMappingURL=sha3.js.map","/**\n * SHA2-256 a.k.a. sha256. In JS, it is the fastest hash, even faster than Blake3.\n *\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n *\n * Check out [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n/** Round constants: first 32 bits of fractional parts of the cube roots of the first 64 primes 2..311). */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Initial state: first 32 bits of fractional parts of the square roots of the first 8 primes 2..19. */\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n/**\n * Temporary buffer, not used to store anything between runs.\n * Named this way because it matches specification.\n */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\n/**\n * Constants taken from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf.\n */\nclass SHA224 extends SHA256 {\n    constructor() {\n        super();\n        this.A = 0xc1059ed8 | 0;\n        this.B = 0x367cd507 | 0;\n        this.C = 0x3070dd17 | 0;\n        this.D = 0xf70e5939 | 0;\n        this.E = 0xffc00b31 | 0;\n        this.F = 0x68581511 | 0;\n        this.G = 0x64f98fa7 | 0;\n        this.H = 0xbefa4fa4 | 0;\n        this.outputLen = 28;\n    }\n}\n/** SHA2-256 hash function */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/** SHA2-224 hash function */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n//# sourceMappingURL=sha256.js.map","import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160';\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3';\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport * as Bytes from './Bytes.js';\nimport * as Hex from './Hex.js';\n/**\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef')\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\n * ```\n *\n * @example\n * ### Calculate Hash of a String\n *\n * ```ts twoslash\n * import { Hash, Hex } from 'ox'\n *\n * Hash.keccak256(Hex.fromString('hello world'))\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\n * ```\n *\n * @example\n * ### Configure Return Type\n *\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\n * // @log: Uint8Array [...]\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Keccak256 hash.\n */\nexport function keccak256(value, options = {}) {\n    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;\n    const bytes = noble_keccak256(Bytes.from(value));\n    if (as === 'Bytes')\n        return bytes;\n    return Hex.fromBytes(bytes);\n}\n/**\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.ripemd160('0xdeadbeef')\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Ripemd160 hash.\n */\nexport function ripemd160(value, options = {}) {\n    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;\n    const bytes = noble_ripemd160(Bytes.from(value));\n    if (as === 'Bytes')\n        return bytes;\n    return Hex.fromBytes(bytes);\n}\n/**\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.sha256('0xdeadbeef')\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Sha256 hash.\n */\nexport function sha256(value, options = {}) {\n    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;\n    const bytes = noble_sha256(Bytes.from(value));\n    if (as === 'Bytes')\n        return bytes;\n    return Hex.fromBytes(bytes);\n}\n/**\n * Checks if a string is a valid hash value.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.validate('0x')\n * // @log: false\n *\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns Whether the value is a valid hash.\n */\nexport function validate(value) {\n    return Hex.validate(value) && Hex.size(value) === 32;\n}\n//# sourceMappingURL=Hash.js.map","/**\n * @internal\n *\n * Map with a LRU (Least recently used) policy.\n * @see https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\n */\nexport class LruMap extends Map {\n    constructor(size) {\n        super();\n        Object.defineProperty(this, \"maxSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxSize = size;\n    }\n    get(key) {\n        const value = super.get(key);\n        if (super.has(key) && value !== undefined) {\n            this.delete(key);\n            super.set(key, value);\n        }\n        return value;\n    }\n    set(key, value) {\n        super.set(key, value);\n        if (this.maxSize && this.size > this.maxSize) {\n            const firstKey = this.keys().next().value;\n            if (firstKey)\n                this.delete(firstKey);\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=lru.js.map","import { LruMap } from './internal/lru.js';\nconst caches = {\n    checksum: /*#__PURE__*/ new LruMap(8192),\n};\nexport const checksum = caches.checksum;\n/**\n * Clears all global caches.\n *\n * @example\n * ```ts\n * import { Caches } from 'ox'\n * Caches.clear()\n * ```\n */\nexport function clear() {\n    for (const cache of Object.values(caches))\n        cache.clear();\n}\n//# sourceMappingURL=Caches.js.map","import * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Json from './Json.js';\n/**\n * Asserts that a {@link ox#PublicKey.PublicKey} is valid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @error: PublicKey.InvalidError: Value \\`{\"y\":\"1\"}\\` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function assert(publicKey, options = {}) {\n    const { compressed } = options;\n    const { prefix, x, y } = publicKey;\n    // Uncompressed\n    if (compressed === false ||\n        (typeof x === 'bigint' && typeof y === 'bigint')) {\n        if (prefix !== 4)\n            throw new InvalidPrefixError({\n                prefix,\n                cause: new InvalidUncompressedPrefixError(),\n            });\n        return;\n    }\n    // Compressed\n    if (compressed === true ||\n        (typeof x === 'bigint' && typeof y === 'undefined')) {\n        if (prefix !== 3 && prefix !== 2)\n            throw new InvalidPrefixError({\n                prefix,\n                cause: new InvalidCompressedPrefixError(),\n            });\n        return;\n    }\n    // Unknown/invalid\n    throw new InvalidError({ publicKey });\n}\n/**\n * Compresses a {@link ox#PublicKey.PublicKey}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const compressed = PublicKey.compress(publicKey) // [!code focus]\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The public key to compress.\n * @returns The compressed public key.\n */\nexport function compress(publicKey) {\n    const { x, y } = publicKey;\n    return {\n        prefix: y % 2n === 0n ? 2 : 3,\n        x,\n    };\n}\n/**\n * Instantiates a typed {@link ox#PublicKey.PublicKey} object from a {@link ox#PublicKey.PublicKey}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from('0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param value - The public key value to instantiate.\n * @returns The instantiated {@link ox#PublicKey.PublicKey}.\n */\nexport function from(value) {\n    const publicKey = (() => {\n        if (Hex.validate(value))\n            return fromHex(value);\n        if (Bytes.validate(value))\n            return fromBytes(value);\n        const { prefix, x, y } = value;\n        if (typeof x === 'bigint' && typeof y === 'bigint')\n            return { prefix: prefix ?? 0x04, x, y };\n        return { prefix, x };\n    })();\n    assert(publicKey);\n    return publicKey;\n}\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromBytes(publicKey) {\n    return fromHex(Hex.fromBytes(publicKey));\n}\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### Deserializing a Compressed Public Key\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x038318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed75')\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromHex(publicKey) {\n    if (publicKey.length !== 132 &&\n        publicKey.length !== 130 &&\n        publicKey.length !== 68)\n        throw new InvalidSerializedSizeError({ publicKey });\n    if (publicKey.length === 130) {\n        const x = BigInt(Hex.slice(publicKey, 0, 32));\n        const y = BigInt(Hex.slice(publicKey, 32, 64));\n        return {\n            prefix: 4,\n            x,\n            y,\n        };\n    }\n    if (publicKey.length === 132) {\n        const prefix = Number(Hex.slice(publicKey, 0, 1));\n        const x = BigInt(Hex.slice(publicKey, 1, 33));\n        const y = BigInt(Hex.slice(publicKey, 33, 65));\n        return {\n            prefix,\n            x,\n            y,\n        };\n    }\n    const prefix = Number(Hex.slice(publicKey, 0, 1));\n    const x = BigInt(Hex.slice(publicKey, 1, 33));\n    return {\n        prefix,\n        x,\n    };\n}\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const bytes = PublicKey.toBytes(publicKey) // [!code focus]\n * // @log: Uint8Array [128, 3, 131, ...]\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toBytes(publicKey, options = {}) {\n    return Bytes.fromHex(toHex(publicKey, options));\n}\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const hex = PublicKey.toHex(publicKey) // [!code focus]\n * // @log: '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5'\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toHex(publicKey, options = {}) {\n    assert(publicKey);\n    const { prefix, x, y } = publicKey;\n    const { includePrefix = true } = options;\n    const publicKey_ = Hex.concat(includePrefix ? Hex.fromNumber(prefix, { size: 1 }) : '0x', Hex.fromNumber(x, { size: 32 }), \n    // If the public key is not compressed, add the y coordinate.\n    typeof y === 'bigint' ? Hex.fromNumber(y, { size: 32 }) : '0x');\n    return publicKey_;\n}\n/**\n * Validates a {@link ox#PublicKey.PublicKey}. Returns `true` if valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const valid = PublicKey.validate({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @log: false\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function validate(publicKey, options = {}) {\n    try {\n        assert(publicKey, options);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Thrown when a public key is invalid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({ y: 1n })\n * // @error: PublicKey.InvalidError: Value `{\"y\":1n}` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n */\nexport class InvalidError extends Errors.BaseError {\n    constructor({ publicKey }) {\n        super(`Value \\`${Json.stringify(publicKey)}\\` is not a valid public key.`, {\n            metaMessages: [\n                'Public key must contain:',\n                '- an `x` and `prefix` value (compressed)',\n                '- an `x`, `y`, and `prefix` value (uncompressed)',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidError'\n        });\n    }\n}\n/** Thrown when a public key has an invalid prefix. */\nexport class InvalidPrefixError extends Errors.BaseError {\n    constructor({ prefix, cause }) {\n        super(`Prefix \"${prefix}\" is invalid.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidPrefixError'\n        });\n    }\n}\n/** Thrown when the public key has an invalid prefix for a compressed public key. */\nexport class InvalidCompressedPrefixError extends Errors.BaseError {\n    constructor() {\n        super('Prefix must be 2 or 3 for compressed public keys.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidCompressedPrefixError'\n        });\n    }\n}\n/** Thrown when the public key has an invalid prefix for an uncompressed public key. */\nexport class InvalidUncompressedPrefixError extends Errors.BaseError {\n    constructor() {\n        super('Prefix must be 4 for uncompressed public keys.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidUncompressedPrefixError'\n        });\n    }\n}\n/** Thrown when the public key has an invalid serialized size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n    constructor({ publicKey }) {\n        super(`Value \\`${publicKey}\\` is an invalid public key size.`, {\n            metaMessages: [\n                'Expected: 33 bytes (compressed + prefix), 64 bytes (uncompressed) or 65 bytes (uncompressed + prefix).',\n                `Received ${Hex.size(Hex.from(publicKey))} bytes.`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidSerializedSizeError'\n        });\n    }\n}\n//# sourceMappingURL=PublicKey.js.map","import * as Bytes from './Bytes.js';\nimport * as Caches from './Caches.js';\nimport * as Errors from './Errors.js';\nimport * as Hash from './Hash.js';\nimport * as PublicKey from './PublicKey.js';\nconst addressRegex = /*#__PURE__*/ /^0x[a-fA-F0-9]{40}$/;\n/**\n * Asserts that the given value is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.assert('0xdeadbeef')\n * // @error: InvalidAddressError: Address \"0xdeadbeef\" is invalid.\n * ```\n *\n * @param value - Value to assert if it is a valid address.\n * @param options - Assertion options.\n */\nexport function assert(value, options = {}) {\n    const { strict = true } = options;\n    if (!addressRegex.test(value))\n        throw new InvalidAddressError({\n            address: value,\n            cause: new InvalidInputError(),\n        });\n    if (strict) {\n        if (value.toLowerCase() === value)\n            return;\n        if (checksum(value) !== value)\n            throw new InvalidAddressError({\n                address: value,\n                cause: new InvalidChecksumError(),\n            });\n    }\n}\n/**\n * Computes the checksum address for the given {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.checksum('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @param address - The address to compute the checksum for.\n * @returns The checksummed address.\n */\nexport function checksum(address) {\n    if (Caches.checksum.has(address))\n        return Caches.checksum.get(address);\n    assert(address, { strict: false });\n    const hexAddress = address.substring(2).toLowerCase();\n    const hash = Hash.keccak256(Bytes.fromString(hexAddress), { as: 'Bytes' });\n    const characters = hexAddress.split('');\n    for (let i = 0; i < 40; i += 2) {\n        if (hash[i >> 1] >> 4 >= 8 && characters[i]) {\n            characters[i] = characters[i].toUpperCase();\n        }\n        if ((hash[i >> 1] & 0x0f) >= 8 && characters[i + 1]) {\n            characters[i + 1] = characters[i + 1].toUpperCase();\n        }\n    }\n    const result = `0x${characters.join('')}`;\n    Caches.checksum.set(address, result);\n    return result;\n}\n/**\n * Converts a stringified address to a typed (checksummed) {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e')\n * // @log: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0xa0cf798816d4b9b9866b5330eea46a18382f251e', {\n *   checksum: false\n * })\n * // @log: '0xa0cf798816d4b9b9866b5330eea46a18382f251e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('hello')\n * // @error: InvalidAddressError: Address \"0xa\" is invalid.\n * ```\n *\n * @param address - An address string to convert to a typed Address.\n * @param options - Conversion options.\n * @returns The typed Address.\n */\nexport function from(address, options = {}) {\n    const { checksum: checksumVal = false } = options;\n    assert(address);\n    if (checksumVal)\n        return checksum(address);\n    return address;\n}\n/**\n * Converts an ECDSA public key to an {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address, PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from(\n *   '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5',\n * )\n * const address = Address.fromPublicKey(publicKey)\n * // @log: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266'\n * ```\n *\n * @param publicKey - The ECDSA public key to convert to an {@link ox#Address.Address}.\n * @param options - Conversion options.\n * @returns The {@link ox#Address.Address} corresponding to the public key.\n */\nexport function fromPublicKey(publicKey, options = {}) {\n    const address = Hash.keccak256(`0x${PublicKey.toHex(publicKey).slice(4)}`).substring(26);\n    return from(`0x${address}`, options);\n}\n/**\n * Checks if two {@link ox#Address.Address} are equal.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'\n * )\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.isEqual(\n *   '0xa0cf798816d4b9b9866b5330eea46a18382f251e',\n *   '0xA0Cf798816D4b9b9866b5330EEa46a18382f251f'\n * )\n * // @log: false\n * ```\n *\n * @param addressA - The first address to compare.\n * @param addressB - The second address to compare.\n * @returns Whether the addresses are equal.\n */\nexport function isEqual(addressA, addressB) {\n    assert(addressA, { strict: false });\n    assert(addressB, { strict: false });\n    return addressA.toLowerCase() === addressB.toLowerCase();\n}\n/**\n * Checks if the given address is a valid {@link ox#Address.Address}.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xA0Cf798816D4b9b9866b5330EEa46a18382f251e')\n * // @log: true\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.validate('0xdeadbeef')\n * // @log: false\n * ```\n *\n * @param address - Value to check if it is a valid address.\n * @param options - Check options.\n * @returns Whether the address is a valid address.\n */\nexport function validate(address, options = {}) {\n    const { strict = true } = options ?? {};\n    try {\n        assert(address, { strict });\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Thrown when an address is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Address } from 'ox'\n *\n * Address.from('0x123')\n * // @error: Address.InvalidAddressError: Address `0x123` is invalid.\n * ```\n */\nexport class InvalidAddressError extends Errors.BaseError {\n    constructor({ address, cause }) {\n        super(`Address \"${address}\" is invalid.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Address.InvalidAddressError'\n        });\n    }\n}\n/** Thrown when an address is not a 20 byte (40 hexadecimal character) value. */\nexport class InvalidInputError extends Errors.BaseError {\n    constructor() {\n        super('Address is not a 20 byte (40 hexadecimal character) value.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Address.InvalidInputError'\n        });\n    }\n}\n/** Thrown when an address does not match its checksum counterpart. */\nexport class InvalidChecksumError extends Errors.BaseError {\n    constructor() {\n        super('Address does not match its checksum counterpart.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Address.InvalidChecksumError'\n        });\n    }\n}\n//# sourceMappingURL=Address.js.map","import * as Address from '../Address.js';\nimport * as Errors from '../Errors.js';\n/** @internal */\nexport function normalizeSignature(signature) {\n    let active = true;\n    let current = '';\n    let level = 0;\n    let result = '';\n    let valid = false;\n    for (let i = 0; i < signature.length; i++) {\n        const char = signature[i];\n        // If the character is a separator, we want to reactivate.\n        if (['(', ')', ','].includes(char))\n            active = true;\n        // If the character is a \"level\" token, we want to increment/decrement.\n        if (char === '(')\n            level++;\n        if (char === ')')\n            level--;\n        // If we aren't active, we don't want to mutate the result.\n        if (!active)\n            continue;\n        // If level === 0, we are at the definition level.\n        if (level === 0) {\n            if (char === ' ' && ['event', 'function', 'error', ''].includes(result))\n                result = '';\n            else {\n                result += char;\n                // If we are at the end of the definition, we must be finished.\n                if (char === ')') {\n                    valid = true;\n                    break;\n                }\n            }\n            continue;\n        }\n        // Ignore spaces\n        if (char === ' ') {\n            // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n            if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n                current = '';\n                active = false;\n            }\n            continue;\n        }\n        result += char;\n        current += char;\n    }\n    if (!valid)\n        throw new Errors.BaseError('Unable to normalize signature.');\n    return result;\n}\n/** @internal */\nexport function isArgOfType(arg, abiParameter) {\n    const argType = typeof arg;\n    const abiParameterType = abiParameter.type;\n    switch (abiParameterType) {\n        case 'address':\n            return Address.validate(arg, { strict: false });\n        case 'bool':\n            return argType === 'boolean';\n        case 'function':\n            return argType === 'string';\n        case 'string':\n            return argType === 'string';\n        default: {\n            if (abiParameterType === 'tuple' && 'components' in abiParameter)\n                return Object.values(abiParameter.components).every((component, index) => {\n                    return isArgOfType(Object.values(arg)[index], component);\n                });\n            // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n            // https://regexr.com/6v8hp\n            if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(abiParameterType))\n                return argType === 'number' || argType === 'bigint';\n            // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n            // https://regexr.com/6va55\n            if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n                return argType === 'string' || arg instanceof Uint8Array;\n            // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n            // https://regexr.com/6va6i\n            if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n                return (Array.isArray(arg) &&\n                    arg.every((x) => isArgOfType(x, {\n                        ...abiParameter,\n                        // Pop off `[]` or `[M]` from end of type\n                        type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n                    })));\n            }\n            return false;\n        }\n    }\n}\n/** @internal */\nexport function getAmbiguousTypes(sourceParameters, targetParameters, args) {\n    for (const parameterIndex in sourceParameters) {\n        const sourceParameter = sourceParameters[parameterIndex];\n        const targetParameter = targetParameters[parameterIndex];\n        if (sourceParameter.type === 'tuple' &&\n            targetParameter.type === 'tuple' &&\n            'components' in sourceParameter &&\n            'components' in targetParameter)\n            return getAmbiguousTypes(sourceParameter.components, targetParameter.components, args[parameterIndex]);\n        const types = [sourceParameter.type, targetParameter.type];\n        const ambiguous = (() => {\n            if (types.includes('address') && types.includes('bytes20'))\n                return true;\n            if (types.includes('address') && types.includes('string'))\n                return Address.validate(args[parameterIndex], {\n                    strict: false,\n                });\n            if (types.includes('address') && types.includes('bytes'))\n                return Address.validate(args[parameterIndex], {\n                    strict: false,\n                });\n            return false;\n        })();\n        if (ambiguous)\n            return types;\n    }\n    return;\n}\n//# sourceMappingURL=abiItem.js.map","import * as abitype from 'abitype';\nimport * as Errors from './Errors.js';\nimport * as Hash from './Hash.js';\nimport * as Hex from './Hex.js';\nimport * as internal from './internal/abiItem.js';\n/**\n * Formats an {@link ox#AbiItem.AbiItem} into a **Human Readable ABI Item**.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const formatted = AbiItem.format({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiItem - The ABI Item to format.\n * @returns The formatted ABI Item  .\n */\nexport function format(abiItem) {\n    return abitype.formatAbiItem(abiItem);\n}\n/**\n * Parses an arbitrary **JSON ABI Item** or **Human Readable ABI Item** into a typed {@link ox#AbiItem.AbiItem}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from(\n *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]\n * )\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const abiItem = AbiItem.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'function approve(Foo foo) returns (bool)',\n * ])\n *\n * abiItem\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiItem - The ABI Item to parse.\n * @returns The typed ABI Item.\n */\nexport function from(abiItem, options = {}) {\n    const { prepare = true } = options;\n    const item = (() => {\n        if (Array.isArray(abiItem))\n            return abitype.parseAbiItem(abiItem);\n        if (typeof abiItem === 'string')\n            return abitype.parseAbiItem(abiItem);\n        return abiItem;\n    })();\n    return {\n        ...item,\n        ...(prepare ? { hash: getSignatureHash(item) } : {}),\n    };\n}\n/**\n * Extracts an {@link ox#AbiItem.AbiItem} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ABI Items can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiItem.fromAbi(abi, 'Transfer') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Extracting by Selector\n *\n * ABI Items can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.\n *\n * ```ts twoslash\n * import { Abi, AbiItem } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n * const item = AbiItem.fromAbi(abi, '0x095ea7b3') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::note\n *\n * Extracting via a hex selector is useful when extracting an ABI Item from an `eth_call` RPC response,\n * a Transaction `input`, or from Event Log `topics`.\n *\n * :::\n *\n * @param abi - The ABI to extract from.\n * @param name - The name (or selector) of the ABI item to extract.\n * @param options - Extraction options.\n * @returns The ABI item.\n */\nexport function fromAbi(abi, name, options) {\n    const { args = [], prepare = true } = (options ??\n        {});\n    const isSelector = Hex.validate(name, { strict: false });\n    const abiItems = abi.filter((abiItem) => {\n        if (isSelector) {\n            if (abiItem.type === 'function' || abiItem.type === 'error')\n                return getSelector(abiItem) === Hex.slice(name, 0, 4);\n            if (abiItem.type === 'event')\n                return getSignatureHash(abiItem) === name;\n            return false;\n        }\n        return 'name' in abiItem && abiItem.name === name;\n    });\n    if (abiItems.length === 0)\n        throw new NotFoundError({ name: name });\n    if (abiItems.length === 1)\n        return {\n            ...abiItems[0],\n            ...(prepare ? { hash: getSignatureHash(abiItems[0]) } : {}),\n        };\n    let matchedAbiItem = undefined;\n    for (const abiItem of abiItems) {\n        if (!('inputs' in abiItem))\n            continue;\n        if (!args || args.length === 0) {\n            if (!abiItem.inputs || abiItem.inputs.length === 0)\n                return {\n                    ...abiItem,\n                    ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),\n                };\n            continue;\n        }\n        if (!abiItem.inputs)\n            continue;\n        if (abiItem.inputs.length === 0)\n            continue;\n        if (abiItem.inputs.length !== args.length)\n            continue;\n        const matched = args.every((arg, index) => {\n            const abiParameter = 'inputs' in abiItem && abiItem.inputs[index];\n            if (!abiParameter)\n                return false;\n            return internal.isArgOfType(arg, abiParameter);\n        });\n        if (matched) {\n            // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n            if (matchedAbiItem &&\n                'inputs' in matchedAbiItem &&\n                matchedAbiItem.inputs) {\n                const ambiguousTypes = internal.getAmbiguousTypes(abiItem.inputs, matchedAbiItem.inputs, args);\n                if (ambiguousTypes)\n                    throw new AmbiguityError({\n                        abiItem,\n                        type: ambiguousTypes[0],\n                    }, {\n                        abiItem: matchedAbiItem,\n                        type: ambiguousTypes[1],\n                    });\n            }\n            matchedAbiItem = abiItem;\n        }\n    }\n    const abiItem = (() => {\n        if (matchedAbiItem)\n            return matchedAbiItem;\n        const [abiItem, ...overloads] = abiItems;\n        return { ...abiItem, overloads };\n    })();\n    if (!abiItem)\n        throw new NotFoundError({ name: name });\n    return {\n        ...abiItem,\n        ...(prepare ? { hash: getSignatureHash(abiItem) } : {}),\n    };\n}\n/**\n * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiItem.AbiItem}.\n *\n * Useful for computing function selectors for calldata.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const selector = AbiItem.getSelector('function ownerOf(uint256 tokenId)')\n * // @log: '0x6352211e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const selector = AbiItem.getSelector({\n *   inputs: [{ type: 'uint256' }],\n *   name: 'ownerOf',\n *   outputs: [],\n *   stateMutability: 'view',\n *   type: 'function'\n * })\n * // @log: '0x6352211e'\n * ```\n *\n * @param abiItem - The ABI item to compute the selector for. Can be a signature or an ABI item for an error, event, function, etc.\n * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.\n */\nexport function getSelector(abiItem) {\n    return Hex.slice(getSignatureHash(abiItem), 0, 4);\n}\n/**\n * Computes the stringified signature for a given {@link ox#AbiItem.AbiItem}.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const signature = AbiItem.getSignature('function ownerOf(uint256 tokenId)')\n * // @log: 'ownerOf(uint256)'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const signature = AbiItem.getSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // @log: 'ownerOf(uint256)'\n * ```\n *\n * @param abiItem - The ABI Item to compute the signature for.\n * @returns The stringified signature of the ABI Item.\n */\nexport function getSignature(abiItem) {\n    const signature = (() => {\n        if (typeof abiItem === 'string')\n            return abiItem;\n        return abitype.formatAbiItem(abiItem);\n    })();\n    return internal.normalizeSignature(signature);\n}\n/**\n * Computes the signature hash for an {@link ox#AbiItem.AbiItem}.\n *\n * Useful for computing Event Topic values.\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const hash = AbiItem.getSignatureHash('event Transfer(address indexed from, address indexed to, uint256 amount)')\n * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiItem } from 'ox'\n *\n * const hash = AbiItem.getSignatureHash({\n *   name: 'Transfer',\n *   type: 'event',\n *   inputs: [\n *     { name: 'from', type: 'address', indexed: true },\n *     { name: 'to', type: 'address', indexed: true },\n *     { name: 'amount', type: 'uint256', indexed: false },\n *   ],\n * })\n * // @log: '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef'\n * ```\n *\n * @param abiItem - The ABI Item to compute the signature hash for.\n * @returns The {@link ox#Hash.(keccak256:function)} hash of the ABI item's signature.\n */\nexport function getSignatureHash(abiItem) {\n    if (typeof abiItem !== 'string' && 'hash' in abiItem && abiItem.hash)\n        return abiItem.hash;\n    return Hash.keccak256(Hex.fromString(getSignature(abiItem)));\n}\n/**\n * Throws when ambiguous types are found on overloaded ABI items.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from(['function foo(address)', 'function foo(bytes20)'])\n * AbiFunction.fromAbi(foo, 'foo', {\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.\n * // @error: `bytes20` in `foo(bytes20)`, and\n * // @error: `address` in `foo(address)`\n * // @error: These types encode differently and cannot be distinguished at runtime.\n * // @error: Remove one of the ambiguous items in the ABI.\n * ```\n *\n * ### Solution\n *\n * Remove one of the ambiguous types from the ABI.\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function foo(bytes20)' // [!code --]\n * ])\n * AbiFunction.fromAbi(foo, 'foo', {\n *   args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n * })\n * // @error: AbiItem.AmbiguityError: Found ambiguous types in overloaded ABI Items.\n * // @error: `bytes20` in `foo(bytes20)`, and\n * // @error: `address` in `foo(address)`\n * // @error: These types encode differently and cannot be distinguished at runtime.\n * // @error: Remove one of the ambiguous items in the ABI.\n * ```\n */\nexport class AmbiguityError extends Errors.BaseError {\n    constructor(x, y) {\n        super('Found ambiguous types in overloaded ABI Items.', {\n            metaMessages: [\n                // TODO: abitype to add support for signature-formatted ABI items.\n                `\\`${x.type}\\` in \\`${internal.normalizeSignature(abitype.formatAbiItem(x.abiItem))}\\`, and`,\n                `\\`${y.type}\\` in \\`${internal.normalizeSignature(abitype.formatAbiItem(y.abiItem))}\\``,\n                '',\n                'These types encode differently and cannot be distinguished at runtime.',\n                'Remove one of the ambiguous items in the ABI.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiItem.AmbiguityError'\n        });\n    }\n}\n/**\n * Throws when an ABI item is not found in the ABI.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, 'baz')\n * // @error: AbiItem.NotFoundError: ABI function with name \"baz\" not found.\n * ```\n *\n * ### Solution\n *\n * Ensure the ABI item exists on the ABI.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)',\n *   'function baz(bool)' // [!code ++]\n * ])\n * AbiFunction.fromAbi(foo, 'baz')\n * ```\n */\nexport class NotFoundError extends Errors.BaseError {\n    constructor({ name, data, type = 'item', }) {\n        const selector = (() => {\n            if (name)\n                return ` with name \"${name}\"`;\n            if (data)\n                return ` with data \"${data}\"`;\n            return '';\n        })();\n        super(`ABI ${type}${selector} not found.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiItem.NotFoundError'\n        });\n    }\n}\n/**\n * Throws when the selector size is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, '0xaaa')\n * // @error: AbiItem.InvalidSelectorSizeError: Selector size is invalid. Expected 4 bytes. Received 2 bytes (\"0xaaa\").\n * ```\n *\n * ### Solution\n *\n * Ensure the selector size is 4 bytes.\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const foo = Abi.from([\n *   'function foo(address)',\n *   'function bar(uint)'\n * ])\n * AbiFunction.fromAbi(foo, '0x7af82b1a')\n * ```\n */\nexport class InvalidSelectorSizeError extends Errors.BaseError {\n    constructor({ data }) {\n        super(`Selector size is invalid. Expected 4 bytes. Received ${Hex.size(data)} bytes (\"${data}\").`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiItem.InvalidSelectorSizeError'\n        });\n    }\n}\n//# sourceMappingURL=AbiItem.js.map","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/;\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nexport const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=Solidity.js.map","import * as AbiParameters from '../AbiParameters.js';\nimport * as Address from '../Address.js';\nimport * as Bytes from '../Bytes.js';\nimport * as Errors from '../Errors.js';\nimport * as Hex from '../Hex.js';\nimport { integerRegex } from '../Solidity.js';\n/** @internal */\nexport function decodeParameter(cursor, param, options) {\n    const { checksumAddress, staticPosition } = options;\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return decodeArray(cursor, { ...param, type }, { checksumAddress, length, staticPosition });\n    }\n    if (param.type === 'tuple')\n        return decodeTuple(cursor, param, {\n            checksumAddress,\n            staticPosition,\n        });\n    if (param.type === 'address')\n        return decodeAddress(cursor, { checksum: checksumAddress });\n    if (param.type === 'bool')\n        return decodeBool(cursor);\n    if (param.type.startsWith('bytes'))\n        return decodeBytes(cursor, param, { staticPosition });\n    if (param.type.startsWith('uint') || param.type.startsWith('int'))\n        return decodeNumber(cursor, param);\n    if (param.type === 'string')\n        return decodeString(cursor, { staticPosition });\n    throw new AbiParameters.InvalidTypeError(param.type);\n}\nconst sizeOfLength = 32;\nconst sizeOfOffset = 32;\n/** @internal */\nexport function decodeAddress(cursor, options = {}) {\n    const { checksum = false } = options;\n    const value = cursor.readBytes(32);\n    const wrap = (address) => checksum ? Address.checksum(address) : address;\n    return [wrap(Hex.fromBytes(Bytes.slice(value, -20))), 32];\n}\n/** @internal */\nexport function decodeArray(cursor, param, options) {\n    const { checksumAddress, length, staticPosition } = options;\n    // If the length of the array is not known in advance (dynamic array),\n    // this means we will need to wonder off to the pointer and decode.\n    if (!length) {\n        // Dealing with a dynamic type, so get the offset of the array data.\n        const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const startOfData = start + sizeOfLength;\n        // Get the length of the array from the offset.\n        cursor.setPosition(start);\n        const length = Bytes.toNumber(cursor.readBytes(sizeOfLength));\n        // Check if the array has any dynamic children.\n        const dynamicChild = hasDynamicChild(param);\n        let consumed = 0;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // If any of the children is dynamic, then all elements will be offset pointer, thus size of one slot (32 bytes).\n            // Otherwise, elements will be the size of their encoding (consumed bytes).\n            cursor.setPosition(startOfData + (dynamicChild ? i * 32 : consumed));\n            const [data, consumed_] = decodeParameter(cursor, param, {\n                checksumAddress,\n                staticPosition: startOfData,\n            });\n            consumed += consumed_;\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance,\n    // and the length of an element deeply nested in the array is not known,\n    // we need to decode the offset of the array data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the array data.\n        const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of current slot + offset.\n        const start = staticPosition + offset;\n        const value = [];\n        for (let i = 0; i < length; ++i) {\n            // Move cursor along to the next slot (next offset pointer).\n            cursor.setPosition(start + i * 32);\n            const [data] = decodeParameter(cursor, param, {\n                checksumAddress,\n                staticPosition: start,\n            });\n            value.push(data);\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the length of the array is known in advance and the array is deeply static,\n    // then we can just decode each element in sequence.\n    let consumed = 0;\n    const value = [];\n    for (let i = 0; i < length; ++i) {\n        const [data, consumed_] = decodeParameter(cursor, param, {\n            checksumAddress,\n            staticPosition: staticPosition + consumed,\n        });\n        consumed += consumed_;\n        value.push(data);\n    }\n    return [value, consumed];\n}\n/** @internal */\nexport function decodeBool(cursor) {\n    return [Bytes.toBoolean(cursor.readBytes(32), { size: 32 }), 32];\n}\n/** @internal */\nexport function decodeBytes(cursor, param, { staticPosition }) {\n    const [_, size] = param.type.split('bytes');\n    if (!size) {\n        // Dealing with dynamic types, so get the offset of the bytes data.\n        const offset = Bytes.toNumber(cursor.readBytes(32));\n        // Set position of the cursor to start of bytes data.\n        cursor.setPosition(staticPosition + offset);\n        const length = Bytes.toNumber(cursor.readBytes(32));\n        // If there is no length, we have zero data.\n        if (length === 0) {\n            // As we have gone wondering, restore to the original position + next slot.\n            cursor.setPosition(staticPosition + 32);\n            return ['0x', 32];\n        }\n        const data = cursor.readBytes(length);\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [Hex.fromBytes(data), 32];\n    }\n    const value = Hex.fromBytes(cursor.readBytes(Number.parseInt(size), 32));\n    return [value, 32];\n}\n/** @internal */\nexport function decodeNumber(cursor, param) {\n    const signed = param.type.startsWith('int');\n    const size = Number.parseInt(param.type.split('int')[1] || '256');\n    const value = cursor.readBytes(32);\n    return [\n        size > 48\n            ? Bytes.toBigInt(value, { signed })\n            : Bytes.toNumber(value, { signed }),\n        32,\n    ];\n}\n/** @internal */\nexport function decodeTuple(cursor, param, options) {\n    const { checksumAddress, staticPosition } = options;\n    // Tuples can have unnamed components (i.e. they are arrays), so we must\n    // determine whether the tuple is named or unnamed. In the case of a named\n    // tuple, the value will be an object where each property is the name of the\n    // component. In the case of an unnamed tuple, the value will be an array.\n    const hasUnnamedChild = param.components.length === 0 || param.components.some(({ name }) => !name);\n    // Initialize the value to an object or an array, depending on whether the\n    // tuple is named or unnamed.\n    const value = hasUnnamedChild ? [] : {};\n    let consumed = 0;\n    // If the tuple has a dynamic child, we must first decode the offset to the\n    // tuple data.\n    if (hasDynamicChild(param)) {\n        // Dealing with dynamic types, so get the offset of the tuple data.\n        const offset = Bytes.toNumber(cursor.readBytes(sizeOfOffset));\n        // Start is the static position of referencing slot + offset.\n        const start = staticPosition + offset;\n        for (let i = 0; i < param.components.length; ++i) {\n            const component = param.components[i];\n            cursor.setPosition(start + consumed);\n            const [data, consumed_] = decodeParameter(cursor, component, {\n                checksumAddress,\n                staticPosition: start,\n            });\n            consumed += consumed_;\n            value[hasUnnamedChild ? i : component?.name] = data;\n        }\n        // As we have gone wondering, restore to the original position + next slot.\n        cursor.setPosition(staticPosition + 32);\n        return [value, 32];\n    }\n    // If the tuple has static children, we can just decode each component\n    // in sequence.\n    for (let i = 0; i < param.components.length; ++i) {\n        const component = param.components[i];\n        const [data, consumed_] = decodeParameter(cursor, component, {\n            checksumAddress,\n            staticPosition,\n        });\n        value[hasUnnamedChild ? i : component?.name] = data;\n        consumed += consumed_;\n    }\n    return [value, consumed];\n}\n/** @internal */\nexport function decodeString(cursor, { staticPosition }) {\n    // Get offset to start of string data.\n    const offset = Bytes.toNumber(cursor.readBytes(32));\n    // Start is the static position of current slot + offset.\n    const start = staticPosition + offset;\n    cursor.setPosition(start);\n    const length = Bytes.toNumber(cursor.readBytes(32));\n    // If there is no length, we have zero data (empty string).\n    if (length === 0) {\n        cursor.setPosition(staticPosition + 32);\n        return ['', 32];\n    }\n    const data = cursor.readBytes(length, 32);\n    const value = Bytes.toString(Bytes.trimLeft(data));\n    // As we have gone wondering, restore to the original position + next slot.\n    cursor.setPosition(staticPosition + 32);\n    return [value, 32];\n}\n/** @internal */\nexport function prepareParameters({ checksumAddress, parameters, values, }) {\n    const preparedParameters = [];\n    for (let i = 0; i < parameters.length; i++) {\n        preparedParameters.push(prepareParameter({\n            checksumAddress,\n            parameter: parameters[i],\n            value: values[i],\n        }));\n    }\n    return preparedParameters;\n}\n/** @internal */\nexport function prepareParameter({ checksumAddress = false, parameter: parameter_, value, }) {\n    const parameter = parameter_;\n    const arrayComponents = getArrayComponents(parameter.type);\n    if (arrayComponents) {\n        const [length, type] = arrayComponents;\n        return encodeArray(value, {\n            checksumAddress,\n            length,\n            parameter: {\n                ...parameter,\n                type,\n            },\n        });\n    }\n    if (parameter.type === 'tuple') {\n        return encodeTuple(value, {\n            checksumAddress,\n            parameter: parameter,\n        });\n    }\n    if (parameter.type === 'address') {\n        return encodeAddress(value, {\n            checksum: checksumAddress,\n        });\n    }\n    if (parameter.type === 'bool') {\n        return encodeBoolean(value);\n    }\n    if (parameter.type.startsWith('uint') || parameter.type.startsWith('int')) {\n        const signed = parameter.type.startsWith('int');\n        const [, , size = '256'] = integerRegex.exec(parameter.type) ?? [];\n        return encodeNumber(value, {\n            signed,\n            size: Number(size),\n        });\n    }\n    if (parameter.type.startsWith('bytes')) {\n        return encodeBytes(value, { type: parameter.type });\n    }\n    if (parameter.type === 'string') {\n        return encodeString(value);\n    }\n    throw new AbiParameters.InvalidTypeError(parameter.type);\n}\n/** @internal */\nexport function encode(preparedParameters) {\n    // 1. Compute the size of the static part of the parameters.\n    let staticSize = 0;\n    for (let i = 0; i < preparedParameters.length; i++) {\n        const { dynamic, encoded } = preparedParameters[i];\n        if (dynamic)\n            staticSize += 32;\n        else\n            staticSize += Hex.size(encoded);\n    }\n    // 2. Split the parameters into static and dynamic parts.\n    const staticParameters = [];\n    const dynamicParameters = [];\n    let dynamicSize = 0;\n    for (let i = 0; i < preparedParameters.length; i++) {\n        const { dynamic, encoded } = preparedParameters[i];\n        if (dynamic) {\n            staticParameters.push(Hex.fromNumber(staticSize + dynamicSize, { size: 32 }));\n            dynamicParameters.push(encoded);\n            dynamicSize += Hex.size(encoded);\n        }\n        else {\n            staticParameters.push(encoded);\n        }\n    }\n    // 3. Concatenate static and dynamic parts.\n    return Hex.concat(...staticParameters, ...dynamicParameters);\n}\n/** @internal */\nexport function encodeAddress(value, options) {\n    const { checksum = false } = options;\n    Address.assert(value, { strict: checksum });\n    return {\n        dynamic: false,\n        encoded: Hex.padLeft(value.toLowerCase()),\n    };\n}\n/** @internal */\nexport function encodeArray(value, options) {\n    const { checksumAddress, length, parameter } = options;\n    const dynamic = length === null;\n    if (!Array.isArray(value))\n        throw new AbiParameters.InvalidArrayError(value);\n    if (!dynamic && value.length !== length)\n        throw new AbiParameters.ArrayLengthMismatchError({\n            expectedLength: length,\n            givenLength: value.length,\n            type: `${parameter.type}[${length}]`,\n        });\n    let dynamicChild = false;\n    const preparedParameters = [];\n    for (let i = 0; i < value.length; i++) {\n        const preparedParam = prepareParameter({\n            checksumAddress,\n            parameter,\n            value: value[i],\n        });\n        if (preparedParam.dynamic)\n            dynamicChild = true;\n        preparedParameters.push(preparedParam);\n    }\n    if (dynamic || dynamicChild) {\n        const data = encode(preparedParameters);\n        if (dynamic) {\n            const length = Hex.fromNumber(preparedParameters.length, { size: 32 });\n            return {\n                dynamic: true,\n                encoded: preparedParameters.length > 0 ? Hex.concat(length, data) : length,\n            };\n        }\n        if (dynamicChild)\n            return { dynamic: true, encoded: data };\n    }\n    return {\n        dynamic: false,\n        encoded: Hex.concat(...preparedParameters.map(({ encoded }) => encoded)),\n    };\n}\n/** @internal */\nexport function encodeBytes(value, { type }) {\n    const [, parametersize] = type.split('bytes');\n    const bytesSize = Hex.size(value);\n    if (!parametersize) {\n        let value_ = value;\n        // If the size is not divisible by 32 bytes, pad the end\n        // with empty bytes to the ceiling 32 bytes.\n        if (bytesSize % 32 !== 0)\n            value_ = Hex.padRight(value_, Math.ceil((value.length - 2) / 2 / 32) * 32);\n        return {\n            dynamic: true,\n            encoded: Hex.concat(Hex.padLeft(Hex.fromNumber(bytesSize, { size: 32 })), value_),\n        };\n    }\n    if (bytesSize !== Number.parseInt(parametersize))\n        throw new AbiParameters.BytesSizeMismatchError({\n            expectedSize: Number.parseInt(parametersize),\n            value,\n        });\n    return { dynamic: false, encoded: Hex.padRight(value) };\n}\n/** @internal */\nexport function encodeBoolean(value) {\n    if (typeof value !== 'boolean')\n        throw new Errors.BaseError(`Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`);\n    return { dynamic: false, encoded: Hex.padLeft(Hex.fromBoolean(value)) };\n}\n/** @internal */\nexport function encodeNumber(value, { signed, size }) {\n    if (typeof size === 'number') {\n        const max = 2n ** (BigInt(size) - (signed ? 1n : 0n)) - 1n;\n        const min = signed ? -max - 1n : 0n;\n        if (value > max || value < min)\n            throw new Hex.IntegerOutOfRangeError({\n                max: max.toString(),\n                min: min.toString(),\n                signed,\n                size: size / 8,\n                value: value.toString(),\n            });\n    }\n    return {\n        dynamic: false,\n        encoded: Hex.fromNumber(value, {\n            size: 32,\n            signed,\n        }),\n    };\n}\n/** @internal */\nexport function encodeString(value) {\n    const hexValue = Hex.fromString(value);\n    const partsLength = Math.ceil(Hex.size(hexValue) / 32);\n    const parts = [];\n    for (let i = 0; i < partsLength; i++) {\n        parts.push(Hex.padRight(Hex.slice(hexValue, i * 32, (i + 1) * 32)));\n    }\n    return {\n        dynamic: true,\n        encoded: Hex.concat(Hex.padRight(Hex.fromNumber(Hex.size(hexValue), { size: 32 })), ...parts),\n    };\n}\n/** @internal */\nexport function encodeTuple(value, options) {\n    const { checksumAddress, parameter } = options;\n    let dynamic = false;\n    const preparedParameters = [];\n    for (let i = 0; i < parameter.components.length; i++) {\n        const param_ = parameter.components[i];\n        const index = Array.isArray(value) ? i : param_.name;\n        const preparedParam = prepareParameter({\n            checksumAddress,\n            parameter: param_,\n            value: value[index],\n        });\n        preparedParameters.push(preparedParam);\n        if (preparedParam.dynamic)\n            dynamic = true;\n    }\n    return {\n        dynamic,\n        encoded: dynamic\n            ? encode(preparedParameters)\n            : Hex.concat(...preparedParameters.map(({ encoded }) => encoded)),\n    };\n}\n/** @internal */\nexport function getArrayComponents(type) {\n    const matches = type.match(/^(.*)\\[(\\d+)?\\]$/);\n    return matches\n        ? // Return `null` if the array is dynamic.\n            [matches[2] ? Number(matches[2]) : null, matches[1]]\n        : undefined;\n}\n/** @internal */\nexport function hasDynamicChild(param) {\n    const { type } = param;\n    if (type === 'string')\n        return true;\n    if (type === 'bytes')\n        return true;\n    if (type.endsWith('[]'))\n        return true;\n    if (type === 'tuple')\n        return param.components?.some(hasDynamicChild);\n    const arrayComponents = getArrayComponents(param.type);\n    if (arrayComponents &&\n        hasDynamicChild({\n            ...param,\n            type: arrayComponents[1],\n        }))\n        return true;\n    return false;\n}\n//# sourceMappingURL=abiParameters.js.map","import * as abitype from 'abitype';\nimport * as Address from './Address.js';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Solidity from './Solidity.js';\nimport * as internal from './internal/abiParameters.js';\nimport * as Cursor from './internal/cursor.js';\n// eslint-disable-next-line jsdoc/require-jsdoc\nexport function decode(parameters, data, options = {}) {\n    const { as = 'Array', checksumAddress = false } = options;\n    const bytes = typeof data === 'string' ? Bytes.fromHex(data) : data;\n    const cursor = Cursor.create(bytes);\n    if (Bytes.size(bytes) === 0 && parameters.length > 0)\n        throw new ZeroDataError();\n    if (Bytes.size(bytes) && Bytes.size(bytes) < 32)\n        throw new DataSizeTooSmallError({\n            data: typeof data === 'string' ? data : Hex.fromBytes(data),\n            parameters: parameters,\n            size: Bytes.size(bytes),\n        });\n    let consumed = 0;\n    const values = as === 'Array' ? [] : {};\n    for (let i = 0; i < parameters.length; ++i) {\n        const param = parameters[i];\n        cursor.setPosition(consumed);\n        const [data, consumed_] = internal.decodeParameter(cursor, param, {\n            checksumAddress,\n            staticPosition: 0,\n        });\n        consumed += consumed_;\n        if (as === 'Array')\n            values.push(data);\n        else\n            values[param.name ?? i] = data;\n    }\n    return values;\n}\n/**\n * Encodes primitive values into ABI encoded data as per the [Application Binary Interface (ABI) Specification](https://docs.soliditylang.org/en/latest/abi-spec).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   AbiParameters.from(['string', 'uint', 'bool']),\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @example\n * ### JSON Parameters\n *\n * Specify **JSON ABI** Parameters as schema:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const data = AbiParameters.encode(\n *   [\n *     { type: 'string', name: 'name' },\n *     { type: 'uint', name: 'age' },\n *     { type: 'bool', name: 'isOwner' },\n *   ],\n *   ['wagmi', 420n, true],\n * )\n * ```\n *\n * @param parameters - The set of ABI parameters to encode, in the shape of the `inputs` or `outputs` attribute of an ABI Item. These parameters must include valid [ABI types](https://docs.soliditylang.org/en/latest/types.html).\n * @param values - The set of primitive values that correspond to the ABI types defined in `parameters`.\n * @returns ABI encoded data.\n */\nexport function encode(parameters, values, options) {\n    const { checksumAddress = false } = options ?? {};\n    if (parameters.length !== values.length)\n        throw new LengthMismatchError({\n            expectedLength: parameters.length,\n            givenLength: values.length,\n        });\n    // Prepare the parameters to determine dynamic types to encode.\n    const preparedParameters = internal.prepareParameters({\n        checksumAddress,\n        parameters: parameters,\n        values: values,\n    });\n    const data = internal.encode(preparedParameters);\n    if (data.length === 0)\n        return '0x';\n    return data;\n}\n/**\n * Encodes an array of primitive values to a [packed ABI encoding](https://docs.soliditylang.org/en/latest/abi-spec.html#non-standard-packed-mode).\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const encoded = AbiParameters.encodePacked(\n *   ['address', 'string'],\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 'hello world'],\n * )\n * // @log: '0xd8da6bf26964af9d7eed9e03e53415d37aa9604568656c6c6f20776f726c64'\n * ```\n *\n * @param types - Set of ABI types to pack encode.\n * @param values - The set of primitive values that correspond to the ABI types defined in `types`.\n * @returns The encoded packed data.\n */\nexport function encodePacked(types, values) {\n    if (types.length !== values.length)\n        throw new LengthMismatchError({\n            expectedLength: types.length,\n            givenLength: values.length,\n        });\n    const data = [];\n    for (let i = 0; i < types.length; i++) {\n        const type = types[i];\n        const value = values[i];\n        data.push(encodePacked.encode(type, value));\n    }\n    return Hex.concat(...data);\n}\n(function (encodePacked) {\n    // eslint-disable-next-line jsdoc/require-jsdoc\n    function encode(type, value, isArray = false) {\n        if (type === 'address') {\n            const address = value;\n            Address.assert(address);\n            return Hex.padLeft(address.toLowerCase(), isArray ? 32 : 0);\n        }\n        if (type === 'string')\n            return Hex.fromString(value);\n        if (type === 'bytes')\n            return value;\n        if (type === 'bool')\n            return Hex.padLeft(Hex.fromBoolean(value), isArray ? 32 : 1);\n        const intMatch = type.match(Solidity.integerRegex);\n        if (intMatch) {\n            const [_type, baseType, bits = '256'] = intMatch;\n            const size = Number.parseInt(bits) / 8;\n            return Hex.fromNumber(value, {\n                size: isArray ? 32 : size,\n                signed: baseType === 'int',\n            });\n        }\n        const bytesMatch = type.match(Solidity.bytesRegex);\n        if (bytesMatch) {\n            const [_type, size] = bytesMatch;\n            if (Number.parseInt(size) !== (value.length - 2) / 2)\n                throw new BytesSizeMismatchError({\n                    expectedSize: Number.parseInt(size),\n                    value: value,\n                });\n            return Hex.padRight(value, isArray ? 32 : 0);\n        }\n        const arrayMatch = type.match(Solidity.arrayRegex);\n        if (arrayMatch && Array.isArray(value)) {\n            const [_type, childType] = arrayMatch;\n            const data = [];\n            for (let i = 0; i < value.length; i++) {\n                data.push(encode(childType, value[i], true));\n            }\n            if (data.length === 0)\n                return '0x';\n            return Hex.concat(...data);\n        }\n        throw new InvalidTypeError(type);\n    }\n    encodePacked.encode = encode;\n})(encodePacked || (encodePacked = {}));\n/**\n * Formats {@link ox#AbiParameters.AbiParameters} into **Human Readable ABI Parameters**.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const formatted = AbiParameters.format([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param parameters - The ABI Parameters to format.\n * @returns The formatted ABI Parameters  .\n */\nexport function format(parameters) {\n    return abitype.formatAbiParameters(parameters);\n}\n/**\n * Parses arbitrary **JSON ABI Parameters** or **Human Readable ABI Parameters** into typed {@link ox#AbiParameters.AbiParameters}.\n *\n * @example\n * ### JSON Parameters\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   {\n *     name: 'spender',\n *     type: 'address',\n *   },\n *   {\n *     name: 'amount',\n *     type: 'uint256',\n *   },\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable Parameters\n *\n * Human Readable ABI Parameters can be parsed into a typed {@link ox#AbiParameters.AbiParameters}:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from('address spender, uint256 amount')\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * const parameters = AbiParameters.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'Foo foo, address bar',\n * ])\n *\n * parameters\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param parameters - The ABI Parameters to parse.\n * @returns The typed ABI Parameters.\n */\nexport function from(parameters) {\n    if (Array.isArray(parameters) && typeof parameters[0] === 'string')\n        return abitype.parseAbiParameters(parameters);\n    if (typeof parameters === 'string')\n        return abitype.parseAbiParameters(parameters);\n    return parameters;\n}\n/**\n * Throws when the data size is too small for the given parameters.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x010f')\n * //                                             ↑ ❌ 2 bytes\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass a valid data size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class DataSizeTooSmallError extends Errors.BaseError {\n    constructor({ data, parameters, size, }) {\n        super(`Data size of ${size} bytes is too small for given parameters.`, {\n            metaMessages: [\n                `Params: (${abitype.formatAbiParameters(parameters)})`,\n                `Data:   ${data} (${size} bytes)`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiParameters.DataSizeTooSmallError'\n        });\n    }\n}\n/**\n * Throws when zero data is provided, but data is expected.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x')\n * //                                           ↑ ❌ zero data\n * // @error: AbiParameters.DataSizeTooSmallError: Data size of 2 bytes is too small for given parameters.\n * // @error: Params: (uint256)\n * // @error: Data:   0x010f (2 bytes)\n * ```\n *\n * ### Solution\n *\n * Pass valid data.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'uint256' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                                             ↑ ✅ 32 bytes\n * ```\n */\nexport class ZeroDataError extends Errors.BaseError {\n    constructor() {\n        super('Cannot decode zero data (\"0x\") with ABI parameters.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiParameters.ZeroDataError'\n        });\n    }\n}\n/**\n * The length of the array value does not match the length specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('uint256[3]'), [[69n, 420n]])\n * //                                               ↑ expected: 3  ↑ ❌ length: 2\n * // @error: AbiParameters.ArrayLengthMismatchError: ABI encoding array length mismatch\n * // @error: for type `uint256[3]`. Expected: `3`. Given: `2`.\n * ```\n *\n * ### Solution\n *\n * Pass an array of the correct length.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [[69n, 420n, 69n]])\n * //                                                         ↑ ✅ length: 3\n * ```\n */\nexport class ArrayLengthMismatchError extends Errors.BaseError {\n    constructor({ expectedLength, givenLength, type, }) {\n        super(`Array length mismatch for type \\`${type}\\`. Expected: \\`${expectedLength}\\`. Given: \\`${givenLength}\\`.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiParameters.ArrayLengthMismatchError'\n        });\n    }\n}\n/**\n * The size of the bytes value does not match the size specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from('bytes8'), [['0xdeadbeefdeadbeefdeadbeef']])\n * //                                            ↑ expected: 8 bytes  ↑ ❌ size: 12 bytes\n * // @error: BytesSizeMismatchError: Size of bytes \"0xdeadbeefdeadbeefdeadbeef\"\n * // @error: (bytes12) does not match expected size (bytes8).\n * ```\n *\n * ### Solution\n *\n * Pass a bytes value of the correct size.\n *\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['bytes8']), ['0xdeadbeefdeadbeef'])\n * //                                                       ↑ ✅ size: 8 bytes\n * ```\n */\nexport class BytesSizeMismatchError extends Errors.BaseError {\n    constructor({ expectedSize, value, }) {\n        super(`Size of bytes \"${value}\" (bytes${Hex.size(value)}) does not match expected size (bytes${expectedSize}).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiParameters.BytesSizeMismatchError'\n        });\n    }\n}\n/**\n * The length of the values to encode does not match the length of the ABI parameters.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['string', 'uint256']), ['hello'])\n * // @error: LengthMismatchError: ABI encoding params/values length mismatch.\n * // @error: Expected length (params): 2\n * // @error: Given length (values): 1\n * ```\n *\n * ### Solution\n *\n * Pass the correct number of values to encode.\n *\n * ### Solution\n *\n * Pass a [valid ABI type](https://docs.soliditylang.org/en/develop/abi-spec.html#types).\n */\nexport class LengthMismatchError extends Errors.BaseError {\n    constructor({ expectedLength, givenLength, }) {\n        super([\n            'ABI encoding parameters/values length mismatch.',\n            `Expected length (parameters): ${expectedLength}`,\n            `Given length (values): ${givenLength}`,\n        ].join('\\n'));\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiParameters.LengthMismatchError'\n        });\n    }\n}\n/**\n * The value provided is not a valid array as specified in the corresponding ABI parameter.\n *\n * ### Example\n *\n * ```ts twoslash\n * // @noErrors\n * import { AbiParameters } from 'ox'\n * // ---cut---\n * AbiParameters.encode(AbiParameters.from(['uint256[3]']), [69])\n * ```\n *\n * ### Solution\n *\n * Pass an array value.\n */\nexport class InvalidArrayError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${value}\\` is not a valid array.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiParameters.InvalidArrayError'\n        });\n    }\n}\n/**\n * Throws when the ABI parameter type is invalid.\n *\n * @example\n * ```ts twoslash\n * import { AbiParameters } from 'ox'\n *\n * AbiParameters.decode([{ type: 'lol' }], '0x00000000000000000000000000000000000000000000000000000000000010f')\n * //                             ↑ ❌ invalid type\n * // @error: AbiParameters.InvalidTypeError: Type `lol` is not a valid ABI Type.\n * ```\n */\nexport class InvalidTypeError extends Errors.BaseError {\n    constructor(type) {\n        super(`Type \\`${type}\\` is not a valid ABI Type.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'AbiParameters.InvalidTypeError'\n        });\n    }\n}\n//# sourceMappingURL=AbiParameters.js.map","import * as abitype from 'abitype';\nimport * as AbiItem from './AbiItem.js';\nimport * as AbiParameters from './AbiParameters.js';\nimport * as Hex from './Hex.js';\n/**\n * ABI-decodes function arguments according to the ABI Item's input types (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from('function approve(address, uint256)')\n *\n * const data = AbiFunction.encodeData(\n *   approve,\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * )\n * // '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n *\n * const input = AbiFunction.decodeData(approve, data) // [!code focus]\n * // @log: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * ```\n *\n * @param abiFunction - The ABI Item to decode.\n * @param data - The data to decode.\n */\nexport function decodeData(abiFunction, data) {\n    const { overloads } = abiFunction;\n    if (Hex.size(data) < 4)\n        throw new AbiItem.InvalidSelectorSizeError({ data });\n    if (abiFunction.inputs.length === 0)\n        return undefined;\n    const item = overloads\n        ? fromAbi([abiFunction, ...overloads], data)\n        : abiFunction;\n    if (Hex.size(data) <= 4)\n        return undefined;\n    return AbiParameters.decode(item.inputs, Hex.slice(data, 4));\n}\n/**\n * ABI-decodes a function's result according to the ABI Item's output types (`outputs`).\n *\n * :::tip\n *\n * This function is typically used to decode contract function return values (e.g. the response of an `eth_call` or the `input` property of a Transaction).\n *\n * See the [End-to-end Example](#end-to-end).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'\n *\n * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')\n *\n * const output = AbiFunction.decodeResult(totalSupply, data)\n * // @log: 42n\n * ```\n *\n * @example\n * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const data = '0x000000000000000000000000000000000000000000000000000000000000002a'\n *\n * const erc20Abi = Abi.from([...]) // [!code hl]\n * const totalSupply = AbiFunction.fromAbi(erc20Abi, 'totalSupply') // [!code hl]\n *\n * const output = AbiFunction.decodeResult(totalSupply, data)\n * // @log: 42n\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiFunction.decodeResult` to decode the result of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Abi, AbiFunction } from 'ox'\n *\n * // 1. Extract the Function from the Contract's ABI.\n * const abi = Abi.from([\n *   // ...\n *   {\n *     name: 'balanceOf',\n *     type: 'function',\n *     inputs: [{ name: 'account', type: 'address' }],\n *     outputs: [{ name: 'balance', type: 'uint256' }],\n *     stateMutability: 'view',\n *   },\n *   // ...\n * ])\n * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')\n *\n * // 2. Encode the Function Input.\n * const data = AbiFunction.encodeData(\n *   balanceOf,\n *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B']\n * )\n *\n * // 3. Perform the Contract Call.\n * const response = await window.ethereum!.request({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       data,\n *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n *     },\n *   ],\n * })\n *\n * // 4. Decode the Function Output. // [!code focus]\n * const balance = AbiFunction.decodeResult(balanceOf, response) // [!code focus]\n * // @log: 42n\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiFunction - ABI Function to decode\n * @param data - ABI-encoded function output\n * @param options - Decoding options\n * @returns Decoded function output\n */\nexport function decodeResult(abiFunction, data, options = {}) {\n    const values = AbiParameters.decode(abiFunction.outputs, data, options);\n    if (values && Object.keys(values).length === 0)\n        return undefined;\n    if (values && Object.keys(values).length === 1) {\n        if (Array.isArray(values))\n            return values[0];\n        return Object.values(values)[0];\n    }\n    return values;\n}\n/**\n * ABI-encodes function arguments (`inputs`), prefixed with the 4 byte function selector.\n *\n * :::tip\n *\n * This function is typically used to encode a contract function and its arguments for contract calls (e.g. `data` parameter of an `eth_call` or `eth_sendTransaction`).\n *\n * See the [End-to-end Example](#end-to-end).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from('function approve(address, uint256)')\n *\n * const data = AbiFunction.encodeData( // [!code focus]\n *   approve, // [!code focus]\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n] // [!code focus]\n * ) // [!code focus]\n * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n * ```\n *\n * @example\n * You can extract an ABI Function from a JSON ABI with {@link ox#AbiFunction.(fromAbi:function)}:\n *\n * ```ts twoslash\n * // @noErrors\n * import { Abi, AbiFunction } from 'ox'\n *\n * const erc20Abi = Abi.from([...]) // [!code hl]\n * const approve = AbiFunction.fromAbi(erc20Abi, 'approve') // [!code hl]\n *\n * const data = AbiFunction.encodeData(\n *   approve,\n *   ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 69420n]\n * )\n * // @log: '0x095ea7b3000000000000000000000000d8da6bf26964af9d7eed9e03e53415d37aa960450000000000000000000000000000000000000000000000000000000000010f2c'\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiFunction.encodeData` to encode the input of a `balanceOf` contract call on the [Wagmi Mint Example contract](https://etherscan.io/address/0xfba3912ca04dd458c843e2ee08967fc04f3579c2).\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { Abi, AbiFunction } from 'ox'\n *\n * // 1. Extract the Function from the Contract's ABI.\n * const abi = Abi.from([\n *   // ...\n *   {\n *     name: 'balanceOf',\n *     type: 'function',\n *     inputs: [{ name: 'account', type: 'address' }],\n *     outputs: [{ name: 'balance', type: 'uint256' }],\n *     stateMutability: 'view',\n *   },\n *   // ...\n * ])\n * const balanceOf = AbiFunction.fromAbi(abi, 'balanceOf')\n *\n * // 2. Encode the Function Input. // [!code focus]\n * const data = AbiFunction.encodeData( // [!code focus]\n *   balanceOf, // [!code focus]\n *   ['0xd2135CfB216b74109775236E36d4b433F1DF507B'] // [!code focus]\n * ) // [!code focus]\n *\n * // 3. Perform the Contract Call.\n * const response = await window.ethereum!.request({\n *   method: 'eth_call',\n *   params: [\n *     {\n *       data,\n *       to: '0xfba3912ca04dd458c843e2ee08967fc04f3579c2',\n *     },\n *   ],\n * })\n *\n * // 4. Decode the Function Output.\n * const balance = AbiFunction.decodeResult(balanceOf, response)\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiFunction - ABI Function to encode\n * @param args - Function arguments\n * @returns ABI-encoded function name and arguments\n */\nexport function encodeData(abiFunction, ...args) {\n    const { overloads } = abiFunction;\n    const item = overloads\n        ? fromAbi([abiFunction, ...overloads], abiFunction.name, {\n            args: args[0],\n        })\n        : abiFunction;\n    const selector = getSelector(item);\n    const data = args.length > 0\n        ? AbiParameters.encode(item.inputs, args[0])\n        : undefined;\n    return data ? Hex.concat(selector, data) : selector;\n}\n/**\n * ABI-encodes a function's result (`outputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const totalSupply = AbiFunction.from('function totalSupply() returns (uint256)')\n * const output = AbiFunction.decodeResult(totalSupply, '0x000000000000000000000000000000000000000000000000000000000000002a')\n * // 42n\n *\n * const data = AbiFunction.encodeResult(totalSupply, 42n) // [!code focus]\n * // @log: '0x000000000000000000000000000000000000000000000000000000000000002a'\n * ```\n *\n * @param abiFunction - The ABI item to encode the function output for.\n * @param output - The function output to encode.\n * @param options - Encoding options.\n * @returns The encoded function output.\n */\nexport function encodeResult(abiFunction, output, options = {}) {\n    const { as = 'Array' } = options;\n    const values = (() => {\n        if (abiFunction.outputs.length === 1)\n            return [output];\n        if (Array.isArray(output))\n            return output;\n        if (as === 'Object')\n            return Object.values(output);\n        return [output];\n    })();\n    return AbiParameters.encode(abiFunction.outputs, values);\n}\n/**\n * Formats an {@link ox#AbiFunction.AbiFunction} into a **Human Readable ABI Function**.\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const formatted = AbiFunction.format({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * formatted\n * //    ^?\n *\n *\n * ```\n *\n * @param abiFunction - The ABI Function to format.\n * @returns The formatted ABI Function.\n */\nexport function format(abiFunction) {\n    return abitype.formatAbiItem(abiFunction);\n}\n/**\n * Parses an arbitrary **JSON ABI Function** or **Human Readable ABI Function** into a typed {@link ox#AbiFunction.AbiFunction}.\n *\n * @example\n * ### JSON ABIs\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from({\n *   type: 'function',\n *   name: 'approve',\n *   stateMutability: 'nonpayable',\n *   inputs: [\n *     {\n *       name: 'spender',\n *       type: 'address',\n *     },\n *     {\n *       name: 'amount',\n *       type: 'uint256',\n *     },\n *   ],\n *   outputs: [{ type: 'bool' }],\n * })\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Human Readable ABIs\n *\n * A Human Readable ABI can be parsed into a typed ABI object:\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from(\n *   'function approve(address spender, uint256 amount) returns (bool)' // [!code hl]\n * )\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * It is possible to specify `struct`s along with your definitions:\n *\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const approve = AbiFunction.from([\n *   'struct Foo { address spender; uint256 amount; }', // [!code hl]\n *   'function approve(Foo foo) returns (bool)',\n * ])\n *\n * approve\n * //^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n *\n *\n * @param abiFunction - The ABI Function to parse.\n * @returns Typed ABI Function.\n */\nexport function from(abiFunction, options = {}) {\n    return AbiItem.from(abiFunction, options);\n}\n/**\n * Extracts an {@link ox#AbiFunction.AbiFunction} from an {@link ox#Abi.Abi} given a name and optional arguments.\n *\n * @example\n * ### Extracting by Name\n *\n * ABI Functions can be extracted by their name using the `name` option:\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n *\n * const item = AbiFunction.fromAbi(abi, 'foo') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n * ```\n *\n * @example\n * ### Extracting by Selector\n *\n * ABI Functions can be extract by their selector when {@link ox#Hex.Hex} is provided to `name`.\n *\n * ```ts twoslash\n * import { Abi, AbiFunction } from 'ox'\n *\n * const abi = Abi.from([\n *   'function foo()',\n *   'event Transfer(address owner, address to, uint256 tokenId)',\n *   'function bar(string a) returns (uint256 x)',\n * ])\n * const item = AbiFunction.fromAbi(abi, '0x095ea7b3') // [!code focus]\n * //    ^?\n *\n *\n *\n *\n *\n *\n *\n *\n *\n * ```\n *\n * :::note\n *\n * Extracting via a hex selector is useful when extracting an ABI Function from an `eth_call` RPC response or\n * from a Transaction `input`.\n *\n * :::\n *\n * @param abi - The ABI to extract from.\n * @param name - The name (or selector) of the ABI item to extract.\n * @param options - Extraction options.\n * @returns The ABI item.\n */\nexport function fromAbi(abi, name, options) {\n    const item = AbiItem.fromAbi(abi, name, options);\n    if (item.type !== 'function')\n        throw new AbiItem.NotFoundError({ name, type: 'function' });\n    return item;\n}\n/**\n * Computes the [4-byte selector](https://solidity-by-example.org/function-selector/) for an {@link ox#AbiFunction.AbiFunction}.\n *\n * Useful for computing function selectors for calldata.\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const selector = AbiFunction.getSelector('function ownerOf(uint256 tokenId)')\n * // @log: '0x6352211e'\n * ```\n *\n * @example\n * ```ts twoslash\n * import { AbiFunction } from 'ox'\n *\n * const selector = AbiFunction.getSelector({\n *   inputs: [{ type: 'uint256' }],\n *   name: 'ownerOf',\n *   outputs: [],\n *   stateMutability: 'view',\n *   type: 'function'\n * })\n * // @log: '0x6352211e'\n * ```\n *\n * @param abiItem - The ABI item to compute the selector for.\n * @returns The first 4 bytes of the {@link ox#Hash.(keccak256:function)} hash of the function signature.\n */\nexport function getSelector(abiItem) {\n    return AbiItem.getSelector(abiItem);\n}\n//# sourceMappingURL=AbiFunction.js.map","export const entryPoint06Address = '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789';\nexport const entryPoint07Address = '0x0000000071727De22E5E9d8BAf0edAc6f37da032';\nexport const entryPoint08Address = '0x4337084D9E255Ff0702461CF8895CE9E3b5Ff108';\nexport const ethAddress = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee';\nexport const zeroAddress = '0x0000000000000000000000000000000000000000';\n//# sourceMappingURL=address.js.map","import * as AbiConstructor from 'ox/AbiConstructor';\nimport * as AbiFunction from 'ox/AbiFunction';\nimport { parseAccount } from '../../accounts/utils/parseAccount.js';\nimport { ethAddress, zeroAddress } from '../../constants/address.js';\nimport { deploylessCallViaBytecodeBytecode } from '../../constants/contracts.js';\nimport { BaseError } from '../../errors/base.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { hexToBigInt } from '../../utils/index.js';\nimport { createAccessList, } from './createAccessList.js';\nimport { simulateBlocks, } from './simulateBlocks.js';\nconst getBalanceCode = '0x6080604052348015600e575f80fd5b5061016d8061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8b2cb4f1461002d575b5f80fd5b610047600480360381019061004291906100db565b61005d565b604051610054919061011e565b60405180910390f35b5f8173ffffffffffffffffffffffffffffffffffffffff16319050919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100aa82610081565b9050919050565b6100ba816100a0565b81146100c4575f80fd5b50565b5f813590506100d5816100b1565b92915050565b5f602082840312156100f0576100ef61007d565b5b5f6100fd848285016100c7565b91505092915050565b5f819050919050565b61011881610106565b82525050565b5f6020820190506101315f83018461010f565b9291505056fea26469706673582212203b9fe929fe995c7cf9887f0bdba8a36dd78e8b73f149b17d2d9ad7cd09d2dc6264736f6c634300081a0033';\n/**\n * Simulates execution of a batch of calls.\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateCallsParameters}\n * @returns Results. {@link SimulateCallsReturnType}\n *\n * @example\n * ```ts\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateCalls } from 'viem/actions'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const result = await simulateCalls(client, {\n *   account: '0x5a0b54d5dc17e482fe8b0bdca5320161b95fb929',\n *   calls: [{\n *     {\n *       data: '0xdeadbeef',\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *     },\n *     {\n *       to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *       value: parseEther('1'),\n *     },\n *   ]\n * })\n * ```\n */\nexport async function simulateCalls(client, parameters) {\n    const { blockNumber, blockTag, calls, stateOverrides, traceAssetChanges, traceTransfers, validation, } = parameters;\n    const account = parameters.account\n        ? parseAccount(parameters.account)\n        : undefined;\n    if (traceAssetChanges && !account)\n        throw new BaseError('`account` is required when `traceAssetChanges` is true');\n    // Derive bytecode to extract ETH balance via a contract call.\n    const getBalanceData = account\n        ? AbiConstructor.encode(AbiConstructor.from('constructor(bytes, bytes)'), {\n            bytecode: deploylessCallViaBytecodeBytecode,\n            args: [\n                getBalanceCode,\n                AbiFunction.encodeData(AbiFunction.from('function getBalance(address)'), [account.address]),\n            ],\n        })\n        : undefined;\n    // Fetch ERC20/721 addresses that were \"touched\" from the calls.\n    const assetAddresses = traceAssetChanges\n        ? await Promise.all(parameters.calls.map(async (call) => {\n            if (!call.data && !call.abi)\n                return;\n            const { accessList } = await createAccessList(client, {\n                account: account.address,\n                ...call,\n                data: call.abi ? encodeFunctionData(call) : call.data,\n            });\n            return accessList.map(({ address, storageKeys }) => storageKeys.length > 0 ? address : null);\n        })).then((x) => x.flat().filter(Boolean))\n        : [];\n    const blocks = await simulateBlocks(client, {\n        blockNumber,\n        blockTag: blockTag,\n        blocks: [\n            ...(traceAssetChanges\n                ? [\n                    // ETH pre balances\n                    {\n                        calls: [{ data: getBalanceData }],\n                        stateOverrides,\n                    },\n                    // Asset pre balances\n                    {\n                        calls: assetAddresses.map((address, i) => ({\n                            abi: [\n                                AbiFunction.from('function balanceOf(address) returns (uint256)'),\n                            ],\n                            functionName: 'balanceOf',\n                            args: [account.address],\n                            to: address,\n                            from: zeroAddress,\n                            nonce: i,\n                        })),\n                        stateOverrides: [\n                            {\n                                address: zeroAddress,\n                                nonce: 0,\n                            },\n                        ],\n                    },\n                ]\n                : []),\n            {\n                calls: [...calls, {}].map((call) => ({\n                    ...call,\n                    from: account?.address,\n                })),\n                stateOverrides,\n            },\n            ...(traceAssetChanges\n                ? [\n                    // ETH post balances\n                    {\n                        calls: [{ data: getBalanceData }],\n                    },\n                    // Asset post balances\n                    {\n                        calls: assetAddresses.map((address, i) => ({\n                            abi: [\n                                AbiFunction.from('function balanceOf(address) returns (uint256)'),\n                            ],\n                            functionName: 'balanceOf',\n                            args: [account.address],\n                            to: address,\n                            from: zeroAddress,\n                            nonce: i,\n                        })),\n                        stateOverrides: [\n                            {\n                                address: zeroAddress,\n                                nonce: 0,\n                            },\n                        ],\n                    },\n                    // Decimals\n                    {\n                        calls: assetAddresses.map((address, i) => ({\n                            to: address,\n                            abi: [\n                                AbiFunction.from('function decimals() returns (uint256)'),\n                            ],\n                            functionName: 'decimals',\n                            from: zeroAddress,\n                            nonce: i,\n                        })),\n                        stateOverrides: [\n                            {\n                                address: zeroAddress,\n                                nonce: 0,\n                            },\n                        ],\n                    },\n                    // Token URI\n                    {\n                        calls: assetAddresses.map((address, i) => ({\n                            to: address,\n                            abi: [\n                                AbiFunction.from('function tokenURI(uint256) returns (string)'),\n                            ],\n                            functionName: 'tokenURI',\n                            args: [0n],\n                            from: zeroAddress,\n                            nonce: i,\n                        })),\n                        stateOverrides: [\n                            {\n                                address: zeroAddress,\n                                nonce: 0,\n                            },\n                        ],\n                    },\n                    // Symbols\n                    {\n                        calls: assetAddresses.map((address, i) => ({\n                            to: address,\n                            abi: [AbiFunction.from('function symbol() returns (string)')],\n                            functionName: 'symbol',\n                            from: zeroAddress,\n                            nonce: i,\n                        })),\n                        stateOverrides: [\n                            {\n                                address: zeroAddress,\n                                nonce: 0,\n                            },\n                        ],\n                    },\n                ]\n                : []),\n        ],\n        traceTransfers,\n        validation,\n    });\n    const block_results = traceAssetChanges ? blocks[2] : blocks[0];\n    const [block_ethPre, block_assetsPre, , block_ethPost, block_assetsPost, block_decimals, block_tokenURI, block_symbols,] = traceAssetChanges ? blocks : [];\n    // Extract call results from the simulation.\n    const { calls: block_calls, ...block } = block_results;\n    const results = block_calls.slice(0, -1) ?? [];\n    // Extract pre-execution ETH and asset balances.\n    const ethPre = block_ethPre?.calls ?? [];\n    const assetsPre = block_assetsPre?.calls ?? [];\n    const balancesPre = [...ethPre, ...assetsPre].map((call) => call.status === 'success' ? hexToBigInt(call.data) : null);\n    // Extract post-execution ETH and asset balances.\n    const ethPost = block_ethPost?.calls ?? [];\n    const assetsPost = block_assetsPost?.calls ?? [];\n    const balancesPost = [...ethPost, ...assetsPost].map((call) => call.status === 'success' ? hexToBigInt(call.data) : null);\n    // Extract asset symbols & decimals.\n    const decimals = (block_decimals?.calls ?? []).map((x) => x.status === 'success' ? x.result : null);\n    const symbols = (block_symbols?.calls ?? []).map((x) => x.status === 'success' ? x.result : null);\n    const tokenURI = (block_tokenURI?.calls ?? []).map((x) => x.status === 'success' ? x.result : null);\n    const changes = [];\n    for (const [i, balancePost] of balancesPost.entries()) {\n        const balancePre = balancesPre[i];\n        if (typeof balancePost !== 'bigint')\n            continue;\n        if (typeof balancePre !== 'bigint')\n            continue;\n        const decimals_ = decimals[i - 1];\n        const symbol_ = symbols[i - 1];\n        const tokenURI_ = tokenURI[i - 1];\n        const token = (() => {\n            if (i === 0)\n                return {\n                    address: ethAddress,\n                    decimals: 18,\n                    symbol: 'ETH',\n                };\n            return {\n                address: assetAddresses[i - 1],\n                decimals: tokenURI_ || decimals_ ? Number(decimals_ ?? 1) : undefined,\n                symbol: symbol_ ?? undefined,\n            };\n        })();\n        if (changes.some((change) => change.token.address === token.address))\n            continue;\n        changes.push({\n            token,\n            value: {\n                pre: balancePre,\n                post: balancePost,\n                diff: balancePost - balancePre,\n            },\n        });\n    }\n    return {\n        assetChanges: changes,\n        block,\n        results,\n    };\n}\n//# sourceMappingURL=simulateCalls.js.map","import * as abitype from 'abitype';\nimport * as AbiItem from './AbiItem.js';\nimport * as AbiParameters from './AbiParameters.js';\nimport * as Hex from './Hex.js';\n/** @internal */\nexport function decode(abiConstructor, options) {\n    const { bytecode } = options;\n    if (abiConstructor.inputs.length === 0)\n        return undefined;\n    const data = options.data.replace(bytecode, '0x');\n    return AbiParameters.decode(abiConstructor.inputs, data);\n}\n/**\n * ABI-encodes the provided constructor input (`inputs`).\n *\n * @example\n * ```ts twoslash\n * import { AbiConstructor } from 'ox'\n *\n * const constructor = AbiConstructor.from('constructor(address, uint256)')\n *\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode: '0x...',\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n * ```\n *\n * @example\n * ### End-to-end\n *\n * Below is an end-to-end example of using `AbiConstructor.encode` to encode the constructor of a contract and deploy it.\n *\n * ```ts twoslash\n * import 'ox/window'\n * import { AbiConstructor, Hex } from 'ox'\n *\n * // 1. Instantiate the ABI Constructor.\n * const constructor = AbiConstructor.from(\n *   'constructor(address owner, uint256 amount)',\n * )\n *\n * // 2. Encode the ABI Constructor.\n * const data = AbiConstructor.encode(constructor, {\n *   bytecode: '0x...',\n *   args: ['0xd8da6bf26964af9d7eed9e03e53415d37aa96045', 123n],\n * })\n *\n * // 3. Deploy the contract.\n * const hash = await window.ethereum!.request({\n *   method: 'eth_sendTransaction',\n *   params: [{ data }],\n * })\n * ```\n *\n * :::note\n *\n * For simplicity, the above example uses `window.ethereum.request`, but you can use any\n * type of JSON-RPC interface.\n *\n * :::\n *\n * @param abiConstructor - The ABI Constructor to encode.\n * @param options - Encoding options.\n * @returns The encoded constructor.\n */\nexport function encode(abiConstructor, options) {\n    const { bytecode, args } = options;\n    return Hex.concat(bytecode, abiConstructor.inputs?.length && args?.length\n        ? AbiParameters.encode(abiConstructor.inputs, args)\n        : '0x');\n}\n/** @internal */\nexport function format(abiConstructor) {\n    return abitype.formatAbiItem(abiConstructor);\n}\n/** @internal */\nexport function from(abiConstructor) {\n    return AbiItem.from(abiConstructor);\n}\n/** @internal */\nexport function fromAbi(abi) {\n    const item = abi.find((item) => item.type === 'constructor');\n    if (!item)\n        throw new AbiItem.NotFoundError({ name: 'constructor' });\n    return item;\n}\n//# sourceMappingURL=AbiConstructor.js.map","export const crypto = typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n//# sourceMappingURL=crypto.js.map","/**\n * Utilities for hex, bytes, CSPRNG.\n * @module\n */\n/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n/** Checks if something is Uint8Array. Be careful: nodejs Buffer will return true. */\nexport function isBytes(a) {\n    return a instanceof Uint8Array || (ArrayBuffer.isView(a) && a.constructor.name === 'Uint8Array');\n}\n/** Asserts something is positive integer. */\nexport function anumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error('positive integer expected, got ' + n);\n}\n/** Asserts something is Uint8Array. */\nexport function abytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error('Uint8Array expected of length ' + lengths + ', got length=' + b.length);\n}\n/** Asserts something is hash */\nexport function ahash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.createHasher');\n    anumber(h.outputLen);\n    anumber(h.blockLen);\n}\n/** Asserts a hash instance has not been destroyed / finished */\nexport function aexists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\n/** Asserts output is properly-sized byte array */\nexport function aoutput(out, instance) {\n    abytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error('digestInto() expects output buffer of length at least ' + min);\n    }\n}\n/** Cast u8 / u16 / u32 to u8. */\nexport function u8(arr) {\n    return new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** Cast u8 / u16 / u32 to u32. */\nexport function u32(arr) {\n    return new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n}\n/** Zeroize a byte array. Warning: JS provides no guarantees. */\nexport function clean(...arrays) {\n    for (let i = 0; i < arrays.length; i++) {\n        arrays[i].fill(0);\n    }\n}\n/** Create DataView of an array for easy byte-level manipulation. */\nexport function createView(arr) {\n    return new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n}\n/** The rotate right (circular right shift) operation for uint32 */\nexport function rotr(word, shift) {\n    return (word << (32 - shift)) | (word >>> shift);\n}\n/** The rotate left (circular left shift) operation for uint32 */\nexport function rotl(word, shift) {\n    return (word << shift) | ((word >>> (32 - shift)) >>> 0);\n}\n/** Is current platform little-endian? Most are. Big-Endian platform: IBM */\nexport const isLE = /* @__PURE__ */ (() => new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44)();\n/** The byte swap operation for uint32 */\nexport function byteSwap(word) {\n    return (((word << 24) & 0xff000000) |\n        ((word << 8) & 0xff0000) |\n        ((word >>> 8) & 0xff00) |\n        ((word >>> 24) & 0xff));\n}\n/** Conditionally byte swap if on a big-endian platform */\nexport const swap8IfBE = isLE\n    ? (n) => n\n    : (n) => byteSwap(n);\n/** @deprecated */\nexport const byteSwapIfBE = swap8IfBE;\n/** In place byte swap for Uint32Array */\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n    return arr;\n}\nexport const swap32IfBE = isLE\n    ? (u) => u\n    : byteSwap32;\n// Built-in hex conversion https://caniuse.com/mdn-javascript_builtins_uint8array_fromhex\nconst hasHexBuiltin = /* @__PURE__ */ (() => \n// @ts-ignore\ntypeof Uint8Array.from([]).toHex === 'function' && typeof Uint8Array.fromHex === 'function')();\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * Convert byte array to hex string. Uses built-in function, when available.\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return bytes.toHex();\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };\nfunction asciiToBase16(ch) {\n    if (ch >= asciis._0 && ch <= asciis._9)\n        return ch - asciis._0; // '2' => 50-48\n    if (ch >= asciis.A && ch <= asciis.F)\n        return ch - (asciis.A - 10); // 'B' => 66-(65-10)\n    if (ch >= asciis.a && ch <= asciis.f)\n        return ch - (asciis.a - 10); // 'b' => 98-(97-10)\n    return;\n}\n/**\n * Convert hex string to byte array. Uses built-in function, when available.\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    // @ts-ignore\n    if (hasHexBuiltin)\n        return Uint8Array.fromHex(hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2; // multiply first octet, e.g. 'a3' => 10*16+3 => 160 + 3 => 163\n    }\n    return array;\n}\n/**\n * There is no setImmediate in browser and setTimeout is slow.\n * Call of async fn will return Promise, which will be fullfiled only on\n * next scheduler queue processing step and this is exactly what we need.\n */\nexport const nextTick = async () => { };\n/** Returns control to thread each 'tick' ms to avoid blocking. */\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * Converts string to bytes using UTF8 encoding.\n * @example utf8ToBytes('abc') // Uint8Array.from([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error('string expected');\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\nexport function bytesToUtf8(bytes) {\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Helper for KDFs: consumes uint8array or string.\n * When string is passed, does utf8 decoding, using TextDecoder.\n */\nexport function kdfInputToBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/** Copies several Uint8Arrays into one. */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && {}.toString.call(opts) !== '[object Object]')\n        throw new Error('options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\n/** For runtime check if class implements interface */\nexport class Hash {\n}\n/** Wraps hash function, creating an interface on top of it */\nexport function createHasher(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function createOptHasher(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function createXOFer(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport const wrapConstructor = createHasher;\nexport const wrapConstructorWithOpts = createOptHasher;\nexport const wrapXOFConstructorWithOpts = createXOFer;\n/** Cryptographically secure PRNG. Uses internal OS-level `crypto.getRandomValues`. */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return Uint8Array.from(crypto.randomBytes(bytesLength));\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","/**\n * Internal Merkle-Damgard hash utils.\n * @module\n */\nimport { Hash, abytes, aexists, aoutput, clean, createView, toBytes } from \"./utils.js\";\n/** Polyfill for Safari 14. https://caniuse.com/mdn-javascript_builtins_dataview_setbiguint64 */\nexport function setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/** Choice: a ? b : c */\nexport function Chi(a, b, c) {\n    return (a & b) ^ (~a & c);\n}\n/** Majority function, true if any two inputs is true. */\nexport function Maj(a, b, c) {\n    return (a & b) ^ (a & c) ^ (b & c);\n}\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        aexists(this);\n        data = toBytes(data);\n        abytes(data);\n        const { view, buffer, blockLen } = this;\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        aoutput(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        clean(this.buffer.subarray(pos));\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.destroyed = destroyed;\n        to.finished = finished;\n        to.length = length;\n        to.pos = pos;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n}\n/**\n * Initial SHA-2 state: fractional parts of square roots of first 16 primes 2..53.\n * Check out `test/misc/sha2-gen-iv.js` for recomputation guide.\n */\n/** Initial SHA256 state. Bits 0..32 of frac part of sqrt of primes 2..19 */\nexport const SHA256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n]);\n/** Initial SHA224 state. Bits 32..64 of frac part of sqrt of primes 23..53 */\nexport const SHA224_IV = /* @__PURE__ */ Uint32Array.from([\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4,\n]);\n/** Initial SHA384 state. Bits 0..64 of frac part of sqrt of primes 23..53 */\nexport const SHA384_IV = /* @__PURE__ */ Uint32Array.from([\n    0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4,\n]);\n/** Initial SHA512 state. Bits 0..64 of frac part of sqrt of primes 2..19 */\nexport const SHA512_IV = /* @__PURE__ */ Uint32Array.from([\n    0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179,\n]);\n//# sourceMappingURL=_md.js.map","/**\n * SHA2 hash function. A.k.a. sha256, sha384, sha512, sha512_224, sha512_256.\n * SHA256 is the fastest hash implementable in JS, even faster than Blake3.\n * Check out [RFC 4634](https://datatracker.ietf.org/doc/html/rfc4634) and\n * [FIPS 180-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf).\n * @module\n */\nimport { Chi, HashMD, Maj, SHA224_IV, SHA256_IV, SHA384_IV, SHA512_IV } from \"./_md.js\";\nimport * as u64 from \"./_u64.js\";\nimport { clean, createHasher, rotr } from \"./utils.js\";\n/**\n * Round constants:\n * First 32 bits of fractional parts of the cube roots of the first 64 primes 2..311)\n */\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ Uint32Array.from([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n/** Reusable temporary buffer. \"W\" comes straight from spec. */\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD {\n    constructor(outputLen = 32) {\n        super(64, outputLen, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = SHA256_IV[0] | 0;\n        this.B = SHA256_IV[1] | 0;\n        this.C = SHA256_IV[2] | 0;\n        this.D = SHA256_IV[3] | 0;\n        this.E = SHA256_IV[4] | 0;\n        this.F = SHA256_IV[5] | 0;\n        this.G = SHA256_IV[6] | 0;\n        this.H = SHA256_IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n            const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        clean(SHA256_W);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        clean(this.buffer);\n    }\n}\nexport class SHA224 extends SHA256 {\n    constructor() {\n        super(28);\n        this.A = SHA224_IV[0] | 0;\n        this.B = SHA224_IV[1] | 0;\n        this.C = SHA224_IV[2] | 0;\n        this.D = SHA224_IV[3] | 0;\n        this.E = SHA224_IV[4] | 0;\n        this.F = SHA224_IV[5] | 0;\n        this.G = SHA224_IV[6] | 0;\n        this.H = SHA224_IV[7] | 0;\n    }\n}\n// SHA2-512 is slower than sha256 in js because u64 operations are slow.\n// Round contants\n// First 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409\n// prettier-ignore\nconst K512 = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\nconst SHA512_Kh = /* @__PURE__ */ (() => K512[0])();\nconst SHA512_Kl = /* @__PURE__ */ (() => K512[1])();\n// Reusable temporary buffers\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor(outputLen = 64) {\n        super(128, outputLen, 16, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = SHA512_IV[0] | 0;\n        this.Al = SHA512_IV[1] | 0;\n        this.Bh = SHA512_IV[2] | 0;\n        this.Bl = SHA512_IV[3] | 0;\n        this.Ch = SHA512_IV[4] | 0;\n        this.Cl = SHA512_IV[5] | 0;\n        this.Dh = SHA512_IV[6] | 0;\n        this.Dl = SHA512_IV[7] | 0;\n        this.Eh = SHA512_IV[8] | 0;\n        this.El = SHA512_IV[9] | 0;\n        this.Fh = SHA512_IV[10] | 0;\n        this.Fl = SHA512_IV[11] | 0;\n        this.Gh = SHA512_IV[12] | 0;\n        this.Gl = SHA512_IV[13] | 0;\n        this.Hh = SHA512_IV[14] | 0;\n        this.Hl = SHA512_IV[15] | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        clean(SHA512_W_H, SHA512_W_L);\n    }\n    destroy() {\n        clean(this.buffer);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super(48);\n        this.Ah = SHA384_IV[0] | 0;\n        this.Al = SHA384_IV[1] | 0;\n        this.Bh = SHA384_IV[2] | 0;\n        this.Bl = SHA384_IV[3] | 0;\n        this.Ch = SHA384_IV[4] | 0;\n        this.Cl = SHA384_IV[5] | 0;\n        this.Dh = SHA384_IV[6] | 0;\n        this.Dl = SHA384_IV[7] | 0;\n        this.Eh = SHA384_IV[8] | 0;\n        this.El = SHA384_IV[9] | 0;\n        this.Fh = SHA384_IV[10] | 0;\n        this.Fl = SHA384_IV[11] | 0;\n        this.Gh = SHA384_IV[12] | 0;\n        this.Gl = SHA384_IV[13] | 0;\n        this.Hh = SHA384_IV[14] | 0;\n        this.Hl = SHA384_IV[15] | 0;\n    }\n}\n/**\n * Truncated SHA512/256 and SHA512/224.\n * SHA512_IV is XORed with 0xa5a5a5a5a5a5a5a5, then used as \"intermediary\" IV of SHA512/t.\n * Then t hashes string to produce result IV.\n * See `test/misc/sha2-gen-iv.js`.\n */\n/** SHA512/224 IV */\nconst T224_IV = /* @__PURE__ */ Uint32Array.from([\n    0x8c3d37c8, 0x19544da2, 0x73e19966, 0x89dcd4d6, 0x1dfab7ae, 0x32ff9c82, 0x679dd514, 0x582f9fcf,\n    0x0f6d2b69, 0x7bd44da8, 0x77e36f73, 0x04c48942, 0x3f9d85a8, 0x6a1d36c8, 0x1112e6ad, 0x91d692a1,\n]);\n/** SHA512/256 IV */\nconst T256_IV = /* @__PURE__ */ Uint32Array.from([\n    0x22312194, 0xfc2bf72c, 0x9f555fa3, 0xc84c64c2, 0x2393b86b, 0x6f53b151, 0x96387719, 0x5940eabd,\n    0x96283ee2, 0xa88effe3, 0xbe5e1e25, 0x53863992, 0x2b0199fc, 0x2c85b8aa, 0x0eb72ddc, 0x81c52ca2,\n]);\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super(28);\n        this.Ah = T224_IV[0] | 0;\n        this.Al = T224_IV[1] | 0;\n        this.Bh = T224_IV[2] | 0;\n        this.Bl = T224_IV[3] | 0;\n        this.Ch = T224_IV[4] | 0;\n        this.Cl = T224_IV[5] | 0;\n        this.Dh = T224_IV[6] | 0;\n        this.Dl = T224_IV[7] | 0;\n        this.Eh = T224_IV[8] | 0;\n        this.El = T224_IV[9] | 0;\n        this.Fh = T224_IV[10] | 0;\n        this.Fl = T224_IV[11] | 0;\n        this.Gh = T224_IV[12] | 0;\n        this.Gl = T224_IV[13] | 0;\n        this.Hh = T224_IV[14] | 0;\n        this.Hl = T224_IV[15] | 0;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super(32);\n        this.Ah = T256_IV[0] | 0;\n        this.Al = T256_IV[1] | 0;\n        this.Bh = T256_IV[2] | 0;\n        this.Bl = T256_IV[3] | 0;\n        this.Ch = T256_IV[4] | 0;\n        this.Cl = T256_IV[5] | 0;\n        this.Dh = T256_IV[6] | 0;\n        this.Dl = T256_IV[7] | 0;\n        this.Eh = T256_IV[8] | 0;\n        this.El = T256_IV[9] | 0;\n        this.Fh = T256_IV[10] | 0;\n        this.Fl = T256_IV[11] | 0;\n        this.Gh = T256_IV[12] | 0;\n        this.Gl = T256_IV[13] | 0;\n        this.Hh = T256_IV[14] | 0;\n        this.Hl = T256_IV[15] | 0;\n    }\n}\n/**\n * SHA2-256 hash function from RFC 4634.\n *\n * It is the fastest JS hash, even faster than Blake3.\n * To break sha256 using birthday attack, attackers need to try 2^128 hashes.\n * BTC network is doing 2^70 hashes/sec (2^95 hashes/year) as per 2025.\n */\nexport const sha256 = /* @__PURE__ */ createHasher(() => new SHA256());\n/** SHA2-224 hash function from RFC 4634 */\nexport const sha224 = /* @__PURE__ */ createHasher(() => new SHA224());\n/** SHA2-512 hash function from RFC 4634. */\nexport const sha512 = /* @__PURE__ */ createHasher(() => new SHA512());\n/** SHA2-384 hash function from RFC 4634. */\nexport const sha384 = /* @__PURE__ */ createHasher(() => new SHA384());\n/**\n * SHA2-512/256 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_256 = /* @__PURE__ */ createHasher(() => new SHA512_256());\n/**\n * SHA2-512/224 \"truncated\" hash function, with improved resistance to length extension attacks.\n * See the paper on [truncated SHA512](https://eprint.iacr.org/2010/548.pdf).\n */\nexport const sha512_224 = /* @__PURE__ */ createHasher(() => new SHA512_224());\n//# sourceMappingURL=sha2.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash, clean, Hash, toBytes } from \"./utils.js\";\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        clean(pad);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    clone() {\n        return this._cloneInto();\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Hex, bytes and number utilities.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { abytes as abytes_, bytesToHex as bytesToHex_, concatBytes as concatBytes_, hexToBytes as hexToBytes_, isBytes as isBytes_, } from '@noble/hashes/utils.js';\nexport { abytes, anumber, bytesToHex, bytesToUtf8, concatBytes, hexToBytes, isBytes, randomBytes, utf8ToBytes, } from '@noble/hashes/utils.js';\nconst _0n = /* @__PURE__ */ BigInt(0);\nconst _1n = /* @__PURE__ */ BigInt(1);\nexport function abool(title, value) {\n    if (typeof value !== 'boolean')\n        throw new Error(title + ' boolean expected, got ' + value);\n}\n// Used in weierstrass, der\nexport function numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? '0' + hex : hex;\n}\nexport function hexToNumber(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    return hex === '' ? _0n : BigInt('0x' + hex); // Big Endian\n}\n// BE: Big Endian, LE: Little Endian\nexport function bytesToNumberBE(bytes) {\n    return hexToNumber(bytesToHex_(bytes));\n}\nexport function bytesToNumberLE(bytes) {\n    abytes_(bytes);\n    return hexToNumber(bytesToHex_(Uint8Array.from(bytes).reverse()));\n}\nexport function numberToBytesBE(n, len) {\n    return hexToBytes_(n.toString(16).padStart(len * 2, '0'));\n}\nexport function numberToBytesLE(n, len) {\n    return numberToBytesBE(n, len).reverse();\n}\n// Unpadded, rarely used\nexport function numberToVarBytesBE(n) {\n    return hexToBytes_(numberToHexUnpadded(n));\n}\n/**\n * Takes hex string or Uint8Array, converts to Uint8Array.\n * Validates output length.\n * Will throw error for other types.\n * @param title descriptive title for an error e.g. 'private key'\n * @param hex hex string or Uint8Array\n * @param expectedLength optional, will compare to result array's length\n * @returns\n */\nexport function ensureBytes(title, hex, expectedLength) {\n    let res;\n    if (typeof hex === 'string') {\n        try {\n            res = hexToBytes_(hex);\n        }\n        catch (e) {\n            throw new Error(title + ' must be hex string or Uint8Array, cause: ' + e);\n        }\n    }\n    else if (isBytes_(hex)) {\n        // Uint8Array.from() instead of hash.slice() because node.js Buffer\n        // is instance of Uint8Array, and its slice() creates **mutable** copy\n        res = Uint8Array.from(hex);\n    }\n    else {\n        throw new Error(title + ' must be hex string or Uint8Array');\n    }\n    const len = res.length;\n    if (typeof expectedLength === 'number' && len !== expectedLength)\n        throw new Error(title + ' of length ' + expectedLength + ' expected, got ' + len);\n    return res;\n}\n// Compares 2 u8a-s in kinda constant time\nexport function equalBytes(a, b) {\n    if (a.length !== b.length)\n        return false;\n    let diff = 0;\n    for (let i = 0; i < a.length; i++)\n        diff |= a[i] ^ b[i];\n    return diff === 0;\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\n// export const utf8ToBytes: typeof utf8ToBytes_ = utf8ToBytes_;\n/**\n * Converts bytes to string using UTF8 encoding.\n * @example bytesToUtf8(Uint8Array.from([97, 98, 99])) // 'abc'\n */\n// export const bytesToUtf8: typeof bytesToUtf8_ = bytesToUtf8_;\n// Is positive bigint\nconst isPosBig = (n) => typeof n === 'bigint' && _0n <= n;\nexport function inRange(n, min, max) {\n    return isPosBig(n) && isPosBig(min) && isPosBig(max) && min <= n && n < max;\n}\n/**\n * Asserts min <= n < max. NOTE: It's < max and not <= max.\n * @example\n * aInRange('x', x, 1n, 256n); // would assume x is in (1n..255n)\n */\nexport function aInRange(title, n, min, max) {\n    // Why min <= n < max and not a (min < n < max) OR b (min <= n <= max)?\n    // consider P=256n, min=0n, max=P\n    // - a for min=0 would require -1:          `inRange('x', x, -1n, P)`\n    // - b would commonly require subtraction:  `inRange('x', x, 0n, P - 1n)`\n    // - our way is the cleanest:               `inRange('x', x, 0n, P)\n    if (!inRange(n, min, max))\n        throw new Error('expected valid ' + title + ': ' + min + ' <= n < ' + max + ', got ' + n);\n}\n// Bit operations\n/**\n * Calculates amount of bits in a bigint.\n * Same as `n.toString(2).length`\n * TODO: merge with nLength in modular\n */\nexport function bitLen(n) {\n    let len;\n    for (len = 0; n > _0n; n >>= _1n, len += 1)\n        ;\n    return len;\n}\n/**\n * Gets single bit at position.\n * NOTE: first bit position is 0 (same as arrays)\n * Same as `!!+Array.from(n.toString(2)).reverse()[pos]`\n */\nexport function bitGet(n, pos) {\n    return (n >> BigInt(pos)) & _1n;\n}\n/**\n * Sets single bit at position.\n */\nexport function bitSet(n, pos, value) {\n    return n | ((value ? _1n : _0n) << BigInt(pos));\n}\n/**\n * Calculate mask for N bits. Not using ** operator with bigints because of old engines.\n * Same as BigInt(`0b${Array(i).fill('1').join('')}`)\n */\nexport const bitMask = (n) => (_1n << BigInt(n)) - _1n;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg(hashLen, qByteLen, hmacFn) {\n    if (typeof hashLen !== 'number' || hashLen < 2)\n        throw new Error('hashLen must be a number');\n    if (typeof qByteLen !== 'number' || qByteLen < 2)\n        throw new Error('qByteLen must be a number');\n    if (typeof hmacFn !== 'function')\n        throw new Error('hmacFn must be a function');\n    // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n    const u8n = (len) => new Uint8Array(len); // creates Uint8Array\n    const u8of = (byte) => Uint8Array.of(byte); // another shortcut\n    let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n    let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n    let i = 0; // Iterations counter, will throw when over 1000\n    const reset = () => {\n        v.fill(1);\n        k.fill(0);\n        i = 0;\n    };\n    const h = (...b) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n    const reseed = (seed = u8n(0)) => {\n        // HMAC-DRBG reseed() function. Steps D-G\n        k = h(u8of(0x00), seed); // k = hmac(k || v || 0x00 || seed)\n        v = h(); // v = hmac(k || v)\n        if (seed.length === 0)\n            return;\n        k = h(u8of(0x01), seed); // k = hmac(k || v || 0x01 || seed)\n        v = h(); // v = hmac(k || v)\n    };\n    const gen = () => {\n        // HMAC-DRBG generate() function\n        if (i++ >= 1000)\n            throw new Error('drbg: tried 1000 values');\n        let len = 0;\n        const out = [];\n        while (len < qByteLen) {\n            v = h();\n            const sl = v.slice();\n            out.push(sl);\n            len += v.length;\n        }\n        return concatBytes_(...out);\n    };\n    const genUntil = (seed, pred) => {\n        reset();\n        reseed(seed); // Steps D-G\n        let res = undefined; // Step H: grind until k is in [1..n-1]\n        while (!(res = pred(gen())))\n            reseed();\n        reset();\n        return res;\n    };\n    return genUntil;\n}\n// Validating curves and fields\nconst validatorFns = {\n    bigint: (val) => typeof val === 'bigint',\n    function: (val) => typeof val === 'function',\n    boolean: (val) => typeof val === 'boolean',\n    string: (val) => typeof val === 'string',\n    stringOrUint8Array: (val) => typeof val === 'string' || isBytes_(val),\n    isSafeInteger: (val) => Number.isSafeInteger(val),\n    array: (val) => Array.isArray(val),\n    field: (val, object) => object.Fp.isValid(val),\n    hash: (val) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n};\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\nexport function validateObject(object, validators, optValidators = {}) {\n    const checkField = (fieldName, type, isOptional) => {\n        const checkVal = validatorFns[type];\n        if (typeof checkVal !== 'function')\n            throw new Error('invalid validator function');\n        const val = object[fieldName];\n        if (isOptional && val === undefined)\n            return;\n        if (!checkVal(val, object)) {\n            throw new Error('param ' + String(fieldName) + ' is invalid. Expected ' + type + ', got ' + val);\n        }\n    };\n    for (const [fieldName, type] of Object.entries(validators))\n        checkField(fieldName, type, false);\n    for (const [fieldName, type] of Object.entries(optValidators))\n        checkField(fieldName, type, true);\n    return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\nexport function isHash(val) {\n    return typeof val === 'function' && Number.isSafeInteger(val.outputLen);\n}\nexport function _validateObject(object, fields, optFields = {}) {\n    if (!object || typeof object !== 'object')\n        throw new Error('expected valid options object');\n    function checkField(fieldName, expectedType, isOpt) {\n        const val = object[fieldName];\n        if (isOpt && val === undefined)\n            return;\n        const current = typeof val;\n        if (current !== expectedType || val === null)\n            throw new Error(`param \"${fieldName}\" is invalid: expected ${expectedType}, got ${current}`);\n    }\n    Object.entries(fields).forEach(([k, v]) => checkField(k, v, false));\n    Object.entries(optFields).forEach(([k, v]) => checkField(k, v, true));\n}\n/**\n * throws not implemented error\n */\nexport const notImplemented = () => {\n    throw new Error('not implemented');\n};\n/**\n * Memoizes (caches) computation result.\n * Uses WeakMap: the value is going auto-cleaned by GC after last reference is removed.\n */\nexport function memoized(fn) {\n    const map = new WeakMap();\n    return (arg, ...args) => {\n        const val = map.get(arg);\n        if (val !== undefined)\n            return val;\n        const computed = fn(arg, ...args);\n        map.set(arg, computed);\n        return computed;\n    };\n}\n//# sourceMappingURL=utils.js.map","/**\n * Utils for modular division and fields.\n * Field over 11 is a finite (Galois) field is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { _validateObject, anumber, bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, } from \"../utils.js\";\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5);\nconst _8n = /* @__PURE__ */ BigInt(8);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    return FpPow(Field(modulo), num, power);\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n// Not all roots are possible! Example which will throw:\n// const NUM =\n// n = 72057594037927816n;\n// Fp = Field(BigInt('0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab'));\nfunction sqrt3mod4(Fp, n) {\n    const p1div4 = (Fp.ORDER + _1n) / _4n;\n    const root = Fp.pow(n, p1div4);\n    // Throw if root^2 != n\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n    return root;\n}\nfunction sqrt5mod8(Fp, n) {\n    const p5div8 = (Fp.ORDER - _5n) / _8n;\n    const n2 = Fp.mul(n, _2n);\n    const v = Fp.pow(n2, p5div8);\n    const nv = Fp.mul(n, v);\n    const i = Fp.mul(Fp.mul(nv, _2n), v);\n    const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n    if (!Fp.eql(Fp.sqr(root), n))\n        throw new Error('Cannot find square root');\n    return root;\n}\n// TODO: Commented-out for now. Provide test vectors.\n// Tonelli is too slow for extension fields Fp2.\n// That means we can't use sqrt (c1, c2...) even for initialization constants.\n// if (P % _16n === _9n) return sqrt9mod16;\n// // prettier-ignore\n// function sqrt9mod16<T>(Fp: IField<T>, n: T, p7div16?: bigint) {\n//   if (p7div16 === undefined) p7div16 = (Fp.ORDER + BigInt(7)) / _16n;\n//   const c1 = Fp.sqrt(Fp.neg(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n//   const c2 = Fp.sqrt(c1);             //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n//   const c3 = Fp.sqrt(Fp.neg(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n//   const c4 = p7div16;                 //  4. c4 = (q + 7) / 16        # Integer arithmetic\n//   let tv1 = Fp.pow(n, c4);            //  1. tv1 = x^c4\n//   let tv2 = Fp.mul(c1, tv1);          //  2. tv2 = c1 * tv1\n//   const tv3 = Fp.mul(c2, tv1);        //  3. tv3 = c2 * tv1\n//   let tv4 = Fp.mul(c3, tv1);          //  4. tv4 = c3 * tv1\n//   const e1 = Fp.eql(Fp.sqr(tv2), n);  //  5.  e1 = (tv2^2) == x\n//   const e2 = Fp.eql(Fp.sqr(tv3), n);  //  6.  e2 = (tv3^2) == x\n//   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n//   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n//   const e3 = Fp.eql(Fp.sqr(tv2), n);  //  9.  e3 = (tv2^2) == x\n//   return Fp.cmov(tv1, tv2, e3); // 10.  z = CMOV(tv1, tv2, e3) # Select the sqrt from tv1 and tv2\n// }\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Initialization (precomputation).\n    // Caching initialization could boost perf by 7%.\n    if (P < BigInt(3))\n        throw new Error('sqrt is not defined for small field');\n    // Factor P - 1 = Q * 2^S, where Q is odd\n    let Q = P - _1n;\n    let S = 0;\n    while (Q % _2n === _0n) {\n        Q /= _2n;\n        S++;\n    }\n    // Find the first quadratic non-residue Z >= 2\n    let Z = _2n;\n    const _Fp = Field(P);\n    while (FpLegendre(_Fp, Z) === 1) {\n        // Basic primality test for P. After x iterations, chance of\n        // not finding quadratic non-residue is 2^x, so 2^1000.\n        if (Z++ > 1000)\n            throw new Error('Cannot find square root: probably non-prime P');\n    }\n    // Fast-path; usually done before Z, but we do \"primality test\".\n    if (S === 1)\n        return sqrt3mod4;\n    // Slow-path\n    // TODO: test on Fp2 and others\n    let cc = _Fp.pow(Z, Q); // c = z^Q\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        if (Fp.is0(n))\n            return n;\n        // Check if n is a quadratic residue using Legendre symbol\n        if (FpLegendre(Fp, n) !== 1)\n            throw new Error('Cannot find square root');\n        // Initialize variables for the main loop\n        let M = S;\n        let c = Fp.mul(Fp.ONE, cc); // c = z^Q, move cc from field _Fp into field Fp\n        let t = Fp.pow(n, Q); // t = n^Q, first guess at the fudge factor\n        let R = Fp.pow(n, Q1div2); // R = n^((Q+1)/2), first guess at the square root\n        // Main loop\n        // while t != 1\n        while (!Fp.eql(t, Fp.ONE)) {\n            if (Fp.is0(t))\n                return Fp.ZERO; // if t=0 return R=0\n            let i = 1;\n            // Find the smallest i >= 1 such that t^(2^i) ≡ 1 (mod P)\n            let t_tmp = Fp.sqr(t); // t^(2^1)\n            while (!Fp.eql(t_tmp, Fp.ONE)) {\n                i++;\n                t_tmp = Fp.sqr(t_tmp); // t^(2^2)...\n                if (i === M)\n                    throw new Error('Cannot find square root');\n            }\n            // Calculate the exponent for b: 2^(M - i - 1)\n            const exponent = _1n << BigInt(M - i - 1); // bigint is important\n            const b = Fp.pow(c, exponent); // b = 2^(M - i - 1)\n            // Update variables\n            M = i;\n            c = Fp.sqr(b); // c = b^2\n            t = Fp.mul(t, c); // t = (t * b^2)\n            R = Fp.mul(R, b); // R = R*b\n        }\n        return R;\n    };\n}\n/**\n * Square root for a finite field. Will try optimized versions first:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4) => √n = n^((P+1)/4)\n    if (P % _4n === _3n)\n        return sqrt3mod4;\n    // P ≡ 5 (mod 8) => Atkin algorithm, page 10 of https://eprint.iacr.org/2012/685.pdf\n    if (P % _8n === _5n)\n        return sqrt5mod8;\n    // P ≡ 9 (mod 16) not implemented, see above\n    // Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'number',\n        BITS: 'number',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    _validateObject(field, opts);\n    // const max = 16384;\n    // if (field.BYTES < 1 || field.BYTES > max) throw new Error('invalid field');\n    // if (field.BITS < 1 || field.BITS > 8 * max) throw new Error('invalid field');\n    return field;\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(Fp, num, power) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return Fp.ONE;\n    if (power === _1n)\n        return num;\n    let p = Fp.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = Fp.mul(p, d);\n        d = Fp.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * Exception-free. Will return `undefined` for 0 elements.\n * @param passZero map 0 to 0 (instead of undefined)\n */\nexport function FpInvertBatch(Fp, nums, passZero = false) {\n    const inverted = new Array(nums.length).fill(passZero ? Fp.ZERO : undefined);\n    // Walk from first to last, multiply them by each other MOD p\n    const multipliedAcc = nums.reduce((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = acc;\n        return Fp.mul(acc, num);\n    }, Fp.ONE);\n    // Invert last element\n    const invertedAcc = Fp.inv(multipliedAcc);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (Fp.is0(num))\n            return acc;\n        inverted[i] = Fp.mul(acc, inverted[i]);\n        return Fp.mul(acc, num);\n    }, invertedAcc);\n    return inverted;\n}\n// TODO: remove\nexport function FpDiv(Fp, lhs, rhs) {\n    return Fp.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, Fp.ORDER) : Fp.inv(rhs));\n}\n/**\n * Legendre symbol.\n * Legendre constant is used to calculate Legendre symbol (a | p)\n * which denotes the value of a^((p-1)/2) (mod p).\n *\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(Fp, n) {\n    // We can use 3rd argument as optional cache of this value\n    // but seems unneeded for now. The operation is very fast.\n    const p1mod2 = (Fp.ORDER - _1n) / _2n;\n    const powered = Fp.pow(n, p1mod2);\n    const yes = Fp.eql(powered, Fp.ONE);\n    const zero = Fp.eql(powered, Fp.ZERO);\n    const no = Fp.eql(powered, Fp.neg(Fp.ONE));\n    if (!yes && !zero && !no)\n        throw new Error('invalid Legendre symbol result');\n    return yes ? 1 : zero ? 0 : -1;\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(Fp, n) {\n    const l = FpLegendre(Fp, n);\n    return l === 1;\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    if (nBitLength !== undefined)\n        anumber(nBitLength);\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Creates a finite field. Major performance optimizations:\n * * 1. Denormalized operations like mulN instead of mul.\n * * 2. Identical object shape: never add or remove keys.\n * * 3. `Object.freeze`.\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n *\n * Note about field properties:\n * * CHARACTERISTIC p = prime number, number of elements in main subgroup.\n * * ORDER q = similar to cofactor in curves, may be composite `q = p^m`.\n *\n * @param ORDER field order, probably prime, or could be composite\n * @param bitLen how many bits the field consumes\n * @param isLE (default: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLenOrOpts, isLE = false, opts = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    let _nbitLength = undefined;\n    let _sqrt = undefined;\n    if (typeof bitLenOrOpts === 'object' && bitLenOrOpts != null) {\n        if (opts.sqrt || isLE)\n            throw new Error('cannot specify opts in two arguments');\n        const _opts = bitLenOrOpts;\n        if (_opts.BITS)\n            _nbitLength = _opts.BITS;\n        if (_opts.sqrt)\n            _sqrt = _opts.sqrt;\n        if (typeof _opts.isLE === 'boolean')\n            isLE = _opts.isLE;\n    }\n    else {\n        if (typeof bitLenOrOpts === 'number')\n            _nbitLength = bitLenOrOpts;\n        if (opts.sqrt)\n            _sqrt = opts.sqrt;\n    }\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, _nbitLength);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        // is valid and invertible\n        isValidNot0: (num) => !f.is0(num) && f.isValid(num),\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: _sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n        // TODO: we don't need it here, move out to separate fn\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // We can't move this out because Fp6, Fp12 implement it\n        // and it's unclear what to return in there.\n        cmov: (a, b, c) => (c ? b : a),\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitLen, bitMask, validateObject } from \"../utils.js\";\nimport { Field, FpInvertBatch, nLength, validateField } from \"./modular.js\";\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nexport function negateCt(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\n/**\n * Takes a bunch of Projective Points but executes only one\n * inversion on all of them. Inversion is very slow operation,\n * so this improves performance massively.\n * Optimization: converts a list of projective points to a list of identical points with Z=1.\n */\nexport function normalizeZ(c, property, points) {\n    const getz = property === 'pz' ? (p) => p.pz : (p) => p.ez;\n    const toInv = FpInvertBatch(c.Fp, points.map(getz));\n    // @ts-ignore\n    const affined = points.map((p, i) => p.toAffine(toInv[i]));\n    return affined.map(c.fromAffine);\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, scalarBits) {\n    validateW(W, scalarBits);\n    const windows = Math.ceil(scalarBits / W) + 1; // W=8 33. Not 32, because we skip zero\n    const windowSize = 2 ** (W - 1); // W=8 128. Not 256, because we skip zero\n    const maxNumber = 2 ** W; // W=8 256\n    const mask = bitMask(W); // W=8 255 == mask 0b11111111\n    const shiftBy = BigInt(W); // W=8 8\n    return { windows, windowSize, mask, maxNumber, shiftBy };\n}\nfunction calcOffsets(n, window, wOpts) {\n    const { windowSize, mask, maxNumber, shiftBy } = wOpts;\n    let wbits = Number(n & mask); // extract W bits.\n    let nextN = n >> shiftBy; // shift number by W bits.\n    // What actually happens here:\n    // const highestBit = Number(mask ^ (mask >> 1n));\n    // let wbits2 = wbits - 1; // skip zero\n    // if (wbits2 & highestBit) { wbits2 ^= Number(mask); // (~);\n    // split if bits > max: +224 => 256-32\n    if (wbits > windowSize) {\n        // we skip zero, which means instead of `>= size-1`, we do `> size`\n        wbits -= maxNumber; // -32, can be maxNumber - wbits, but then we need to set isNeg here.\n        nextN += _1n; // +256 (carry)\n    }\n    const offsetStart = window * windowSize;\n    const offset = offsetStart + Math.abs(wbits) - 1; // -1 because we skip zero\n    const isZero = wbits === 0; // is current window slice a 0?\n    const isNeg = wbits < 0; // is current window slice negative?\n    const isNegF = window % 2 !== 0; // fake random statement for noise\n    const offsetF = offsetStart; // fake offset for noise\n    return { nextN, offset, isZero, isNeg, isNegF, offsetF };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes.\n// Allows to make points frozen / immutable.\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap();\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\nfunction assert0(n) {\n    if (n !== _0n)\n        throw new Error('invalid wNAF');\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF(c, bits) {\n    return {\n        constTimeNegate: negateCt,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // i=1, bc we skip 0\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // Smaller version:\n            // https://github.com/paulmillr/noble-secp256k1/blob/47cb1669b6e506ad66b35fe7d76132ae97465da2/index.ts#L502-L541\n            // TODO: check the scalar is less than group order?\n            // wNAF behavior is undefined otherwise. But have to carefully remove\n            // other checks before wNAF. ORDER == bits here.\n            // Accumulators\n            let p = c.ZERO;\n            let f = c.BASE;\n            // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n            // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n            // there is negate now: it is possible that negated element from low value\n            // would be the same as high element, which will create carry into next window.\n            // It's not obvious how this can fail, but still worth investigating later.\n            const wo = calcWOpts(W, bits);\n            for (let window = 0; window < wo.windows; window++) {\n                // (n === _0n) is handled and not early-exited. isEven and offsetF are used for noise\n                const { nextN, offset, isZero, isNeg, isNegF, offsetF } = calcOffsets(n, window, wo);\n                n = nextN;\n                if (isZero) {\n                    // bits are 0: add garbage to fake point\n                    // Important part for const-time getPublicKey: add random \"noise\" point to f.\n                    f = f.add(negateCt(isNegF, precomputes[offsetF]));\n                }\n                else {\n                    // bits are 1: add to result point\n                    p = p.add(negateCt(isNeg, precomputes[offset]));\n                }\n            }\n            assert0(n);\n            // Return both real and fake points: JIT won't eliminate f.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const wo = calcWOpts(W, bits);\n            for (let window = 0; window < wo.windows; window++) {\n                if (n === _0n)\n                    break; // Early-exit, skip 0 value\n                const { nextN, offset, isZero, isNeg } = calcOffsets(n, window, wo);\n                n = nextN;\n                if (isZero) {\n                    // Window bits are 0: skip processing.\n                    // Move to next window.\n                    continue;\n                }\n                else {\n                    const item = precomputes[offset];\n                    acc = acc.add(isNeg ? item.negate() : item); // Re-using acc allows to save adds in MSM\n                }\n            }\n            assert0(n);\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1) {\n                    // Doing transform outside of if brings 15% perf hit\n                    if (typeof transform === 'function')\n                        comp = transform(comp);\n                    pointPrecomputes.set(P, comp);\n                }\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Endomorphism-specific multiplication for Koblitz curves.\n * Cost: 128 dbl, 0-256 adds.\n */\nexport function mulEndoUnsafe(c, point, k1, k2) {\n    let acc = point;\n    let p1 = c.ZERO;\n    let p2 = c.ZERO;\n    while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n)\n            p1 = p1.add(acc);\n        if (k2 & _1n)\n            p2 = p2.add(acc);\n        acc = acc.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n    }\n    return { p1, p2 };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster than precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    const plength = points.length;\n    const slength = scalars.length;\n    if (plength !== slength)\n        throw new Error('arrays of points and scalars must have equal length');\n    // if (plength === 0) throw new Error('array must be of length >= 2');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(plength));\n    let windowSize = 1; // bits\n    if (wbits > 12)\n        windowSize = wbits - 3;\n    else if (wbits > 4)\n        windowSize = wbits - 2;\n    else if (wbits > 0)\n        windowSize = 2;\n    const MASK = bitMask(windowSize);\n    const buckets = new Array(Number(MASK) + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < slength; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & MASK);\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = bitMask(windowSize);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\n// TODO: remove\n/** @deprecated */\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\nfunction createField(order, field) {\n    if (field) {\n        if (field.ORDER !== order)\n            throw new Error('Field.ORDER must match order: Fp == p, Fn == n');\n        validateField(field);\n        return field;\n    }\n    else {\n        return Field(order);\n    }\n}\n/** Validates CURVE opts and creates fields */\nexport function _createCurveFields(type, CURVE, curveOpts = {}) {\n    if (!CURVE || typeof CURVE !== 'object')\n        throw new Error(`expected valid ${type} CURVE object`);\n    for (const p of ['p', 'n', 'h']) {\n        const val = CURVE[p];\n        if (!(typeof val === 'bigint' && val > _0n))\n            throw new Error(`CURVE.${p} must be positive bigint`);\n    }\n    const Fp = createField(CURVE.p, curveOpts.Fp);\n    const Fn = createField(CURVE.n, curveOpts.Fn);\n    const _b = type === 'weierstrass' ? 'b' : 'd';\n    const params = ['Gx', 'Gy', 'a', _b];\n    for (const p of params) {\n        // @ts-ignore\n        if (!Fp.isValid(CURVE[p]))\n            throw new Error(`CURVE.${p} must be valid field element of CURVE.Fp`);\n    }\n    return { Fp, Fn };\n}\n//# sourceMappingURL=curve.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac.js';\nimport { _validateObject, abool, abytes, aInRange, bitMask, bytesToHex, bytesToNumberBE, concatBytes, createHmacDrbg, ensureBytes, hexToBytes, inRange, isBytes, memoized, numberToHexUnpadded, randomBytes, } from \"../utils.js\";\nimport { _createCurveFields, mulEndoUnsafe, negateCt, normalizeZ, pippenger, wNAF, } from \"./curve.js\";\nimport { Field, FpInvertBatch, getMinHashLength, mapHashToField, validateField, } from \"./modular.js\";\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return bytesToNumberBE(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = ensureBytes('signature', hex);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n// TODO: remove\nexport function _legacyHelperEquat(Fp, a, b) {\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula. Takes x, returns y².\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x² * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x³ + a * x + b\n    }\n    return weierstrassEquation;\n}\nexport function _legacyHelperNormPriv(Fn, allowedPrivateKeyLengths, wrapPrivateKey) {\n    const { BYTES: expected } = Fn;\n    // Validates if priv key is valid and converts it to bigint.\n    function normPrivateKeyToScalar(key) {\n        let num;\n        if (typeof key === 'bigint') {\n            num = key;\n        }\n        else {\n            let bytes = ensureBytes('private key', key);\n            if (allowedPrivateKeyLengths) {\n                if (!allowedPrivateKeyLengths.includes(bytes.length * 2))\n                    throw new Error('invalid private key');\n                const padded = new Uint8Array(expected);\n                padded.set(bytes, padded.length - bytes.length);\n                bytes = padded;\n            }\n            try {\n                num = Fn.fromBytes(bytes);\n            }\n            catch (error) {\n                throw new Error(`invalid private key: expected ui8a of size ${expected}, got ${typeof key}`);\n            }\n        }\n        if (wrapPrivateKey)\n            num = Fn.create(num); // disabled by default, enabled for BLS\n        if (!Fn.isValidNot0(num))\n            throw new Error('invalid private key: out of range [1..N-1]');\n        return num;\n    }\n    return normPrivateKeyToScalar;\n}\nexport function weierstrassN(CURVE, curveOpts = {}) {\n    const { Fp, Fn } = _createCurveFields('weierstrass', CURVE, curveOpts);\n    const { h: cofactor, n: CURVE_ORDER } = CURVE;\n    _validateObject(curveOpts, {}, {\n        allowInfinityPoint: 'boolean',\n        clearCofactor: 'function',\n        isTorsionFree: 'function',\n        fromBytes: 'function',\n        toBytes: 'function',\n        endo: 'object',\n        wrapPrivateKey: 'boolean',\n    });\n    const { endo } = curveOpts;\n    if (endo) {\n        // validateObject(endo, { beta: 'bigint', splitScalar: 'function' });\n        if (!Fp.is0(CURVE.a) ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('invalid endo: expected \"beta\": bigint and \"splitScalar\": function');\n        }\n    }\n    function assertCompressionIsSupported() {\n        if (!Fp.isOdd)\n            throw new Error('compression is not supported: Field does not have .isOdd()');\n    }\n    // Implements IEEE P1363 point encoding\n    function pointToBytes(_c, point, isCompressed) {\n        const { x, y } = point.toAffine();\n        const bx = Fp.toBytes(x);\n        abool('isCompressed', isCompressed);\n        if (isCompressed) {\n            assertCompressionIsSupported();\n            const hasEvenY = !Fp.isOdd(y);\n            return concatBytes(pprefix(hasEvenY), bx);\n        }\n        else {\n            return concatBytes(Uint8Array.of(0x04), bx, Fp.toBytes(y));\n        }\n    }\n    function pointFromBytes(bytes) {\n        abytes(bytes);\n        const L = Fp.BYTES;\n        const LC = L + 1; // length compressed, e.g. 33 for 32-byte field\n        const LU = 2 * L + 1; // length uncompressed, e.g. 65 for 32-byte field\n        const length = bytes.length;\n        const head = bytes[0];\n        const tail = bytes.subarray(1);\n        // No actual validation is done here: use .assertValidity()\n        if (length === LC && (head === 0x02 || head === 0x03)) {\n            const x = Fp.fromBytes(tail);\n            if (!Fp.isValid(x))\n                throw new Error('bad point: is not on curve, wrong x');\n            const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n            let y;\n            try {\n                y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n            }\n            catch (sqrtError) {\n                const err = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                throw new Error('bad point: is not on curve, sqrt error' + err);\n            }\n            assertCompressionIsSupported();\n            const isYOdd = Fp.isOdd(y); // (y & _1n) === _1n;\n            const isHeadOdd = (head & 1) === 1; // ECDSA-specific\n            if (isHeadOdd !== isYOdd)\n                y = Fp.neg(y);\n            return { x, y };\n        }\n        else if (length === LU && head === 0x04) {\n            // TODO: more checks\n            const x = Fp.fromBytes(tail.subarray(L * 0, L * 1));\n            const y = Fp.fromBytes(tail.subarray(L * 1, L * 2));\n            if (!isValidXY(x, y))\n                throw new Error('bad point: is not on curve');\n            return { x, y };\n        }\n        else {\n            throw new Error(`bad point: got length ${length}, expected compressed=${LC} or uncompressed=${LU}`);\n        }\n    }\n    const toBytes = curveOpts.toBytes || pointToBytes;\n    const fromBytes = curveOpts.fromBytes || pointFromBytes;\n    const weierstrassEquation = _legacyHelperEquat(Fp, CURVE.a, CURVE.b);\n    // TODO: move top-level\n    /** Checks whether equation holds for given x, y: y² == x³ + ax + b */\n    function isValidXY(x, y) {\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        return Fp.eql(left, right);\n    }\n    // Validate whether the passed curve params are valid.\n    // Test 1: equation y² = x³ + ax + b should work for generator point.\n    if (!isValidXY(CURVE.Gx, CURVE.Gy))\n        throw new Error('bad curve params: generator point');\n    // Test 2: discriminant Δ part should be non-zero: 4a³ + 27b² != 0.\n    // Guarantees curve is genus-1, smooth (non-singular).\n    const _4a3 = Fp.mul(Fp.pow(CURVE.a, _3n), _4n);\n    const _27b2 = Fp.mul(Fp.sqr(CURVE.b), BigInt(27));\n    if (Fp.is0(Fp.add(_4a3, _27b2)))\n        throw new Error('bad curve params: a or b');\n    /** Asserts coordinate is valid: 0 <= n < Fp.ORDER. */\n    function acoord(title, n, banZero = false) {\n        if (!Fp.isValid(n) || (banZero && Fp.is0(n)))\n            throw new Error(`bad point coordinate ${title}`);\n        return n;\n    }\n    function aprjpoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (X, Y, Z) ∋ (x=X/Z, y=Y/Z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (curveOpts.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not field elements');\n        if (!isValidXY(x, y))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    function finishEndo(endoBeta, k1p, k2p, k1neg, k2neg) {\n        k2p = new Point(Fp.mul(k2p.px, endoBeta), k2p.py, k2p.pz);\n        k1p = negateCt(k1neg, k1p);\n        k2p = negateCt(k2neg, k2p);\n        return k1p.add(k2p);\n    }\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates:(X, Y, Z) ∋ (x=X/Z, y=Y/Z).\n     * Default Point works in 2d / affine coordinates: (x, y).\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        constructor(px, py, pz) {\n            this.px = acoord('x', px);\n            this.py = acoord('y', py, true);\n            this.pz = acoord('z', pz);\n            Object.freeze(this);\n        }\n        /** Does NOT validate if the point is valid. Use `.assertValidity()`. */\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            // (0, 0) would've produced (0, 0, 1) - instead, we need (0, 1, 0)\n            if (Fp.is0(x) && Fp.is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        static normalizeZ(points) {\n            return normalizeZ(Point, 'pz', points);\n        }\n        static fromBytes(bytes) {\n            abytes(bytes);\n            return Point.fromHex(bytes);\n        }\n        /** Converts hash string or Uint8Array to Point. */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        /** Multiplies generator point by privateKey. */\n        static fromPrivateKey(privateKey) {\n            const normPrivateKeyToScalar = _legacyHelperNormPriv(Fn, curveOpts.allowedPrivateKeyLengths, curveOpts.wrapPrivateKey);\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        /** Multiscalar Multiplication */\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        /**\n         *\n         * @param windowSize\n         * @param isLazy true will defer table computation until the first multiplication\n         * @returns\n         */\n        precompute(windowSize = 8, isLazy = true) {\n            wnaf.setWindowSize(this, windowSize);\n            if (!isLazy)\n                this.multiply(_3n); // random number\n            return this;\n        }\n        /** \"Private method\", don't use it directly */\n        _setWindowSize(windowSize) {\n            this.precompute(windowSize);\n        }\n        // TODO: return `this`\n        /** A point on curve is valid if it conforms to equation. */\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (!Fp.isOdd)\n                throw new Error(\"Field doesn't support isOdd\");\n            return !Fp.isOdd(y);\n        }\n        /** Compare one point to another. */\n        equals(other) {\n            aprjpoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /** Flips point to one corresponding to (x, -y) in Affine coordinates. */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            aprjpoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo } = curveOpts;\n            if (!Fn.isValidNot0(scalar))\n                throw new Error('invalid scalar: out of range'); // 0 is invalid\n            let point, fake; // Fake point is used to const-time mult\n            const mul = (n) => wnaf.wNAFCached(this, n, Point.normalizeZ);\n            /** See docs for {@link EndomorphismOpts} */\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                const { p: k1p, f: k1f } = mul(k1);\n                const { p: k2p, f: k2f } = mul(k2);\n                fake = k1f.add(k2f);\n                point = finishEndo(endo.beta, k1p, k2p, k1neg, k2neg);\n            }\n            else {\n                const { p, f } = mul(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo } = curveOpts;\n            const p = this;\n            if (!Fn.isValid(sc))\n                throw new Error('invalid scalar: out of range'); // 0 is valid\n            if (sc === _0n || p.is0())\n                return Point.ZERO;\n            if (sc === _1n)\n                return p; // fast-path\n            if (wnaf.hasPrecomputes(this))\n                return this.multiply(sc);\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n                // `wNAFCachedUnsafe` is 30% slower\n                const { p1, p2 } = mulEndoUnsafe(Point, p, k1, k2);\n                return finishEndo(endo.beta, p1, p2, k1neg, k2neg);\n            }\n            else {\n                return wnaf.wNAFCachedUnsafe(p, sc);\n            }\n        }\n        multiplyAndAddUnsafe(Q, a, b) {\n            const sum = this.multiplyUnsafe(a).add(Q.multiplyUnsafe(b));\n            return sum.is0() ? undefined : sum;\n        }\n        /**\n         * Converts Projective point to affine (x, y) coordinates.\n         * @param invertedZ Z^-1 (inverted zero) - optional, precomputation is useful for invertBatch\n         */\n        toAffine(invertedZ) {\n            return toAffineMemo(this, invertedZ);\n        }\n        /**\n         * Checks whether Point is free of torsion elements (is in prime subgroup).\n         * Always torsion-free for cofactor=1 curves.\n         */\n        isTorsionFree() {\n            const { isTorsionFree } = curveOpts;\n            if (cofactor === _1n)\n                return true;\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            return wnaf.wNAFCachedUnsafe(this, CURVE_ORDER).is0();\n        }\n        clearCofactor() {\n            const { clearCofactor } = curveOpts;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(cofactor);\n        }\n        toBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        /** @deprecated use `toBytes` */\n        toRawBytes(isCompressed = true) {\n            return this.toBytes(isCompressed);\n        }\n        toHex(isCompressed = true) {\n            return bytesToHex(this.toBytes(isCompressed));\n        }\n        toString() {\n            return `<Point ${this.is0() ? 'ZERO' : this.toHex()}>`;\n        }\n    }\n    // base / generator point\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    // zero / infinity / identity point\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO); // 0, 1, 0\n    // fields\n    Point.Fp = Fp;\n    Point.Fn = Fn;\n    const bits = Fn.BITS;\n    const wnaf = wNAF(Point, curveOpts.endo ? Math.ceil(bits / 2) : bits);\n    return Point;\n}\n// _legacyWeierstrass\n/** @deprecated use `weierstrassN` */\nexport function weierstrassPoints(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    return _weierstrass_new_output_to_legacy(c, Point);\n}\n// Points start with byte 0x02 when y is even; otherwise 0x03\nfunction pprefix(hasEvenY) {\n    return Uint8Array.of(hasEvenY ? 0x02 : 0x03);\n}\nexport function ecdsa(Point, ecdsaOpts, curveOpts = {}) {\n    _validateObject(ecdsaOpts, { hash: 'function' }, {\n        hmac: 'function',\n        lowS: 'boolean',\n        randomBytes: 'function',\n        bits2int: 'function',\n        bits2int_modN: 'function',\n    });\n    const randomBytes_ = ecdsaOpts.randomBytes || randomBytes;\n    const hmac_ = ecdsaOpts.hmac ||\n        ((key, ...msgs) => hmac(ecdsaOpts.hash, key, concatBytes(...msgs)));\n    const { Fp, Fn } = Point;\n    const { ORDER: CURVE_ORDER, BITS: fnBits } = Fn;\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? Fn.neg(s) : s;\n    }\n    function aValidRS(title, num) {\n        if (!Fn.isValidNot0(num))\n            throw new Error(`invalid signature ${title}: out of range 1..CURVE.n`);\n    }\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            aValidRS('r', r); // r in [1..N-1]\n            aValidRS('s', s); // s in [1..N-1]\n            this.r = r;\n            this.s = s;\n            if (recovery != null)\n                this.recovery = recovery;\n            Object.freeze(this);\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const L = Fn.BYTES;\n            const b = ensureBytes('compactSignature', hex, L * 2);\n            return new Signature(Fn.fromBytes(b.subarray(0, L)), Fn.fromBytes(b.subarray(L, L * 2)));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        /**\n         * @todo remove\n         * @deprecated\n         */\n        assertValidity() { }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        // ProjPointType<bigint>\n        recoverPublicKey(msgHash) {\n            const FIELD_ORDER = Fp.ORDER;\n            const { r, s, recovery: rec } = this;\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            // ECDSA recovery is hard for cofactor > 1 curves.\n            // In sign, `r = q.x mod n`, and here we recover q.x from r.\n            // While recovering q.x >= n, we need to add r+n for cofactor=1 curves.\n            // However, for cofactor>1, r+n may not get q.x:\n            // r+n*i would need to be done instead where i is unknown.\n            // To easily get i, we either need to:\n            // a. increase amount of valid recid values (4, 5...); OR\n            // b. prohibit non-prime-order signatures (recid > 1).\n            const hasCofactor = CURVE_ORDER * _2n < FIELD_ORDER;\n            if (hasCofactor && rec > 1)\n                throw new Error('recovery id is ambiguous for h>1 curve');\n            const radj = rec === 2 || rec === 3 ? r + CURVE_ORDER : r;\n            if (!Fp.isValid(radj))\n                throw new Error('recovery id 2 or 3 invalid');\n            const x = Fp.toBytes(radj);\n            const R = Point.fromHex(concatBytes(pprefix((rec & 1) === 0), x));\n            const ir = Fn.inv(radj); // r^-1\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            const u1 = Fn.create(-h * ir); // -hr^-1\n            const u2 = Fn.create(s * ir); // sr^-1\n            // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1). unsafe is fine: there is no private data.\n            const Q = Point.BASE.multiplyUnsafe(u1).add(R.multiplyUnsafe(u2));\n            if (Q.is0())\n                throw new Error('point at infinify');\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, Fn.neg(this.s), this.recovery) : this;\n        }\n        toBytes(format) {\n            if (format === 'compact')\n                return concatBytes(Fn.toBytes(this.r), Fn.toBytes(this.s));\n            if (format === 'der')\n                return hexToBytes(DER.hexFromSig(this));\n            throw new Error('invalid format');\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return this.toBytes('der');\n        }\n        toDERHex() {\n            return bytesToHex(this.toBytes('der'));\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return this.toBytes('compact');\n        }\n        toCompactHex() {\n            return bytesToHex(this.toBytes('compact'));\n        }\n    }\n    const normPrivateKeyToScalar = _legacyHelperNormPriv(Fn, curveOpts.allowedPrivateKeyLengths, curveOpts.wrapPrivateKey);\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const n = CURVE_ORDER;\n            return mapHashToField(randomBytes_(getMinHashLength(n)), n);\n        },\n        precompute(windowSize = 8, point = Point.BASE) {\n            return point.precompute(windowSize, false);\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        if (typeof item === 'bigint')\n            return false;\n        if (item instanceof Point)\n            return true;\n        const arr = ensureBytes('key', item);\n        const length = arr.length;\n        const L = Fp.BYTES;\n        const LC = L + 1; // e.g. 33 for 32\n        const LU = 2 * L + 1; // e.g. 65 for 32\n        if (curveOpts.allowedPrivateKeyLengths || Fn.BYTES === LC) {\n            return undefined;\n        }\n        else {\n            return length === LC || length === LU;\n        }\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA) === true)\n            throw new Error('first arg must be private key');\n        if (isProbPub(publicB) === false)\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = ecdsaOpts.bits2int ||\n        function (bytes) {\n            // Our custom check \"just in case\", for protection against DoS\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - fnBits; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = ecdsaOpts.bits2int_modN ||\n        function (bytes) {\n            return Fn.create(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = bitMask(fnBits);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        // IMPORTANT: the check ensures working for case `Fn.BYTES != Fn.BITS * 8`\n        aInRange('num < 2^' + fnBits, num, _0n, ORDER_MASK);\n        return Fn.toBytes(num);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n    // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash } = ecdsaOpts;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with fnBits % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes_(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n        // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n        // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            // Important: all mod() calls here must be done over N\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!Fn.isValidNot0(k))\n                return; // Valid scalars (including k) must be in 1..N-1\n            const ik = Fn.inv(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = Fn.create(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            const s = Fn.create(ik * Fn.create(m + r * d)); // Not using blinding here, see comment above\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: ecdsaOpts.lowS, prehash: false };\n    const defaultVerOpts = { lowS: ecdsaOpts.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const drbg = createHmacDrbg(ecdsaOpts.hash.outputLen, Fn.BYTES, hmac_);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE.precompute(8);\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        // Verify opts\n        validateSigVerOpts(opts);\n        const { lowS, prehash, format } = opts;\n        // TODO: remove\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        if (format !== undefined && !['compact', 'der', 'js'].includes(format))\n            throw new Error('format must be \"compact\", \"der\" or \"js\"');\n        const isHex = typeof sg === 'string' || isBytes(sg);\n        const isObj = !isHex &&\n            !format &&\n            typeof sg === 'object' &&\n            sg !== null &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        let _sig = undefined;\n        let P;\n        // deduce signature format\n        try {\n            // if (format === 'js') {\n            //   if (sg != null && !isBytes(sg)) _sig = new Signature(sg.r, sg.s);\n            // } else if (format === 'compact') {\n            //   _sig = Signature.fromCompact(sg);\n            // } else if (format === 'der') {\n            //   _sig = Signature.fromDER(sg);\n            // } else {\n            //   throw new Error('invalid format');\n            // }\n            if (isObj) {\n                if (format === undefined || format === 'js') {\n                    _sig = new Signature(sg.r, sg.s);\n                }\n                else {\n                    throw new Error('invalid format');\n                }\n            }\n            if (isHex) {\n                // TODO: remove this malleable check\n                // Signature can be represented in 2 ways: compact (2*Fn.BYTES) & DER (variable-length).\n                // Since DER can also be 2*Fn.BYTES bytes, we check for it first.\n                try {\n                    if (format !== 'compact')\n                        _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                }\n                if (!_sig && format !== 'der')\n                    _sig = Signature.fromCompact(sg);\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        if (!_sig)\n            return false;\n        if (lowS && _sig.hasHighS())\n            return false;\n        // todo: optional.hash => hash\n        if (prehash)\n            msgHash = ecdsaOpts.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = Fn.inv(s); // s^-1\n        const u1 = Fn.create(h * is); // u1 = hs^-1 mod n\n        const u2 = Fn.create(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyUnsafe(u1).add(P.multiplyUnsafe(u2));\n        if (R.is0())\n            return false;\n        const v = Fn.create(R.x); // v = r.x mod n\n        return v === r;\n    }\n    // TODO: clarify API for cloning .clone({hash: sha512}) ? .createWith({hash: sha512})?\n    // const clone = (hash: CHash): ECDSA => ecdsa(Point, { ...ecdsaOpts, ...getHash(hash) }, curveOpts);\n    return Object.freeze({\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        utils,\n        Point,\n        Signature,\n    });\n}\nfunction _weierstrass_legacy_opts_to_new(c) {\n    const CURVE = {\n        a: c.a,\n        b: c.b,\n        p: c.Fp.ORDER,\n        n: c.n,\n        h: c.h,\n        Gx: c.Gx,\n        Gy: c.Gy,\n    };\n    const Fp = c.Fp;\n    const Fn = Field(CURVE.n, c.nBitLength);\n    const curveOpts = {\n        Fp,\n        Fn,\n        allowedPrivateKeyLengths: c.allowedPrivateKeyLengths,\n        allowInfinityPoint: c.allowInfinityPoint,\n        endo: c.endo,\n        wrapPrivateKey: c.wrapPrivateKey,\n        isTorsionFree: c.isTorsionFree,\n        clearCofactor: c.clearCofactor,\n        fromBytes: c.fromBytes,\n        toBytes: c.toBytes,\n    };\n    return { CURVE, curveOpts };\n}\nfunction _ecdsa_legacy_opts_to_new(c) {\n    const { CURVE, curveOpts } = _weierstrass_legacy_opts_to_new(c);\n    const ecdsaOpts = {\n        hash: c.hash,\n        hmac: c.hmac,\n        randomBytes: c.randomBytes,\n        lowS: c.lowS,\n        bits2int: c.bits2int,\n        bits2int_modN: c.bits2int_modN,\n    };\n    return { CURVE, curveOpts, ecdsaOpts };\n}\nfunction _weierstrass_new_output_to_legacy(c, Point) {\n    const { Fp, Fn } = Point;\n    // TODO: remove\n    function isWithinCurveOrder(num) {\n        return inRange(num, _1n, Fn.ORDER);\n    }\n    const weierstrassEquation = _legacyHelperEquat(Fp, c.a, c.b);\n    const normPrivateKeyToScalar = _legacyHelperNormPriv(Fn, c.allowedPrivateKeyLengths, c.wrapPrivateKey);\n    return Object.assign({}, {\n        CURVE: c,\n        Point: Point,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    });\n}\nfunction _ecdsa_new_output_to_legacy(c, ecdsa) {\n    return Object.assign({}, ecdsa, {\n        ProjectivePoint: ecdsa.Point,\n        CURVE: c,\n    });\n}\n// _ecdsa_legacy\nexport function weierstrass(c) {\n    const { CURVE, curveOpts, ecdsaOpts } = _ecdsa_legacy_opts_to_new(c);\n    const Point = weierstrassN(CURVE, curveOpts);\n    const signs = ecdsa(Point, ecdsaOpts, curveOpts);\n    return _ecdsa_new_output_to_legacy(c, signs);\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    const { A, B, Z } = opts;\n    if (!Fp.isValid(A) || !Fp.isValid(B) || !Fp.isValid(Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, Z);\n    if (!Fp.isOdd)\n        throw new Error('Field does not have .isOdd()');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        const tv4_inv = FpInvertBatch(Fp, [tv4], true)[0];\n        x = Fp.mul(x, tv4_inv); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * SECG secp256k1. See [pdf](https://www.secg.org/sec2-v2.pdf).\n *\n * Belongs to Koblitz curves: it has efficiently-computable GLV endomorphism ψ,\n * check out {@link EndomorphismOpts}. Seems to be rigid (not backdoored).\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha2.js';\nimport { randomBytes } from '@noble/hashes/utils.js';\nimport { createCurve } from \"./_shortw_utils.js\";\nimport { createHasher, isogenyMap, } from \"./abstract/hash-to-curve.js\";\nimport { Field, mod, pow2 } from \"./abstract/modular.js\";\nimport { mapToCurveSimpleSWU, } from \"./abstract/weierstrass.js\";\nimport { aInRange, bytesToNumberBE, concatBytes, ensureBytes, inRange, numberToBytesBE, } from \"./utils.js\";\n// Seems like generator was produced from some seed:\n// `Point.BASE.multiply(Point.Fn.inv(2n, N)).toAffine().x`\n// // gives short x 0x3b78ce563f89a0ed9414f5aa28ad0d96d6795f9c63n\nconst secp256k1_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: BigInt(1),\n    a: BigInt(0),\n    b: BigInt(7),\n    Gx: BigInt('0x79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798'),\n    Gy: BigInt('0x483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8'),\n};\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a, b) => (a + b / _2n) / b;\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y) {\n    const P = secp256k1_CURVE.p;\n    // prettier-ignore\n    const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n    // prettier-ignore\n    const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n    const b2 = (y * y * y) % P; // x^3, 11\n    const b3 = (b2 * b2 * y) % P; // x^7\n    const b6 = (pow2(b3, _3n, P) * b3) % P;\n    const b9 = (pow2(b6, _3n, P) * b3) % P;\n    const b11 = (pow2(b9, _2n, P) * b2) % P;\n    const b22 = (pow2(b11, _11n, P) * b11) % P;\n    const b44 = (pow2(b22, _22n, P) * b22) % P;\n    const b88 = (pow2(b44, _44n, P) * b44) % P;\n    const b176 = (pow2(b88, _88n, P) * b88) % P;\n    const b220 = (pow2(b176, _44n, P) * b44) % P;\n    const b223 = (pow2(b220, _3n, P) * b3) % P;\n    const t1 = (pow2(b223, _23n, P) * b22) % P;\n    const t2 = (pow2(t1, _6n, P) * b2) % P;\n    const root = pow2(t2, _2n, P);\n    if (!Fpk1.eql(Fpk1.sqr(root), y))\n        throw new Error('Cannot find square root');\n    return root;\n}\nconst Fpk1 = Field(secp256k1_CURVE.p, undefined, undefined, { sqrt: sqrtMod });\n/**\n * secp256k1 curve, ECDSA and ECDH methods.\n *\n * Field: `2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n`\n *\n * @example\n * ```js\n * import { secp256k1 } from '@noble/curves/secp256k1';\n * const priv = secp256k1.utils.randomPrivateKey();\n * const pub = secp256k1.getPublicKey(priv);\n * const msg = new Uint8Array(32).fill(1); // message hash (not message) in ecdsa\n * const sig = secp256k1.sign(msg, priv); // `{prehash: true}` option is available\n * const isValid = secp256k1.verify(sig, msg, pub) === true;\n * ```\n */\nexport const secp256k1 = createCurve({\n    ...secp256k1_CURVE,\n    Fp: Fpk1,\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    endo: {\n        // Endomorphism, see above\n        beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n        splitScalar: (k) => {\n            const n = secp256k1_CURVE.n;\n            const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n            const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n            const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n            const b2 = a1;\n            const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n            const c1 = divNearest(b2 * k, n);\n            const c2 = divNearest(-b1 * k, n);\n            let k1 = mod(k - c1 * a1 - c2 * a2, n);\n            let k2 = mod(-c1 * b1 - c2 * b2, n);\n            const k1neg = k1 > POW_2_128;\n            const k2neg = k2 > POW_2_128;\n            if (k1neg)\n                k1 = n - k1;\n            if (k2neg)\n                k2 = n - k2;\n            if (k1 > POW_2_128 || k2 > POW_2_128) {\n                throw new Error('splitScalar: Endomorphism failed, k=' + k);\n            }\n            return { k1neg, k1, k2neg, k2 };\n        },\n    },\n}, sha256);\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES = {};\nfunction taggedHash(tag, ...messages) {\n    let tagP = TAGGED_HASH_PREFIXES[tag];\n    if (tagP === undefined) {\n        const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n        tagP = concatBytes(tagH, tagH);\n        TAGGED_HASH_PREFIXES[tag] = tagP;\n    }\n    return sha256(concatBytes(tagP, ...messages));\n}\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point) => point.toBytes(true).slice(1);\nconst numTo32b = (n) => numberToBytesBE(n, 32);\nconst modP = (x) => mod(x, secp256k1_CURVE.p);\nconst modN = (x) => mod(x, secp256k1_CURVE.n);\nconst Point = /* @__PURE__ */ (() => secp256k1.Point)();\nconst hasEven = (y) => y % _2n === _0n;\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv) {\n    let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n    let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n    const scalar = hasEven(p.y) ? d_ : modN(-d_);\n    return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x) {\n    aInRange('x', x, _1n, secp256k1_CURVE.p); // Fail if x ≥ p.\n    const xx = modP(x * x);\n    const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n    let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n    if (!hasEven(y))\n        y = modP(-y); // Return the unique point P such that x(P) = x and\n    const p = Point.fromAffine({ x, y }); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n    p.assertValidity();\n    return p;\n}\nconst num = bytesToNumberBE;\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args) {\n    return modN(num(taggedHash('BIP0340/challenge', ...args)));\n}\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey) {\n    return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(message, privateKey, auxRand = randomBytes(32)) {\n    const m = ensureBytes('message', message);\n    const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n    const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n    const t = numTo32b(d ^ num(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n    const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n    const k_ = modN(num(rand)); // Let k' = int(rand) mod n\n    if (k_ === _0n)\n        throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n    const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n    const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n    const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n    sig.set(rx, 0);\n    sig.set(numTo32b(modN(k + e * d)), 32);\n    // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n    if (!schnorrVerify(sig, m, px))\n        throw new Error('sign: Invalid signature produced');\n    return sig;\n}\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature, message, publicKey) {\n    const sig = ensureBytes('signature', signature, 64);\n    const m = ensureBytes('message', message);\n    const pub = ensureBytes('publicKey', publicKey, 32);\n    try {\n        const P = lift_x(num(pub)); // P = lift_x(int(pk)); fail if that fails\n        const r = num(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n        if (!inRange(r, _1n, secp256k1_CURVE.p))\n            return false;\n        const s = num(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n        if (!inRange(s, _1n, secp256k1_CURVE.n))\n            return false;\n        const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n        // R = s⋅G - e⋅P, where -eP == (n-e)P\n        const R = Point.BASE.multiplyUnsafe(s).add(P.multiplyUnsafe(modN(-e)));\n        const { x, y } = R.toAffine();\n        // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n        if (R.is0() || !hasEven(y) || x !== r)\n            return false;\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Schnorr signatures over secp256k1.\n * https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\n * @example\n * ```js\n * import { schnorr } from '@noble/curves/secp256k1';\n * const priv = schnorr.utils.randomPrivateKey();\n * const pub = schnorr.getPublicKey(priv);\n * const msg = new TextEncoder().encode('hello');\n * const sig = schnorr.sign(msg, priv);\n * const isValid = schnorr.verify(sig, msg, pub);\n * ```\n */\nexport const schnorr = /* @__PURE__ */ (() => ({\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    utils: {\n        randomPrivateKey: secp256k1.utils.randomPrivateKey,\n        lift_x,\n        pointToBytes,\n        numberToBytesBE,\n        bytesToNumberBE,\n        taggedHash,\n        mod,\n    },\n}))();\nconst isoMap = /* @__PURE__ */ (() => isogenyMap(Fpk1, [\n    // xNum\n    [\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n        '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n        '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n        '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n        '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n        '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n        '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n        '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n        '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n        '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n        '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n        '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n        '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n        '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n].map((i) => i.map((j) => BigInt(j)))))();\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fpk1, {\n    A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n    B: BigInt('1771'),\n    Z: Fpk1.create(BigInt('-11')),\n}))();\n/** Hashing / encoding to secp256k1 points / field. RFC 9380 methods. */\nexport const secp256k1_hasher = /* @__PURE__ */ (() => createHasher(secp256k1.Point, (scalars) => {\n    const { x, y } = mapSWU(Fpk1.create(scalars[0]));\n    return isoMap(x, y);\n}, {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fpk1.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\nexport const hashToCurve = /* @__PURE__ */ (() => secp256k1_hasher.hashToCurve)();\nexport const encodeToCurve = /* @__PURE__ */ (() => secp256k1_hasher.encodeToCurve)();\n//# sourceMappingURL=secp256k1.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { weierstrass } from \"./abstract/weierstrass.js\";\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return { hash };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, hash: hash });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","import { universalSignatureValidatorAbi } from '../../constants/abis.js';\nimport { universalSignatureValidatorByteCode } from '../../constants/contracts.js';\nimport { CallExecutionError } from '../../errors/contract.js';\nimport { encodeDeployData, } from '../../utils/abi/encodeDeployData.js';\nimport { getAddress } from '../../utils/address/getAddress.js';\nimport { isAddressEqual } from '../../utils/address/isAddressEqual.js';\nimport { isHex } from '../../utils/data/isHex.js';\nimport { bytesToHex } from '../../utils/encoding/toHex.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { encodeFunctionData, hexToBool } from '../../utils/index.js';\nimport { isErc6492Signature } from '../../utils/signature/isErc6492Signature.js';\nimport { recoverAddress } from '../../utils/signature/recoverAddress.js';\nimport { serializeErc6492Signature } from '../../utils/signature/serializeErc6492Signature.js';\nimport { serializeSignature } from '../../utils/signature/serializeSignature.js';\nimport { call } from './call.js';\n/**\n * Verifies a message hash onchain using ERC-6492.\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyHashParameters}\n * @returns Whether or not the signature is valid. {@link VerifyHashReturnType}\n */\nexport async function verifyHash(client, parameters) {\n    const { address, factory, factoryData, hash, signature, universalSignatureVerifierAddress = client.chain?.contracts\n        ?.universalSignatureVerifier?.address, ...rest } = parameters;\n    const signatureHex = (() => {\n        if (isHex(signature))\n            return signature;\n        if (typeof signature === 'object' && 'r' in signature && 's' in signature)\n            return serializeSignature(signature);\n        return bytesToHex(signature);\n    })();\n    const wrappedSignature = await (async () => {\n        // If no `factory` or `factoryData` is provided, it is assumed that the\n        // address is not a Smart Account, or the Smart Account is already deployed.\n        if (!factory && !factoryData)\n            return signatureHex;\n        // If the signature is already wrapped, return the signature.\n        if (isErc6492Signature(signatureHex))\n            return signatureHex;\n        // If the Smart Account is not deployed, wrap the signature with a 6492 wrapper\n        // to perform counterfactual validation.\n        return serializeErc6492Signature({\n            address: factory,\n            data: factoryData,\n            signature: signatureHex,\n        });\n    })();\n    try {\n        const args = universalSignatureVerifierAddress\n            ? {\n                to: universalSignatureVerifierAddress,\n                data: encodeFunctionData({\n                    abi: universalSignatureValidatorAbi,\n                    functionName: 'isValidSig',\n                    args: [address, hash, wrappedSignature],\n                }),\n                ...rest,\n            }\n            : {\n                data: encodeDeployData({\n                    abi: universalSignatureValidatorAbi,\n                    args: [address, hash, wrappedSignature],\n                    bytecode: universalSignatureValidatorByteCode,\n                }),\n                ...rest,\n            };\n        const { data } = await getAction(client, call, 'call')(args);\n        return hexToBool(data ?? '0x0');\n    }\n    catch (error) {\n        // Fallback attempt to verify the signature via ECDSA recovery.\n        try {\n            const verified = isAddressEqual(getAddress(address), await recoverAddress({ hash, signature }));\n            if (verified)\n                return true;\n        }\n        catch { }\n        if (error instanceof CallExecutionError) {\n            // if the execution fails, the signature was not valid and an internal method inside of the validator reverted\n            // this can happen for many reasons, for example if signer can not be recovered from the signature\n            // or if the signature has no valid format\n            return false;\n        }\n        throw error;\n    }\n}\n//# sourceMappingURL=verifyHash.js.map","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { hexToBigInt } from '../encoding/fromHex.js';\nimport { hexToBytes } from '../encoding/toBytes.js';\n/**\n * @description Converts a signature into hex format.\n *\n * @param signature The signature to convert.\n * @returns The signature in hex format.\n *\n * @example\n * serializeSignature({\n *   r: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf',\n *   s: '0x4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8',\n *   yParity: 1\n * })\n * // \"0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c\"\n */\nexport function serializeSignature({ r, s, to = 'hex', v, yParity, }) {\n    const yParity_ = (() => {\n        if (yParity === 0 || yParity === 1)\n            return yParity;\n        if (v && (v === 27n || v === 28n || v >= 35n))\n            return v % 2n === 0n ? 1 : 0;\n        throw new Error('Invalid `v` or `yParity` value');\n    })();\n    const signature = `0x${new secp256k1.Signature(hexToBigInt(r), hexToBigInt(s)).toCompactHex()}${yParity_ === 0 ? '1b' : '1c'}`;\n    if (to === 'hex')\n        return signature;\n    return hexToBytes(signature);\n}\n//# sourceMappingURL=serializeSignature.js.map","import { erc6492MagicBytes } from '../../constants/bytes.js';\nimport { sliceHex } from '../data/slice.js';\n/** Whether or not the signature is an ERC-6492 formatted signature. */\nexport function isErc6492Signature(signature) {\n    return sliceHex(signature, -32) === erc6492MagicBytes;\n}\n//# sourceMappingURL=isErc6492Signature.js.map","import { hexToBigInt } from '../../utils/encoding/fromHex.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { getBlockNumber, } from './getBlockNumber.js';\n/**\n * Watches and returns incoming block numbers.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlockNumber\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_blockNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blocknumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlockNumberParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlockNumberReturnType}\n *\n * @example\n * import { createPublicClient, watchBlockNumber, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlockNumber(client, {\n *   onBlockNumber: (blockNumber) => console.log(blockNumber),\n * })\n */\nexport function watchBlockNumber(client, { emitOnBegin = false, emitMissed = false, onBlockNumber, onError, poll: poll_, pollingInterval = client.pollingInterval, }) {\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (client.transport.type === 'webSocket' ||\n            client.transport.type === 'ipc')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            (client.transport.transports[0].config.type === 'webSocket' ||\n                client.transport.transports[0].config.type === 'ipc'))\n            return false;\n        return true;\n    })();\n    let prevBlockNumber;\n    const pollBlockNumber = () => {\n        const observerId = stringify([\n            'watchBlockNumber',\n            client.uid,\n            emitOnBegin,\n            emitMissed,\n            pollingInterval,\n        ]);\n        return observe(observerId, { onBlockNumber, onError }, (emit) => poll(async () => {\n            try {\n                const blockNumber = await getAction(client, getBlockNumber, 'getBlockNumber')({ cacheTime: 0 });\n                if (prevBlockNumber) {\n                    // If the current block number is the same as the previous,\n                    // we can skip.\n                    if (blockNumber === prevBlockNumber)\n                        return;\n                    // If we have missed out on some previous blocks, and the\n                    // `emitMissed` flag is truthy, let's emit those blocks.\n                    if (blockNumber - prevBlockNumber > 1 && emitMissed) {\n                        for (let i = prevBlockNumber + 1n; i < blockNumber; i++) {\n                            emit.onBlockNumber(i, prevBlockNumber);\n                            prevBlockNumber = i;\n                        }\n                    }\n                }\n                // If the next block number is greater than the previous,\n                // it is not in the past, and we can emit the new block number.\n                if (!prevBlockNumber || blockNumber > prevBlockNumber) {\n                    emit.onBlockNumber(blockNumber, prevBlockNumber);\n                    prevBlockNumber = blockNumber;\n                }\n            }\n            catch (err) {\n                emit.onError?.(err);\n            }\n        }, {\n            emitOnBegin,\n            interval: pollingInterval,\n        }));\n    };\n    const subscribeBlockNumber = () => {\n        const observerId = stringify([\n            'watchBlockNumber',\n            client.uid,\n            emitOnBegin,\n            emitMissed,\n        ]);\n        return observe(observerId, { onBlockNumber, onError }, (emit) => {\n            let active = true;\n            let unsubscribe = () => (active = false);\n            (async () => {\n                try {\n                    const transport = (() => {\n                        if (client.transport.type === 'fallback') {\n                            const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||\n                                transport.config.type === 'ipc');\n                            if (!transport)\n                                return client.transport;\n                            return transport.value;\n                        }\n                        return client.transport;\n                    })();\n                    const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                        params: ['newHeads'],\n                        onData(data) {\n                            if (!active)\n                                return;\n                            const blockNumber = hexToBigInt(data.result?.number);\n                            emit.onBlockNumber(blockNumber, prevBlockNumber);\n                            prevBlockNumber = blockNumber;\n                        },\n                        onError(error) {\n                            emit.onError?.(error);\n                        },\n                    });\n                    unsubscribe = unsubscribe_;\n                    if (!active)\n                        unsubscribe();\n                }\n                catch (err) {\n                    onError?.(err);\n                }\n            })();\n            return () => unsubscribe();\n        });\n    };\n    return enablePolling ? pollBlockNumber() : subscribeBlockNumber();\n}\n//# sourceMappingURL=watchBlockNumber.js.map","/**\n * @description Parses EIP-4361 formatted message into message fields object.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n *\n * @returns EIP-4361 fields object\n */\nexport function parseSiweMessage(message) {\n    const { scheme, statement, ...prefix } = (message.match(prefixRegex)\n        ?.groups ?? {});\n    const { chainId, expirationTime, issuedAt, notBefore, requestId, ...suffix } = (message.match(suffixRegex)?.groups ?? {});\n    const resources = message.split('Resources:')[1]?.split('\\n- ').slice(1);\n    return {\n        ...prefix,\n        ...suffix,\n        ...(chainId ? { chainId: Number(chainId) } : {}),\n        ...(expirationTime ? { expirationTime: new Date(expirationTime) } : {}),\n        ...(issuedAt ? { issuedAt: new Date(issuedAt) } : {}),\n        ...(notBefore ? { notBefore: new Date(notBefore) } : {}),\n        ...(requestId ? { requestId } : {}),\n        ...(resources ? { resources } : {}),\n        ...(scheme ? { scheme } : {}),\n        ...(statement ? { statement } : {}),\n    };\n}\n// https://regexr.com/80gdj\nconst prefixRegex = /^(?:(?<scheme>[a-zA-Z][a-zA-Z0-9+-.]*):\\/\\/)?(?<domain>[a-zA-Z0-9+-.]*(?::[0-9]{1,5})?) (?:wants you to sign in with your Ethereum account:\\n)(?<address>0x[a-fA-F0-9]{40})\\n\\n(?:(?<statement>.*)\\n\\n)?/;\n// https://regexr.com/80gf9\nconst suffixRegex = /(?:URI: (?<uri>.+))\\n(?:Version: (?<version>.+))\\n(?:Chain ID: (?<chainId>\\d+))\\n(?:Nonce: (?<nonce>[a-zA-Z0-9]+))\\n(?:Issued At: (?<issuedAt>.+))(?:\\nExpiration Time: (?<expirationTime>.+))?(?:\\nNot Before: (?<notBefore>.+))?(?:\\nRequest ID: (?<requestId>.+))?/;\n//# sourceMappingURL=parseSiweMessage.js.map","import { hashMessage } from '../../utils/signature/hashMessage.js';\nimport { parseSiweMessage } from '../../utils/siwe/parseSiweMessage.js';\nimport { validateSiweMessage, } from '../../utils/siwe/validateSiweMessage.js';\nimport { verifyHash, } from '../public/verifyHash.js';\n/**\n * Verifies [EIP-4361](https://eips.ethereum.org/EIPS/eip-4361) formatted message was signed.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/siwe/actions/verifySiweMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifySiweMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifySiweMessageReturnType}\n */\nexport async function verifySiweMessage(client, parameters) {\n    const { address, domain, message, nonce, scheme, signature, time = new Date(), ...callRequest } = parameters;\n    const parsed = parseSiweMessage(message);\n    if (!parsed.address)\n        return false;\n    const isValid = validateSiweMessage({\n        address,\n        domain,\n        message: parsed,\n        nonce,\n        scheme,\n        time,\n    });\n    if (!isValid)\n        return false;\n    const hash = hashMessage(message);\n    return verifyHash(client, {\n        address: parsed.address,\n        hash,\n        signature,\n        ...callRequest,\n    });\n}\n//# sourceMappingURL=verifySiweMessage.js.map","import { isAddress } from '../address/isAddress.js';\nimport { isAddressEqual } from '../address/isAddressEqual.js';\n/**\n * @description Validates EIP-4361 message.\n *\n * @see https://eips.ethereum.org/EIPS/eip-4361\n */\nexport function validateSiweMessage(parameters) {\n    const { address, domain, message, nonce, scheme, time = new Date(), } = parameters;\n    if (domain && message.domain !== domain)\n        return false;\n    if (nonce && message.nonce !== nonce)\n        return false;\n    if (scheme && message.scheme !== scheme)\n        return false;\n    if (message.expirationTime && time >= message.expirationTime)\n        return false;\n    if (message.notBefore && time < message.notBefore)\n        return false;\n    try {\n        if (!message.address)\n            return false;\n        if (!isAddress(message.address, { strict: false }))\n            return false;\n        if (address && !isAddressEqual(message.address, address))\n            return false;\n    }\n    catch {\n        return false;\n    }\n    return true;\n}\n//# sourceMappingURL=validateSiweMessage.js.map","import { getEnsAddress, } from '../../actions/ens/getEnsAddress.js';\nimport { getEnsAvatar, } from '../../actions/ens/getEnsAvatar.js';\nimport { getEnsName, } from '../../actions/ens/getEnsName.js';\nimport { getEnsResolver, } from '../../actions/ens/getEnsResolver.js';\nimport { getEnsText, } from '../../actions/ens/getEnsText.js';\nimport { call, } from '../../actions/public/call.js';\nimport { createAccessList, } from '../../actions/public/createAccessList.js';\nimport { createBlockFilter, } from '../../actions/public/createBlockFilter.js';\nimport { createContractEventFilter, } from '../../actions/public/createContractEventFilter.js';\nimport { createEventFilter, } from '../../actions/public/createEventFilter.js';\nimport { createPendingTransactionFilter, } from '../../actions/public/createPendingTransactionFilter.js';\nimport { estimateContractGas, } from '../../actions/public/estimateContractGas.js';\nimport { estimateFeesPerGas, } from '../../actions/public/estimateFeesPerGas.js';\nimport { estimateGas, } from '../../actions/public/estimateGas.js';\nimport { estimateMaxPriorityFeePerGas, } from '../../actions/public/estimateMaxPriorityFeePerGas.js';\nimport { getBalance, } from '../../actions/public/getBalance.js';\nimport { getBlobBaseFee, } from '../../actions/public/getBlobBaseFee.js';\nimport { getBlock, } from '../../actions/public/getBlock.js';\nimport { getBlockNumber, } from '../../actions/public/getBlockNumber.js';\nimport { getBlockTransactionCount, } from '../../actions/public/getBlockTransactionCount.js';\nimport { getChainId, } from '../../actions/public/getChainId.js';\nimport { getCode, } from '../../actions/public/getCode.js';\nimport { getContractEvents, } from '../../actions/public/getContractEvents.js';\nimport { getEip712Domain, } from '../../actions/public/getEip712Domain.js';\nimport { getFeeHistory, } from '../../actions/public/getFeeHistory.js';\nimport { getFilterChanges, } from '../../actions/public/getFilterChanges.js';\nimport { getFilterLogs, } from '../../actions/public/getFilterLogs.js';\nimport { getGasPrice, } from '../../actions/public/getGasPrice.js';\nimport { getLogs, } from '../../actions/public/getLogs.js';\nimport { getProof, } from '../../actions/public/getProof.js';\nimport { getStorageAt, } from '../../actions/public/getStorageAt.js';\nimport { getTransaction, } from '../../actions/public/getTransaction.js';\nimport { getTransactionConfirmations, } from '../../actions/public/getTransactionConfirmations.js';\nimport { getTransactionCount, } from '../../actions/public/getTransactionCount.js';\nimport { getTransactionReceipt, } from '../../actions/public/getTransactionReceipt.js';\nimport { multicall, } from '../../actions/public/multicall.js';\nimport { readContract, } from '../../actions/public/readContract.js';\nimport { simulateBlocks, } from '../../actions/public/simulateBlocks.js';\nimport { simulateCalls, } from '../../actions/public/simulateCalls.js';\nimport { simulateContract, } from '../../actions/public/simulateContract.js';\nimport { uninstallFilter, } from '../../actions/public/uninstallFilter.js';\nimport { verifyMessage, } from '../../actions/public/verifyMessage.js';\nimport { verifyTypedData, } from '../../actions/public/verifyTypedData.js';\nimport { waitForTransactionReceipt, } from '../../actions/public/waitForTransactionReceipt.js';\nimport { watchBlockNumber, } from '../../actions/public/watchBlockNumber.js';\nimport { watchBlocks, } from '../../actions/public/watchBlocks.js';\nimport { watchContractEvent, } from '../../actions/public/watchContractEvent.js';\nimport { watchEvent, } from '../../actions/public/watchEvent.js';\nimport { watchPendingTransactions, } from '../../actions/public/watchPendingTransactions.js';\nimport { verifySiweMessage, } from '../../actions/siwe/verifySiweMessage.js';\nimport { prepareTransactionRequest, } from '../../actions/wallet/prepareTransactionRequest.js';\nimport { sendRawTransaction, } from '../../actions/wallet/sendRawTransaction.js';\nexport function publicActions(client) {\n    return {\n        call: (args) => call(client, args),\n        createAccessList: (args) => createAccessList(client, args),\n        createBlockFilter: () => createBlockFilter(client),\n        createContractEventFilter: (args) => createContractEventFilter(client, args),\n        createEventFilter: (args) => createEventFilter(client, args),\n        createPendingTransactionFilter: () => createPendingTransactionFilter(client),\n        estimateContractGas: (args) => estimateContractGas(client, args),\n        estimateGas: (args) => estimateGas(client, args),\n        getBalance: (args) => getBalance(client, args),\n        getBlobBaseFee: () => getBlobBaseFee(client),\n        getBlock: (args) => getBlock(client, args),\n        getBlockNumber: (args) => getBlockNumber(client, args),\n        getBlockTransactionCount: (args) => getBlockTransactionCount(client, args),\n        getBytecode: (args) => getCode(client, args),\n        getChainId: () => getChainId(client),\n        getCode: (args) => getCode(client, args),\n        getContractEvents: (args) => getContractEvents(client, args),\n        getEip712Domain: (args) => getEip712Domain(client, args),\n        getEnsAddress: (args) => getEnsAddress(client, args),\n        getEnsAvatar: (args) => getEnsAvatar(client, args),\n        getEnsName: (args) => getEnsName(client, args),\n        getEnsResolver: (args) => getEnsResolver(client, args),\n        getEnsText: (args) => getEnsText(client, args),\n        getFeeHistory: (args) => getFeeHistory(client, args),\n        estimateFeesPerGas: (args) => estimateFeesPerGas(client, args),\n        getFilterChanges: (args) => getFilterChanges(client, args),\n        getFilterLogs: (args) => getFilterLogs(client, args),\n        getGasPrice: () => getGasPrice(client),\n        getLogs: (args) => getLogs(client, args),\n        getProof: (args) => getProof(client, args),\n        estimateMaxPriorityFeePerGas: (args) => estimateMaxPriorityFeePerGas(client, args),\n        getStorageAt: (args) => getStorageAt(client, args),\n        getTransaction: (args) => getTransaction(client, args),\n        getTransactionConfirmations: (args) => getTransactionConfirmations(client, args),\n        getTransactionCount: (args) => getTransactionCount(client, args),\n        getTransactionReceipt: (args) => getTransactionReceipt(client, args),\n        multicall: (args) => multicall(client, args),\n        prepareTransactionRequest: (args) => prepareTransactionRequest(client, args),\n        readContract: (args) => readContract(client, args),\n        sendRawTransaction: (args) => sendRawTransaction(client, args),\n        simulate: (args) => simulateBlocks(client, args),\n        simulateBlocks: (args) => simulateBlocks(client, args),\n        simulateCalls: (args) => simulateCalls(client, args),\n        simulateContract: (args) => simulateContract(client, args),\n        verifyMessage: (args) => verifyMessage(client, args),\n        verifySiweMessage: (args) => verifySiweMessage(client, args),\n        verifyTypedData: (args) => verifyTypedData(client, args),\n        uninstallFilter: (args) => uninstallFilter(client, args),\n        waitForTransactionReceipt: (args) => waitForTransactionReceipt(client, args),\n        watchBlocks: (args) => watchBlocks(client, args),\n        watchBlockNumber: (args) => watchBlockNumber(client, args),\n        watchContractEvent: (args) => watchContractEvent(client, args),\n        watchEvent: (args) => watchEvent(client, args),\n        watchPendingTransactions: (args) => watchPendingTransactions(client, args),\n    };\n}\n//# sourceMappingURL=public.js.map","import { createFilterRequestScope } from '../../utils/filters/createFilterRequestScope.js';\n/**\n * Creates a [`Filter`](https://viem.sh/docs/glossary/types#filter) to listen for new block hashes that can be used with [`getFilterChanges`](https://viem.sh/docs/actions/public/getFilterChanges).\n *\n * - Docs: https://viem.sh/docs/actions/public/createBlockFilter\n * - JSON-RPC Methods: [`eth_newBlockFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newBlockFilter)\n *\n * @param client - Client to use\n * @returns [`Filter`](https://viem.sh/docs/glossary/types#filter). {@link CreateBlockFilterReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createBlockFilter } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createBlockFilter(client)\n * // { id: \"0x345a6572337856574a76364e457a4366\", type: 'block' }\n */\nexport async function createBlockFilter(client) {\n    const getRequest = createFilterRequestScope(client, {\n        method: 'eth_newBlockFilter',\n    });\n    const id = await client.request({\n        method: 'eth_newBlockFilter',\n    });\n    return { id, request: getRequest(id), type: 'block' };\n}\n//# sourceMappingURL=createBlockFilter.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { estimateGas, } from './estimateGas.js';\n/**\n * Estimates the gas required to successfully execute a contract write function call.\n *\n * - Docs: https://viem.sh/docs/contract/estimateContractGas\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`estimateGas` action](https://viem.sh/docs/actions/public/estimateGas) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateContractGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateContractGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { estimateContractGas } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const gas = await estimateContractGas(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint() public']),\n *   functionName: 'mint',\n *   account: '0xf39fd6e51aad88f6f4ce6ab8827279cfffb92266',\n * })\n */\nexport async function estimateContractGas(client, parameters) {\n    const { abi, address, args, functionName, dataSuffix, ...request } = parameters;\n    const data = encodeFunctionData({\n        abi,\n        args,\n        functionName,\n    });\n    try {\n        const gas = await getAction(client, estimateGas, 'estimateGas')({\n            data: `${data}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n            to: address,\n            ...request,\n        });\n        return gas;\n    }\n    catch (error) {\n        const account = request.account ? parseAccount(request.account) : undefined;\n        throw getContractError(error, {\n            abi,\n            address,\n            args,\n            docsPath: '/docs/contract/estimateContractGas',\n            functionName,\n            sender: account?.address,\n        });\n    }\n}\n//# sourceMappingURL=estimateContractGas.js.map","/**\n * Returns the base fee per blob gas in wei.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlobBaseFee\n * - JSON-RPC Methods: [`eth_blobBaseFee`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_blobBaseFee)\n *\n * @param client - Client to use\n * @returns The blob base fee (in wei). {@link GetBlobBaseFeeReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlobBaseFee } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const blobBaseFee = await getBlobBaseFee(client)\n */\nexport async function getBlobBaseFee(client) {\n    const baseFee = await client.request({\n        method: 'eth_blobBaseFee',\n    });\n    return BigInt(baseFee);\n}\n//# sourceMappingURL=getBlobBaseFee.js.map","import { hexToNumber, } from '../../utils/encoding/fromHex.js';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the number of Transactions at a block number, hash, or tag.\n *\n * - Docs: https://viem.sh/docs/actions/public/getBlockTransactionCount\n * - JSON-RPC Methods:\n *   - Calls [`eth_getBlockTransactionCountByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbynumber) for `blockNumber` & `blockTag`.\n *   - Calls [`eth_getBlockTransactionCountByHash`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblocktransactioncountbyhash) for `blockHash`.\n *\n * @param client - Client to use\n * @param parameters - {@link GetBlockTransactionCountParameters}\n * @returns The block transaction count. {@link GetBlockTransactionCountReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getBlockTransactionCount } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const count = await getBlockTransactionCount(client)\n */\nexport async function getBlockTransactionCount(client, { blockHash, blockNumber, blockTag = 'latest', } = {}) {\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    let count;\n    if (blockHash) {\n        count = await client.request({\n            method: 'eth_getBlockTransactionCountByHash',\n            params: [blockHash],\n        }, { dedupe: true });\n    }\n    else {\n        count = await client.request({\n            method: 'eth_getBlockTransactionCountByNumber',\n            params: [blockNumberHex || blockTag],\n        }, { dedupe: Boolean(blockNumberHex) });\n    }\n    return hexToNumber(count);\n}\n//# sourceMappingURL=getBlockTransactionCount.js.map","import { addressResolverAbi, universalResolverResolveAbi, } from '../../constants/abis.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { trim } from '../../utils/data/trim.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js';\nimport { localBatchGatewayUrl } from '../../utils/ens/localBatchGatewayRequest.js';\nimport { namehash } from '../../utils/ens/namehash.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets address for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAddress\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `resolve(bytes, bytes)` on ENS Universal Resolver Contract.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAddressParameters}\n * @returns Address for ENS name or `null` if not found. {@link GetEnsAddressReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAddress, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAddress = await getEnsAddress(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0xd2135CfB216b74109775236E36d4b433F1DF507B'\n */\nexport async function getEnsAddress(client, parameters) {\n    const { blockNumber, blockTag, coinType, name, gatewayUrls, strict } = parameters;\n    const { chain } = client;\n    const universalResolverAddress = (() => {\n        if (parameters.universalResolverAddress)\n            return parameters.universalResolverAddress;\n        if (!chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        return getChainContractAddress({\n            blockNumber,\n            chain,\n            contract: 'ensUniversalResolver',\n        });\n    })();\n    const tlds = chain?.ensTlds;\n    if (tlds && !tlds.some((tld) => name.endsWith(tld)))\n        return null;\n    try {\n        const functionData = encodeFunctionData({\n            abi: addressResolverAbi,\n            functionName: 'addr',\n            ...(coinType != null\n                ? { args: [namehash(name), BigInt(coinType)] }\n                : { args: [namehash(name)] }),\n        });\n        const readContractParameters = {\n            address: universalResolverAddress,\n            abi: universalResolverResolveAbi,\n            functionName: 'resolve',\n            args: [\n                toHex(packetToBytes(name)),\n                functionData,\n                gatewayUrls ?? [localBatchGatewayUrl],\n            ],\n            blockNumber,\n            blockTag,\n        };\n        const readContractAction = getAction(client, readContract, 'readContract');\n        const res = await readContractAction(readContractParameters);\n        if (res[0] === '0x')\n            return null;\n        const address = decodeFunctionResult({\n            abi: addressResolverAbi,\n            args: coinType != null ? [namehash(name), BigInt(coinType)] : undefined,\n            functionName: 'addr',\n            data: res[0],\n        });\n        if (address === '0x')\n            return null;\n        if (trim(address) === '0x00')\n            return null;\n        return address;\n    }\n    catch (err) {\n        if (strict)\n            throw err;\n        if (isNullUniversalResolverError(err, 'resolve'))\n            return null;\n        throw err;\n    }\n}\n//# sourceMappingURL=getEnsAddress.js.map","import { parseAvatarRecord, } from '../../utils/ens/avatar/parseAvatarRecord.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { getEnsText, } from './getEnsText.js';\n/**\n * Gets the avatar of an ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsAvatar\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls [`getEnsText`](https://viem.sh/docs/ens/actions/getEnsText) with `key` set to `'avatar'`.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsAvatarParameters}\n * @returns Avatar URI or `null` if not found. {@link GetEnsAvatarReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsAvatar, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensAvatar = await getEnsAvatar(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // 'https://ipfs.io/ipfs/Qma8mnp6xV3J2cRNf3mTth5C8nV11CAnceVinc3y8jSbio'\n */\nexport async function getEnsAvatar(client, { blockNumber, blockTag, assetGatewayUrls, name, gatewayUrls, strict, universalResolverAddress, }) {\n    const record = await getAction(client, getEnsText, 'getEnsText')({\n        blockNumber,\n        blockTag,\n        key: 'avatar',\n        name,\n        universalResolverAddress,\n        gatewayUrls,\n        strict,\n    });\n    if (!record)\n        return null;\n    try {\n        return await parseAvatarRecord(client, {\n            record,\n            gatewayUrls: assetGatewayUrls,\n        });\n    }\n    catch {\n        return null;\n    }\n}\n//# sourceMappingURL=getEnsAvatar.js.map","import { universalResolverReverseAbi } from '../../constants/abis.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { isNullUniversalResolverError } from '../../utils/ens/errors.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets primary name for specified address.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsName\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `reverse(bytes)` on ENS Universal Resolver Contract to \"reverse resolve\" the address to the primary ENS name.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsNameParameters}\n * @returns Name or `null` if not found. {@link GetEnsNameReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsName } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const ensName = await getEnsName(client, {\n *   address: '0xd2135CfB216b74109775236E36d4b433F1DF507B',\n * })\n * // 'wevm.eth'\n */\nexport async function getEnsName(client, { address, blockNumber, blockTag, gatewayUrls, strict, universalResolverAddress: universalResolverAddress_, }) {\n    let universalResolverAddress = universalResolverAddress_;\n    if (!universalResolverAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        universalResolverAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'ensUniversalResolver',\n        });\n    }\n    const reverseNode = `${address.toLowerCase().substring(2)}.addr.reverse`;\n    try {\n        const readContractParameters = {\n            address: universalResolverAddress,\n            abi: universalResolverReverseAbi,\n            functionName: 'reverse',\n            args: [toHex(packetToBytes(reverseNode))],\n            blockNumber,\n            blockTag,\n        };\n        const readContractAction = getAction(client, readContract, 'readContract');\n        const [name, resolvedAddress] = gatewayUrls\n            ? await readContractAction({\n                ...readContractParameters,\n                args: [...readContractParameters.args, gatewayUrls],\n            })\n            : await readContractAction(readContractParameters);\n        if (address.toLowerCase() !== resolvedAddress.toLowerCase())\n            return null;\n        return name;\n    }\n    catch (err) {\n        if (strict)\n            throw err;\n        if (isNullUniversalResolverError(err, 'reverse'))\n            return null;\n        throw err;\n    }\n}\n//# sourceMappingURL=getEnsName.js.map","import { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { toHex } from '../../utils/encoding/toHex.js';\nimport { packetToBytes, } from '../../utils/ens/packetToBytes.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract, } from '../public/readContract.js';\n/**\n * Gets resolver for ENS name.\n *\n * - Docs: https://viem.sh/docs/ens/actions/getEnsResolver\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/ens\n *\n * Calls `findResolver(bytes)` on ENS Universal Resolver Contract to retrieve the resolver of an ENS name.\n *\n * Since ENS names prohibit certain forbidden characters (e.g. underscore) and have other validation rules, you likely want to [normalize ENS names](https://docs.ens.domains/contract-api-reference/name-processing#normalising-names) with [UTS-46 normalization](https://unicode.org/reports/tr46) before passing them to `getEnsAddress`. You can use the built-in [`normalize`](https://viem.sh/docs/ens/utilities/normalize) function for this.\n *\n * @param client - Client to use\n * @param parameters - {@link GetEnsResolverParameters}\n * @returns Address for ENS resolver. {@link GetEnsResolverReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getEnsResolver, normalize } from 'viem/ens'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const resolverAddress = await getEnsResolver(client, {\n *   name: normalize('wevm.eth'),\n * })\n * // '0x4976fb03C32e5B8cfe2b6cCB31c09Ba78EBaBa41'\n */\nexport async function getEnsResolver(client, parameters) {\n    const { blockNumber, blockTag, name } = parameters;\n    const { chain } = client;\n    const universalResolverAddress = (() => {\n        if (parameters.universalResolverAddress)\n            return parameters.universalResolverAddress;\n        if (!chain)\n            throw new Error('client chain not configured. universalResolverAddress is required.');\n        return getChainContractAddress({\n            blockNumber,\n            chain,\n            contract: 'ensUniversalResolver',\n        });\n    })();\n    const tlds = chain?.ensTlds;\n    if (tlds && !tlds.some((tld) => name.endsWith(tld)))\n        throw new Error(`${name} is not a valid ENS TLD (${tlds?.join(', ')}) for chain \"${chain.name}\" (id: ${chain.id}).`);\n    const [resolverAddress] = await getAction(client, readContract, 'readContract')({\n        address: universalResolverAddress,\n        abi: [\n            {\n                inputs: [{ type: 'bytes' }],\n                name: 'findResolver',\n                outputs: [{ type: 'address' }, { type: 'bytes32' }],\n                stateMutability: 'view',\n                type: 'function',\n            },\n        ],\n        functionName: 'findResolver',\n        args: [toHex(packetToBytes(name))],\n        blockNumber,\n        blockTag,\n    });\n    return resolverAddress;\n}\n//# sourceMappingURL=getEnsResolver.js.map","import { parseEventLogs } from '../../utils/abi/parseEventLogs.js';\nimport { formatLog, } from '../../utils/formatters/log.js';\n/**\n * Returns a list of event logs since the filter was created.\n *\n * - Docs: https://viem.sh/docs/actions/public/getFilterLogs\n * - JSON-RPC Methods: [`eth_getFilterLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterlogs)\n *\n * `getFilterLogs` is only compatible with **event filters**.\n *\n * @param client - Client to use\n * @param parameters - {@link GetFilterLogsParameters}\n * @returns A list of event logs. {@link GetFilterLogsReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbiItem } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { createEventFilter, getFilterLogs } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const filter = await createEventFilter(client, {\n *   address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n *   event: parseAbiItem('event Transfer(address indexed, address indexed, uint256)'),\n * })\n * const logs = await getFilterLogs(client, { filter })\n */\nexport async function getFilterLogs(_client, { filter, }) {\n    const strict = filter.strict ?? false;\n    const logs = await filter.request({\n        method: 'eth_getFilterLogs',\n        params: [filter.id],\n    });\n    const formattedLogs = logs.map((log) => formatLog(log));\n    if (!filter.abi)\n        return formattedLogs;\n    return parseEventLogs({\n        abi: filter.abi,\n        logs: formattedLogs,\n        strict,\n    });\n}\n//# sourceMappingURL=getFilterLogs.js.map","import { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * Returns the value from a storage slot at a given address.\n *\n * - Docs: https://viem.sh/docs/contract/getStorageAt\n * - JSON-RPC Methods: [`eth_getStorageAt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getstorageat)\n *\n * @param client - Client to use\n * @param parameters - {@link GetStorageAtParameters}\n * @returns The value of the storage slot. {@link GetStorageAtReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getStorageAt } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const code = await getStorageAt(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   slot: toHex(0),\n * })\n */\nexport async function getStorageAt(client, { address, blockNumber, blockTag = 'latest', slot }) {\n    const blockNumberHex = blockNumber !== undefined ? numberToHex(blockNumber) : undefined;\n    const data = await client.request({\n        method: 'eth_getStorageAt',\n        params: [address, slot, blockNumberHex || blockTag],\n    });\n    return data;\n}\n//# sourceMappingURL=getStorageAt.js.map","import { getAction } from '../../utils/getAction.js';\nimport { getBlockNumber, } from './getBlockNumber.js';\nimport { getTransaction, } from './getTransaction.js';\n/**\n * Returns the number of blocks passed (confirmations) since the transaction was processed on a block.\n *\n * - Docs: https://viem.sh/docs/actions/public/getTransactionConfirmations\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_fetching-transactions\n * - JSON-RPC Methods: [`eth_getTransactionConfirmations`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionConfirmations)\n *\n * @param client - Client to use\n * @param parameters - {@link GetTransactionConfirmationsParameters}\n * @returns The number of blocks passed since the transaction was processed. If confirmations is 0, then the Transaction has not been confirmed & processed yet. {@link GetTransactionConfirmationsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getTransactionConfirmations } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const confirmations = await getTransactionConfirmations(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getTransactionConfirmations(client, { hash, transactionReceipt }) {\n    const [blockNumber, transaction] = await Promise.all([\n        getAction(client, getBlockNumber, 'getBlockNumber')({}),\n        hash\n            ? getAction(client, getTransaction, 'getTransaction')({ hash })\n            : undefined,\n    ]);\n    const transactionBlockNumber = transactionReceipt?.blockNumber || transaction?.blockNumber;\n    if (!transactionBlockNumber)\n        return 0n;\n    return blockNumber - transactionBlockNumber + 1n;\n}\n//# sourceMappingURL=getTransactionConfirmations.js.map","import { multicall3Abi } from '../../constants/abis.js';\nimport { AbiDecodingZeroDataError } from '../../errors/abi.js';\nimport { BaseError } from '../../errors/base.js';\nimport { RawContractError } from '../../errors/contract.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getChainContractAddress, } from '../../utils/chain/getChainContractAddress.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { readContract } from './readContract.js';\n/**\n * Similar to [`readContract`](https://viem.sh/docs/contract/readContract), but batches up multiple functions on a contract in a single RPC call via the [`multicall3` contract](https://github.com/mds1/multicall).\n *\n * - Docs: https://viem.sh/docs/contract/multicall\n *\n * @param client - Client to use\n * @param parameters - {@link MulticallParameters}\n * @returns An array of results with accompanying status. {@link MulticallReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { multicall } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const abi = parseAbi([\n *   'function balanceOf(address) view returns (uint256)',\n *   'function totalSupply() view returns (uint256)',\n * ])\n * const results = await multicall(client, {\n *   contracts: [\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'balanceOf',\n *       args: ['0xA0Cf798816D4b9b9866b5330EEa46a18382f251e'],\n *     },\n *     {\n *       address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *       abi,\n *       functionName: 'totalSupply',\n *     },\n *   ],\n * })\n * // [{ result: 424122n, status: 'success' }, { result: 1000000n, status: 'success' }]\n */\nexport async function multicall(client, parameters) {\n    const { account, allowFailure = true, batchSize: batchSize_, blockNumber, blockTag, multicallAddress: multicallAddress_, stateOverride, } = parameters;\n    const contracts = parameters.contracts;\n    const batchSize = batchSize_ ??\n        ((typeof client.batch?.multicall === 'object' &&\n            client.batch.multicall.batchSize) ||\n            1_024);\n    let multicallAddress = multicallAddress_;\n    if (!multicallAddress) {\n        if (!client.chain)\n            throw new Error('client chain not configured. multicallAddress is required.');\n        multicallAddress = getChainContractAddress({\n            blockNumber,\n            chain: client.chain,\n            contract: 'multicall3',\n        });\n    }\n    const chunkedCalls = [[]];\n    let currentChunk = 0;\n    let currentChunkSize = 0;\n    for (let i = 0; i < contracts.length; i++) {\n        const { abi, address, args, functionName } = contracts[i];\n        try {\n            const callData = encodeFunctionData({ abi, args, functionName });\n            currentChunkSize += (callData.length - 2) / 2;\n            // Check to see if we need to create a new chunk.\n            if (\n            // Check if batching is enabled.\n            batchSize > 0 &&\n                // Check if the current size of the batch exceeds the size limit.\n                currentChunkSize > batchSize &&\n                // Check if the current chunk is not already empty.\n                chunkedCalls[currentChunk].length > 0) {\n                currentChunk++;\n                currentChunkSize = (callData.length - 2) / 2;\n                chunkedCalls[currentChunk] = [];\n            }\n            chunkedCalls[currentChunk] = [\n                ...chunkedCalls[currentChunk],\n                {\n                    allowFailure: true,\n                    callData,\n                    target: address,\n                },\n            ];\n        }\n        catch (err) {\n            const error = getContractError(err, {\n                abi,\n                address,\n                args,\n                docsPath: '/docs/contract/multicall',\n                functionName,\n                sender: account,\n            });\n            if (!allowFailure)\n                throw error;\n            chunkedCalls[currentChunk] = [\n                ...chunkedCalls[currentChunk],\n                {\n                    allowFailure: true,\n                    callData: '0x',\n                    target: address,\n                },\n            ];\n        }\n    }\n    const aggregate3Results = await Promise.allSettled(chunkedCalls.map((calls) => getAction(client, readContract, 'readContract')({\n        abi: multicall3Abi,\n        account,\n        address: multicallAddress,\n        args: [calls],\n        blockNumber,\n        blockTag,\n        functionName: 'aggregate3',\n        stateOverride,\n    })));\n    const results = [];\n    for (let i = 0; i < aggregate3Results.length; i++) {\n        const result = aggregate3Results[i];\n        // If an error occurred in a `readContract` invocation (ie. network error),\n        // then append the failure reason to each contract result.\n        if (result.status === 'rejected') {\n            if (!allowFailure)\n                throw result.reason;\n            for (let j = 0; j < chunkedCalls[i].length; j++) {\n                results.push({\n                    status: 'failure',\n                    error: result.reason,\n                    result: undefined,\n                });\n            }\n            continue;\n        }\n        // If the `readContract` call was successful, then decode the results.\n        const aggregate3Result = result.value;\n        for (let j = 0; j < aggregate3Result.length; j++) {\n            // Extract the response from `readContract`\n            const { returnData, success } = aggregate3Result[j];\n            // Extract the request call data from the original call.\n            const { callData } = chunkedCalls[i][j];\n            // Extract the contract config for this call from the `contracts` argument\n            // for decoding.\n            const { abi, address, functionName, args } = contracts[results.length];\n            try {\n                if (callData === '0x')\n                    throw new AbiDecodingZeroDataError();\n                if (!success)\n                    throw new RawContractError({ data: returnData });\n                const result = decodeFunctionResult({\n                    abi,\n                    args,\n                    data: returnData,\n                    functionName,\n                });\n                results.push(allowFailure ? { result, status: 'success' } : result);\n            }\n            catch (err) {\n                const error = getContractError(err, {\n                    abi,\n                    address,\n                    args,\n                    docsPath: '/docs/contract/multicall',\n                    functionName,\n                });\n                if (!allowFailure)\n                    throw error;\n                results.push({ error, result: undefined, status: 'failure' });\n            }\n        }\n    }\n    if (results.length !== contracts.length)\n        throw new BaseError('multicall results mismatch');\n    return results;\n}\n//# sourceMappingURL=multicall.js.map","/**\n * Sends a **signed** transaction to the network\n *\n * - Docs: https://viem.sh/docs/actions/wallet/sendRawTransaction\n * - JSON-RPC Method: [`eth_sendRawTransaction`](https://ethereum.github.io/execution-apis/api-documentation/)\n *\n * @param client - Client to use\n * @param parameters - {@link SendRawTransactionParameters}\n * @returns The transaction hash. {@link SendRawTransactionReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { sendRawTransaction } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n *\n * const hash = await sendRawTransaction(client, {\n *   serializedTransaction: '0x02f850018203118080825208808080c080a04012522854168b27e5dc3d5839bab5e6b39e1a0ffd343901ce1622e3d64b48f1a04e00902ae0502c4728cbf12156290df99c3ed7de85b1dbfe20b5c36931733a33'\n * })\n */\nexport async function sendRawTransaction(client, { serializedTransaction }) {\n    return client.request({\n        method: 'eth_sendRawTransaction',\n        params: [serializedTransaction],\n    }, { retryCount: 0 });\n}\n//# sourceMappingURL=sendRawTransaction.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { decodeFunctionResult, } from '../../utils/abi/decodeFunctionResult.js';\nimport { encodeFunctionData, } from '../../utils/abi/encodeFunctionData.js';\nimport { getContractError, } from '../../utils/errors/getContractError.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { call } from './call.js';\n/**\n * Simulates/validates a contract interaction. This is useful for retrieving **return data** and **revert reasons** of contract write functions.\n *\n * - Docs: https://viem.sh/docs/contract/simulateContract\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/contracts_writing-to-contracts\n *\n * This function does not require gas to execute and _**does not**_ change the state of the blockchain. It is almost identical to [`readContract`](https://viem.sh/docs/contract/readContract), but also supports contract write functions.\n *\n * Internally, uses a [Public Client](https://viem.sh/docs/clients/public) to call the [`call` action](https://viem.sh/docs/actions/public/call) with [ABI-encoded `data`](https://viem.sh/docs/contract/encodeFunctionData).\n *\n * @param client - Client to use\n * @param parameters - {@link SimulateContractParameters}\n * @returns The simulation result and write request. {@link SimulateContractReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { simulateContract } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const result = await simulateContract(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['function mint(uint32) view returns (uint32)']),\n *   functionName: 'mint',\n *   args: ['69420'],\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function simulateContract(client, parameters) {\n    const { abi, address, args, dataSuffix, functionName, ...callRequest } = parameters;\n    const account = callRequest.account\n        ? parseAccount(callRequest.account)\n        : client.account;\n    const calldata = encodeFunctionData({ abi, args, functionName });\n    try {\n        const { data } = await getAction(client, call, 'call')({\n            batch: false,\n            data: `${calldata}${dataSuffix ? dataSuffix.replace('0x', '') : ''}`,\n            to: address,\n            ...callRequest,\n            account,\n        });\n        const result = decodeFunctionResult({\n            abi,\n            args,\n            functionName,\n            data: data || '0x',\n        });\n        const minimizedAbi = abi.filter((abiItem) => 'name' in abiItem && abiItem.name === parameters.functionName);\n        return {\n            result,\n            request: {\n                abi: minimizedAbi,\n                address,\n                args,\n                dataSuffix,\n                functionName,\n                ...callRequest,\n                account,\n            },\n        };\n    }\n    catch (error) {\n        throw getContractError(error, {\n            abi,\n            address,\n            args,\n            docsPath: '/docs/contract/simulateContract',\n            functionName,\n            sender: account?.address,\n        });\n    }\n}\n//# sourceMappingURL=simulateContract.js.map","import { hashMessage } from '../../utils/signature/hashMessage.js';\nimport { verifyHash, } from './verifyHash.js';\n/**\n * Verify that a message was signed by the provided address.\n *\n * Compatible with Smart Contract Accounts & Externally Owned Accounts via [ERC-6492](https://eips.ethereum.org/EIPS/eip-6492).\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyMessage}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyMessageParameters}\n * @returns Whether or not the signature is valid. {@link VerifyMessageReturnType}\n */\nexport async function verifyMessage(client, { address, message, factory, factoryData, signature, ...callRequest }) {\n    const hash = hashMessage(message);\n    return verifyHash(client, {\n        address,\n        factory: factory,\n        factoryData: factoryData,\n        hash,\n        signature,\n        ...callRequest,\n    });\n}\n//# sourceMappingURL=verifyMessage.js.map","import { hashTypedData, } from '../../utils/signature/hashTypedData.js';\nimport { verifyHash, } from './verifyHash.js';\n/**\n * Verify that typed data was signed by the provided address.\n *\n * - Docs {@link https://viem.sh/docs/actions/public/verifyTypedData}\n *\n * @param client - Client to use.\n * @param parameters - {@link VerifyTypedDataParameters}\n * @returns Whether or not the signature is valid. {@link VerifyTypedDataReturnType}\n */\nexport async function verifyTypedData(client, parameters) {\n    const { address, factory, factoryData, signature, message, primaryType, types, domain, ...callRequest } = parameters;\n    const hash = hashTypedData({ message, primaryType, types, domain });\n    return verifyHash(client, {\n        address,\n        factory: factory,\n        factoryData: factoryData,\n        hash,\n        signature,\n        ...callRequest,\n    });\n}\n//# sourceMappingURL=verifyTypedData.js.map","import { BlockNotFoundError } from '../../errors/block.js';\nimport { TransactionNotFoundError, TransactionReceiptNotFoundError, WaitForTransactionReceiptTimeoutError, } from '../../errors/transaction.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { withResolvers } from '../../utils/promise/withResolvers.js';\nimport { withRetry, } from '../../utils/promise/withRetry.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { getBlock } from './getBlock.js';\nimport { getTransaction, } from './getTransaction.js';\nimport { getTransactionReceipt, } from './getTransactionReceipt.js';\nimport { watchBlockNumber, } from './watchBlockNumber.js';\n/**\n * Waits for the [Transaction](https://viem.sh/docs/glossary/terms#transaction) to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the [Transaction Receipt](https://viem.sh/docs/glossary/terms#transaction-receipt).\n *\n * - Docs: https://viem.sh/docs/actions/public/waitForTransactionReceipt\n * - Example: https://stackblitz.com/github/wevm/viem/tree/main/examples/transactions_sending-transactions\n * - JSON-RPC Methods:\n *   - Polls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt) on each block until it has been processed.\n *   - If a Transaction has been replaced:\n *     - Calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getblockbynumber) and extracts the transactions\n *     - Checks if one of the Transactions is a replacement\n *     - If so, calls [`eth_getTransactionReceipt`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getTransactionReceipt).\n *\n * The `waitForTransactionReceipt` action additionally supports Replacement detection (e.g. sped up Transactions).\n *\n * Transactions can be replaced when a user modifies their transaction in their wallet (to speed up or cancel). Transactions are replaced when they are sent from the same nonce.\n *\n * There are 3 types of Transaction Replacement reasons:\n *\n * - `repriced`: The gas price has been modified (e.g. different `maxFeePerGas`)\n * - `cancelled`: The Transaction has been cancelled (e.g. `value === 0n`)\n * - `replaced`: The Transaction has been replaced (e.g. different `value` or `data`)\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForTransactionReceiptParameters}\n * @returns The transaction receipt. {@link WaitForTransactionReceiptReturnType}\n *\n * @example\n * import { createPublicClient, waitForTransactionReceipt, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const transactionReceipt = await waitForTransactionReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function waitForTransactionReceipt(client, { confirmations = 1, hash, onReplaced, pollingInterval = client.pollingInterval, retryCount = 6, retryDelay = ({ count }) => ~~(1 << count) * 200, // exponential backoff\ntimeout = 180_000, }) {\n    const observerId = stringify(['waitForTransactionReceipt', client.uid, hash]);\n    let transaction;\n    let replacedTransaction;\n    let receipt;\n    let retrying = false;\n    // biome-ignore lint/style/useConst:\n    let _unobserve;\n    let _unwatch;\n    const { promise, resolve, reject } = withResolvers();\n    const timer = timeout\n        ? setTimeout(() => {\n            _unwatch();\n            _unobserve();\n            reject(new WaitForTransactionReceiptTimeoutError({ hash }));\n        }, timeout)\n        : undefined;\n    _unobserve = observe(observerId, { onReplaced, resolve, reject }, (emit) => {\n        _unwatch = getAction(client, watchBlockNumber, 'watchBlockNumber')({\n            emitMissed: true,\n            emitOnBegin: true,\n            poll: true,\n            pollingInterval,\n            async onBlockNumber(blockNumber_) {\n                const done = (fn) => {\n                    clearTimeout(timer);\n                    _unwatch();\n                    fn();\n                    _unobserve();\n                };\n                let blockNumber = blockNumber_;\n                if (retrying)\n                    return;\n                try {\n                    // If we already have a valid receipt, let's check if we have enough\n                    // confirmations. If we do, then we can resolve.\n                    if (receipt) {\n                        if (confirmations > 1 &&\n                            (!receipt.blockNumber ||\n                                blockNumber - receipt.blockNumber + 1n < confirmations))\n                            return;\n                        done(() => emit.resolve(receipt));\n                        return;\n                    }\n                    // Get the transaction to check if it's been replaced.\n                    // We need to retry as some RPC Providers may be slow to sync\n                    // up mined transactions.\n                    if (!transaction) {\n                        retrying = true;\n                        await withRetry(async () => {\n                            transaction = (await getAction(client, getTransaction, 'getTransaction')({ hash }));\n                            if (transaction.blockNumber)\n                                blockNumber = transaction.blockNumber;\n                        }, {\n                            delay: retryDelay,\n                            retryCount,\n                        });\n                        retrying = false;\n                    }\n                    // Get the receipt to check if it's been processed.\n                    receipt = await getAction(client, getTransactionReceipt, 'getTransactionReceipt')({ hash });\n                    // Check if we have enough confirmations. If not, continue polling.\n                    if (confirmations > 1 &&\n                        (!receipt.blockNumber ||\n                            blockNumber - receipt.blockNumber + 1n < confirmations))\n                        return;\n                    done(() => emit.resolve(receipt));\n                }\n                catch (err) {\n                    // If the receipt is not found, the transaction will be pending.\n                    // We need to check if it has potentially been replaced.\n                    if (err instanceof TransactionNotFoundError ||\n                        err instanceof TransactionReceiptNotFoundError) {\n                        if (!transaction) {\n                            retrying = false;\n                            return;\n                        }\n                        try {\n                            replacedTransaction = transaction;\n                            // Let's retrieve the transactions from the current block.\n                            // We need to retry as some RPC Providers may be slow to sync\n                            // up mined blocks.\n                            retrying = true;\n                            const block = await withRetry(() => getAction(client, getBlock, 'getBlock')({\n                                blockNumber,\n                                includeTransactions: true,\n                            }), {\n                                delay: retryDelay,\n                                retryCount,\n                                shouldRetry: ({ error }) => error instanceof BlockNotFoundError,\n                            });\n                            retrying = false;\n                            const replacementTransaction = block.transactions.find(({ from, nonce }) => from === replacedTransaction.from &&\n                                nonce === replacedTransaction.nonce);\n                            // If we couldn't find a replacement transaction, continue polling.\n                            if (!replacementTransaction)\n                                return;\n                            // If we found a replacement transaction, return it's receipt.\n                            receipt = await getAction(client, getTransactionReceipt, 'getTransactionReceipt')({\n                                hash: replacementTransaction.hash,\n                            });\n                            // Check if we have enough confirmations. If not, continue polling.\n                            if (confirmations > 1 &&\n                                (!receipt.blockNumber ||\n                                    blockNumber - receipt.blockNumber + 1n < confirmations))\n                                return;\n                            let reason = 'replaced';\n                            if (replacementTransaction.to === replacedTransaction.to &&\n                                replacementTransaction.value === replacedTransaction.value &&\n                                replacementTransaction.input === replacedTransaction.input) {\n                                reason = 'repriced';\n                            }\n                            else if (replacementTransaction.from === replacementTransaction.to &&\n                                replacementTransaction.value === 0n) {\n                                reason = 'cancelled';\n                            }\n                            done(() => {\n                                emit.onReplaced?.({\n                                    reason,\n                                    replacedTransaction: replacedTransaction,\n                                    transaction: replacementTransaction,\n                                    transactionReceipt: receipt,\n                                });\n                                emit.resolve(receipt);\n                            });\n                        }\n                        catch (err_) {\n                            done(() => emit.reject(err_));\n                        }\n                    }\n                    else {\n                        done(() => emit.reject(err));\n                    }\n                }\n            },\n        });\n    });\n    return promise;\n}\n//# sourceMappingURL=waitForTransactionReceipt.js.map","import { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { getBlock } from './getBlock.js';\n/**\n * Watches and returns information for incoming blocks.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchBlocks\n * - Examples: https://stackblitz.com/github/wevm/viem/tree/main/examples/blocks_watching-blocks\n * - JSON-RPC Methods:\n *   - When `poll: true`, calls [`eth_getBlockByNumber`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getBlockByNumber) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newHeads\"` event.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchBlocksParameters}\n * @returns A function that can be invoked to stop watching for new block numbers. {@link WatchBlocksReturnType}\n *\n * @example\n * import { createPublicClient, watchBlocks, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchBlocks(client, {\n *   onBlock: (block) => console.log(block),\n * })\n */\nexport function watchBlocks(client, { blockTag = 'latest', emitMissed = false, emitOnBegin = false, onBlock, onError, includeTransactions: includeTransactions_, poll: poll_, pollingInterval = client.pollingInterval, }) {\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (client.transport.type === 'webSocket' ||\n            client.transport.type === 'ipc')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            (client.transport.transports[0].config.type === 'webSocket' ||\n                client.transport.transports[0].config.type === 'ipc'))\n            return false;\n        return true;\n    })();\n    const includeTransactions = includeTransactions_ ?? false;\n    let prevBlock;\n    const pollBlocks = () => {\n        const observerId = stringify([\n            'watchBlocks',\n            client.uid,\n            blockTag,\n            emitMissed,\n            emitOnBegin,\n            includeTransactions,\n            pollingInterval,\n        ]);\n        return observe(observerId, { onBlock, onError }, (emit) => poll(async () => {\n            try {\n                const block = await getAction(client, getBlock, 'getBlock')({\n                    blockTag,\n                    includeTransactions,\n                });\n                if (block.number !== null && prevBlock?.number != null) {\n                    // If the current block number is the same as the previous,\n                    // we can skip.\n                    if (block.number === prevBlock.number)\n                        return;\n                    // If we have missed out on some previous blocks, and the\n                    // `emitMissed` flag is truthy, let's emit those blocks.\n                    if (block.number - prevBlock.number > 1 && emitMissed) {\n                        for (let i = prevBlock?.number + 1n; i < block.number; i++) {\n                            const block = (await getAction(client, getBlock, 'getBlock')({\n                                blockNumber: i,\n                                includeTransactions,\n                            }));\n                            emit.onBlock(block, prevBlock);\n                            prevBlock = block;\n                        }\n                    }\n                }\n                if (\n                // If no previous block exists, emit.\n                prevBlock?.number == null ||\n                    // If the block tag is \"pending\" with no block number, emit.\n                    (blockTag === 'pending' && block?.number == null) ||\n                    // If the next block number is greater than the previous block number, emit.\n                    // We don't want to emit blocks in the past.\n                    (block.number !== null && block.number > prevBlock.number)) {\n                    emit.onBlock(block, prevBlock);\n                    prevBlock = block;\n                }\n            }\n            catch (err) {\n                emit.onError?.(err);\n            }\n        }, {\n            emitOnBegin,\n            interval: pollingInterval,\n        }));\n    };\n    const subscribeBlocks = () => {\n        let active = true;\n        let emitFetched = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                if (emitOnBegin) {\n                    getAction(client, getBlock, 'getBlock')({\n                        blockTag,\n                        includeTransactions,\n                    })\n                        .then((block) => {\n                        if (!active)\n                            return;\n                        if (!emitFetched)\n                            return;\n                        onBlock(block, undefined);\n                        emitFetched = false;\n                    })\n                        .catch(onError);\n                }\n                const transport = (() => {\n                    if (client.transport.type === 'fallback') {\n                        const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||\n                            transport.config.type === 'ipc');\n                        if (!transport)\n                            return client.transport;\n                        return transport.value;\n                    }\n                    return client.transport;\n                })();\n                const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                    params: ['newHeads'],\n                    async onData(data) {\n                        if (!active)\n                            return;\n                        const block = (await getAction(client, getBlock, 'getBlock')({\n                            blockNumber: data.result?.number,\n                            includeTransactions,\n                        }).catch(() => { }));\n                        if (!active)\n                            return;\n                        onBlock(block, prevBlock);\n                        emitFetched = false;\n                        prevBlock = block;\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return () => unsubscribe();\n    };\n    return enablePolling ? pollBlocks() : subscribeBlocks();\n}\n//# sourceMappingURL=watchBlocks.js.map","import { DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { InvalidInputRpcError } from '../../errors/rpc.js';\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js';\nimport { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { formatLog } from '../../utils/formatters/log.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { createContractEventFilter } from './createContractEventFilter.js';\nimport { getBlockNumber } from './getBlockNumber.js';\nimport { getContractEvents, } from './getContractEvents.js';\nimport { getFilterChanges } from './getFilterChanges.js';\nimport { uninstallFilter } from './uninstallFilter.js';\n/**\n * Watches and returns emitted contract event logs.\n *\n * - Docs: https://viem.sh/docs/contract/watchContractEvent\n *\n * This Action will batch up all the event logs found within the [`pollingInterval`](https://viem.sh/docs/contract/watchContractEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/contract/watchContractEvent#onLogs).\n *\n * `watchContractEvent` will attempt to create an [Event Filter](https://viem.sh/docs/contract/createContractEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchContractEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchContractEventParameters}\n * @returns A function that can be invoked to stop watching for new event logs. {@link WatchContractEventReturnType}\n *\n * @example\n * import { createPublicClient, http, parseAbi } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchContractEvent } from 'viem/contract'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchContractEvent(client, {\n *   address: '0xFBA3912Ca04dd458c843e2EE08967fC04f3579c2',\n *   abi: parseAbi(['event Transfer(address indexed from, address indexed to, uint256 value)']),\n *   eventName: 'Transfer',\n *   args: { from: '0xc961145a54C96E3aE9bAA048c4F4D6b04C13916b' },\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchContractEvent(client, parameters) {\n    const { abi, address, args, batch = true, eventName, fromBlock, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, } = parameters;\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (typeof fromBlock === 'bigint')\n            return true;\n        if (client.transport.type === 'webSocket' ||\n            client.transport.type === 'ipc')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            (client.transport.transports[0].config.type === 'webSocket' ||\n                client.transport.transports[0].config.type === 'ipc'))\n            return false;\n        return true;\n    })();\n    const pollContractEvent = () => {\n        const strict = strict_ ?? false;\n        const observerId = stringify([\n            'watchContractEvent',\n            address,\n            args,\n            batch,\n            client.uid,\n            eventName,\n            pollingInterval,\n            strict,\n            fromBlock,\n        ]);\n        return observe(observerId, { onLogs, onError }, (emit) => {\n            let previousBlockNumber;\n            if (fromBlock !== undefined)\n                previousBlockNumber = fromBlock - 1n;\n            let filter;\n            let initialized = false;\n            const unwatch = poll(async () => {\n                if (!initialized) {\n                    try {\n                        filter = (await getAction(client, createContractEventFilter, 'createContractEventFilter')({\n                            abi,\n                            address,\n                            args: args,\n                            eventName: eventName,\n                            strict: strict,\n                            fromBlock,\n                        }));\n                    }\n                    catch { }\n                    initialized = true;\n                    return;\n                }\n                try {\n                    let logs;\n                    if (filter) {\n                        logs = await getAction(client, getFilterChanges, 'getFilterChanges')({ filter });\n                    }\n                    else {\n                        // If the filter doesn't exist, we will fall back to use `getLogs`.\n                        // The fall back exists because some RPC Providers do not support filters.\n                        // Fetch the block number to use for `getLogs`.\n                        const blockNumber = await getAction(client, getBlockNumber, 'getBlockNumber')({});\n                        // If the block number has changed, we will need to fetch the logs.\n                        // If the block number doesn't exist, we are yet to reach the first poll interval,\n                        // so do not emit any logs.\n                        if (previousBlockNumber && previousBlockNumber < blockNumber) {\n                            logs = await getAction(client, getContractEvents, 'getContractEvents')({\n                                abi,\n                                address,\n                                args,\n                                eventName,\n                                fromBlock: previousBlockNumber + 1n,\n                                toBlock: blockNumber,\n                                strict,\n                            });\n                        }\n                        else {\n                            logs = [];\n                        }\n                        previousBlockNumber = blockNumber;\n                    }\n                    if (logs.length === 0)\n                        return;\n                    if (batch)\n                        emit.onLogs(logs);\n                    else\n                        for (const log of logs)\n                            emit.onLogs([log]);\n                }\n                catch (err) {\n                    // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n                    // Reinitialize the filter when this occurs\n                    if (filter && err instanceof InvalidInputRpcError)\n                        initialized = false;\n                    emit.onError?.(err);\n                }\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            return async () => {\n                if (filter)\n                    await getAction(client, uninstallFilter, 'uninstallFilter')({ filter });\n                unwatch();\n            };\n        });\n    };\n    const subscribeContractEvent = () => {\n        const strict = strict_ ?? false;\n        const observerId = stringify([\n            'watchContractEvent',\n            address,\n            args,\n            batch,\n            client.uid,\n            eventName,\n            pollingInterval,\n            strict,\n        ]);\n        let active = true;\n        let unsubscribe = () => (active = false);\n        return observe(observerId, { onLogs, onError }, (emit) => {\n            ;\n            (async () => {\n                try {\n                    const transport = (() => {\n                        if (client.transport.type === 'fallback') {\n                            const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||\n                                transport.config.type === 'ipc');\n                            if (!transport)\n                                return client.transport;\n                            return transport.value;\n                        }\n                        return client.transport;\n                    })();\n                    const topics = eventName\n                        ? encodeEventTopics({\n                            abi: abi,\n                            eventName: eventName,\n                            args,\n                        })\n                        : [];\n                    const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                        params: ['logs', { address, topics }],\n                        onData(data) {\n                            if (!active)\n                                return;\n                            const log = data.result;\n                            try {\n                                const { eventName, args } = decodeEventLog({\n                                    abi: abi,\n                                    data: log.data,\n                                    topics: log.topics,\n                                    strict: strict_,\n                                });\n                                const formatted = formatLog(log, {\n                                    args,\n                                    eventName: eventName,\n                                });\n                                emit.onLogs([formatted]);\n                            }\n                            catch (err) {\n                                let eventName;\n                                let isUnnamed;\n                                if (err instanceof DecodeLogDataMismatch ||\n                                    err instanceof DecodeLogTopicsMismatch) {\n                                    // If strict mode is on, and log data/topics do not match event definition, skip.\n                                    if (strict_)\n                                        return;\n                                    eventName = err.abiItem.name;\n                                    isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n                                }\n                                // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n                                const formatted = formatLog(log, {\n                                    args: isUnnamed ? [] : {},\n                                    eventName,\n                                });\n                                emit.onLogs([formatted]);\n                            }\n                        },\n                        onError(error) {\n                            emit.onError?.(error);\n                        },\n                    });\n                    unsubscribe = unsubscribe_;\n                    if (!active)\n                        unsubscribe();\n                }\n                catch (err) {\n                    onError?.(err);\n                }\n            })();\n            return () => unsubscribe();\n        });\n    };\n    return enablePolling ? pollContractEvent() : subscribeContractEvent();\n}\n//# sourceMappingURL=watchContractEvent.js.map","import { encodeEventTopics, } from '../../utils/abi/encodeEventTopics.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { DecodeLogDataMismatch, DecodeLogTopicsMismatch, } from '../../errors/abi.js';\nimport { InvalidInputRpcError } from '../../errors/rpc.js';\nimport { decodeEventLog } from '../../utils/abi/decodeEventLog.js';\nimport { formatLog } from '../../utils/formatters/log.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { createEventFilter, } from './createEventFilter.js';\nimport { getBlockNumber } from './getBlockNumber.js';\nimport { getFilterChanges } from './getFilterChanges.js';\nimport { getLogs } from './getLogs.js';\nimport { uninstallFilter } from './uninstallFilter.js';\n/**\n * Watches and returns emitted [Event Logs](https://viem.sh/docs/glossary/terms#event-log).\n *\n * - Docs: https://viem.sh/docs/actions/public/watchEvent\n * - JSON-RPC Methods:\n *   - **RPC Provider supports `eth_newFilter`:**\n *     - Calls [`eth_newFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newfilter) to create a filter (called on initialize).\n *     - On a polling interval, it will call [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getfilterchanges).\n *   - **RPC Provider does not support `eth_newFilter`:**\n *     - Calls [`eth_getLogs`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getlogs) for each block between the polling interval.\n *\n * This Action will batch up all the Event Logs found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchEvent#pollinginterval-optional), and invoke them via [`onLogs`](https://viem.sh/docs/actions/public/watchEvent#onLogs).\n *\n * `watchEvent` will attempt to create an [Event Filter](https://viem.sh/docs/actions/public/createEventFilter) and listen to changes to the Filter per polling interval, however, if the RPC Provider does not support Filters (e.g. `eth_newFilter`), then `watchEvent` will fall back to using [`getLogs`](https://viem.sh/docs/actions/public/getLogs) instead.\n *\n * @param client - Client to use\n * @param parameters - {@link WatchEventParameters}\n * @returns A function that can be invoked to stop watching for new Event Logs. {@link WatchEventReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchEvent } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = watchEvent(client, {\n *   onLogs: (logs) => console.log(logs),\n * })\n */\nexport function watchEvent(client, { address, args, batch = true, event, events, fromBlock, onError, onLogs, poll: poll_, pollingInterval = client.pollingInterval, strict: strict_, }) {\n    const enablePolling = (() => {\n        if (typeof poll_ !== 'undefined')\n            return poll_;\n        if (typeof fromBlock === 'bigint')\n            return true;\n        if (client.transport.type === 'webSocket' ||\n            client.transport.type === 'ipc')\n            return false;\n        if (client.transport.type === 'fallback' &&\n            (client.transport.transports[0].config.type === 'webSocket' ||\n                client.transport.transports[0].config.type === 'ipc'))\n            return false;\n        return true;\n    })();\n    const strict = strict_ ?? false;\n    const pollEvent = () => {\n        const observerId = stringify([\n            'watchEvent',\n            address,\n            args,\n            batch,\n            client.uid,\n            event,\n            pollingInterval,\n            fromBlock,\n        ]);\n        return observe(observerId, { onLogs, onError }, (emit) => {\n            let previousBlockNumber;\n            if (fromBlock !== undefined)\n                previousBlockNumber = fromBlock - 1n;\n            let filter;\n            let initialized = false;\n            const unwatch = poll(async () => {\n                if (!initialized) {\n                    try {\n                        filter = (await getAction(client, createEventFilter, 'createEventFilter')({\n                            address,\n                            args,\n                            event: event,\n                            events,\n                            strict,\n                            fromBlock,\n                        }));\n                    }\n                    catch { }\n                    initialized = true;\n                    return;\n                }\n                try {\n                    let logs;\n                    if (filter) {\n                        logs = await getAction(client, getFilterChanges, 'getFilterChanges')({ filter });\n                    }\n                    else {\n                        // If the filter doesn't exist, we will fall back to use `getLogs`.\n                        // The fall back exists because some RPC Providers do not support filters.\n                        // Fetch the block number to use for `getLogs`.\n                        const blockNumber = await getAction(client, getBlockNumber, 'getBlockNumber')({});\n                        // If the block number has changed, we will need to fetch the logs.\n                        // If the block number doesn't exist, we are yet to reach the first poll interval,\n                        // so do not emit any logs.\n                        if (previousBlockNumber && previousBlockNumber !== blockNumber) {\n                            logs = await getAction(client, getLogs, 'getLogs')({\n                                address,\n                                args,\n                                event: event,\n                                events,\n                                fromBlock: previousBlockNumber + 1n,\n                                toBlock: blockNumber,\n                            });\n                        }\n                        else {\n                            logs = [];\n                        }\n                        previousBlockNumber = blockNumber;\n                    }\n                    if (logs.length === 0)\n                        return;\n                    if (batch)\n                        emit.onLogs(logs);\n                    else\n                        for (const log of logs)\n                            emit.onLogs([log]);\n                }\n                catch (err) {\n                    // If a filter has been set and gets uninstalled, providers will throw an InvalidInput error.\n                    // Reinitialize the filter when this occurs\n                    if (filter && err instanceof InvalidInputRpcError)\n                        initialized = false;\n                    emit.onError?.(err);\n                }\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            return async () => {\n                if (filter)\n                    await getAction(client, uninstallFilter, 'uninstallFilter')({ filter });\n                unwatch();\n            };\n        });\n    };\n    const subscribeEvent = () => {\n        let active = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                const transport = (() => {\n                    if (client.transport.type === 'fallback') {\n                        const transport = client.transport.transports.find((transport) => transport.config.type === 'webSocket' ||\n                            transport.config.type === 'ipc');\n                        if (!transport)\n                            return client.transport;\n                        return transport.value;\n                    }\n                    return client.transport;\n                })();\n                const events_ = events ?? (event ? [event] : undefined);\n                let topics = [];\n                if (events_) {\n                    const encoded = events_.flatMap((event) => encodeEventTopics({\n                        abi: [event],\n                        eventName: event.name,\n                        args,\n                    }));\n                    // TODO: Clean up type casting\n                    topics = [encoded];\n                    if (event)\n                        topics = topics[0];\n                }\n                const { unsubscribe: unsubscribe_ } = await transport.subscribe({\n                    params: ['logs', { address, topics }],\n                    onData(data) {\n                        if (!active)\n                            return;\n                        const log = data.result;\n                        try {\n                            const { eventName, args } = decodeEventLog({\n                                abi: events_ ?? [],\n                                data: log.data,\n                                topics: log.topics,\n                                strict,\n                            });\n                            const formatted = formatLog(log, { args, eventName });\n                            onLogs([formatted]);\n                        }\n                        catch (err) {\n                            let eventName;\n                            let isUnnamed;\n                            if (err instanceof DecodeLogDataMismatch ||\n                                err instanceof DecodeLogTopicsMismatch) {\n                                // If strict mode is on, and log data/topics do not match event definition, skip.\n                                if (strict_)\n                                    return;\n                                eventName = err.abiItem.name;\n                                isUnnamed = err.abiItem.inputs?.some((x) => !('name' in x && x.name));\n                            }\n                            // Set args to empty if there is an error decoding (e.g. indexed/non-indexed params mismatch).\n                            const formatted = formatLog(log, {\n                                args: isUnnamed ? [] : {},\n                                eventName,\n                            });\n                            onLogs([formatted]);\n                        }\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return () => unsubscribe();\n    };\n    return enablePolling ? pollEvent() : subscribeEvent();\n}\n//# sourceMappingURL=watchEvent.js.map","import { getAction } from '../../utils/getAction.js';\nimport { observe } from '../../utils/observe.js';\nimport { poll } from '../../utils/poll.js';\nimport { stringify } from '../../utils/stringify.js';\nimport { createPendingTransactionFilter } from './createPendingTransactionFilter.js';\nimport { getFilterChanges } from './getFilterChanges.js';\nimport { uninstallFilter } from './uninstallFilter.js';\n/**\n * Watches and returns pending transaction hashes.\n *\n * - Docs: https://viem.sh/docs/actions/public/watchPendingTransactions\n * - JSON-RPC Methods:\n *   - When `poll: true`\n *     - Calls [`eth_newPendingTransactionFilter`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_newpendingtransactionfilter) to initialize the filter.\n *     - Calls [`eth_getFilterChanges`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_getFilterChanges) on a polling interval.\n *   - When `poll: false` & WebSocket Transport, uses a WebSocket subscription via [`eth_subscribe`](https://docs.alchemy.com/reference/eth-subscribe-polygon) and the `\"newPendingTransactions\"` event.\n *\n * This Action will batch up all the pending transactions found within the [`pollingInterval`](https://viem.sh/docs/actions/public/watchPendingTransactions#pollinginterval-optional), and invoke them via [`onTransactions`](https://viem.sh/docs/actions/public/watchPendingTransactions#ontransactions).\n *\n * @param client - Client to use\n * @param parameters - {@link WatchPendingTransactionsParameters}\n * @returns A function that can be invoked to stop watching for new pending transaction hashes. {@link WatchPendingTransactionsReturnType}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { watchPendingTransactions } from 'viem/public'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const unwatch = await watchPendingTransactions(client, {\n *   onTransactions: (hashes) => console.log(hashes),\n * })\n */\nexport function watchPendingTransactions(client, { batch = true, onError, onTransactions, poll: poll_, pollingInterval = client.pollingInterval, }) {\n    const enablePolling = typeof poll_ !== 'undefined'\n        ? poll_\n        : client.transport.type !== 'webSocket' && client.transport.type !== 'ipc';\n    const pollPendingTransactions = () => {\n        const observerId = stringify([\n            'watchPendingTransactions',\n            client.uid,\n            batch,\n            pollingInterval,\n        ]);\n        return observe(observerId, { onTransactions, onError }, (emit) => {\n            let filter;\n            const unwatch = poll(async () => {\n                try {\n                    if (!filter) {\n                        try {\n                            filter = await getAction(client, createPendingTransactionFilter, 'createPendingTransactionFilter')({});\n                            return;\n                        }\n                        catch (err) {\n                            unwatch();\n                            throw err;\n                        }\n                    }\n                    const hashes = await getAction(client, getFilterChanges, 'getFilterChanges')({ filter });\n                    if (hashes.length === 0)\n                        return;\n                    if (batch)\n                        emit.onTransactions(hashes);\n                    else\n                        for (const hash of hashes)\n                            emit.onTransactions([hash]);\n                }\n                catch (err) {\n                    emit.onError?.(err);\n                }\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            return async () => {\n                if (filter)\n                    await getAction(client, uninstallFilter, 'uninstallFilter')({ filter });\n                unwatch();\n            };\n        });\n    };\n    const subscribePendingTransactions = () => {\n        let active = true;\n        let unsubscribe = () => (active = false);\n        (async () => {\n            try {\n                const { unsubscribe: unsubscribe_ } = await client.transport.subscribe({\n                    params: ['newPendingTransactions'],\n                    onData(data) {\n                        if (!active)\n                            return;\n                        const transaction = data.result;\n                        onTransactions([transaction]);\n                    },\n                    onError(error) {\n                        onError?.(error);\n                    },\n                });\n                unsubscribe = unsubscribe_;\n                if (!active)\n                    unsubscribe();\n            }\n            catch (err) {\n                onError?.(err);\n            }\n        })();\n        return () => unsubscribe();\n    };\n    return enablePolling\n        ? pollPendingTransactions()\n        : subscribePendingTransactions();\n}\n//# sourceMappingURL=watchPendingTransactions.js.map","import { createClient, } from './createClient.js';\nimport { publicActions } from './decorators/public.js';\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro) configured for a [Chain](https://viem.sh/docs/clients/chains).\n *\n * - Docs: https://viem.sh/docs/clients/public\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient(parameters) {\n    const { key = 'public', name = 'Public Client' } = parameters;\n    const client = createClient({\n        ...parameters,\n        key,\n        name,\n        type: 'publicClient',\n    });\n    return client.extend(publicActions);\n}\n//# sourceMappingURL=createPublicClient.js.map",null,null,null,null,"var n,l,u,t,i,o,r,f,e,c,s,a,h={},v=[],p=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,y=Array.isArray;function d(n,l){for(var u in l)n[u]=l[u];return n}function w(n){n&&n.parentNode&&n.parentNode.removeChild(n)}function _(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return g(l,f,i,o,null)}function g(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function m(){return{current:null}}function b(n){return n.children}function k(n,l){this.props=n,this.context=l}function x(n,l){if(null==l)return n.__?x(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?x(n):null}function C(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return C(n)}}function M(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!P.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(P)}function P(){var n,u,t,o,r,e,c,s;for(i.sort(f);n=i.shift();)n.__d&&(u=i.length,o=void 0,e=(r=(t=n).__v).__e,c=[],s=[],t.__P&&((o=d({},r)).__v=r.__v+1,l.vnode&&l.vnode(o),O(t.__P,o,r,t.__n,t.__P.namespaceURI,32&r.__u?[e]:null,c,null==e?x(r):e,!!(32&r.__u),s),o.__v=r.__v,o.__.__k[o.__i]=o,j(c,o,s),o.__e!=e&&C(o)),i.length>u&&i.sort(f));P.__r=0}function S(n,l,u,t,i,o,r,f,e,c,s){var a,p,y,d,w,_=t&&t.__k||v,g=l.length;for(u.__d=e,$(u,l,_),e=u.__d,a=0;a<g;a++)null!=(y=u.__k[a])&&(p=-1===y.__i?h:_[y.__i]||h,y.__i=a,O(n,y,p,i,o,r,f,e,c,s),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&N(p.ref,null,y),s.push(y.ref,y.__c||d,y)),null==w&&null!=d&&(w=d),65536&y.__u||p.__k===y.__k?e=I(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=w}function $(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=l[t])&&\"boolean\"!=typeof i&&\"function\"!=typeof i?(r=t+a,(i=n.__k[t]=\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?g(null,i,null,null,null):y(i)?g(b,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?g(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i).__=n,i.__b=n.__b+1,o=null,-1!==(f=i.__i=L(i,u,r,s))&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f==r-1?a--:f==r+1?a++:(f>r?a--:a++,i.__u|=65536))):i=n.__k[t]=null;if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=x(o)),V(o,o))}function I(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=I(t[i],l,u));return l}n.__e!=l&&(l&&n.type&&!u.contains(l)&&(l=x(n)),u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling}while(null!=l&&8===l.nodeType);return l}function H(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(y(n)?n.some(function(n){H(n,l)}):l.push(n)),l}function L(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type&&0==(131072&e.__u))return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function T(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||p.test(l)?u:u+\"px\"}function A(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n||\"onFocusOut\"===l||\"onFocusIn\"===l?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=e,n.addEventListener(l,o?s:c,o)):n.removeEventListener(l,o?s:c,o);else{if(\"http://www.w3.org/2000/svg\"==i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!=l&&\"height\"!=l&&\"href\"!=l&&\"list\"!=l&&\"form\"!=l&&\"tabIndex\"!=l&&\"download\"!=l&&\"rowSpan\"!=l&&\"colSpan\"!=l&&\"role\"!=l&&\"popover\"!=l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,\"popover\"==l&&1==u?\"\":u))}}function F(n){return function(u){if(this.l){var t=this.l[u.type+n];if(null==u.t)u.t=e++;else if(u.t<t.u)return;return t(l.event?l.event(u):u)}}}function O(n,u,t,i,o,r,f,e,c,s){var a,h,v,p,w,_,g,m,x,C,M,P,$,I,H,L,T=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof T)try{if(m=u.props,x=\"prototype\"in T&&T.prototype.render,C=(a=T.contextType)&&i[a.__c],M=a?C?C.props.value:a.__:i,t.__c?g=(h=u.__c=t.__c).__=h.__E:(x?u.__c=h=new T(m,M):(u.__c=h=new k(m,M),h.constructor=T,h.render=q),C&&C.sub(h),h.props=m,h.state||(h.state={}),h.context=M,h.__n=i,v=h.__d=!0,h.__h=[],h._sb=[]),x&&null==h.__s&&(h.__s=h.state),x&&null!=T.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=d({},h.__s)),d(h.__s,T.getDerivedStateFromProps(m,h.__s))),p=h.props,w=h.state,h.__v=u,v)x&&null==T.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),x&&null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(x&&null==T.getDerivedStateFromProps&&m!==p&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(m,M),!h.__e&&(null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(m,h.__s,M)||u.__v===t.__v)){for(u.__v!==t.__v&&(h.props=m,h.state=h.__s,h.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.some(function(n){n&&(n.__=u)}),P=0;P<h._sb.length;P++)h.__h.push(h._sb[P]);h._sb=[],h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(m,h.__s,M),x&&null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(p,w,_)})}if(h.context=M,h.props=m,h.__P=n,h.__e=!1,$=l.__r,I=0,x){for(h.state=h.__s,h.__d=!1,$&&$(u),a=h.render(h.props,h.state,h.context),H=0;H<h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,$&&$(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++I<25);h.state=h.__s,null!=h.getChildContext&&(i=d(d({},i),h.getChildContext())),x&&!v&&null!=h.getSnapshotBeforeUpdate&&(_=h.getSnapshotBeforeUpdate(p,w)),S(n,y(L=null!=a&&a.type===b&&null==a.key?a.props.children:a)?L:[L],u,t,i,o,r,f,e,c,s),h.base=u.__e,u.__u&=-161,h.__h.length&&f.push(h),g&&(h.__E=h.__=null)}catch(n){if(u.__v=null,c||null!=r){for(u.__u|=c?160:32;e&&8===e.nodeType&&e.nextSibling;)e=e.nextSibling;r[r.indexOf(e)]=null,u.__e=e}else u.__e=t.__e,u.__k=t.__k;l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function j(n,u,t){u.__d=void 0;for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function z(u,t,i,o,r,f,e,c,s){var a,v,p,d,_,g,m,b=i.props,k=t.props,C=t.type;if(\"svg\"===C?r=\"http://www.w3.org/2000/svg\":\"math\"===C?r=\"http://www.w3.org/1998/Math/MathML\":r||(r=\"http://www.w3.org/1999/xhtml\"),null!=f)for(a=0;a<f.length;a++)if((_=f[a])&&\"setAttribute\"in _==!!C&&(C?_.localName===C:3===_.nodeType)){u=_,f[a]=null;break}if(null==u){if(null===C)return document.createTextNode(k);u=document.createElementNS(r,C,k.is&&k),c&&(l.__m&&l.__m(t,f),c=!1),f=null}if(null===C)b===k||c&&u.data===k||(u.data=k);else{if(f=f&&n.call(u.childNodes),b=i.props||h,!c&&null!=f)for(b={},a=0;a<u.attributes.length;a++)b[(_=u.attributes[a]).name]=_.value;for(a in b)if(_=b[a],\"children\"==a);else if(\"dangerouslySetInnerHTML\"==a)p=_;else if(!(a in k)){if(\"value\"==a&&\"defaultValue\"in k||\"checked\"==a&&\"defaultChecked\"in k)continue;A(u,a,null,_,r)}for(a in k)_=k[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?m=_:c&&\"function\"!=typeof _||b[a]===_||A(u,a,_,b[a],r);if(v)c||p&&(v.__html===p.__html||v.__html===u.innerHTML)||(u.innerHTML=v.__html),t.__k=[];else if(p&&(u.innerHTML=\"\"),S(u,y(d)?d:[d],t,i,o,\"foreignObject\"===C?\"http://www.w3.org/1999/xhtml\":r,f,e,f?f[0]:i.__k&&x(i,0),c,s),null!=f)for(a=f.length;a--;)w(f[a]);c||(a=\"value\",\"progress\"===C&&null==g?u.removeAttribute(\"value\"):void 0!==g&&(g!==u[a]||\"progress\"===C&&!g||\"option\"===C&&g!==b[a])&&A(u,a,g,b[a],r),a=\"checked\",void 0!==m&&m!==u[a]&&A(u,a,m,b[a],r))}return u}function N(n,u,t){try{if(\"function\"==typeof n){var i=\"function\"==typeof n.__u;i&&n.__u(),i&&null==u||(n.__u=n(u))}else n.current=u}catch(n){l.__e(n,t)}}function V(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&V(i[o],u,t||\"function\"!=typeof n.type);t||w(n.__e),n.__c=n.__=n.__e=n.__d=void 0}function q(n,l,u){return this.constructor(n,u)}function B(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],O(t,u=(!o&&i||t).__k=_(b,null,[u]),r||h,h,t.namespaceURI,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),j(f,u,e)}function D(n,l){B(n,l,D)}function E(l,u,t){var i,o,r,f,e=d({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),g(l.type,e,i||l.key,o||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+a++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.componentWillUnmount=function(){u=null},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,M(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u&&u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=v.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},k.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=d({},this.state),\"function\"==typeof n&&(n=n(d({},u),this.props)),n&&d(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),M(this))},k.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),M(this))},k.prototype.render=b,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},P.__r=0,e=0,c=F(!1),s=F(!0),a=0;export{k as Component,b as Fragment,E as cloneElement,G as createContext,_ as createElement,m as createRef,_ as h,D as hydrate,t as isValidElement,l as options,B as render,H as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as r,Fragment as e}from\"preact\";export{Fragment}from\"preact\";var t=/[\"&<]/;function n(r){if(0===r.length||!1===t.test(r))return r;for(var e=0,n=0,o=\"\",f=\"\";n<r.length;n++){switch(r.charCodeAt(n)){case 34:f=\"&quot;\";break;case 38:f=\"&amp;\";break;case 60:f=\"&lt;\";break;default:continue}n!==e&&(o+=r.slice(e,n)),o+=f,e=n+1}return n!==e&&(o+=r.slice(e,n)),o}var o=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,f=0,i=Array.isArray;function u(e,t,n,o,i,u){t||(t={});var a,c,l=t;\"ref\"in t&&(a=t.ref,delete t.ref);var p={type:e,props:l,key:n,ref:a,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:--f,__i:-1,__u:0,__source:i,__self:u};if(\"function\"==typeof e&&(a=e.defaultProps))for(c in a)void 0===l[c]&&(l[c]=a[c]);return r.vnode&&r.vnode(p),p}function a(r){var t=u(e,{tpl:r,exprs:[].slice.call(arguments,1)});return t.key=t.__v,t}var c={},l=/[A-Z]/g;function p(e,t){if(r.attr){var f=r.attr(e,t);if(\"string\"==typeof f)return f}if(\"ref\"===e||\"key\"===e)return\"\";if(\"style\"===e&&\"object\"==typeof t){var i=\"\";for(var u in t){var a=t[u];if(null!=a&&\"\"!==a){var p=\"-\"==u[0]?u:c[u]||(c[u]=u.replace(l,\"-$&\").toLowerCase()),_=\";\";\"number\"!=typeof a||p.startsWith(\"--\")||o.test(p)||(_=\"px;\"),i=i+p+\":\"+a+_}}return e+'=\"'+i+'\"'}return null==t||!1===t||\"function\"==typeof t||\"object\"==typeof t?\"\":!0===t?e:e+'=\"'+n(t)+'\"'}function _(r){if(null==r||\"boolean\"==typeof r||\"function\"==typeof r)return null;if(\"object\"==typeof r){if(void 0===r.constructor)return r;if(i(r)){for(var e=0;e<r.length;e++)r[e]=_(r[e]);return r}}return n(\"\"+r)}export{u as jsx,p as jsxAttr,u as jsxDEV,_ as jsxEscape,a as jsxTemplate,u as jsxs};\n//# sourceMappingURL=jsxRuntime.module.js.map\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;",null,null,"import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=n,e=c.__b,a=c.__r,v=c.diffed,l=c.__c,m=c.unmount,s=c.__;function d(n,t){c.__h&&c.__h(r,n,o||t),o=0;var u=r.__H||(r.__H={__:[],__h:[]});return n>=u.__.length&&u.__.push({}),u.__[n]}function h(n){return o=1,p(D,n)}function p(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):D(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return!!n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u}e&&e.call(this,n,t,r)},r.shouldComponentUpdate=f}return o.__N||o.__}function y(n,u){var i=d(t++,3);!c.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__H.__h.push(i))}function _(n,u){var i=d(t++,4);!c.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__h.push(i))}function A(n){return o=5,T(function(){return{current:n}},[])}function F(n,t,r){o=6,_(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function T(n,r){var u=d(t++,7);return C(u.__H,r)&&(u.__=n(),u.__H=r,u.__h=n),u.__}function q(n,t){return o=8,T(function(){return n},t)}function x(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function P(n,t){c.useDebugValue&&c.useDebugValue(t?t(n):n)}function b(n){var u=d(t++,10),i=h();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function g(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function j(){for(var n;n=f.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(z),n.__H.__h.forEach(B),n.__H.__h=[]}catch(t){n.__H.__h=[],c.__e(t,n.__v)}}c.__b=function(n){r=null,e&&e(n)},c.__=function(n,t){n&&t.__k&&t.__k.__m&&(n.__m=t.__k.__m),s&&s(n,t)},c.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.i=n.__N=void 0})):(i.__h.forEach(z),i.__h.forEach(B),i.__h=[],t=0)),u=r},c.diffed=function(n){v&&v(n);var t=n.__c;t&&t.__H&&(t.__H.__h.length&&(1!==f.push(t)&&i===c.requestAnimationFrame||((i=c.requestAnimationFrame)||w)(j)),t.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.i=void 0})),u=r=null},c.__c=function(n,t){t.some(function(n){try{n.__h.forEach(z),n.__h=n.__h.filter(function(n){return!n.__||B(n)})}catch(r){t.some(function(n){n.__h&&(n.__h=[])}),t=[],c.__e(r,n.__v)}}),l&&l(n,t)},c.unmount=function(n){m&&m(n);var t,r=n.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{z(n)}catch(n){t=n}}),r.__H=void 0,t&&c.__e(t,r.__v))};var k=\"function\"==typeof requestAnimationFrame;function w(n){var t,r=function(){clearTimeout(u),k&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);k&&(t=requestAnimationFrame(r))}function z(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function B(n){var t=r;n.__c=n.__(),r=t}function C(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function D(n,t){return\"function\"==typeof t?t(n):t}export{q as useCallback,x as useContext,P as useDebugValue,y as useEffect,b as useErrorBoundary,g as useId,F as useImperativeHandle,_ as useLayoutEffect,T as useMemo,p as useReducer,A as useRef,h as useState};\n//# sourceMappingURL=hooks.module.js.map\n",null,null,null,null,null,null,null,null,"'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n",null,null,null,null,null,null,"import * as Bytes from './Bytes.js';\nimport * as Hex from './Hex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\nconst decoder = /*#__PURE__*/ new TextDecoder();\nconst integerToCharacter = /*#__PURE__*/ Object.fromEntries(Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/').map((a, i) => [i, a.charCodeAt(0)]));\nconst characterToInteger = /*#__PURE__*/ {\n    ...Object.fromEntries(Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/').map((a, i) => [a.charCodeAt(0), i])),\n    ['='.charCodeAt(0)]: 0,\n    ['-'.charCodeAt(0)]: 62,\n    ['_'.charCodeAt(0)]: 63,\n};\n/**\n * Encodes a {@link ox#Bytes.Bytes} to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello world'))\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello world'), { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello wod'), { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The byte array to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromBytes(value, options = {}) {\n    const { pad = true, url = false } = options;\n    const encoded = new Uint8Array(Math.ceil(value.length / 3) * 4);\n    for (let i = 0, j = 0; j < value.length; i += 4, j += 3) {\n        const y = (value[j] << 16) + (value[j + 1] << 8) + (value[j + 2] | 0);\n        encoded[i] = integerToCharacter[y >> 18];\n        encoded[i + 1] = integerToCharacter[(y >> 12) & 0x3f];\n        encoded[i + 2] = integerToCharacter[(y >> 6) & 0x3f];\n        encoded[i + 3] = integerToCharacter[y & 0x3f];\n    }\n    const k = value.length % 3;\n    const end = Math.floor(value.length / 3) * 4 + (k && k + 1);\n    let base64 = decoder.decode(new Uint8Array(encoded.buffer, 0, end));\n    if (pad && k === 1)\n        base64 += '==';\n    if (pad && k === 2)\n        base64 += '=';\n    if (url)\n        base64 = base64.replaceAll('+', '-').replaceAll('/', '_');\n    return base64;\n}\n/**\n * Encodes a {@link ox#Hex.Hex} to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello world'))\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello world'), { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello wod'), { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The hex value to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromHex(value, options = {}) {\n    return fromBytes(Bytes.fromHex(value), options);\n}\n/**\n * Encodes a string to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello world')\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello world', { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello wod', { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The string to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromString(value, options = {}) {\n    return fromBytes(Bytes.fromString(value), options);\n}\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.toBytes('aGVsbG8gd29ybGQ=')\n * // @log: Uint8Array([104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100])\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(value) {\n    const base64 = value.replace(/=+$/, '');\n    const size = base64.length;\n    const decoded = new Uint8Array(size + 3);\n    encoder.encodeInto(base64 + '===', decoded);\n    for (let i = 0, j = 0; i < base64.length; i += 4, j += 3) {\n        const x = (characterToInteger[decoded[i]] << 18) +\n            (characterToInteger[decoded[i + 1]] << 12) +\n            (characterToInteger[decoded[i + 2]] << 6) +\n            characterToInteger[decoded[i + 3]];\n        decoded[j] = x >> 16;\n        decoded[j + 1] = (x >> 8) & 0xff;\n        decoded[j + 2] = x & 0xff;\n    }\n    const decodedSize = (size >> 2) * 3 + (size % 4 && (size % 4) - 1);\n    return new Uint8Array(decoded.buffer, 0, decodedSize);\n}\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.toHex('aGVsbG8gd29ybGQ=')\n * // @log: 0x68656c6c6f20776f726c64\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded {@link ox#Hex.Hex}.\n */\nexport function toHex(value) {\n    return Hex.fromBytes(toBytes(value));\n}\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to a string.\n *\n * @example\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.toString('aGVsbG8gd29ybGQ=')\n * // @log: 'hello world'\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded string.\n */\nexport function toString(value) {\n    return Bytes.toString(toBytes(value));\n}\n//# sourceMappingURL=Base64.js.map","/**\n * HMAC: RFC2104 message authentication code.\n * @module\n */\nimport { abytes, aexists, ahash } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        ahash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        aexists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        aexists(this);\n        abytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","/**\n * Utils for modular division and finite fields.\n * A finite field over 11 is integer number operations `mod 11`.\n * There is no division: it is replaced by modular multiplicative inverse.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { bitMask, bytesToNumberBE, bytesToNumberLE, ensureBytes, numberToBytesBE, numberToBytesLE, validateObject, } from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = /* @__PURE__ */ BigInt(2), _3n = /* @__PURE__ */ BigInt(3);\n// prettier-ignore\nconst _4n = /* @__PURE__ */ BigInt(4), _5n = /* @__PURE__ */ BigInt(5), _8n = /* @__PURE__ */ BigInt(8);\n// prettier-ignore\nconst _9n = /* @__PURE__ */ BigInt(9), _16n = /* @__PURE__ */ BigInt(16);\n// Calculates a modulo b\nexport function mod(a, b) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently raise num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @todo use field version && remove\n * @example\n * pow(2n, 6n, 11n) // 64n % 11n == 9n\n */\nexport function pow(num, power, modulo) {\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (modulo <= _0n)\n        throw new Error('invalid modulus');\n    if (modulo === _1n)\n        return _0n;\n    let res = _1n;\n    while (power > _0n) {\n        if (power & _1n)\n            res = (res * num) % modulo;\n        num = (num * num) % modulo;\n        power >>= _1n;\n    }\n    return res;\n}\n/** Does `x^(2^power)` mod p. `pow2(30, 4)` == `30^(2^4)` */\nexport function pow2(x, power, modulo) {\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= modulo;\n    }\n    return res;\n}\n/**\n * Inverses number over modulo.\n * Implemented using [Euclidean GCD](https://brilliant.org/wiki/extended-euclidean-algorithm/).\n */\nexport function invert(number, modulo) {\n    if (number === _0n)\n        throw new Error('invert: expected non-zero number');\n    if (modulo <= _0n)\n        throw new Error('invert: expected positive modulus, got ' + modulo);\n    // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n    let a = mod(number, modulo);\n    let b = modulo;\n    // prettier-ignore\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        // JIT applies optimization if those two lines follow each other\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        // prettier-ignore\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\n/**\n * Tonelli-Shanks square root search algorithm.\n * 1. https://eprint.iacr.org/2012/685.pdf (page 12)\n * 2. Square Roots from 1; 24, 51, 10 to Dan Shanks\n * Will start an infinite loop if field order P is not prime.\n * @param P field order\n * @returns function that takes field Fp (created from P) and number n\n */\nexport function tonelliShanks(P) {\n    // Legendre constant: used to calculate Legendre symbol (a | p),\n    // which denotes the value of a^((p-1)/2) (mod p).\n    // (a | p) ≡ 1    if a is a square (mod p)\n    // (a | p) ≡ -1   if a is not a square (mod p)\n    // (a | p) ≡ 0    if a ≡ 0 (mod p)\n    const legendreC = (P - _1n) / _2n;\n    let Q, S, Z;\n    // Step 1: By factoring out powers of 2 from p - 1,\n    // find q and s such that p - 1 = q*(2^s) with q odd\n    for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++)\n        ;\n    // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n    for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++) {\n        // Crash instead of infinity loop, we cannot reasonable count until P.\n        if (Z > 1000)\n            throw new Error('Cannot find square root: likely non-prime P');\n    }\n    // Fast-path\n    if (S === 1) {\n        const p1div4 = (P + _1n) / _4n;\n        return function tonelliFast(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Slow-path\n    const Q1div2 = (Q + _1n) / _2n;\n    return function tonelliSlow(Fp, n) {\n        // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n        if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE))\n            throw new Error('Cannot find square root');\n        let r = S;\n        // TODO: will fail at Fp2/etc\n        let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n        let x = Fp.pow(n, Q1div2); // first guess at the square root\n        let b = Fp.pow(n, Q); // first guess at the fudge factor\n        while (!Fp.eql(b, Fp.ONE)) {\n            if (Fp.eql(b, Fp.ZERO))\n                return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n            // Find m such b^(2^m)==1\n            let m = 1;\n            for (let t2 = Fp.sqr(b); m < r; m++) {\n                if (Fp.eql(t2, Fp.ONE))\n                    break;\n                t2 = Fp.sqr(t2); // t2 *= t2\n            }\n            // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n            const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n            g = Fp.sqr(ge); // g = ge * ge\n            x = Fp.mul(x, ge); // x *= ge\n            b = Fp.mul(b, g); // b *= g\n            r = m;\n        }\n        return x;\n    };\n}\n/**\n * Square root for a finite field. It will try to check if optimizations are applicable and fall back to 4:\n *\n * 1. P ≡ 3 (mod 4)\n * 2. P ≡ 5 (mod 8)\n * 3. P ≡ 9 (mod 16)\n * 4. Tonelli-Shanks algorithm\n *\n * Different algorithms can give different roots, it is up to user to decide which one they want.\n * For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n */\nexport function FpSqrt(P) {\n    // P ≡ 3 (mod 4)\n    // √n = n^((P+1)/4)\n    if (P % _4n === _3n) {\n        // Not all roots possible!\n        // const ORDER =\n        //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n        // const NUM = 72057594037927816n;\n        const p1div4 = (P + _1n) / _4n;\n        return function sqrt3mod4(Fp, n) {\n            const root = Fp.pow(n, p1div4);\n            // Throw if root**2 != n\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n    if (P % _8n === _5n) {\n        const c1 = (P - _5n) / _8n;\n        return function sqrt5mod8(Fp, n) {\n            const n2 = Fp.mul(n, _2n);\n            const v = Fp.pow(n2, c1);\n            const nv = Fp.mul(n, v);\n            const i = Fp.mul(Fp.mul(nv, _2n), v);\n            const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n            if (!Fp.eql(Fp.sqr(root), n))\n                throw new Error('Cannot find square root');\n            return root;\n        };\n    }\n    // P ≡ 9 (mod 16)\n    if (P % _16n === _9n) {\n        // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n        // Means we cannot use sqrt for constants at all!\n        //\n        // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n        // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n        // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n        // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n        // sqrt = (x) => {\n        //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n        //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n        //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n        //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n        //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n        //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n        //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n        //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n        //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n        //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n        // }\n    }\n    // Other cases: Tonelli-Shanks algorithm\n    return tonelliShanks(P);\n}\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num, modulo) => (mod(num, modulo) & _1n) === _1n;\n// prettier-ignore\nconst FIELD_FIELDS = [\n    'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n    'eql', 'add', 'sub', 'mul', 'pow', 'div',\n    'addN', 'subN', 'mulN', 'sqrN'\n];\nexport function validateField(field) {\n    const initial = {\n        ORDER: 'bigint',\n        MASK: 'bigint',\n        BYTES: 'isSafeInteger',\n        BITS: 'isSafeInteger',\n    };\n    const opts = FIELD_FIELDS.reduce((map, val) => {\n        map[val] = 'function';\n        return map;\n    }, initial);\n    return validateObject(field, opts);\n}\n// Generic field functions\n/**\n * Same as `pow` but for Fp: non-constant-time.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n */\nexport function FpPow(f, num, power) {\n    // Should have same speed as pow for bigints\n    // TODO: benchmark!\n    if (power < _0n)\n        throw new Error('invalid exponent, negatives unsupported');\n    if (power === _0n)\n        return f.ONE;\n    if (power === _1n)\n        return num;\n    let p = f.ONE;\n    let d = num;\n    while (power > _0n) {\n        if (power & _1n)\n            p = f.mul(p, d);\n        d = f.sqr(d);\n        power >>= _1n;\n    }\n    return p;\n}\n/**\n * Efficiently invert an array of Field elements.\n * `inv(0)` will return `undefined` here: make sure to throw an error.\n */\nexport function FpInvertBatch(f, nums) {\n    const tmp = new Array(nums.length);\n    // Walk from first to last, multiply them by each other MOD p\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = acc;\n        return f.mul(acc, num);\n    }, f.ONE);\n    // Invert last element\n    const inverted = f.inv(lastMultiplied);\n    // Walk from last to first, multiply them by inverted each other MOD p\n    nums.reduceRight((acc, num, i) => {\n        if (f.is0(num))\n            return acc;\n        tmp[i] = f.mul(acc, tmp[i]);\n        return f.mul(acc, num);\n    }, inverted);\n    return tmp;\n}\nexport function FpDiv(f, lhs, rhs) {\n    return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n/**\n * Legendre symbol.\n * * (a | p) ≡ 1    if a is a square (mod p), quadratic residue\n * * (a | p) ≡ -1   if a is not a square (mod p), quadratic non residue\n * * (a | p) ≡ 0    if a ≡ 0 (mod p)\n */\nexport function FpLegendre(order) {\n    const legendreConst = (order - _1n) / _2n; // Integer arithmetic\n    return (f, x) => f.pow(x, legendreConst);\n}\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare(f) {\n    const legendre = FpLegendre(f.ORDER);\n    return (x) => {\n        const p = legendre(f, x);\n        return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n    };\n}\n// CURVE.n lengths\nexport function nLength(n, nBitLength) {\n    // Bit size, byte size of CURVE.n\n    const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n    const nByteLength = Math.ceil(_nBitLength / 8);\n    return { nBitLength: _nBitLength, nByteLength };\n}\n/**\n * Initializes a finite field over prime.\n * Major performance optimizations:\n * * a) denormalized operations like mulN instead of mul\n * * b) same object shape: never add or remove keys\n * * c) Object.freeze\n * Fragile: always run a benchmark on a change.\n * Security note: operations don't check 'isValid' for all elements for performance reasons,\n * it is caller responsibility to check this.\n * This is low-level code, please make sure you know what you're doing.\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(ORDER, bitLen, isLE = false, redef = {}) {\n    if (ORDER <= _0n)\n        throw new Error('invalid field: expected ORDER > 0, got ' + ORDER);\n    const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n    if (BYTES > 2048)\n        throw new Error('invalid field: expected ORDER of <= 2048 bytes');\n    let sqrtP; // cached sqrtP\n    const f = Object.freeze({\n        ORDER,\n        isLE,\n        BITS,\n        BYTES,\n        MASK: bitMask(BITS),\n        ZERO: _0n,\n        ONE: _1n,\n        create: (num) => mod(num, ORDER),\n        isValid: (num) => {\n            if (typeof num !== 'bigint')\n                throw new Error('invalid field element: expected bigint, got ' + typeof num);\n            return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n        },\n        is0: (num) => num === _0n,\n        isOdd: (num) => (num & _1n) === _1n,\n        neg: (num) => mod(-num, ORDER),\n        eql: (lhs, rhs) => lhs === rhs,\n        sqr: (num) => mod(num * num, ORDER),\n        add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n        sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n        mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n        pow: (num, power) => FpPow(f, num, power),\n        div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n        // Same as above, but doesn't normalize\n        sqrN: (num) => num * num,\n        addN: (lhs, rhs) => lhs + rhs,\n        subN: (lhs, rhs) => lhs - rhs,\n        mulN: (lhs, rhs) => lhs * rhs,\n        inv: (num) => invert(num, ORDER),\n        sqrt: redef.sqrt ||\n            ((n) => {\n                if (!sqrtP)\n                    sqrtP = FpSqrt(ORDER);\n                return sqrtP(f, n);\n            }),\n        invertBatch: (lst) => FpInvertBatch(f, lst),\n        // TODO: do we really need constant cmov?\n        // We don't have const-time bigints anyway, so probably will be not very useful\n        cmov: (a, b, c) => (c ? b : a),\n        toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n        fromBytes: (bytes) => {\n            if (bytes.length !== BYTES)\n                throw new Error('Field.fromBytes: expected ' + BYTES + ' bytes, got ' + bytes.length);\n            return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n        },\n    });\n    return Object.freeze(f);\n}\nexport function FpSqrtOdd(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? root : Fp.neg(root);\n}\nexport function FpSqrtEven(Fp, elm) {\n    if (!Fp.isOdd)\n        throw new Error(\"Field doesn't have isOdd\");\n    const root = Fp.sqrt(elm);\n    return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Same as mapKeyToField, but accepts less bytes (40 instead of 48 for 32-byte field).\n * Which makes it slightly more biased, less secure.\n * @deprecated use `mapKeyToField` instead\n */\nexport function hashToPrivateScalar(hash, groupOrder, isLE = false) {\n    hash = ensureBytes('privateHash', hash);\n    const hashLen = hash.length;\n    const minLen = nLength(groupOrder).nByteLength + 8;\n    if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n        throw new Error('hashToPrivateScalar: expected ' + minLen + '-1024 bytes of input, got ' + hashLen);\n    const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n    return mod(num, groupOrder - _1n) + _1n;\n}\n/**\n * Returns total number of bytes consumed by the field element.\n * For example, 32 bytes for usual 256-bit weierstrass curve.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of field\n */\nexport function getFieldBytesLength(fieldOrder) {\n    if (typeof fieldOrder !== 'bigint')\n        throw new Error('field order must be bigint');\n    const bitLength = fieldOrder.toString(2).length;\n    return Math.ceil(bitLength / 8);\n}\n/**\n * Returns minimal amount of bytes that can be safely reduced\n * by field order.\n * Should be 2^-128 for 128-bit curve such as P256.\n * @param fieldOrder number of field elements, usually CURVE.n\n * @returns byte length of target hash\n */\nexport function getMinHashLength(fieldOrder) {\n    const length = getFieldBytesLength(fieldOrder);\n    return length + Math.ceil(length / 2);\n}\n/**\n * \"Constant-time\" private key generation utility.\n * Can take (n + n/2) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being negligible.\n * Needs at least 48 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * FIPS 186-5, A.2 https://csrc.nist.gov/publications/detail/fips/186/5/final\n * RFC 9380, https://www.rfc-editor.org/rfc/rfc9380#section-5\n * @param hash hash output from SHA3 or a similar function\n * @param groupOrder size of subgroup - (e.g. secp256k1.CURVE.n)\n * @param isLE interpret hash bytes as LE num\n * @returns valid private scalar\n */\nexport function mapHashToField(key, fieldOrder, isLE = false) {\n    const len = key.length;\n    const fieldLen = getFieldBytesLength(fieldOrder);\n    const minLen = getMinHashLength(fieldOrder);\n    // No small numbers: need to understand bias story. No huge numbers: easier to detect JS timings.\n    if (len < 16 || len < minLen || len > 1024)\n        throw new Error('expected ' + minLen + '-1024 bytes of input, got ' + len);\n    const num = isLE ? bytesToNumberLE(key) : bytesToNumberBE(key);\n    // `mod(x, 11)` can sometimes produce 0. `mod(x, 10) + 1` is the same, but no 0\n    const reduced = mod(num, fieldOrder - _1n) + _1n;\n    return isLE ? numberToBytesLE(reduced, fieldLen) : numberToBytesBE(reduced, fieldLen);\n}\n//# sourceMappingURL=modular.js.map","/**\n * Methods for elliptic curve multiplication by scalars.\n * Contains wNAF, pippenger\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { nLength, validateField } from './modular.js';\nimport { bitLen, validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nfunction validateW(W, bits) {\n    if (!Number.isSafeInteger(W) || W <= 0 || W > bits)\n        throw new Error('invalid window size, expected [1..' + bits + '], got W=' + W);\n}\nfunction calcWOpts(W, bits) {\n    validateW(W, bits);\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n}\nfunction validateMSMPoints(points, c) {\n    if (!Array.isArray(points))\n        throw new Error('array expected');\n    points.forEach((p, i) => {\n        if (!(p instanceof c))\n            throw new Error('invalid point at index ' + i);\n    });\n}\nfunction validateMSMScalars(scalars, field) {\n    if (!Array.isArray(scalars))\n        throw new Error('array of scalars expected');\n    scalars.forEach((s, i) => {\n        if (!field.isValid(s))\n            throw new Error('invalid scalar at index ' + i);\n    });\n}\n// Since points in different groups cannot be equal (different object constructor),\n// we can have single place to store precomputes\nconst pointPrecomputes = new WeakMap();\nconst pointWindowSizes = new WeakMap(); // This allows use make points immutable (nothing changes inside)\nfunction getW(P) {\n    return pointWindowSizes.get(P) || 1;\n}\n/**\n * Elliptic curve multiplication of Point by scalar. Fragile.\n * Scalars should always be less than curve order: this should be checked inside of a curve itself.\n * Creates precomputation tables for fast multiplication:\n * - private scalar is split by fixed size windows of W bits\n * - every window point is collected from window's table & added to accumulator\n * - since windows are different, same point inside tables won't be accessed more than once per calc\n * - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n * - +1 window is neccessary for wNAF\n * - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n *\n * @todo Research returning 2d JS array of windows, instead of a single window.\n * This would allow windows to be in different memory locations\n */\nexport function wNAF(c, bits) {\n    return {\n        constTimeNegate,\n        hasPrecomputes(elm) {\n            return getW(elm) !== 1;\n        },\n        // non-const time multiplication ladder\n        unsafeLadder(elm, n, p = c.ZERO) {\n            let d = elm;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        },\n        /**\n         * Creates a wNAF precomputation window. Used for caching.\n         * Default window size is set by `utils.precompute()` and is equal to 8.\n         * Number of precomputed points depends on the curve size:\n         * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n         * - 𝑊 is the window size\n         * - 𝑛 is the bitlength of the curve order.\n         * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n         * @param elm Point instance\n         * @param W window size\n         * @returns precomputed point tables flattened to a single array\n         */\n        precomputeWindow(elm, W) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const points = [];\n            let p = elm;\n            let base = p;\n            for (let window = 0; window < windows; window++) {\n                base = p;\n                points.push(base);\n                // =1, because we skip zero\n                for (let i = 1; i < windowSize; i++) {\n                    base = base.add(p);\n                    points.push(base);\n                }\n                p = base.double();\n            }\n            return points;\n        },\n        /**\n         * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @returns real and fake (for const-time) points\n         */\n        wNAF(W, precomputes, n) {\n            // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n            // But need to carefully remove other checks before wNAF. ORDER == bits here\n            const { windows, windowSize } = calcWOpts(W, bits);\n            let p = c.ZERO;\n            let f = c.BASE;\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n                // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n                // there is negate now: it is possible that negated element from low value\n                // would be the same as high element, which will create carry into next window.\n                // It's not obvious how this can fail, but still worth investigating later.\n                // Check if we're onto Zero point.\n                // Add random point inside current window to f.\n                const offset1 = offset;\n                const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n                const cond1 = window % 2 !== 0;\n                const cond2 = wbits < 0;\n                if (wbits === 0) {\n                    // The most important part for const-time getPublicKey\n                    f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n                }\n                else {\n                    p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n                }\n            }\n            // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n            // Even if the variable is still unused, there are some checks which will\n            // throw an exception, so compiler needs to prove they won't happen, which is hard.\n            // At this point there is a way to F be infinity-point even if p is not,\n            // which makes it less const-time: around 1 bigint multiply.\n            return { p, f };\n        },\n        /**\n         * Implements ec unsafe (non const-time) multiplication using precomputed tables and w-ary non-adjacent form.\n         * @param W window size\n         * @param precomputes precomputed tables\n         * @param n scalar (we don't check here, but should be less than curve order)\n         * @param acc accumulator point to add result of multiplication\n         * @returns point\n         */\n        wNAFUnsafe(W, precomputes, n, acc = c.ZERO) {\n            const { windows, windowSize } = calcWOpts(W, bits);\n            const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n            const maxNumber = 2 ** W;\n            const shiftBy = BigInt(W);\n            for (let window = 0; window < windows; window++) {\n                const offset = window * windowSize;\n                if (n === _0n)\n                    break; // No need to go over empty scalar\n                // Extract W bits.\n                let wbits = Number(n & mask);\n                // Shift number by W bits.\n                n >>= shiftBy;\n                // If the bits are bigger than max size, we'll split those.\n                // +224 => 256 - 32\n                if (wbits > windowSize) {\n                    wbits -= maxNumber;\n                    n += _1n;\n                }\n                if (wbits === 0)\n                    continue;\n                let curr = precomputes[offset + Math.abs(wbits) - 1]; // -1 because we skip zero\n                if (wbits < 0)\n                    curr = curr.negate();\n                // NOTE: by re-using acc, we can save a lot of additions in case of MSM\n                acc = acc.add(curr);\n            }\n            return acc;\n        },\n        getPrecomputes(W, P, transform) {\n            // Calculate precomputes on a first run, reuse them after\n            let comp = pointPrecomputes.get(P);\n            if (!comp) {\n                comp = this.precomputeWindow(P, W);\n                if (W !== 1)\n                    pointPrecomputes.set(P, transform(comp));\n            }\n            return comp;\n        },\n        wNAFCached(P, n, transform) {\n            const W = getW(P);\n            return this.wNAF(W, this.getPrecomputes(W, P, transform), n);\n        },\n        wNAFCachedUnsafe(P, n, transform, prev) {\n            const W = getW(P);\n            if (W === 1)\n                return this.unsafeLadder(P, n, prev); // For W=1 ladder is ~x2 faster\n            return this.wNAFUnsafe(W, this.getPrecomputes(W, P, transform), n, prev);\n        },\n        // We calculate precomputes for elliptic curve point multiplication\n        // using windowed method. This specifies window size and\n        // stores precomputed values. Usually only base point would be precomputed.\n        setWindowSize(P, W) {\n            validateW(W, bits);\n            pointWindowSizes.set(P, W);\n            pointPrecomputes.delete(P);\n        },\n    };\n}\n/**\n * Pippenger algorithm for multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * 30x faster vs naive addition on L=4096, 10x faster with precomputes.\n * For N=254bit, L=1, it does: 1024 ADD + 254 DBL. For L=5: 1536 ADD + 254 DBL.\n * Algorithmically constant-time (for same L), even when 1 point + scalar, or when scalar = 0.\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @param scalars array of L scalars (aka private keys / bigints)\n */\nexport function pippenger(c, fieldN, points, scalars) {\n    // If we split scalars by some window (let's say 8 bits), every chunk will only\n    // take 256 buckets even if there are 4096 scalars, also re-uses double.\n    // TODO:\n    // - https://eprint.iacr.org/2024/750.pdf\n    // - https://tches.iacr.org/index.php/TCHES/article/view/10287\n    // 0 is accepted in scalars\n    validateMSMPoints(points, c);\n    validateMSMScalars(scalars, fieldN);\n    if (points.length !== scalars.length)\n        throw new Error('arrays of points and scalars must have equal length');\n    const zero = c.ZERO;\n    const wbits = bitLen(BigInt(points.length));\n    const windowSize = wbits > 12 ? wbits - 3 : wbits > 4 ? wbits - 2 : wbits ? 2 : 1; // in bits\n    const MASK = (1 << windowSize) - 1;\n    const buckets = new Array(MASK + 1).fill(zero); // +1 for zero array\n    const lastBits = Math.floor((fieldN.BITS - 1) / windowSize) * windowSize;\n    let sum = zero;\n    for (let i = lastBits; i >= 0; i -= windowSize) {\n        buckets.fill(zero);\n        for (let j = 0; j < scalars.length; j++) {\n            const scalar = scalars[j];\n            const wbits = Number((scalar >> BigInt(i)) & BigInt(MASK));\n            buckets[wbits] = buckets[wbits].add(points[j]);\n        }\n        let resI = zero; // not using this will do small speed-up, but will lose ct\n        // Skip first bucket, because it is zero\n        for (let j = buckets.length - 1, sumI = zero; j > 0; j--) {\n            sumI = sumI.add(buckets[j]);\n            resI = resI.add(sumI);\n        }\n        sum = sum.add(resI);\n        if (i !== 0)\n            for (let j = 0; j < windowSize; j++)\n                sum = sum.double();\n    }\n    return sum;\n}\n/**\n * Precomputed multi-scalar multiplication (MSM, Pa + Qb + Rc + ...).\n * @param c Curve Point constructor\n * @param fieldN field over CURVE.N - important that it's not over CURVE.P\n * @param points array of L curve points\n * @returns function which multiplies points with scaars\n */\nexport function precomputeMSMUnsafe(c, fieldN, points, windowSize) {\n    /**\n     * Performance Analysis of Window-based Precomputation\n     *\n     * Base Case (256-bit scalar, 8-bit window):\n     * - Standard precomputation requires:\n     *   - 31 additions per scalar × 256 scalars = 7,936 ops\n     *   - Plus 255 summary additions = 8,191 total ops\n     *   Note: Summary additions can be optimized via accumulator\n     *\n     * Chunked Precomputation Analysis:\n     * - Using 32 chunks requires:\n     *   - 255 additions per chunk\n     *   - 256 doublings\n     *   - Total: (255 × 32) + 256 = 8,416 ops\n     *\n     * Memory Usage Comparison:\n     * Window Size | Standard Points | Chunked Points\n     * ------------|-----------------|---------------\n     *     4-bit   |     520         |      15\n     *     8-bit   |    4,224        |     255\n     *    10-bit   |   13,824        |   1,023\n     *    16-bit   |  557,056        |  65,535\n     *\n     * Key Advantages:\n     * 1. Enables larger window sizes due to reduced memory overhead\n     * 2. More efficient for smaller scalar counts:\n     *    - 16 chunks: (16 × 255) + 256 = 4,336 ops\n     *    - ~2x faster than standard 8,191 ops\n     *\n     * Limitations:\n     * - Not suitable for plain precomputes (requires 256 constant doublings)\n     * - Performance degrades with larger scalar counts:\n     *   - Optimal for ~256 scalars\n     *   - Less efficient for 4096+ scalars (Pippenger preferred)\n     */\n    validateW(windowSize, fieldN.BITS);\n    validateMSMPoints(points, c);\n    const zero = c.ZERO;\n    const tableSize = 2 ** windowSize - 1; // table size (without zero)\n    const chunks = Math.ceil(fieldN.BITS / windowSize); // chunks of item\n    const MASK = BigInt((1 << windowSize) - 1);\n    const tables = points.map((p) => {\n        const res = [];\n        for (let i = 0, acc = p; i < tableSize; i++) {\n            res.push(acc);\n            acc = acc.add(p);\n        }\n        return res;\n    });\n    return (scalars) => {\n        validateMSMScalars(scalars, fieldN);\n        if (scalars.length > points.length)\n            throw new Error('array of scalars must be smaller than array of points');\n        let res = zero;\n        for (let i = 0; i < chunks; i++) {\n            // No need to double if accumulator is still zero.\n            if (res !== zero)\n                for (let j = 0; j < windowSize; j++)\n                    res = res.double();\n            const shiftBy = BigInt(chunks * windowSize - (i + 1) * windowSize);\n            for (let j = 0; j < scalars.length; j++) {\n                const n = scalars[j];\n                const curr = Number((n >> shiftBy) & MASK);\n                if (!curr)\n                    continue; // skip zero scalars chunks\n                res = res.add(tables[j][curr - 1]);\n            }\n        }\n        return res;\n    };\n}\nexport function validateBasic(curve) {\n    validateField(curve.Fp);\n    validateObject(curve, {\n        n: 'bigint',\n        h: 'bigint',\n        Gx: 'field',\n        Gy: 'field',\n    }, {\n        nBitLength: 'isSafeInteger',\n        nByteLength: 'isSafeInteger',\n    });\n    // Set defaults\n    return Object.freeze({\n        ...nLength(curve.n, curve.nBitLength),\n        ...curve,\n        ...{ p: curve.Fp.ORDER },\n    });\n}\n//# sourceMappingURL=curve.js.map","/**\n * Short Weierstrass curve methods. The formula is: y² = x³ + ax + b.\n *\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance\n * of nominative types in TypeScript and interfaces only check for shape, so it's hard to create\n * unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * @todo https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { pippenger, validateBasic, wNAF, } from './curve.js';\nimport { Field, getMinHashLength, invert, mapHashToField, mod, validateField, } from './modular.js';\nimport * as ut from './utils.js';\nimport { abool, ensureBytes, memoized } from './utils.js';\nfunction validateSigVerOpts(opts) {\n    if (opts.lowS !== undefined)\n        abool('lowS', opts.lowS);\n    if (opts.prehash !== undefined)\n        abool('prehash', opts.prehash);\n}\nfunction validatePointOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        a: 'field',\n        b: 'field',\n    }, {\n        allowedPrivateKeyLengths: 'array',\n        wrapPrivateKey: 'boolean',\n        isTorsionFree: 'function',\n        clearCofactor: 'function',\n        allowInfinityPoint: 'boolean',\n        fromBytes: 'function',\n        toBytes: 'function',\n    });\n    const { endo, Fp, a } = opts;\n    if (endo) {\n        if (!Fp.eql(a, Fp.ZERO)) {\n            throw new Error('invalid endomorphism, can only be defined for Koblitz curves that have a=0');\n        }\n        if (typeof endo !== 'object' ||\n            typeof endo.beta !== 'bigint' ||\n            typeof endo.splitScalar !== 'function') {\n            throw new Error('invalid endomorphism, expected beta: bigint and splitScalar: function');\n        }\n    }\n    return Object.freeze({ ...opts });\n}\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport class DERErr extends Error {\n    constructor(m = '') {\n        super(m);\n    }\n}\n/**\n * ASN.1 DER encoding utilities. ASN is very complex & fragile. Format:\n *\n *     [0x30 (SEQUENCE), bytelength, 0x02 (INTEGER), intLength, R, 0x02 (INTEGER), intLength, S]\n *\n * Docs: https://letsencrypt.org/docs/a-warm-welcome-to-asn1-and-der/, https://luca.ntop.org/Teaching/Appunti/asn1.html\n */\nexport const DER = {\n    // asn.1 DER encoding utils\n    Err: DERErr,\n    // Basic building block is TLV (Tag-Length-Value)\n    _tlv: {\n        encode: (tag, data) => {\n            const { Err: E } = DER;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length & 1)\n                throw new E('tlv.encode: unpadded data');\n            const dataLen = data.length / 2;\n            const len = ut.numberToHexUnpadded(dataLen);\n            if ((len.length / 2) & 128)\n                throw new E('tlv.encode: long form length too big');\n            // length of length with long form flag\n            const lenLen = dataLen > 127 ? ut.numberToHexUnpadded((len.length / 2) | 128) : '';\n            const t = ut.numberToHexUnpadded(tag);\n            return t + lenLen + len + data;\n        },\n        // v - value, l - left bytes (unparsed)\n        decode(tag, data) {\n            const { Err: E } = DER;\n            let pos = 0;\n            if (tag < 0 || tag > 256)\n                throw new E('tlv.encode: wrong tag');\n            if (data.length < 2 || data[pos++] !== tag)\n                throw new E('tlv.decode: wrong tlv');\n            const first = data[pos++];\n            const isLong = !!(first & 128); // First bit of first length byte is flag for short/long form\n            let length = 0;\n            if (!isLong)\n                length = first;\n            else {\n                // Long form: [longFlag(1bit), lengthLength(7bit), length (BE)]\n                const lenLen = first & 127;\n                if (!lenLen)\n                    throw new E('tlv.decode(long): indefinite length not supported');\n                if (lenLen > 4)\n                    throw new E('tlv.decode(long): byte length is too big'); // this will overflow u32 in js\n                const lengthBytes = data.subarray(pos, pos + lenLen);\n                if (lengthBytes.length !== lenLen)\n                    throw new E('tlv.decode: length bytes not complete');\n                if (lengthBytes[0] === 0)\n                    throw new E('tlv.decode(long): zero leftmost byte');\n                for (const b of lengthBytes)\n                    length = (length << 8) | b;\n                pos += lenLen;\n                if (length < 128)\n                    throw new E('tlv.decode(long): not minimal encoding');\n            }\n            const v = data.subarray(pos, pos + length);\n            if (v.length !== length)\n                throw new E('tlv.decode: wrong value length');\n            return { v, l: data.subarray(pos + length) };\n        },\n    },\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    _int: {\n        encode(num) {\n            const { Err: E } = DER;\n            if (num < _0n)\n                throw new E('integer: negative integers are not allowed');\n            let hex = ut.numberToHexUnpadded(num);\n            // Pad with zero byte if negative flag is present\n            if (Number.parseInt(hex[0], 16) & 0b1000)\n                hex = '00' + hex;\n            if (hex.length & 1)\n                throw new E('unexpected DER parsing assertion: unpadded hex');\n            return hex;\n        },\n        decode(data) {\n            const { Err: E } = DER;\n            if (data[0] & 128)\n                throw new E('invalid signature integer: negative');\n            if (data[0] === 0x00 && !(data[1] & 128))\n                throw new E('invalid signature integer: unnecessary leading zero');\n            return b2n(data);\n        },\n    },\n    toSig(hex) {\n        // parse DER signature\n        const { Err: E, _int: int, _tlv: tlv } = DER;\n        const data = typeof hex === 'string' ? h2b(hex) : hex;\n        ut.abytes(data);\n        const { v: seqBytes, l: seqLeftBytes } = tlv.decode(0x30, data);\n        if (seqLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        const { v: rBytes, l: rLeftBytes } = tlv.decode(0x02, seqBytes);\n        const { v: sBytes, l: sLeftBytes } = tlv.decode(0x02, rLeftBytes);\n        if (sLeftBytes.length)\n            throw new E('invalid signature: left bytes after parsing');\n        return { r: int.decode(rBytes), s: int.decode(sBytes) };\n    },\n    hexFromSig(sig) {\n        const { _tlv: tlv, _int: int } = DER;\n        const rs = tlv.encode(0x02, int.encode(sig.r));\n        const ss = tlv.encode(0x02, int.encode(sig.s));\n        const seq = rs + ss;\n        return tlv.encode(0x30, seq);\n    },\n};\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\nexport function weierstrassPoints(opts) {\n    const CURVE = validatePointOpts(opts);\n    const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n    const Fn = Field(CURVE.n, CURVE.nBitLength);\n    const toBytes = CURVE.toBytes ||\n        ((_c, point, _isCompressed) => {\n            const a = point.toAffine();\n            return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n        });\n    const fromBytes = CURVE.fromBytes ||\n        ((bytes) => {\n            // const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n            const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n            const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n            return { x, y };\n        });\n    /**\n     * y² = x³ + ax + b: Short weierstrass curve formula\n     * @returns y²\n     */\n    function weierstrassEquation(x) {\n        const { a, b } = CURVE;\n        const x2 = Fp.sqr(x); // x * x\n        const x3 = Fp.mul(x2, x); // x2 * x\n        return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n    }\n    // Validate whether the passed curve params are valid.\n    // We check if curve equation works for generator point.\n    // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n    // ProjectivePoint class has not been initialized yet.\n    if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n        throw new Error('bad generator point: equation left != right');\n    // Valid group elements reside in range 1..n-1\n    function isWithinCurveOrder(num) {\n        return ut.inRange(num, _1n, CURVE.n);\n    }\n    // Validates if priv key is valid and converts it to bigint.\n    // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n    function normPrivateKeyToScalar(key) {\n        const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n: N } = CURVE;\n        if (lengths && typeof key !== 'bigint') {\n            if (ut.isBytes(key))\n                key = ut.bytesToHex(key);\n            // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n            if (typeof key !== 'string' || !lengths.includes(key.length))\n                throw new Error('invalid private key');\n            key = key.padStart(nByteLength * 2, '0');\n        }\n        let num;\n        try {\n            num =\n                typeof key === 'bigint'\n                    ? key\n                    : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n        }\n        catch (error) {\n            throw new Error('invalid private key, expected hex or ' + nByteLength + ' bytes, got ' + typeof key);\n        }\n        if (wrapPrivateKey)\n            num = mod(num, N); // disabled by default, enabled for BLS\n        ut.aInRange('private key', num, _1n, N); // num in range [1..N-1]\n        return num;\n    }\n    function assertPrjPoint(other) {\n        if (!(other instanceof Point))\n            throw new Error('ProjectivePoint expected');\n    }\n    // Memoized toAffine / validity check. They are heavy. Points are immutable.\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    const toAffineMemo = memoized((p, iz) => {\n        const { px: x, py: y, pz: z } = p;\n        // Fast-path for normalized points\n        if (Fp.eql(z, Fp.ONE))\n            return { x, y };\n        const is0 = p.is0();\n        // If invZ was 0, we return zero point. However we still want to execute\n        // all operations, so we replace invZ with a random number, 1.\n        if (iz == null)\n            iz = is0 ? Fp.ONE : Fp.inv(z);\n        const ax = Fp.mul(x, iz);\n        const ay = Fp.mul(y, iz);\n        const zz = Fp.mul(z, iz);\n        if (is0)\n            return { x: Fp.ZERO, y: Fp.ZERO };\n        if (!Fp.eql(zz, Fp.ONE))\n            throw new Error('invZ was invalid');\n        return { x: ax, y: ay };\n    });\n    // NOTE: on exception this will crash 'cached' and no value will be set.\n    // Otherwise true will be return\n    const assertValidMemo = memoized((p) => {\n        if (p.is0()) {\n            // (0, 1, 0) aka ZERO is invalid in most contexts.\n            // In BLS, ZERO can be serialized, so we allow it.\n            // (0, 0, 0) is invalid representation of ZERO.\n            if (CURVE.allowInfinityPoint && !Fp.is0(p.py))\n                return;\n            throw new Error('bad point: ZERO');\n        }\n        // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n        const { x, y } = p.toAffine();\n        // Check if x, y are valid field elements\n        if (!Fp.isValid(x) || !Fp.isValid(y))\n            throw new Error('bad point: x or y not FE');\n        const left = Fp.sqr(y); // y²\n        const right = weierstrassEquation(x); // x³ + ax + b\n        if (!Fp.eql(left, right))\n            throw new Error('bad point: equation left != right');\n        if (!p.isTorsionFree())\n            throw new Error('bad point: not in prime-order subgroup');\n        return true;\n    });\n    /**\n     * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n     * Default Point works in 2d / affine coordinates: (x, y)\n     * We're doing calculations in projective, because its operations don't require costly inversion.\n     */\n    class Point {\n        constructor(px, py, pz) {\n            this.px = px;\n            this.py = py;\n            this.pz = pz;\n            if (px == null || !Fp.isValid(px))\n                throw new Error('x required');\n            if (py == null || !Fp.isValid(py))\n                throw new Error('y required');\n            if (pz == null || !Fp.isValid(pz))\n                throw new Error('z required');\n            Object.freeze(this);\n        }\n        // Does not validate if the point is on-curve.\n        // Use fromHex instead, or call assertValidity() later.\n        static fromAffine(p) {\n            const { x, y } = p || {};\n            if (!p || !Fp.isValid(x) || !Fp.isValid(y))\n                throw new Error('invalid affine point');\n            if (p instanceof Point)\n                throw new Error('projective point not allowed');\n            const is0 = (i) => Fp.eql(i, Fp.ZERO);\n            // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n            if (is0(x) && is0(y))\n                return Point.ZERO;\n            return new Point(x, y, Fp.ONE);\n        }\n        get x() {\n            return this.toAffine().x;\n        }\n        get y() {\n            return this.toAffine().y;\n        }\n        /**\n         * Takes a bunch of Projective Points but executes only one\n         * inversion on all of them. Inversion is very slow operation,\n         * so this improves performance massively.\n         * Optimization: converts a list of projective points to a list of identical points with Z=1.\n         */\n        static normalizeZ(points) {\n            const toInv = Fp.invertBatch(points.map((p) => p.pz));\n            return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n        }\n        /**\n         * Converts hash string or Uint8Array to Point.\n         * @param hex short/long ECDSA hex\n         */\n        static fromHex(hex) {\n            const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n            P.assertValidity();\n            return P;\n        }\n        // Multiplies generator point by privateKey.\n        static fromPrivateKey(privateKey) {\n            return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n        }\n        // Multiscalar Multiplication\n        static msm(points, scalars) {\n            return pippenger(Point, Fn, points, scalars);\n        }\n        // \"Private method\", don't use it directly\n        _setWindowSize(windowSize) {\n            wnaf.setWindowSize(this, windowSize);\n        }\n        // A point on curve is valid if it conforms to equation.\n        assertValidity() {\n            assertValidMemo(this);\n        }\n        hasEvenY() {\n            const { y } = this.toAffine();\n            if (Fp.isOdd)\n                return !Fp.isOdd(y);\n            throw new Error(\"Field doesn't support isOdd\");\n        }\n        /**\n         * Compare one point to another.\n         */\n        equals(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n            const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n            return U1 && U2;\n        }\n        /**\n         * Flips point to one corresponding to (x, -y) in Affine coordinates.\n         */\n        negate() {\n            return new Point(this.px, Fp.neg(this.py), this.pz);\n        }\n        // Renes-Costello-Batina exception-free doubling formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 3\n        // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n        double() {\n            const { a, b } = CURVE;\n            const b3 = Fp.mul(b, _3n);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            let t0 = Fp.mul(X1, X1); // step 1\n            let t1 = Fp.mul(Y1, Y1);\n            let t2 = Fp.mul(Z1, Z1);\n            let t3 = Fp.mul(X1, Y1);\n            t3 = Fp.add(t3, t3); // step 5\n            Z3 = Fp.mul(X1, Z1);\n            Z3 = Fp.add(Z3, Z3);\n            X3 = Fp.mul(a, Z3);\n            Y3 = Fp.mul(b3, t2);\n            Y3 = Fp.add(X3, Y3); // step 10\n            X3 = Fp.sub(t1, Y3);\n            Y3 = Fp.add(t1, Y3);\n            Y3 = Fp.mul(X3, Y3);\n            X3 = Fp.mul(t3, X3);\n            Z3 = Fp.mul(b3, Z3); // step 15\n            t2 = Fp.mul(a, t2);\n            t3 = Fp.sub(t0, t2);\n            t3 = Fp.mul(a, t3);\n            t3 = Fp.add(t3, Z3);\n            Z3 = Fp.add(t0, t0); // step 20\n            t0 = Fp.add(Z3, t0);\n            t0 = Fp.add(t0, t2);\n            t0 = Fp.mul(t0, t3);\n            Y3 = Fp.add(Y3, t0);\n            t2 = Fp.mul(Y1, Z1); // step 25\n            t2 = Fp.add(t2, t2);\n            t0 = Fp.mul(t2, t3);\n            X3 = Fp.sub(X3, t0);\n            Z3 = Fp.mul(t2, t1);\n            Z3 = Fp.add(Z3, Z3); // step 30\n            Z3 = Fp.add(Z3, Z3);\n            return new Point(X3, Y3, Z3);\n        }\n        // Renes-Costello-Batina exception-free addition formula.\n        // There is 30% faster Jacobian formula, but it is not complete.\n        // https://eprint.iacr.org/2015/1060, algorithm 1\n        // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n        add(other) {\n            assertPrjPoint(other);\n            const { px: X1, py: Y1, pz: Z1 } = this;\n            const { px: X2, py: Y2, pz: Z2 } = other;\n            let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n            const a = CURVE.a;\n            const b3 = Fp.mul(CURVE.b, _3n);\n            let t0 = Fp.mul(X1, X2); // step 1\n            let t1 = Fp.mul(Y1, Y2);\n            let t2 = Fp.mul(Z1, Z2);\n            let t3 = Fp.add(X1, Y1);\n            let t4 = Fp.add(X2, Y2); // step 5\n            t3 = Fp.mul(t3, t4);\n            t4 = Fp.add(t0, t1);\n            t3 = Fp.sub(t3, t4);\n            t4 = Fp.add(X1, Z1);\n            let t5 = Fp.add(X2, Z2); // step 10\n            t4 = Fp.mul(t4, t5);\n            t5 = Fp.add(t0, t2);\n            t4 = Fp.sub(t4, t5);\n            t5 = Fp.add(Y1, Z1);\n            X3 = Fp.add(Y2, Z2); // step 15\n            t5 = Fp.mul(t5, X3);\n            X3 = Fp.add(t1, t2);\n            t5 = Fp.sub(t5, X3);\n            Z3 = Fp.mul(a, t4);\n            X3 = Fp.mul(b3, t2); // step 20\n            Z3 = Fp.add(X3, Z3);\n            X3 = Fp.sub(t1, Z3);\n            Z3 = Fp.add(t1, Z3);\n            Y3 = Fp.mul(X3, Z3);\n            t1 = Fp.add(t0, t0); // step 25\n            t1 = Fp.add(t1, t0);\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.mul(b3, t4);\n            t1 = Fp.add(t1, t2);\n            t2 = Fp.sub(t0, t2); // step 30\n            t2 = Fp.mul(a, t2);\n            t4 = Fp.add(t4, t2);\n            t0 = Fp.mul(t1, t4);\n            Y3 = Fp.add(Y3, t0);\n            t0 = Fp.mul(t5, t4); // step 35\n            X3 = Fp.mul(t3, X3);\n            X3 = Fp.sub(X3, t0);\n            t0 = Fp.mul(t3, t1);\n            Z3 = Fp.mul(t5, Z3);\n            Z3 = Fp.add(Z3, t0); // step 40\n            return new Point(X3, Y3, Z3);\n        }\n        subtract(other) {\n            return this.add(other.negate());\n        }\n        is0() {\n            return this.equals(Point.ZERO);\n        }\n        wNAF(n) {\n            return wnaf.wNAFCached(this, n, Point.normalizeZ);\n        }\n        /**\n         * Non-constant-time multiplication. Uses double-and-add algorithm.\n         * It's faster, but should only be used when you don't care about\n         * an exposed private key e.g. sig verification, which works over *public* keys.\n         */\n        multiplyUnsafe(sc) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', sc, _0n, N);\n            const I = Point.ZERO;\n            if (sc === _0n)\n                return I;\n            if (this.is0() || sc === _1n)\n                return this;\n            // Case a: no endomorphism. Case b: has precomputes.\n            if (!endo || wnaf.hasPrecomputes(this))\n                return wnaf.wNAFCachedUnsafe(this, sc, Point.normalizeZ);\n            // Case c: endomorphism\n            let { k1neg, k1, k2neg, k2 } = endo.splitScalar(sc);\n            let k1p = I;\n            let k2p = I;\n            let d = this;\n            while (k1 > _0n || k2 > _0n) {\n                if (k1 & _1n)\n                    k1p = k1p.add(d);\n                if (k2 & _1n)\n                    k2p = k2p.add(d);\n                d = d.double();\n                k1 >>= _1n;\n                k2 >>= _1n;\n            }\n            if (k1neg)\n                k1p = k1p.negate();\n            if (k2neg)\n                k2p = k2p.negate();\n            k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n            return k1p.add(k2p);\n        }\n        /**\n         * Constant time multiplication.\n         * Uses wNAF method. Windowed method may be 10% faster,\n         * but takes 2x longer to generate and consumes 2x memory.\n         * Uses precomputes when available.\n         * Uses endomorphism for Koblitz curves.\n         * @param scalar by which the point would be multiplied\n         * @returns New point\n         */\n        multiply(scalar) {\n            const { endo, n: N } = CURVE;\n            ut.aInRange('scalar', scalar, _1n, N);\n            let point, fake; // Fake point is used to const-time mult\n            if (endo) {\n                const { k1neg, k1, k2neg, k2 } = endo.splitScalar(scalar);\n                let { p: k1p, f: f1p } = this.wNAF(k1);\n                let { p: k2p, f: f2p } = this.wNAF(k2);\n                k1p = wnaf.constTimeNegate(k1neg, k1p);\n                k2p = wnaf.constTimeNegate(k2neg, k2p);\n                k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n                point = k1p.add(k2p);\n                fake = f1p.add(f2p);\n            }\n            else {\n                const { p, f } = this.wNAF(scalar);\n                point = p;\n                fake = f;\n            }\n            // Normalize `z` for both points, but return only real one\n            return Point.normalizeZ([point, fake])[0];\n        }\n        /**\n         * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n         * Not using Strauss-Shamir trick: precomputation tables are faster.\n         * The trick could be useful if both P and Q are not G (not in our case).\n         * @returns non-zero affine point\n         */\n        multiplyAndAddUnsafe(Q, a, b) {\n            const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n            const mul = (P, a // Select faster multiply() method\n            ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n            const sum = mul(this, a).add(mul(Q, b));\n            return sum.is0() ? undefined : sum;\n        }\n        // Converts Projective point to affine (x, y) coordinates.\n        // Can accept precomputed Z^-1 - for example, from invertBatch.\n        // (x, y, z) ∋ (x=x/z, y=y/z)\n        toAffine(iz) {\n            return toAffineMemo(this, iz);\n        }\n        isTorsionFree() {\n            const { h: cofactor, isTorsionFree } = CURVE;\n            if (cofactor === _1n)\n                return true; // No subgroups, always torsion-free\n            if (isTorsionFree)\n                return isTorsionFree(Point, this);\n            throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n        }\n        clearCofactor() {\n            const { h: cofactor, clearCofactor } = CURVE;\n            if (cofactor === _1n)\n                return this; // Fast-path\n            if (clearCofactor)\n                return clearCofactor(Point, this);\n            return this.multiplyUnsafe(CURVE.h);\n        }\n        toRawBytes(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            this.assertValidity();\n            return toBytes(Point, this, isCompressed);\n        }\n        toHex(isCompressed = true) {\n            abool('isCompressed', isCompressed);\n            return ut.bytesToHex(this.toRawBytes(isCompressed));\n        }\n    }\n    Point.BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    Point.ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n    const _bits = CURVE.nBitLength;\n    const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n    // Validate if generator point is on curve\n    return {\n        CURVE,\n        ProjectivePoint: Point,\n        normPrivateKeyToScalar,\n        weierstrassEquation,\n        isWithinCurveOrder,\n    };\n}\nfunction validateOpts(curve) {\n    const opts = validateBasic(curve);\n    ut.validateObject(opts, {\n        hash: 'hash',\n        hmac: 'function',\n        randomBytes: 'function',\n    }, {\n        bits2int: 'function',\n        bits2int_modN: 'function',\n        lowS: 'boolean',\n    });\n    return Object.freeze({ lowS: true, ...opts });\n}\n/**\n * Creates short weierstrass curve and ECDSA signature methods for it.\n * @example\n * import { Field } from '@noble/curves/abstract/modular';\n * // Before that, define BigInt-s: a, b, p, n, Gx, Gy\n * const curve = weierstrass({ a, b, Fp: Field(p), n, Gx, Gy, h: 1n })\n */\nexport function weierstrass(curveDef) {\n    const CURVE = validateOpts(curveDef);\n    const { Fp, n: CURVE_ORDER } = CURVE;\n    const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n    const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n    function modN(a) {\n        return mod(a, CURVE_ORDER);\n    }\n    function invN(a) {\n        return invert(a, CURVE_ORDER);\n    }\n    const { ProjectivePoint: Point, normPrivateKeyToScalar, weierstrassEquation, isWithinCurveOrder, } = weierstrassPoints({\n        ...CURVE,\n        toBytes(_c, point, isCompressed) {\n            const a = point.toAffine();\n            const x = Fp.toBytes(a.x);\n            const cat = ut.concatBytes;\n            abool('isCompressed', isCompressed);\n            if (isCompressed) {\n                return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n            }\n            else {\n                return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n            }\n        },\n        fromBytes(bytes) {\n            const len = bytes.length;\n            const head = bytes[0];\n            const tail = bytes.subarray(1);\n            // this.assertValidity() is done inside of fromHex\n            if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n                const x = ut.bytesToNumberBE(tail);\n                if (!ut.inRange(x, _1n, Fp.ORDER))\n                    throw new Error('Point is not on curve');\n                const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n                let y;\n                try {\n                    y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n                }\n                catch (sqrtError) {\n                    const suffix = sqrtError instanceof Error ? ': ' + sqrtError.message : '';\n                    throw new Error('Point is not on curve' + suffix);\n                }\n                const isYOdd = (y & _1n) === _1n;\n                // ECDSA\n                const isHeadOdd = (head & 1) === 1;\n                if (isHeadOdd !== isYOdd)\n                    y = Fp.neg(y);\n                return { x, y };\n            }\n            else if (len === uncompressedLen && head === 0x04) {\n                const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n                const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n                return { x, y };\n            }\n            else {\n                const cl = compressedLen;\n                const ul = uncompressedLen;\n                throw new Error('invalid Point, expected length of ' + cl + ', or uncompressed ' + ul + ', got ' + len);\n            }\n        },\n    });\n    const numToNByteStr = (num) => ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n    function isBiggerThanHalfOrder(number) {\n        const HALF = CURVE_ORDER >> _1n;\n        return number > HALF;\n    }\n    function normalizeS(s) {\n        return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n    }\n    // slice bytes num\n    const slcNum = (b, from, to) => ut.bytesToNumberBE(b.slice(from, to));\n    /**\n     * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n     */\n    class Signature {\n        constructor(r, s, recovery) {\n            this.r = r;\n            this.s = s;\n            this.recovery = recovery;\n            this.assertValidity();\n        }\n        // pair (bytes of r, bytes of s)\n        static fromCompact(hex) {\n            const l = CURVE.nByteLength;\n            hex = ensureBytes('compactSignature', hex, l * 2);\n            return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n        }\n        // DER encoded ECDSA signature\n        // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n        static fromDER(hex) {\n            const { r, s } = DER.toSig(ensureBytes('DER', hex));\n            return new Signature(r, s);\n        }\n        assertValidity() {\n            ut.aInRange('r', this.r, _1n, CURVE_ORDER); // r in [1..N]\n            ut.aInRange('s', this.s, _1n, CURVE_ORDER); // s in [1..N]\n        }\n        addRecoveryBit(recovery) {\n            return new Signature(this.r, this.s, recovery);\n        }\n        recoverPublicKey(msgHash) {\n            const { r, s, recovery: rec } = this;\n            const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n            if (rec == null || ![0, 1, 2, 3].includes(rec))\n                throw new Error('recovery id invalid');\n            const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n            if (radj >= Fp.ORDER)\n                throw new Error('recovery id 2 or 3 invalid');\n            const prefix = (rec & 1) === 0 ? '02' : '03';\n            const R = Point.fromHex(prefix + numToNByteStr(radj));\n            const ir = invN(radj); // r^-1\n            const u1 = modN(-h * ir); // -hr^-1\n            const u2 = modN(s * ir); // sr^-1\n            const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n            if (!Q)\n                throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n            Q.assertValidity();\n            return Q;\n        }\n        // Signatures should be low-s, to prevent malleability.\n        hasHighS() {\n            return isBiggerThanHalfOrder(this.s);\n        }\n        normalizeS() {\n            return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n        }\n        // DER-encoded\n        toDERRawBytes() {\n            return ut.hexToBytes(this.toDERHex());\n        }\n        toDERHex() {\n            return DER.hexFromSig({ r: this.r, s: this.s });\n        }\n        // padded bytes of r, then padded bytes of s\n        toCompactRawBytes() {\n            return ut.hexToBytes(this.toCompactHex());\n        }\n        toCompactHex() {\n            return numToNByteStr(this.r) + numToNByteStr(this.s);\n        }\n    }\n    const utils = {\n        isValidPrivateKey(privateKey) {\n            try {\n                normPrivateKeyToScalar(privateKey);\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        },\n        normPrivateKeyToScalar: normPrivateKeyToScalar,\n        /**\n         * Produces cryptographically secure private key from random of size\n         * (groupLen + ceil(groupLen / 2)) with modulo bias being negligible.\n         */\n        randomPrivateKey: () => {\n            const length = getMinHashLength(CURVE.n);\n            return mapHashToField(CURVE.randomBytes(length), CURVE.n);\n        },\n        /**\n         * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n         * Allows to massively speed-up `point.multiply(scalar)`.\n         * @returns cached point\n         * @example\n         * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n         * fast.multiply(privKey); // much faster ECDH now\n         */\n        precompute(windowSize = 8, point = Point.BASE) {\n            point._setWindowSize(windowSize);\n            point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n            return point;\n        },\n    };\n    /**\n     * Computes public key for a private key. Checks for validity of the private key.\n     * @param privateKey private key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns Public key, full when isCompressed=false; short when isCompressed=true\n     */\n    function getPublicKey(privateKey, isCompressed = true) {\n        return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n    }\n    /**\n     * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n     */\n    function isProbPub(item) {\n        const arr = ut.isBytes(item);\n        const str = typeof item === 'string';\n        const len = (arr || str) && item.length;\n        if (arr)\n            return len === compressedLen || len === uncompressedLen;\n        if (str)\n            return len === 2 * compressedLen || len === 2 * uncompressedLen;\n        if (item instanceof Point)\n            return true;\n        return false;\n    }\n    /**\n     * ECDH (Elliptic Curve Diffie Hellman).\n     * Computes shared public key from private key and public key.\n     * Checks: 1) private key validity 2) shared key is on-curve.\n     * Does NOT hash the result.\n     * @param privateA private key\n     * @param publicB different public key\n     * @param isCompressed whether to return compact (default), or full key\n     * @returns shared public key\n     */\n    function getSharedSecret(privateA, publicB, isCompressed = true) {\n        if (isProbPub(privateA))\n            throw new Error('first arg must be private key');\n        if (!isProbPub(publicB))\n            throw new Error('second arg must be public key');\n        const b = Point.fromHex(publicB); // check for being on-curve\n        return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n    }\n    // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n    // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n    // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n    // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n    const bits2int = CURVE.bits2int ||\n        function (bytes) {\n            // Our custom check \"just in case\"\n            if (bytes.length > 8192)\n                throw new Error('input is too large');\n            // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n            // for some cases, since bytes.length * 8 is not actual bitLength.\n            const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n            const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n            return delta > 0 ? num >> BigInt(delta) : num;\n        };\n    const bits2int_modN = CURVE.bits2int_modN ||\n        function (bytes) {\n            return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n        };\n    // NOTE: pads output with zero as per spec\n    const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n    /**\n     * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n     */\n    function int2octets(num) {\n        ut.aInRange('num < 2^' + CURVE.nBitLength, num, _0n, ORDER_MASK);\n        // works with order, can have different size than numToField!\n        return ut.numberToBytesBE(num, CURVE.nByteLength);\n    }\n    // Steps A, D of RFC6979 3.2\n    // Creates RFC6979 seed; converts msg/privKey to numbers.\n    // Used only in sign, not in verify.\n    // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order,\n    // this will be invalid at least for P521. Also it can be bigger for P224 + SHA256\n    function prepSig(msgHash, privateKey, opts = defaultSigOpts) {\n        if (['recovered', 'canonical'].some((k) => k in opts))\n            throw new Error('sign() legacy options not supported');\n        const { hash, randomBytes } = CURVE;\n        let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n        if (lowS == null)\n            lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n        msgHash = ensureBytes('msgHash', msgHash);\n        validateSigVerOpts(opts);\n        if (prehash)\n            msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n        // We can't later call bits2octets, since nested bits2int is broken for curves\n        // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n        // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n        const h1int = bits2int_modN(msgHash);\n        const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n        const seedArgs = [int2octets(d), int2octets(h1int)];\n        // extraEntropy. RFC6979 3.6: additional k' (optional).\n        if (ent != null && ent !== false) {\n            // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n            const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n            seedArgs.push(ensureBytes('extraEntropy', e)); // check for being bytes\n        }\n        const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n        const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n        // Converts signature params into point w r/s, checks result for validity.\n        function k2sig(kBytes) {\n            // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n            const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n            if (!isWithinCurveOrder(k))\n                return; // Important: all mod() calls here must be done over N\n            const ik = invN(k); // k^-1 mod n\n            const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n            const r = modN(q.x); // r = q.x mod n\n            if (r === _0n)\n                return;\n            // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n            // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n            // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n            const s = modN(ik * modN(m + r * d)); // Not using blinding here\n            if (s === _0n)\n                return;\n            let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n            let normS = s;\n            if (lowS && isBiggerThanHalfOrder(s)) {\n                normS = normalizeS(s); // if lowS was passed, ensure s is always\n                recovery ^= 1; // // in the bottom half of N\n            }\n            return new Signature(r, normS, recovery); // use normS, not s\n        }\n        return { seed, k2sig };\n    }\n    const defaultSigOpts = { lowS: CURVE.lowS, prehash: false };\n    const defaultVerOpts = { lowS: CURVE.lowS, prehash: false };\n    /**\n     * Signs message hash with a private key.\n     * ```\n     * sign(m, d, k) where\n     *   (x, y) = G × k\n     *   r = x mod n\n     *   s = (m + dr)/k mod n\n     * ```\n     * @param msgHash NOT message. msg needs to be hashed to `msgHash`, or use `prehash`.\n     * @param privKey private key\n     * @param opts lowS for non-malleable sigs. extraEntropy for mixing randomness into k. prehash will hash first arg.\n     * @returns signature with recovery param\n     */\n    function sign(msgHash, privKey, opts = defaultSigOpts) {\n        const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n        const C = CURVE;\n        const drbg = ut.createHmacDrbg(C.hash.outputLen, C.nByteLength, C.hmac);\n        return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n    }\n    // Enable precomputes. Slows down first publicKey computation by 20ms.\n    Point.BASE._setWindowSize(8);\n    // utils.precompute(8, ProjectivePoint.BASE)\n    /**\n     * Verifies a signature against message hash and public key.\n     * Rejects lowS signatures by default: to override,\n     * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n     *\n     * ```\n     * verify(r, s, h, P) where\n     *   U1 = hs^-1 mod n\n     *   U2 = rs^-1 mod n\n     *   R = U1⋅G - U2⋅P\n     *   mod(R.x, n) == r\n     * ```\n     */\n    function verify(signature, msgHash, publicKey, opts = defaultVerOpts) {\n        const sg = signature;\n        msgHash = ensureBytes('msgHash', msgHash);\n        publicKey = ensureBytes('publicKey', publicKey);\n        const { lowS, prehash, format } = opts;\n        // Verify opts, deduce signature format\n        validateSigVerOpts(opts);\n        if ('strict' in opts)\n            throw new Error('options.strict was renamed to lowS');\n        if (format !== undefined && format !== 'compact' && format !== 'der')\n            throw new Error('format must be compact or der');\n        const isHex = typeof sg === 'string' || ut.isBytes(sg);\n        const isObj = !isHex &&\n            !format &&\n            typeof sg === 'object' &&\n            sg !== null &&\n            typeof sg.r === 'bigint' &&\n            typeof sg.s === 'bigint';\n        if (!isHex && !isObj)\n            throw new Error('invalid signature, expected Uint8Array, hex string or Signature instance');\n        let _sig = undefined;\n        let P;\n        try {\n            if (isObj)\n                _sig = new Signature(sg.r, sg.s);\n            if (isHex) {\n                // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n                // Since DER can also be 2*nByteLength bytes, we check for it first.\n                try {\n                    if (format !== 'compact')\n                        _sig = Signature.fromDER(sg);\n                }\n                catch (derError) {\n                    if (!(derError instanceof DER.Err))\n                        throw derError;\n                }\n                if (!_sig && format !== 'der')\n                    _sig = Signature.fromCompact(sg);\n            }\n            P = Point.fromHex(publicKey);\n        }\n        catch (error) {\n            return false;\n        }\n        if (!_sig)\n            return false;\n        if (lowS && _sig.hasHighS())\n            return false;\n        if (prehash)\n            msgHash = CURVE.hash(msgHash);\n        const { r, s } = _sig;\n        const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n        const is = invN(s); // s^-1\n        const u1 = modN(h * is); // u1 = hs^-1 mod n\n        const u2 = modN(r * is); // u2 = rs^-1 mod n\n        const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n        if (!R)\n            return false;\n        const v = modN(R.x);\n        return v === r;\n    }\n    return {\n        CURVE,\n        getPublicKey,\n        getSharedSecret,\n        sign,\n        verify,\n        ProjectivePoint: Point,\n        Signature,\n        utils,\n    };\n}\n/**\n * Implementation of the Shallue and van de Woestijne method for any weierstrass curve.\n * TODO: check if there is a way to merge this with uvRatio in Edwards; move to modular.\n * b = True and y = sqrt(u / v) if (u / v) is square in F, and\n * b = False and y = sqrt(Z * (u / v)) otherwise.\n * @param Fp\n * @param Z\n * @returns\n */\nexport function SWUFpSqrtRatio(Fp, Z) {\n    // Generic implementation\n    const q = Fp.ORDER;\n    let l = _0n;\n    for (let o = q - _1n; o % _2n === _0n; o /= _2n)\n        l += _1n;\n    const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n    // We need 2n ** c1 and 2n ** (c1-1). We can't use **; but we can use <<.\n    // 2n ** c1 == 2n << (c1-1)\n    const _2n_pow_c1_1 = _2n << (c1 - _1n - _1n);\n    const _2n_pow_c1 = _2n_pow_c1_1 * _2n;\n    const c2 = (q - _1n) / _2n_pow_c1; // 2. c2 = (q - 1) / (2^c1)  # Integer arithmetic\n    const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n    const c4 = _2n_pow_c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n    const c5 = _2n_pow_c1_1; // 5. c5 = 2^(c1 - 1)                  # Integer arithmetic\n    const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n    const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n    let sqrtRatio = (u, v) => {\n        let tv1 = c6; // 1. tv1 = c6\n        let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n        let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n        tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n        let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n        tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n        tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n        tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n        tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n        let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n        tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n        let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n        tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n        tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n        tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n        tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n        // 17. for i in (c1, c1 - 1, ..., 2):\n        for (let i = c1; i > _1n; i--) {\n            let tv5 = i - _2n; // 18.    tv5 = i - 2\n            tv5 = _2n << (tv5 - _1n); // 19.    tv5 = 2^tv5\n            let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n            const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n            tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n            tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n            tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n            tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n            tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n        }\n        return { isValid: isQR, value: tv3 };\n    };\n    if (Fp.ORDER % _4n === _3n) {\n        // sqrt_ratio_3mod4(u, v)\n        const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n        const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n        sqrtRatio = (u, v) => {\n            let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n            const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n            tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n            let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n            y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n            const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n            const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n            const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n            let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n            return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n        };\n    }\n    // No curves uses that\n    // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n    return sqrtRatio;\n}\n/**\n * Simplified Shallue-van de Woestijne-Ulas Method\n * https://www.rfc-editor.org/rfc/rfc9380#section-6.6.2\n */\nexport function mapToCurveSimpleSWU(Fp, opts) {\n    validateField(Fp);\n    if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n        throw new Error('mapToCurveSimpleSWU: invalid opts');\n    const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n    if (!Fp.isOdd)\n        throw new Error('Fp.isOdd is not implemented!');\n    // Input: u, an element of F.\n    // Output: (x, y), a point on E.\n    return (u) => {\n        // prettier-ignore\n        let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n        tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n        tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n        tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n        tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n        tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n        tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n        tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n        tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n        tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n        tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n        tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n        tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n        tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n        tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n        tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n        tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n        x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n        const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n        y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n        y = Fp.mul(y, value); // 20.   y = y * y1\n        x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n        y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n        const e1 = Fp.isOdd(u) === Fp.isOdd(y); // 23.  e1 = sgn0(u) == sgn0(y)\n        y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n        x = Fp.div(x, tv4); // 25.   x = x / tv4\n        return { x, y };\n    };\n}\n//# sourceMappingURL=weierstrass.js.map","/**\n * Utilities for short weierstrass curves, combined with noble-hashes.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass } from './abstract/weierstrass.js';\n/** connects noble-curves to noble-hashes */\nexport function getHash(hash) {\n    return {\n        hash,\n        hmac: (key, ...msgs) => hmac(hash, key, concatBytes(...msgs)),\n        randomBytes,\n    };\n}\nexport function createCurve(curveDef, defHash) {\n    const create = (hash) => weierstrass({ ...curveDef, ...getHash(hash) });\n    return { ...create(defHash), create };\n}\n//# sourceMappingURL=_shortw_utils.js.map","/**\n * NIST secp256r1 aka p256.\n * https://www.secg.org/sec2-v2.pdf, https://neuromancer.sk/std/nist/P-256\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { createCurve } from './_shortw_utils.js';\nimport { createHasher } from './abstract/hash-to-curve.js';\nimport { Field } from './abstract/modular.js';\nimport { mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nconst Fp256 = Field(BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'));\nconst CURVE_A = Fp256.create(BigInt('-3'));\nconst CURVE_B = BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b');\n/** secp256r1 curve, ECDSA and ECDH methods. */\n// prettier-ignore\nexport const p256 = createCurve({\n    a: CURVE_A, // Equation params: a, b\n    b: CURVE_B,\n    Fp: Fp256, // Field: 2n**224n * (2n**32n-1n) + 2n**192n + 2n**96n-1n\n    // Curve order, total count of valid points in the field\n    n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n    // Base (generator) point (x, y)\n    Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n    Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n    h: BigInt(1),\n    lowS: false,\n}, sha256);\n/** Alias to p256. */\nexport const secp256r1 = p256;\nconst mapSWU = /* @__PURE__ */ (() => mapToCurveSimpleSWU(Fp256, {\n    A: CURVE_A,\n    B: CURVE_B,\n    Z: Fp256.create(BigInt('-10')),\n}))();\nconst htf = /* @__PURE__ */ (() => createHasher(secp256r1.ProjectivePoint, (scalars) => mapSWU(scalars[0]), {\n    DST: 'P256_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'P256_XMD:SHA-256_SSWU_NU_',\n    p: Fp256.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n}))();\n/** secp256r1 hash-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nexport const hashToCurve = /* @__PURE__ */ (() => htf.hashToCurve)();\n/** secp256r1 encode-to-curve from [RFC 9380](https://www.rfc-editor.org/rfc/rfc9380). */\nexport const encodeToCurve = /* @__PURE__ */ (() => htf.encodeToCurve)();\n//# sourceMappingURL=p256.js.map","import * as Base64 from './Base64.js';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Hash from './Hash.js';\nimport * as Hex from './Hex.js';\nimport * as P256 from './P256.js';\nimport * as internal from './internal/webauthn.js';\nexport const createChallenge = Uint8Array.from([\n    105, 171, 180, 181, 160, 222, 75, 198, 42, 42, 32, 31, 141, 37, 186, 233,\n]);\n/**\n * Creates a new WebAuthn P256 Credential, which can be stored and later used for signing.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({ name: 'Example' }) // [!code focus]\n * // @log: {\n * // @log:   id: 'oZ48...',\n * // @log:   publicKey: { x: 51421...5123n, y: 12345...6789n },\n * // @log:   raw: PublicKeyCredential {},\n * // @log: }\n *\n * const { metadata, signature } = await WebAuthnP256.sign({\n *   credentialId: credential.id,\n *   challenge: '0xdeadbeef',\n * })\n * ```\n *\n * @param options - Credential creation options.\n * @returns A WebAuthn P256 credential.\n */\nexport async function createCredential(options) {\n    const { createFn = window.navigator.credentials.create.bind(window.navigator.credentials), ...rest } = options;\n    const creationOptions = getCredentialCreationOptions(rest);\n    try {\n        const credential = (await createFn(creationOptions));\n        if (!credential)\n            throw new CredentialCreationFailedError();\n        const response = credential.response;\n        const publicKey = await internal.parseCredentialPublicKey(response);\n        return {\n            id: credential.id,\n            publicKey,\n            raw: credential,\n        };\n    }\n    catch (error) {\n        throw new CredentialCreationFailedError({\n            cause: error,\n        });\n    }\n}\n/**\n * Gets the authenticator data which contains information about the\n * processing of an authenticator request (ie. from `WebAuthnP256.sign`).\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * autenticator data. In most cases you will not need this function.\n * `authenticatorData` is typically returned as part of the\n * {@link ox#WebAuthnP256.(sign:function)} response (ie. an authenticator response).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const authenticatorData = WebAuthnP256.getAuthenticatorData({\n *   rpId: 'example.com',\n *   signCount: 420,\n * })\n * // @log: \"0xa379a6f6eeafb9a55e378c118034e2751e682fab9f2d30ab13d2125586ce194705000001a4\"\n * ```\n *\n * @param options - Options to construct the authenticator data.\n * @returns The authenticator data.\n */\nexport function getAuthenticatorData(options = {}) {\n    const { flag = 5, rpId = window.location.hostname, signCount = 0 } = options;\n    const rpIdHash = Hash.sha256(Hex.fromString(rpId));\n    const flag_bytes = Hex.fromNumber(flag, { size: 1 });\n    const signCount_bytes = Hex.fromNumber(signCount, { size: 4 });\n    return Hex.concat(rpIdHash, flag_bytes, signCount_bytes);\n}\n/**\n * Constructs the Client Data in stringified JSON format which represents client data that\n * was passed to `credentials.get()` in {@link ox#WebAuthnP256.(sign:function)}.\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * client data. In most cases you will not need this function.\n * `clientDataJSON` is typically returned as part of the\n * {@link ox#WebAuthnP256.(sign:function)} response (ie. an authenticator response).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const clientDataJSON = WebAuthnP256.getClientDataJSON({\n *   challenge: '0xdeadbeef',\n *   origin: 'https://example.com',\n * })\n * // @log: \"{\"type\":\"webauthn.get\",\"challenge\":\"3q2-7w\",\"origin\":\"https://example.com\",\"crossOrigin\":false}\"\n * ```\n *\n * @param options - Options to construct the client data.\n * @returns The client data.\n */\nexport function getClientDataJSON(options) {\n    const { challenge, crossOrigin = false, extraClientData, origin = window.location.origin, } = options;\n    return JSON.stringify({\n        type: 'webauthn.get',\n        challenge: Base64.fromHex(challenge, { url: true, pad: false }),\n        origin,\n        crossOrigin,\n        ...extraClientData,\n    });\n}\n/**\n * Returns the creation options for a P256 WebAuthn Credential to be used with\n * the Web Authentication API.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const options = WebAuthnP256.getCredentialCreationOptions({ name: 'Example' })\n *\n * const credential = await window.navigator.credentials.create(options)\n * ```\n *\n * @param options - Options.\n * @returns The credential creation options.\n */\nexport function getCredentialCreationOptions(options) {\n    const { attestation = 'none', authenticatorSelection = {\n        residentKey: 'preferred',\n        requireResidentKey: false,\n        userVerification: 'required',\n    }, challenge = createChallenge, excludeCredentialIds, name: name_, rp = {\n        id: window.location.hostname,\n        name: window.document.title,\n    }, user, extensions, } = options;\n    const name = (user?.name ?? name_);\n    return {\n        publicKey: {\n            attestation,\n            authenticatorSelection,\n            challenge,\n            ...(excludeCredentialIds\n                ? {\n                    excludeCredentials: excludeCredentialIds?.map((id) => ({\n                        id: Base64.toBytes(id),\n                        type: 'public-key',\n                    })),\n                }\n                : {}),\n            pubKeyCredParams: [\n                {\n                    type: 'public-key',\n                    alg: -7, // p256\n                },\n            ],\n            rp,\n            user: {\n                id: user?.id ?? Hash.keccak256(Bytes.fromString(name), { as: 'Bytes' }),\n                name,\n                displayName: user?.displayName ?? name,\n            },\n            extensions,\n        },\n    };\n}\n/**\n * Returns the request options to sign a challenge with the Web Authentication API.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const options = WebAuthnP256.getCredentialRequestOptions({\n *   challenge: '0xdeadbeef',\n * })\n *\n * const credential = await window.navigator.credentials.get(options)\n * ```\n *\n * @param options - Options.\n * @returns The credential request options.\n */\nexport function getCredentialRequestOptions(options) {\n    const { credentialId, challenge, rpId = window.location.hostname, userVerification = 'required', } = options;\n    return {\n        publicKey: {\n            ...(credentialId\n                ? {\n                    allowCredentials: [\n                        {\n                            id: Base64.toBytes(credentialId),\n                            type: 'public-key',\n                        },\n                    ],\n                }\n                : {}),\n            challenge: Bytes.fromHex(challenge),\n            rpId,\n            userVerification,\n        },\n    };\n}\n/**\n * Constructs the final digest that was signed and computed by the authenticator. This payload includes\n * the cryptographic `challenge`, as well as authenticator metadata (`authenticatorData` + `clientDataJSON`).\n * This value can be also used with raw P256 verification (such as {@link ox#P256.(verify:function)} or\n * {@link ox#WebCryptoP256.(verify:function)}).\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * signing payloads. In most cases you will not need this function and\n * instead use {@link ox#WebAuthnP256.(sign:function)}.\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256, WebCryptoP256 } from 'ox'\n *\n * const { metadata, payload } = WebAuthnP256.getSignPayload({ // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   metadata: {\n * // @log:     authenticatorData: \"0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000\",\n * // @log:     challengeIndex: 23,\n * // @log:     clientDataJSON: \"{\"type\":\"webauthn.get\",\"challenge\":\"9jEFijuhEWrM4SOW-tChJbUEHEP44VcjcJ-Bqo1fTM8\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false}\",\n * // @log:     typeIndex: 1,\n * // @log:     userVerificationRequired: true,\n * // @log:   },\n * // @log:   payload: \"0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d9763050000000045086dcb06a5f234db625bcdc94e657f86b76b6fd3eb9c30543eabc1e577a4b0\",\n * // @log: }\n *\n * const { publicKey, privateKey } = await WebCryptoP256.createKeyPair()\n *\n * const signature = await WebCryptoP256.sign({\n *   payload,\n *   privateKey,\n * })\n * ```\n *\n * @param options - Options to construct the signing payload.\n * @returns The signing payload.\n */\nexport function getSignPayload(options) {\n    const { challenge, crossOrigin, extraClientData, flag, origin, rpId, signCount, userVerification = 'required', } = options;\n    const authenticatorData = getAuthenticatorData({\n        flag,\n        rpId,\n        signCount,\n    });\n    const clientDataJSON = getClientDataJSON({\n        challenge,\n        crossOrigin,\n        extraClientData,\n        origin,\n    });\n    const clientDataJSONHash = Hash.sha256(Hex.fromString(clientDataJSON));\n    const challengeIndex = clientDataJSON.indexOf('\"challenge\"');\n    const typeIndex = clientDataJSON.indexOf('\"type\"');\n    const metadata = {\n        authenticatorData,\n        clientDataJSON,\n        challengeIndex,\n        typeIndex,\n        userVerificationRequired: userVerification === 'required',\n    };\n    const payload = Hex.concat(authenticatorData, clientDataJSONHash);\n    return { metadata, payload };\n}\n/**\n * Signs a challenge using a stored WebAuthn P256 Credential. If no Credential is provided,\n * a prompt will be displayed for the user to select an existing Credential\n * that was previously registered.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({\n *   name: 'Example',\n * })\n *\n * const { metadata, signature } = await WebAuthnP256.sign({ // [!code focus]\n *   credentialId: credential.id, // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   metadata: {\n * // @log:     authenticatorData: '0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000',\n * // @log:     clientDataJSON: '{\"type\":\"webauthn.get\",\"challenge\":\"9jEFijuhEWrM4SOW-tChJbUEHEP44VcjcJ-Bqo1fTM8\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false}',\n * // @log:     challengeIndex: 23,\n * // @log:     typeIndex: 1,\n * // @log:     userVerificationRequired: true,\n * // @log:   },\n * // @log:   signature: { r: 51231...4215n, s: 12345...6789n },\n * // @log: }\n * ```\n *\n * @param options - Options.\n * @returns The signature.\n */\nexport async function sign(options) {\n    const { getFn = window.navigator.credentials.get.bind(window.navigator.credentials), ...rest } = options;\n    const requestOptions = getCredentialRequestOptions(rest);\n    try {\n        const credential = (await getFn(requestOptions));\n        if (!credential)\n            throw new CredentialRequestFailedError();\n        const response = credential.response;\n        const clientDataJSON = String.fromCharCode(...new Uint8Array(response.clientDataJSON));\n        const challengeIndex = clientDataJSON.indexOf('\"challenge\"');\n        const typeIndex = clientDataJSON.indexOf('\"type\"');\n        const signature = internal.parseAsn1Signature(new Uint8Array(response.signature));\n        return {\n            metadata: {\n                authenticatorData: Hex.fromBytes(new Uint8Array(response.authenticatorData)),\n                clientDataJSON,\n                challengeIndex,\n                typeIndex,\n                userVerificationRequired: requestOptions.publicKey.userVerification === 'required',\n            },\n            signature,\n            raw: credential,\n        };\n    }\n    catch (error) {\n        throw new CredentialRequestFailedError({\n            cause: error,\n        });\n    }\n}\n/**\n * Verifies a signature using the Credential's public key and the challenge which was signed.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({\n *   name: 'Example',\n * })\n *\n * const { metadata, signature } = await WebAuthnP256.sign({\n *   credentialId: credential.id,\n *   challenge: '0xdeadbeef',\n * })\n *\n * const result = await WebAuthnP256.verify({ // [!code focus]\n *   metadata, // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n *   publicKey: credential.publicKey, // [!code focus]\n *   signature, // [!code focus]\n * }) // [!code focus]\n * // @log: true\n * ```\n *\n * @param options - Options.\n * @returns Whether the signature is valid.\n */\nexport function verify(options) {\n    const { challenge, hash = true, metadata, publicKey, signature } = options;\n    const { authenticatorData, challengeIndex, clientDataJSON, typeIndex, userVerificationRequired, } = metadata;\n    const authenticatorDataBytes = Bytes.fromHex(authenticatorData);\n    // Check length of `authenticatorData`.\n    if (authenticatorDataBytes.length < 37)\n        return false;\n    const flag = authenticatorDataBytes[32];\n    // Verify that the UP bit of the flags in authData is set.\n    if ((flag & 0x01) !== 0x01)\n        return false;\n    // If user verification was determined to be required, verify that\n    // the UV bit of the flags in authData is set. Otherwise, ignore the\n    // value of the UV flag.\n    if (userVerificationRequired && (flag & 0x04) !== 0x04)\n        return false;\n    // If the BE bit of the flags in authData is not set, verify that\n    // the BS bit is not set.\n    if ((flag & 0x08) !== 0x08 && (flag & 0x10) === 0x10)\n        return false;\n    // Check that response is for an authentication assertion\n    const type = '\"type\":\"webauthn.get\"';\n    if (type !== clientDataJSON.slice(Number(typeIndex), type.length + 1))\n        return false;\n    // Check that hash is in the clientDataJSON.\n    const match = clientDataJSON\n        .slice(Number(challengeIndex))\n        .match(/^\"challenge\":\"(.*?)\"/);\n    if (!match)\n        return false;\n    // Validate the challenge in the clientDataJSON.\n    const [_, challenge_extracted] = match;\n    if (Hex.fromBytes(Base64.toBytes(challenge_extracted)) !== challenge)\n        return false;\n    const clientDataJSONHash = Hash.sha256(Bytes.fromString(clientDataJSON), {\n        as: 'Bytes',\n    });\n    const payload = Bytes.concat(authenticatorDataBytes, clientDataJSONHash);\n    return P256.verify({\n        hash,\n        payload,\n        publicKey,\n        signature,\n    });\n}\n/** Thrown when a WebAuthn P256 credential creation fails. */\nexport class CredentialCreationFailedError extends Errors.BaseError {\n    constructor({ cause } = {}) {\n        super('Failed to create credential.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WebAuthnP256.CredentialCreationFailedError'\n        });\n    }\n}\n/** Thrown when a WebAuthn P256 credential request fails. */\nexport class CredentialRequestFailedError extends Errors.BaseError {\n    constructor({ cause } = {}) {\n        super('Failed to request credential.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WebAuthnP256.CredentialRequestFailedError'\n        });\n    }\n}\n//# sourceMappingURL=WebAuthnP256.js.map","import { secp256k1 } from '@noble/curves/secp256k1';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Json from './Json.js';\nimport * as Solidity from './Solidity.js';\n/**\n * Asserts that a Signature is valid.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.assert({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @error: InvalidSignatureRError:\n * // @error: Value `-549...n` is an invalid r value.\n * // @error: r must be a positive integer less than 2^256.\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function assert(signature, options = {}) {\n    const { recovered } = options;\n    if (typeof signature.r === 'undefined')\n        throw new MissingPropertiesError({ signature });\n    if (typeof signature.s === 'undefined')\n        throw new MissingPropertiesError({ signature });\n    if (recovered && typeof signature.yParity === 'undefined')\n        throw new MissingPropertiesError({ signature });\n    if (signature.r < 0n || signature.r > Solidity.maxUint256)\n        throw new InvalidRError({ value: signature.r });\n    if (signature.s < 0n || signature.s > Solidity.maxUint256)\n        throw new InvalidSError({ value: signature.s });\n    if (typeof signature.yParity === 'number' &&\n        signature.yParity !== 0 &&\n        signature.yParity !== 1)\n        throw new InvalidYParityError({ value: signature.yParity });\n}\n/**\n * Deserializes a {@link ox#Bytes.Bytes} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param signature - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromBytes(signature) {\n    return fromHex(Hex.fromBytes(signature));\n}\n/**\n * Deserializes a {@link ox#Hex.Hex} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.fromHex('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param serialized - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromHex(signature) {\n    if (signature.length !== 130 && signature.length !== 132)\n        throw new InvalidSerializedSizeError({ signature });\n    const r = BigInt(Hex.slice(signature, 0, 32));\n    const s = BigInt(Hex.slice(signature, 32, 64));\n    const yParity = (() => {\n        const yParity = Number(`0x${signature.slice(130)}`);\n        if (Number.isNaN(yParity))\n            return undefined;\n        try {\n            return vToYParity(yParity);\n        }\n        catch {\n            throw new InvalidYParityError({ value: yParity });\n        }\n    })();\n    if (typeof yParity === 'undefined')\n        return {\n            r,\n            s,\n        };\n    return {\n        r,\n        s,\n        yParity,\n    };\n}\n/**\n * Extracts a {@link ox#Signature.Signature} from an arbitrary object that may include signature properties.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.extract({\n *   baz: 'barry',\n *   foo: 'bar',\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n *   zebra: 'stripes',\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @param value - The arbitrary object to extract the signature from.\n * @returns The extracted {@link ox#Signature.Signature}.\n */\nexport function extract(value) {\n    if (typeof value.r === 'undefined')\n        return undefined;\n    if (typeof value.s === 'undefined')\n        return undefined;\n    return from(value);\n}\n/**\n * Instantiates a typed {@link ox#Signature.Signature} object from a {@link ox#Signature.Signature}, {@link ox#Signature.Legacy}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db801')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @example\n * ### From Legacy\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n *   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n *   v: 27,\n * })\n * // @log: {\n * // @log:   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n * // @log:   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n * // @log:   yParity: 0\n * // @log: }\n * ```\n *\n * @param signature - The signature value to instantiate.\n * @returns The instantiated {@link ox#Signature.Signature}.\n */\nexport function from(signature) {\n    const signature_ = (() => {\n        if (typeof signature === 'string')\n            return fromHex(signature);\n        if (signature instanceof Uint8Array)\n            return fromBytes(signature);\n        if (typeof signature.r === 'string')\n            return fromRpc(signature);\n        if (signature.v)\n            return fromLegacy(signature);\n        return {\n            r: signature.r,\n            s: signature.s,\n            ...(typeof signature.yParity !== 'undefined'\n                ? { yParity: signature.yParity }\n                : {}),\n        };\n    })();\n    assert(signature_);\n    return signature_;\n}\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerBytes(new Uint8Array([132, 51, 23, ...]))\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerBytes(signature) {\n    return fromDerHex(Hex.fromBytes(signature));\n}\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerHex('0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerHex(signature) {\n    const { r, s } = secp256k1.Signature.fromDER(Hex.from(signature).slice(2));\n    return { r, s };\n}\n/**\n * Converts a {@link ox#Signature.Legacy} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.fromLegacy({ r: 1n, s: 2n, v: 28 })\n * // @log: { r: 1n, s: 2n, yParity: 1 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Legacy} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromLegacy(signature) {\n    return {\n        r: signature.r,\n        s: signature.s,\n        yParity: vToYParity(signature.v),\n    };\n}\n/**\n * Converts a {@link ox#Signature.Rpc} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromRpc({\n *   r: '0x635dc2033e60185bb36709c29c75d64ea51dfbd91c32ef4be198e4ceb169fb4d',\n *   s: '0x50c2667ac4c771072746acfdcf1f1483336dcca8bd2df47cd83175dbe60f0540',\n *   yParity: '0x0',\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Rpc} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromRpc(signature) {\n    const yParity = (() => {\n        const v = signature.v ? Number(signature.v) : undefined;\n        let yParity = signature.yParity ? Number(signature.yParity) : undefined;\n        if (typeof v === 'number' && typeof yParity !== 'number')\n            yParity = vToYParity(v);\n        if (typeof yParity !== 'number')\n            throw new InvalidYParityError({ value: signature.yParity });\n        return yParity;\n    })();\n    return {\n        r: BigInt(signature.r),\n        s: BigInt(signature.s),\n        yParity,\n    };\n}\n/**\n * Converts a {@link ox#Signature.Tuple} to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromTuple(['0x01', '0x7b', '0x1c8'])\n * // @log: {\n * // @log:   r: 123n,\n * // @log:   s: 456n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @param tuple - The {@link ox#Signature.Tuple} to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromTuple(tuple) {\n    const [yParity, r, s] = tuple;\n    return from({\n        r: r === '0x' ? 0n : BigInt(r),\n        s: s === '0x' ? 0n : BigInt(s),\n        yParity: yParity === '0x' ? 0 : Number(yParity),\n    });\n}\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toBytes({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: Uint8Array [102, 16, 10, ...]\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toBytes(signature) {\n    return Bytes.fromHex(toHex(signature));\n}\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toHex({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c'\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toHex(signature) {\n    assert(signature);\n    const r = signature.r;\n    const s = signature.s;\n    const signature_ = Hex.concat(Hex.fromNumber(r, { size: 32 }), Hex.fromNumber(s, { size: 32 }), \n    // If the signature is recovered, add the recovery byte to the signature.\n    typeof signature.yParity === 'number'\n        ? Hex.fromNumber(yParityToV(signature.yParity), { size: 1 })\n        : '0x');\n    return signature_;\n}\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerBytes(signature)\n * // @log: Uint8Array [132, 51, 23, ...]\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerBytes(signature) {\n    const sig = new secp256k1.Signature(signature.r, signature.s);\n    return sig.toDERRawBytes();\n}\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerHex(signature)\n * // @log: '0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8'\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerHex(signature) {\n    const sig = new secp256k1.Signature(signature.r, signature.s);\n    return `0x${sig.toDERHex()}`;\n}\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Legacy}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.toLegacy({ r: 1n, s: 2n, yParity: 1 })\n * // @log: { r: 1n, s: 2n, v: 28 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Legacy}.\n */\nexport function toLegacy(signature) {\n    return {\n        r: signature.r,\n        s: signature.s,\n        v: yParityToV(signature.yParity),\n    };\n}\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toRpc({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Rpc}.\n */\nexport function toRpc(signature) {\n    const { r, s, yParity } = signature;\n    return {\n        r: Hex.fromNumber(r, { size: 32 }),\n        s: Hex.fromNumber(s, { size: 32 }),\n        yParity: yParity === 0 ? '0x0' : '0x1',\n    };\n}\n/**\n * Converts a {@link ox#Signature.Signature} to a serialized {@link ox#Signature.Tuple} to be used for signatures in Transaction Envelopes, EIP-7702 Authorization Lists, etc.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signatureTuple = Signature.toTuple({\n *   r: 123n,\n *   s: 456n,\n *   yParity: 1,\n * })\n * // @log: [yParity: '0x01', r: '0x7b', s: '0x1c8']\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The {@link ox#Signature.Tuple}.\n */\nexport function toTuple(signature) {\n    const { r, s, yParity } = signature;\n    return [\n        yParity ? '0x01' : '0x',\n        r === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(r)),\n        s === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(s)),\n    ];\n}\n/**\n * Validates a Signature. Returns `true` if the signature is valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const valid = Signature.validate({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: false\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function validate(signature, options = {}) {\n    try {\n        assert(signature, options);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const yParity = Signature.vToYParity(28)\n * // @log: 1\n * ```\n *\n * @param v - The ECDSA `v` value to convert.\n * @returns The `yParity` value.\n */\nexport function vToYParity(v) {\n    if (v === 0 || v === 27)\n        return 0;\n    if (v === 1 || v === 28)\n        return 1;\n    if (v >= 35)\n        return v % 2 === 0 ? 1 : 0;\n    throw new InvalidVError({ value: v });\n}\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const v = Signature.yParityToV(1)\n * // @log: 28\n * ```\n *\n * @param yParity - The ECDSA `yParity` value to convert.\n * @returns The `v` value.\n */\nexport function yParityToV(yParity) {\n    if (yParity === 0)\n        return 27;\n    if (yParity === 1)\n        return 28;\n    throw new InvalidYParityError({ value: yParity });\n}\n/** Thrown when the serialized signature is of an invalid size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n    constructor({ signature }) {\n        super(`Value \\`${signature}\\` is an invalid signature size.`, {\n            metaMessages: [\n                'Expected: 64 bytes or 65 bytes.',\n                `Received ${Hex.size(Hex.from(signature))} bytes.`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidSerializedSizeError'\n        });\n    }\n}\n/** Thrown when the signature is missing either an `r`, `s`, or `yParity` property. */\nexport class MissingPropertiesError extends Errors.BaseError {\n    constructor({ signature }) {\n        super(`Signature \\`${Json.stringify(signature)}\\` is missing either an \\`r\\`, \\`s\\`, or \\`yParity\\` property.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.MissingPropertiesError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `r` value. */\nexport class InvalidRError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid r value. r must be a positive integer less than 2^256.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidRError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `s` value. */\nexport class InvalidSError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid s value. s must be a positive integer less than 2^256.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidSError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `yParity` value. */\nexport class InvalidYParityError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid y-parity value. Y-parity must be 0 or 1.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidYParityError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `v` value. */\nexport class InvalidVError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid v value. v must be 27, 28 or >=35.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidVError'\n        });\n    }\n}\n//# sourceMappingURL=Signature.js.map","export const entryPoint06Abi = [\n    {\n        inputs: [\n            { name: 'preOpGas', type: 'uint256' },\n            { name: 'paid', type: 'uint256' },\n            { name: 'validAfter', type: 'uint48' },\n            { name: 'validUntil', type: 'uint48' },\n            { name: 'targetSuccess', type: 'bool' },\n            { name: 'targetResult', type: 'bytes' },\n        ],\n        name: 'ExecutionResult',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { name: 'opIndex', type: 'uint256' },\n            { name: 'reason', type: 'string' },\n        ],\n        name: 'FailedOp',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'sender', type: 'address' }],\n        name: 'SenderAddressResult',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'aggregator', type: 'address' }],\n        name: 'SignatureValidationFailed',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'preOpGas', type: 'uint256' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'sigFailed', type: 'bool' },\n                    { name: 'validAfter', type: 'uint48' },\n                    { name: 'validUntil', type: 'uint48' },\n                    { name: 'paymasterContext', type: 'bytes' },\n                ],\n                name: 'returnInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'senderInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'factoryInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'paymasterInfo',\n                type: 'tuple',\n            },\n        ],\n        name: 'ValidationResult',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'preOpGas', type: 'uint256' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'sigFailed', type: 'bool' },\n                    { name: 'validAfter', type: 'uint48' },\n                    { name: 'validUntil', type: 'uint48' },\n                    { name: 'paymasterContext', type: 'bytes' },\n                ],\n                name: 'returnInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'senderInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'factoryInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'paymasterInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'aggregator', type: 'address' },\n                    {\n                        components: [\n                            { name: 'stake', type: 'uint256' },\n                            {\n                                name: 'unstakeDelaySec',\n                                type: 'uint256',\n                            },\n                        ],\n                        name: 'stakeInfo',\n                        type: 'tuple',\n                    },\n                ],\n                name: 'aggregatorInfo',\n                type: 'tuple',\n            },\n        ],\n        name: 'ValidationResultWithAggregation',\n        type: 'error',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'factory',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'paymaster',\n                type: 'address',\n            },\n        ],\n        name: 'AccountDeployed',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalDeposit',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposited',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'aggregator',\n                type: 'address',\n            },\n        ],\n        name: 'SignatureAggregatorChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalStaked',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'unstakeDelaySec',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeLocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawTime',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeUnlocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeWithdrawn',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'paymaster',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            { indexed: false, name: 'success', type: 'bool' },\n            {\n                indexed: false,\n                name: 'actualGasCost',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'actualGasUsed',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationEvent',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'UserOperationRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdrawn',\n        type: 'event',\n    },\n    {\n        inputs: [],\n        name: 'SIG_VALIDATION_FAILED',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'initCode', type: 'bytes' },\n            { name: 'sender', type: 'address' },\n            { name: 'paymasterAndData', type: 'bytes' },\n        ],\n        name: '_validateSenderAndPaymaster',\n        outputs: [],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'unstakeDelaySec', type: 'uint32' }],\n        name: 'addStake',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'depositTo',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: '', type: 'address' }],\n        name: 'deposits',\n        outputs: [\n            { name: 'deposit', type: 'uint112' },\n            { name: 'staked', type: 'bool' },\n            { name: 'stake', type: 'uint112' },\n            { name: 'unstakeDelaySec', type: 'uint32' },\n            { name: 'withdrawTime', type: 'uint48' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'getDepositInfo',\n        outputs: [\n            {\n                components: [\n                    { name: 'deposit', type: 'uint112' },\n                    { name: 'staked', type: 'bool' },\n                    { name: 'stake', type: 'uint112' },\n                    { name: 'unstakeDelaySec', type: 'uint32' },\n                    { name: 'withdrawTime', type: 'uint48' },\n                ],\n                name: 'info',\n                type: 'tuple',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'sender', type: 'address' },\n            { name: 'key', type: 'uint192' },\n        ],\n        name: 'getNonce',\n        outputs: [{ name: 'nonce', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'initCode', type: 'bytes' }],\n        name: 'getSenderAddress',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'getUserOpHash',\n        outputs: [{ name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            { name: 'initCode', type: 'bytes' },\n                            { name: 'callData', type: 'bytes' },\n                            {\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'paymasterAndData',\n                                type: 'bytes',\n                            },\n                            { name: 'signature', type: 'bytes' },\n                        ],\n                        name: 'userOps',\n                        type: 'tuple[]',\n                    },\n                    {\n                        name: 'aggregator',\n                        type: 'address',\n                    },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'opsPerAggregator',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleAggregatedOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'ops',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'key', type: 'uint192' }],\n        name: 'incrementNonce',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'callData', type: 'bytes' },\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            {\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { name: 'paymaster', type: 'address' },\n                            {\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                        ],\n                        name: 'mUserOp',\n                        type: 'tuple',\n                    },\n                    { name: 'userOpHash', type: 'bytes32' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'contextOffset', type: 'uint256' },\n                    { name: 'preOpGas', type: 'uint256' },\n                ],\n                name: 'opInfo',\n                type: 'tuple',\n            },\n            { name: 'context', type: 'bytes' },\n        ],\n        name: 'innerHandleOp',\n        outputs: [{ name: 'actualGasCost', type: 'uint256' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: '', type: 'address' },\n            { name: '', type: 'uint192' },\n        ],\n        name: 'nonceSequenceNumber',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'op',\n                type: 'tuple',\n            },\n            { name: 'target', type: 'address' },\n            { name: 'targetCallData', type: 'bytes' },\n        ],\n        name: 'simulateHandleOp',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'simulateValidation',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'unlockStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n        ],\n        name: 'withdrawStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            { name: 'withdrawAmount', type: 'uint256' },\n        ],\n        name: 'withdrawTo',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    { stateMutability: 'payable', type: 'receive' },\n];\nexport const entryPoint07Abi = [\n    {\n        inputs: [\n            { name: 'success', type: 'bool' },\n            { name: 'ret', type: 'bytes' },\n        ],\n        name: 'DelegateAndRevert',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { name: 'opIndex', type: 'uint256' },\n            { name: 'reason', type: 'string' },\n        ],\n        name: 'FailedOp',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { name: 'opIndex', type: 'uint256' },\n            { name: 'reason', type: 'string' },\n            { name: 'inner', type: 'bytes' },\n        ],\n        name: 'FailedOpWithRevert',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'returnData', type: 'bytes' }],\n        name: 'PostOpReverted',\n        type: 'error',\n    },\n    { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },\n    {\n        inputs: [{ name: 'sender', type: 'address' }],\n        name: 'SenderAddressResult',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'aggregator', type: 'address' }],\n        name: 'SignatureValidationFailed',\n        type: 'error',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'factory',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'paymaster',\n                type: 'address',\n            },\n        ],\n        name: 'AccountDeployed',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalDeposit',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposited',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'PostOpRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'aggregator',\n                type: 'address',\n            },\n        ],\n        name: 'SignatureAggregatorChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalStaked',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'unstakeDelaySec',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeLocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawTime',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeUnlocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeWithdrawn',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'paymaster',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            { indexed: false, name: 'success', type: 'bool' },\n            {\n                indexed: false,\n                name: 'actualGasCost',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'actualGasUsed',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationEvent',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationPrefundTooLow',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'UserOperationRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdrawn',\n        type: 'event',\n    },\n    {\n        inputs: [{ name: 'unstakeDelaySec', type: 'uint32' }],\n        name: 'addStake',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'target', type: 'address' },\n            { name: 'data', type: 'bytes' },\n        ],\n        name: 'delegateAndRevert',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'depositTo',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: '', type: 'address' }],\n        name: 'deposits',\n        outputs: [\n            { name: 'deposit', type: 'uint256' },\n            { name: 'staked', type: 'bool' },\n            { name: 'stake', type: 'uint112' },\n            { name: 'unstakeDelaySec', type: 'uint32' },\n            { name: 'withdrawTime', type: 'uint48' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'getDepositInfo',\n        outputs: [\n            {\n                components: [\n                    { name: 'deposit', type: 'uint256' },\n                    { name: 'staked', type: 'bool' },\n                    { name: 'stake', type: 'uint112' },\n                    { name: 'unstakeDelaySec', type: 'uint32' },\n                    { name: 'withdrawTime', type: 'uint48' },\n                ],\n                name: 'info',\n                type: 'tuple',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'sender', type: 'address' },\n            { name: 'key', type: 'uint192' },\n        ],\n        name: 'getNonce',\n        outputs: [{ name: 'nonce', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'initCode', type: 'bytes' }],\n        name: 'getSenderAddress',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    {\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'gasFees', type: 'bytes32' },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'getUserOpHash',\n        outputs: [{ name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            { name: 'initCode', type: 'bytes' },\n                            { name: 'callData', type: 'bytes' },\n                            {\n                                name: 'accountGasLimits',\n                                type: 'bytes32',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { name: 'gasFees', type: 'bytes32' },\n                            {\n                                name: 'paymasterAndData',\n                                type: 'bytes',\n                            },\n                            { name: 'signature', type: 'bytes' },\n                        ],\n                        name: 'userOps',\n                        type: 'tuple[]',\n                    },\n                    {\n                        name: 'aggregator',\n                        type: 'address',\n                    },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'opsPerAggregator',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleAggregatedOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    {\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'gasFees', type: 'bytes32' },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'ops',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'key', type: 'uint192' }],\n        name: 'incrementNonce',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'callData', type: 'bytes' },\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            {\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'paymasterVerificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'paymasterPostOpGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { name: 'paymaster', type: 'address' },\n                            {\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                        ],\n                        name: 'mUserOp',\n                        type: 'tuple',\n                    },\n                    { name: 'userOpHash', type: 'bytes32' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'contextOffset', type: 'uint256' },\n                    { name: 'preOpGas', type: 'uint256' },\n                ],\n                name: 'opInfo',\n                type: 'tuple',\n            },\n            { name: 'context', type: 'bytes' },\n        ],\n        name: 'innerHandleOp',\n        outputs: [{ name: 'actualGasCost', type: 'uint256' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: '', type: 'address' },\n            { name: '', type: 'uint192' },\n        ],\n        name: 'nonceSequenceNumber',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'interfaceId', type: 'bytes4' }],\n        name: 'supportsInterface',\n        outputs: [{ name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'unlockStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n        ],\n        name: 'withdrawStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            { name: 'withdrawAmount', type: 'uint256' },\n        ],\n        name: 'withdrawTo',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    { stateMutability: 'payable', type: 'receive' },\n];\nexport const entryPoint08Abi = [\n    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n    {\n        inputs: [\n            { internalType: 'bool', name: 'success', type: 'bool' },\n            { internalType: 'bytes', name: 'ret', type: 'bytes' },\n        ],\n        name: 'DelegateAndRevert',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { internalType: 'uint256', name: 'opIndex', type: 'uint256' },\n            { internalType: 'string', name: 'reason', type: 'string' },\n        ],\n        name: 'FailedOp',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { internalType: 'uint256', name: 'opIndex', type: 'uint256' },\n            { internalType: 'string', name: 'reason', type: 'string' },\n            { internalType: 'bytes', name: 'inner', type: 'bytes' },\n        ],\n        name: 'FailedOpWithRevert',\n        type: 'error',\n    },\n    { inputs: [], name: 'InvalidShortString', type: 'error' },\n    {\n        inputs: [{ internalType: 'bytes', name: 'returnData', type: 'bytes' }],\n        name: 'PostOpReverted',\n        type: 'error',\n    },\n    { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },\n    {\n        inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],\n        name: 'SenderAddressResult',\n        type: 'error',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'aggregator', type: 'address' }],\n        name: 'SignatureValidationFailed',\n        type: 'error',\n    },\n    {\n        inputs: [{ internalType: 'string', name: 'str', type: 'string' }],\n        name: 'StringTooLong',\n        type: 'error',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'factory',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'paymaster',\n                type: 'address',\n            },\n        ],\n        name: 'AccountDeployed',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'totalDeposit',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposited',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'EIP712DomainChanged', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'PostOpRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'aggregator',\n                type: 'address',\n            },\n        ],\n        name: 'SignatureAggregatorChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'totalStaked',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'unstakeDelaySec',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeLocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'withdrawTime',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeUnlocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeWithdrawn',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'paymaster',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n            { indexed: false, internalType: 'bool', name: 'success', type: 'bool' },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'actualGasCost',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'actualGasUsed',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationEvent',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationPrefundTooLow',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'UserOperationRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdrawn',\n        type: 'event',\n    },\n    {\n        inputs: [\n            { internalType: 'uint32', name: 'unstakeDelaySec', type: 'uint32' },\n        ],\n        name: 'addStake',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'target', type: 'address' },\n            { internalType: 'bytes', name: 'data', type: 'bytes' },\n        ],\n        name: 'delegateAndRevert',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'depositTo',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'eip712Domain',\n        outputs: [\n            { internalType: 'bytes1', name: 'fields', type: 'bytes1' },\n            { internalType: 'string', name: 'name', type: 'string' },\n            { internalType: 'string', name: 'version', type: 'string' },\n            { internalType: 'uint256', name: 'chainId', type: 'uint256' },\n            { internalType: 'address', name: 'verifyingContract', type: 'address' },\n            { internalType: 'bytes32', name: 'salt', type: 'bytes32' },\n            { internalType: 'uint256[]', name: 'extensions', type: 'uint256[]' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'getDepositInfo',\n        outputs: [\n            {\n                components: [\n                    { internalType: 'uint256', name: 'deposit', type: 'uint256' },\n                    { internalType: 'bool', name: 'staked', type: 'bool' },\n                    { internalType: 'uint112', name: 'stake', type: 'uint112' },\n                    { internalType: 'uint32', name: 'unstakeDelaySec', type: 'uint32' },\n                    { internalType: 'uint48', name: 'withdrawTime', type: 'uint48' },\n                ],\n                internalType: 'struct IStakeManager.DepositInfo',\n                name: 'info',\n                type: 'tuple',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'getDomainSeparatorV4',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'sender', type: 'address' },\n            { internalType: 'uint192', name: 'key', type: 'uint192' },\n        ],\n        name: 'getNonce',\n        outputs: [{ internalType: 'uint256', name: 'nonce', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'getPackedUserOpTypeHash',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'bytes', name: 'initCode', type: 'bytes' }],\n        name: 'getSenderAddress',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'sender', type: 'address' },\n                    { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                    { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n                    { internalType: 'bytes', name: 'callData', type: 'bytes' },\n                    {\n                        internalType: 'bytes32',\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n                    { internalType: 'bytes', name: 'paymasterAndData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                ],\n                internalType: 'struct PackedUserOperation',\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'getUserOpHash',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            { internalType: 'address', name: 'sender', type: 'address' },\n                            { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                            { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n                            { internalType: 'bytes', name: 'callData', type: 'bytes' },\n                            {\n                                internalType: 'bytes32',\n                                name: 'accountGasLimits',\n                                type: 'bytes32',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n                            {\n                                internalType: 'bytes',\n                                name: 'paymasterAndData',\n                                type: 'bytes',\n                            },\n                            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                        ],\n                        internalType: 'struct PackedUserOperation[]',\n                        name: 'userOps',\n                        type: 'tuple[]',\n                    },\n                    {\n                        internalType: 'contract IAggregator',\n                        name: 'aggregator',\n                        type: 'address',\n                    },\n                    { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                ],\n                internalType: 'struct IEntryPoint.UserOpsPerAggregator[]',\n                name: 'opsPerAggregator',\n                type: 'tuple[]',\n            },\n            { internalType: 'address payable', name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleAggregatedOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'sender', type: 'address' },\n                    { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                    { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n                    { internalType: 'bytes', name: 'callData', type: 'bytes' },\n                    {\n                        internalType: 'bytes32',\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n                    { internalType: 'bytes', name: 'paymasterAndData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                ],\n                internalType: 'struct PackedUserOperation[]',\n                name: 'ops',\n                type: 'tuple[]',\n            },\n            { internalType: 'address payable', name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'uint192', name: 'key', type: 'uint192' }],\n        name: 'incrementNonce',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'bytes', name: 'callData', type: 'bytes' },\n            {\n                components: [\n                    {\n                        components: [\n                            { internalType: 'address', name: 'sender', type: 'address' },\n                            { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                            {\n                                internalType: 'uint256',\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'paymasterVerificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'paymasterPostOpGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { internalType: 'address', name: 'paymaster', type: 'address' },\n                            {\n                                internalType: 'uint256',\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct EntryPoint.MemoryUserOp',\n                        name: 'mUserOp',\n                        type: 'tuple',\n                    },\n                    { internalType: 'bytes32', name: 'userOpHash', type: 'bytes32' },\n                    { internalType: 'uint256', name: 'prefund', type: 'uint256' },\n                    { internalType: 'uint256', name: 'contextOffset', type: 'uint256' },\n                    { internalType: 'uint256', name: 'preOpGas', type: 'uint256' },\n                ],\n                internalType: 'struct EntryPoint.UserOpInfo',\n                name: 'opInfo',\n                type: 'tuple',\n            },\n            { internalType: 'bytes', name: 'context', type: 'bytes' },\n        ],\n        name: 'innerHandleOp',\n        outputs: [\n            { internalType: 'uint256', name: 'actualGasCost', type: 'uint256' },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: '', type: 'address' },\n            { internalType: 'uint192', name: '', type: 'uint192' },\n        ],\n        name: 'nonceSequenceNumber',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'senderCreator',\n        outputs: [\n            { internalType: 'contract ISenderCreator', name: '', type: 'address' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\n        name: 'supportsInterface',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'unlockStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address payable',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n        ],\n        name: 'withdrawStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address payable',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            { internalType: 'uint256', name: 'withdrawAmount', type: 'uint256' },\n        ],\n        name: 'withdrawTo',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    { stateMutability: 'payable', type: 'receive' },\n];\n//# sourceMappingURL=abis.js.map","import { concat } from '../../../utils/data/concat.js';\nexport function getInitCode(userOperation) {\n    const { authorization, factory, factoryData } = userOperation;\n    if (factory === '0x7702' ||\n        factory === '0x7702000000000000000000000000000000000000') {\n        if (!authorization)\n            return '0x7702000000000000000000000000000000000000';\n        const delegation = authorization.address;\n        return concat([delegation, factoryData ?? '0x']);\n    }\n    if (!factory)\n        return '0x';\n    return concat([factory, factoryData ?? '0x']);\n}\n//# sourceMappingURL=getInitCode.js.map","import { concat } from '../../../utils/data/concat.js';\nimport { pad } from '../../../utils/data/pad.js';\nimport { numberToHex } from '../../../utils/index.js';\nimport { getInitCode } from './getInitCode.js';\nexport function toPackedUserOperation(userOperation) {\n    const { callGasLimit, callData, maxPriorityFeePerGas, maxFeePerGas, paymaster, paymasterData, paymasterPostOpGasLimit, paymasterVerificationGasLimit, sender, signature = '0x', verificationGasLimit, } = userOperation;\n    const accountGasLimits = concat([\n        pad(numberToHex(verificationGasLimit || 0n), { size: 16 }),\n        pad(numberToHex(callGasLimit || 0n), { size: 16 }),\n    ]);\n    const initCode = getInitCode(userOperation);\n    const gasFees = concat([\n        pad(numberToHex(maxPriorityFeePerGas || 0n), { size: 16 }),\n        pad(numberToHex(maxFeePerGas || 0n), { size: 16 }),\n    ]);\n    const nonce = userOperation.nonce ?? 0n;\n    const paymasterAndData = paymaster\n        ? concat([\n            paymaster,\n            pad(numberToHex(paymasterVerificationGasLimit || 0n), {\n                size: 16,\n            }),\n            pad(numberToHex(paymasterPostOpGasLimit || 0n), {\n                size: 16,\n            }),\n            paymasterData || '0x',\n        ])\n        : '0x';\n    const preVerificationGas = userOperation.preVerificationGas ?? 0n;\n    return {\n        accountGasLimits,\n        callData,\n        initCode,\n        gasFees,\n        nonce,\n        paymasterAndData,\n        preVerificationGas,\n        sender,\n        signature,\n    };\n}\n//# sourceMappingURL=toPackedUserOperation.js.map","import { toPackedUserOperation } from './toPackedUserOperation.js';\nconst types = {\n    PackedUserOperation: [\n        { type: 'address', name: 'sender' },\n        { type: 'uint256', name: 'nonce' },\n        { type: 'bytes', name: 'initCode' },\n        { type: 'bytes', name: 'callData' },\n        { type: 'bytes32', name: 'accountGasLimits' },\n        { type: 'uint256', name: 'preVerificationGas' },\n        { type: 'bytes32', name: 'gasFees' },\n        { type: 'bytes', name: 'paymasterAndData' },\n    ],\n};\nexport function getUserOperationTypedData(parameters) {\n    const { chainId, entryPointAddress, userOperation } = parameters;\n    const packedUserOp = toPackedUserOperation(userOperation);\n    return {\n        types,\n        primaryType: 'PackedUserOperation',\n        domain: {\n            name: 'ERC4337',\n            version: '1',\n            chainId,\n            verifyingContract: entryPointAddress,\n        },\n        message: packedUserOp,\n    };\n}\n//# sourceMappingURL=getUserOperationTypedData.js.map","import { encodeAbiParameters } from '../../../utils/abi/encodeAbiParameters.js';\nimport { keccak256 } from '../../../utils/hash/keccak256.js';\nimport { hashTypedData } from '../../../utils/signature/hashTypedData.js';\nimport { getInitCode } from './getInitCode.js';\nimport { getUserOperationTypedData } from './getUserOperationTypedData.js';\nimport { toPackedUserOperation } from './toPackedUserOperation.js';\nexport function getUserOperationHash(parameters) {\n    const { chainId, entryPointAddress, entryPointVersion } = parameters;\n    const userOperation = parameters.userOperation;\n    const { authorization, callData = '0x', callGasLimit, maxFeePerGas, maxPriorityFeePerGas, nonce, paymasterAndData = '0x', preVerificationGas, sender, verificationGasLimit, } = userOperation;\n    if (entryPointVersion === '0.8')\n        return hashTypedData(getUserOperationTypedData({\n            chainId,\n            entryPointAddress,\n            userOperation,\n        }));\n    const packedUserOp = (() => {\n        if (entryPointVersion === '0.6') {\n            const factory = userOperation.initCode?.slice(0, 42);\n            const factoryData = userOperation.initCode?.slice(42);\n            const initCode = getInitCode({\n                authorization,\n                factory,\n                factoryData,\n            });\n            return encodeAbiParameters([\n                { type: 'address' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n            ], [\n                sender,\n                nonce,\n                keccak256(initCode),\n                keccak256(callData),\n                callGasLimit,\n                verificationGasLimit,\n                preVerificationGas,\n                maxFeePerGas,\n                maxPriorityFeePerGas,\n                keccak256(paymasterAndData),\n            ]);\n        }\n        if (entryPointVersion === '0.7') {\n            const packedUserOp = toPackedUserOperation(userOperation);\n            return encodeAbiParameters([\n                { type: 'address' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n            ], [\n                packedUserOp.sender,\n                packedUserOp.nonce,\n                keccak256(packedUserOp.initCode),\n                keccak256(packedUserOp.callData),\n                packedUserOp.accountGasLimits,\n                packedUserOp.preVerificationGas,\n                packedUserOp.gasFees,\n                keccak256(packedUserOp.paymasterAndData),\n            ]);\n        }\n        throw new Error(`entryPointVersion \"${entryPointVersion}\" not supported.`);\n    })();\n    return keccak256(encodeAbiParameters([{ type: 'bytes32' }, { type: 'address' }, { type: 'uint256' }], [keccak256(packedUserOp), entryPointAddress, BigInt(chainId)]));\n}\n//# sourceMappingURL=getUserOperationHash.js.map","import { BaseError } from '../../errors/base.js';\nexport class AccountNotDeployedError extends BaseError {\n    constructor({ cause, }) {\n        super('Smart Account is not deployed.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- No `factory`/`factoryData` or `initCode` properties are provided for Smart Account deployment.',\n                '- An incorrect `sender` address is provided.',\n            ],\n            name: 'AccountNotDeployedError',\n        });\n    }\n}\nObject.defineProperty(AccountNotDeployedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa20/\n});\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, data, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n            name: 'ExecutionRevertedError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32521\n});\nObject.defineProperty(ExecutionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FailedToSendToBeneficiaryError extends BaseError {\n    constructor({ cause, }) {\n        super('Failed to send funds to beneficiary.', {\n            cause,\n            name: 'FailedToSendToBeneficiaryError',\n        });\n    }\n}\nObject.defineProperty(FailedToSendToBeneficiaryError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa91/\n});\nexport class GasValuesOverflowError extends BaseError {\n    constructor({ cause, }) {\n        super('Gas value overflowed.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- one of the gas values exceeded 2**120 (uint120)',\n            ].filter(Boolean),\n            name: 'GasValuesOverflowError',\n        });\n    }\n}\nObject.defineProperty(GasValuesOverflowError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa94/\n});\nexport class HandleOpsOutOfGasError extends BaseError {\n    constructor({ cause, }) {\n        super('The `handleOps` function was called by the Bundler with a gas limit too low.', {\n            cause,\n            name: 'HandleOpsOutOfGasError',\n        });\n    }\n}\nObject.defineProperty(HandleOpsOutOfGasError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa95/\n});\nexport class InitCodeFailedError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, }) {\n        super('Failed to simulate deployment for Smart Account.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- Invalid `factory`/`factoryData` or `initCode` properties are present',\n                '- Smart Account deployment execution ran out of gas (low `verificationGasLimit` value)',\n                '- Smart Account deployment execution reverted with an error\\n',\n                factory && `factory: ${factory}`,\n                factoryData && `factoryData: ${factoryData}`,\n                initCode && `initCode: ${initCode}`,\n            ].filter(Boolean),\n            name: 'InitCodeFailedError',\n        });\n    }\n}\nObject.defineProperty(InitCodeFailedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa13/\n});\nexport class InitCodeMustCreateSenderError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, }) {\n        super('Smart Account initialization implementation did not create an account.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- `factory`/`factoryData` or `initCode` properties are invalid',\n                '- Smart Account initialization implementation is incorrect\\n',\n                factory && `factory: ${factory}`,\n                factoryData && `factoryData: ${factoryData}`,\n                initCode && `initCode: ${initCode}`,\n            ].filter(Boolean),\n            name: 'InitCodeMustCreateSenderError',\n        });\n    }\n}\nObject.defineProperty(InitCodeMustCreateSenderError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa15/\n});\nexport class InitCodeMustReturnSenderError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, sender, }) {\n        super('Smart Account initialization implementation does not return the expected sender.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                'Smart Account initialization implementation does not return a sender address\\n',\n                factory && `factory: ${factory}`,\n                factoryData && `factoryData: ${factoryData}`,\n                initCode && `initCode: ${initCode}`,\n                sender && `sender: ${sender}`,\n            ].filter(Boolean),\n            name: 'InitCodeMustReturnSenderError',\n        });\n    }\n}\nObject.defineProperty(InitCodeMustReturnSenderError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa14/\n});\nexport class InsufficientPrefundError extends BaseError {\n    constructor({ cause, }) {\n        super('Smart Account does not have sufficient funds to execute the User Operation.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the Smart Account does not have sufficient funds to cover the required prefund, or',\n                '- a Paymaster was not provided',\n            ].filter(Boolean),\n            name: 'InsufficientPrefundError',\n        });\n    }\n}\nObject.defineProperty(InsufficientPrefundError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa21/\n});\nexport class InternalCallOnlyError extends BaseError {\n    constructor({ cause, }) {\n        super('Bundler attempted to call an invalid function on the EntryPoint.', {\n            cause,\n            name: 'InternalCallOnlyError',\n        });\n    }\n}\nObject.defineProperty(InternalCallOnlyError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa92/\n});\nexport class InvalidAggregatorError extends BaseError {\n    constructor({ cause, }) {\n        super('Bundler used an invalid aggregator for handling aggregated User Operations.', {\n            cause,\n            name: 'InvalidAggregatorError',\n        });\n    }\n}\nObject.defineProperty(InvalidAggregatorError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa96/\n});\nexport class InvalidAccountNonceError extends BaseError {\n    constructor({ cause, nonce, }) {\n        super('Invalid Smart Account nonce used for User Operation.', {\n            cause,\n            metaMessages: [nonce && `nonce: ${nonce}`].filter(Boolean),\n            name: 'InvalidAccountNonceError',\n        });\n    }\n}\nObject.defineProperty(InvalidAccountNonceError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa25/\n});\nexport class InvalidBeneficiaryError extends BaseError {\n    constructor({ cause, }) {\n        super('Bundler has not set a beneficiary address.', {\n            cause,\n            name: 'InvalidBeneficiaryError',\n        });\n    }\n}\nObject.defineProperty(InvalidBeneficiaryError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa90/\n});\nexport class InvalidFieldsError extends BaseError {\n    constructor({ cause, }) {\n        super('Invalid fields set on User Operation.', {\n            cause,\n            name: 'InvalidFieldsError',\n        });\n    }\n}\nObject.defineProperty(InvalidFieldsError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32602\n});\nexport class InvalidPaymasterAndDataError extends BaseError {\n    constructor({ cause, paymasterAndData, }) {\n        super('Paymaster properties provided are invalid.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `paymasterAndData` property is of an incorrect length\\n',\n                paymasterAndData && `paymasterAndData: ${paymasterAndData}`,\n            ].filter(Boolean),\n            name: 'InvalidPaymasterAndDataError',\n        });\n    }\n}\nObject.defineProperty(InvalidPaymasterAndDataError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa93/\n});\nexport class PaymasterDepositTooLowError extends BaseError {\n    constructor({ cause, }) {\n        super('Paymaster deposit for the User Operation is too low.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the Paymaster has deposited less than the expected amount via the `deposit` function',\n            ].filter(Boolean),\n            name: 'PaymasterDepositTooLowError',\n        });\n    }\n}\nObject.defineProperty(PaymasterDepositTooLowError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32508\n});\nObject.defineProperty(PaymasterDepositTooLowError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa31/\n});\nexport class PaymasterFunctionRevertedError extends BaseError {\n    constructor({ cause, }) {\n        super('The `validatePaymasterUserOp` function on the Paymaster reverted.', {\n            cause,\n            name: 'PaymasterFunctionRevertedError',\n        });\n    }\n}\nObject.defineProperty(PaymasterFunctionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa33/\n});\nexport class PaymasterNotDeployedError extends BaseError {\n    constructor({ cause, }) {\n        super('The Paymaster contract has not been deployed.', {\n            cause,\n            name: 'PaymasterNotDeployedError',\n        });\n    }\n}\nObject.defineProperty(PaymasterNotDeployedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa30/\n});\nexport class PaymasterRateLimitError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.', {\n            cause,\n            name: 'PaymasterRateLimitError',\n        });\n    }\n}\nObject.defineProperty(PaymasterRateLimitError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32504\n});\nexport class PaymasterStakeTooLowError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.', {\n            cause,\n            name: 'PaymasterStakeTooLowError',\n        });\n    }\n}\nObject.defineProperty(PaymasterStakeTooLowError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32505\n});\nexport class PaymasterPostOpFunctionRevertedError extends BaseError {\n    constructor({ cause, }) {\n        super('Paymaster `postOp` function reverted.', {\n            cause,\n            name: 'PaymasterPostOpFunctionRevertedError',\n        });\n    }\n}\nObject.defineProperty(PaymasterPostOpFunctionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa50/\n});\nexport class SenderAlreadyConstructedError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, }) {\n        super('Smart Account has already been deployed.', {\n            cause,\n            metaMessages: [\n                'Remove the following properties and try again:',\n                factory && '`factory`',\n                factoryData && '`factoryData`',\n                initCode && '`initCode`',\n            ].filter(Boolean),\n            name: 'SenderAlreadyConstructedError',\n        });\n    }\n}\nObject.defineProperty(SenderAlreadyConstructedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa10/\n});\nexport class SignatureCheckFailedError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because account signature check failed (or paymaster signature, if the paymaster uses its data as signature).', {\n            cause,\n            name: 'SignatureCheckFailedError',\n        });\n    }\n}\nObject.defineProperty(SignatureCheckFailedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32507\n});\nexport class SmartAccountFunctionRevertedError extends BaseError {\n    constructor({ cause, }) {\n        super('The `validateUserOp` function on the Smart Account reverted.', {\n            cause,\n            name: 'SmartAccountFunctionRevertedError',\n        });\n    }\n}\nObject.defineProperty(SmartAccountFunctionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa23/\n});\nexport class UnsupportedSignatureAggregatorError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because account specified unsupported signature aggregator.', {\n            cause,\n            name: 'UnsupportedSignatureAggregatorError',\n        });\n    }\n}\nObject.defineProperty(UnsupportedSignatureAggregatorError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32506\n});\nexport class UserOperationExpiredError extends BaseError {\n    constructor({ cause, }) {\n        super('User Operation expired.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `validAfter` or `validUntil` values returned from `validateUserOp` on the Smart Account are not satisfied',\n            ].filter(Boolean),\n            name: 'UserOperationExpiredError',\n        });\n    }\n}\nObject.defineProperty(UserOperationExpiredError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa22/\n});\nexport class UserOperationPaymasterExpiredError extends BaseError {\n    constructor({ cause, }) {\n        super('Paymaster for User Operation expired.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `validAfter` or `validUntil` values returned from `validatePaymasterUserOp` on the Paymaster are not satisfied',\n            ].filter(Boolean),\n            name: 'UserOperationPaymasterExpiredError',\n        });\n    }\n}\nObject.defineProperty(UserOperationPaymasterExpiredError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa32/\n});\nexport class UserOperationSignatureError extends BaseError {\n    constructor({ cause, }) {\n        super('Signature provided for the User Operation is invalid.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Smart Account',\n            ].filter(Boolean),\n            name: 'UserOperationSignatureError',\n        });\n    }\n}\nObject.defineProperty(UserOperationSignatureError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa24/\n});\nexport class UserOperationPaymasterSignatureError extends BaseError {\n    constructor({ cause, }) {\n        super('Signature provided for the User Operation is invalid.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Paymaster',\n            ].filter(Boolean),\n            name: 'UserOperationPaymasterSignatureError',\n        });\n    }\n}\nObject.defineProperty(UserOperationPaymasterSignatureError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa34/\n});\nexport class UserOperationRejectedByEntryPointError extends BaseError {\n    constructor({ cause }) {\n        super(\"User Operation rejected by EntryPoint's `simulateValidation` during account creation or validation.\", {\n            cause,\n            name: 'UserOperationRejectedByEntryPointError',\n        });\n    }\n}\nObject.defineProperty(UserOperationRejectedByEntryPointError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32500\n});\nexport class UserOperationRejectedByPaymasterError extends BaseError {\n    constructor({ cause }) {\n        super(\"User Operation rejected by Paymaster's `validatePaymasterUserOp`.\", {\n            cause,\n            name: 'UserOperationRejectedByPaymasterError',\n        });\n    }\n}\nObject.defineProperty(UserOperationRejectedByPaymasterError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32501\n});\nexport class UserOperationRejectedByOpCodeError extends BaseError {\n    constructor({ cause }) {\n        super('User Operation rejected with op code validation error.', {\n            cause,\n            name: 'UserOperationRejectedByOpCodeError',\n        });\n    }\n}\nObject.defineProperty(UserOperationRejectedByOpCodeError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32502\n});\nexport class UserOperationOutOfTimeRangeError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation out of time-range: either wallet or paymaster returned a time-range, and it is already expired (or will expire soon).', {\n            cause,\n            name: 'UserOperationOutOfTimeRangeError',\n        });\n    }\n}\nObject.defineProperty(UserOperationOutOfTimeRangeError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32503\n});\nexport class UnknownBundlerError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing user operation: ${cause?.shortMessage}`, {\n            cause,\n            name: 'UnknownBundlerError',\n        });\n    }\n}\nexport class VerificationGasLimitExceededError extends BaseError {\n    constructor({ cause, }) {\n        super('User Operation verification gas limit exceeded.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the gas used for verification exceeded the `verificationGasLimit`',\n            ].filter(Boolean),\n            name: 'VerificationGasLimitExceededError',\n        });\n    }\n}\nObject.defineProperty(VerificationGasLimitExceededError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa40/\n});\nexport class VerificationGasLimitTooLowError extends BaseError {\n    constructor({ cause, }) {\n        super('User Operation verification gas limit is too low.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `verificationGasLimit` is too low to verify the User Operation',\n            ].filter(Boolean),\n            name: 'VerificationGasLimitTooLowError',\n        });\n    }\n}\nObject.defineProperty(VerificationGasLimitTooLowError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa41/\n});\n//# sourceMappingURL=bundler.js.map","import { BaseError } from '../../errors/base.js';\nimport { prettyPrint } from '../../errors/transaction.js';\nimport { formatGwei } from '../../utils/index.js';\nexport class UserOperationExecutionError extends BaseError {\n    constructor(cause, { callData, callGasLimit, docsPath, factory, factoryData, initCode, maxFeePerGas, maxPriorityFeePerGas, nonce, paymaster, paymasterAndData, paymasterData, paymasterPostOpGasLimit, paymasterVerificationGasLimit, preVerificationGas, sender, signature, verificationGasLimit, }) {\n        const prettyArgs = prettyPrint({\n            callData,\n            callGasLimit,\n            factory,\n            factoryData,\n            initCode,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n            paymaster,\n            paymasterAndData,\n            paymasterData,\n            paymasterPostOpGasLimit,\n            paymasterVerificationGasLimit,\n            preVerificationGas,\n            sender,\n            signature,\n            verificationGasLimit,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'UserOperationExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class UserOperationReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`User Operation receipt with hash \"${hash}\" could not be found. The User Operation may not have been processed yet.`, { name: 'UserOperationReceiptNotFoundError' });\n    }\n}\nexport class UserOperationNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`User Operation with hash \"${hash}\" could not be found.`, {\n            name: 'UserOperationNotFoundError',\n        });\n    }\n}\nexport class WaitForUserOperationReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for User Operation with hash \"${hash}\" to be confirmed.`, { name: 'WaitForUserOperationReceiptTimeoutError' });\n    }\n}\n//# sourceMappingURL=userOperation.js.map","import { AccountNotDeployedError, ExecutionRevertedError, FailedToSendToBeneficiaryError, GasValuesOverflowError, HandleOpsOutOfGasError, InitCodeFailedError, InitCodeMustCreateSenderError, InitCodeMustReturnSenderError, InsufficientPrefundError, InternalCallOnlyError, InvalidAccountNonceError, InvalidAggregatorError, InvalidBeneficiaryError, InvalidFieldsError, InvalidPaymasterAndDataError, PaymasterDepositTooLowError, PaymasterFunctionRevertedError, PaymasterNotDeployedError, PaymasterPostOpFunctionRevertedError, PaymasterRateLimitError, PaymasterStakeTooLowError, SenderAlreadyConstructedError, SignatureCheckFailedError, SmartAccountFunctionRevertedError, UnknownBundlerError, UnsupportedSignatureAggregatorError, UserOperationExpiredError, UserOperationOutOfTimeRangeError, UserOperationPaymasterExpiredError, UserOperationPaymasterSignatureError, UserOperationRejectedByEntryPointError, UserOperationRejectedByOpCodeError, UserOperationRejectedByPaymasterError, UserOperationSignatureError, VerificationGasLimitExceededError, VerificationGasLimitTooLowError, } from '../../errors/bundler.js';\nconst bundlerErrors = [\n    ExecutionRevertedError,\n    InvalidFieldsError,\n    PaymasterDepositTooLowError,\n    PaymasterRateLimitError,\n    PaymasterStakeTooLowError,\n    SignatureCheckFailedError,\n    UnsupportedSignatureAggregatorError,\n    UserOperationOutOfTimeRangeError,\n    UserOperationRejectedByEntryPointError,\n    UserOperationRejectedByPaymasterError,\n    UserOperationRejectedByOpCodeError,\n];\nexport function getBundlerError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    if (AccountNotDeployedError.message.test(message))\n        return new AccountNotDeployedError({\n            cause: err,\n        });\n    if (FailedToSendToBeneficiaryError.message.test(message))\n        return new FailedToSendToBeneficiaryError({\n            cause: err,\n        });\n    if (GasValuesOverflowError.message.test(message))\n        return new GasValuesOverflowError({\n            cause: err,\n        });\n    if (HandleOpsOutOfGasError.message.test(message))\n        return new HandleOpsOutOfGasError({\n            cause: err,\n        });\n    if (InitCodeFailedError.message.test(message))\n        return new InitCodeFailedError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n        });\n    if (InitCodeMustCreateSenderError.message.test(message))\n        return new InitCodeMustCreateSenderError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n        });\n    if (InitCodeMustReturnSenderError.message.test(message))\n        return new InitCodeMustReturnSenderError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n            sender: args.sender,\n        });\n    if (InsufficientPrefundError.message.test(message))\n        return new InsufficientPrefundError({\n            cause: err,\n        });\n    if (InternalCallOnlyError.message.test(message))\n        return new InternalCallOnlyError({\n            cause: err,\n        });\n    if (InvalidAccountNonceError.message.test(message))\n        return new InvalidAccountNonceError({\n            cause: err,\n            nonce: args.nonce,\n        });\n    if (InvalidAggregatorError.message.test(message))\n        return new InvalidAggregatorError({\n            cause: err,\n        });\n    if (InvalidBeneficiaryError.message.test(message))\n        return new InvalidBeneficiaryError({\n            cause: err,\n        });\n    if (InvalidPaymasterAndDataError.message.test(message))\n        return new InvalidPaymasterAndDataError({\n            cause: err,\n        });\n    if (PaymasterDepositTooLowError.message.test(message))\n        return new PaymasterDepositTooLowError({\n            cause: err,\n        });\n    if (PaymasterFunctionRevertedError.message.test(message))\n        return new PaymasterFunctionRevertedError({\n            cause: err,\n        });\n    if (PaymasterNotDeployedError.message.test(message))\n        return new PaymasterNotDeployedError({\n            cause: err,\n        });\n    if (PaymasterPostOpFunctionRevertedError.message.test(message))\n        return new PaymasterPostOpFunctionRevertedError({\n            cause: err,\n        });\n    if (SmartAccountFunctionRevertedError.message.test(message))\n        return new SmartAccountFunctionRevertedError({\n            cause: err,\n        });\n    if (SenderAlreadyConstructedError.message.test(message))\n        return new SenderAlreadyConstructedError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n        });\n    if (UserOperationExpiredError.message.test(message))\n        return new UserOperationExpiredError({\n            cause: err,\n        });\n    if (UserOperationPaymasterExpiredError.message.test(message))\n        return new UserOperationPaymasterExpiredError({\n            cause: err,\n        });\n    if (UserOperationPaymasterSignatureError.message.test(message))\n        return new UserOperationPaymasterSignatureError({\n            cause: err,\n        });\n    if (UserOperationSignatureError.message.test(message))\n        return new UserOperationSignatureError({\n            cause: err,\n        });\n    if (VerificationGasLimitExceededError.message.test(message))\n        return new VerificationGasLimitExceededError({\n            cause: err,\n        });\n    if (VerificationGasLimitTooLowError.message.test(message))\n        return new VerificationGasLimitTooLowError({\n            cause: err,\n        });\n    const error = err.walk((e) => bundlerErrors.some((error) => error.code === e.code));\n    if (error) {\n        if (error.code === ExecutionRevertedError.code)\n            return new ExecutionRevertedError({\n                cause: err,\n                data: error.data,\n                message: error.details,\n            });\n        if (error.code === InvalidFieldsError.code)\n            return new InvalidFieldsError({\n                cause: err,\n            });\n        if (error.code === PaymasterDepositTooLowError.code)\n            return new PaymasterDepositTooLowError({\n                cause: err,\n            });\n        if (error.code === PaymasterRateLimitError.code)\n            return new PaymasterRateLimitError({\n                cause: err,\n            });\n        if (error.code === PaymasterStakeTooLowError.code)\n            return new PaymasterStakeTooLowError({\n                cause: err,\n            });\n        if (error.code === SignatureCheckFailedError.code)\n            return new SignatureCheckFailedError({\n                cause: err,\n            });\n        if (error.code === UnsupportedSignatureAggregatorError.code)\n            return new UnsupportedSignatureAggregatorError({\n                cause: err,\n            });\n        if (error.code === UserOperationOutOfTimeRangeError.code)\n            return new UserOperationOutOfTimeRangeError({\n                cause: err,\n            });\n        if (error.code === UserOperationRejectedByEntryPointError.code)\n            return new UserOperationRejectedByEntryPointError({\n                cause: err,\n            });\n        if (error.code === UserOperationRejectedByPaymasterError.code)\n            return new UserOperationRejectedByPaymasterError({\n                cause: err,\n            });\n        if (error.code === UserOperationRejectedByOpCodeError.code)\n            return new UserOperationRejectedByOpCodeError({\n                cause: err,\n            });\n    }\n    return new UnknownBundlerError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getBundlerError.js.map","import { BaseError } from '../../../errors/base.js';\nimport { ContractFunctionExecutionError, ContractFunctionRevertedError, ContractFunctionZeroDataError, } from '../../../errors/contract.js';\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js';\nimport { ExecutionRevertedError } from '../../errors/bundler.js';\nimport { UserOperationExecutionError, } from '../../errors/userOperation.js';\nimport { getBundlerError, } from './getBundlerError.js';\nexport function getUserOperationError(err, { calls, docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getBundlerError(err, args);\n        if (calls && cause instanceof ExecutionRevertedError) {\n            const revertData = getRevertData(cause);\n            const contractCalls = calls?.filter((call) => call.abi);\n            if (revertData && contractCalls.length > 0)\n                return getContractError({ calls: contractCalls, revertData });\n        }\n        return cause;\n    })();\n    return new UserOperationExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n/////////////////////////////////////////////////////////////////////////////////\nfunction getRevertData(error) {\n    let revertData;\n    error.walk((e) => {\n        const error = e;\n        if (typeof error.data === 'string' ||\n            typeof error.data?.revertData === 'string' ||\n            (!(error instanceof BaseError) && typeof error.message === 'string')) {\n            const match = (error.data?.revertData ||\n                error.data ||\n                error.message).match?.(/(0x[A-Za-z0-9]*)/);\n            if (match) {\n                revertData = match[1];\n                return true;\n            }\n        }\n        return false;\n    });\n    return revertData;\n}\nfunction getContractError(parameters) {\n    const { calls, revertData } = parameters;\n    const { abi, functionName, args, to } = (() => {\n        const contractCalls = calls?.filter((call) => Boolean(call.abi));\n        if (contractCalls.length === 1)\n            return contractCalls[0];\n        const compatContractCalls = contractCalls.filter((call) => {\n            try {\n                return Boolean(decodeErrorResult({\n                    abi: call.abi,\n                    data: revertData,\n                }));\n            }\n            catch {\n                return false;\n            }\n        });\n        if (compatContractCalls.length === 1)\n            return compatContractCalls[0];\n        return {\n            abi: [],\n            functionName: contractCalls.reduce((acc, call) => `${acc ? `${acc} | ` : ''}${call.functionName}`, ''),\n            args: undefined,\n            to: undefined,\n        };\n    })();\n    const cause = (() => {\n        if (revertData === '0x')\n            return new ContractFunctionZeroDataError({ functionName });\n        return new ContractFunctionRevertedError({\n            abi,\n            data: revertData,\n            functionName,\n        });\n    })();\n    return new ContractFunctionExecutionError(cause, {\n        abi,\n        args,\n        contractAddress: to,\n        functionName,\n    });\n}\n//# sourceMappingURL=getUserOperationError.js.map","import { numberToHex } from '../../../utils/encoding/toHex.js';\nimport { pad } from '../../../utils/index.js';\nexport function formatUserOperationRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.callData !== 'undefined')\n        rpcRequest.callData = request.callData;\n    if (typeof request.callGasLimit !== 'undefined')\n        rpcRequest.callGasLimit = numberToHex(request.callGasLimit);\n    if (typeof request.factory !== 'undefined')\n        rpcRequest.factory = request.factory;\n    if (typeof request.factoryData !== 'undefined')\n        rpcRequest.factoryData = request.factoryData;\n    if (typeof request.initCode !== 'undefined')\n        rpcRequest.initCode = request.initCode;\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.paymaster !== 'undefined')\n        rpcRequest.paymaster = request.paymaster;\n    if (typeof request.paymasterAndData !== 'undefined')\n        rpcRequest.paymasterAndData = request.paymasterAndData || '0x';\n    if (typeof request.paymasterData !== 'undefined')\n        rpcRequest.paymasterData = request.paymasterData;\n    if (typeof request.paymasterPostOpGasLimit !== 'undefined')\n        rpcRequest.paymasterPostOpGasLimit = numberToHex(request.paymasterPostOpGasLimit);\n    if (typeof request.paymasterVerificationGasLimit !== 'undefined')\n        rpcRequest.paymasterVerificationGasLimit = numberToHex(request.paymasterVerificationGasLimit);\n    if (typeof request.preVerificationGas !== 'undefined')\n        rpcRequest.preVerificationGas = numberToHex(request.preVerificationGas);\n    if (typeof request.sender !== 'undefined')\n        rpcRequest.sender = request.sender;\n    if (typeof request.signature !== 'undefined')\n        rpcRequest.signature = request.signature;\n    if (typeof request.verificationGasLimit !== 'undefined')\n        rpcRequest.verificationGasLimit = numberToHex(request.verificationGasLimit);\n    if (typeof request.authorization !== 'undefined')\n        rpcRequest.eip7702Auth = formatAuthorization(request.authorization);\n    return rpcRequest;\n}\nfunction formatAuthorization(authorization) {\n    return {\n        address: authorization.address,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        r: authorization.r\n            ? numberToHex(BigInt(authorization.r), { size: 32 })\n            : pad('0x', { size: 32 }),\n        s: authorization.s\n            ? numberToHex(BigInt(authorization.s), { size: 32 })\n            : pad('0x', { size: 32 }),\n        yParity: authorization.yParity\n            ? numberToHex(authorization.yParity, { size: 1 })\n            : pad('0x', { size: 32 }),\n    };\n}\n//# sourceMappingURL=userOperationRequest.js.map","import { hexToBigInt } from '../../../utils/encoding/fromHex.js';\nimport { numberToHex } from '../../../utils/encoding/toHex.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\n/**\n * Retrieves paymaster-related User Operation properties to be used for sending the User Operation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterData(client, parameters) {\n    const { chainId, entryPointAddress, context, ...userOperation } = parameters;\n    const request = formatUserOperationRequest(userOperation);\n    const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } = await client.request({\n        method: 'pm_getPaymasterData',\n        params: [\n            {\n                ...request,\n                callGasLimit: request.callGasLimit ?? '0x0',\n                verificationGasLimit: request.verificationGasLimit ?? '0x0',\n                preVerificationGas: request.preVerificationGas ?? '0x0',\n            },\n            entryPointAddress,\n            numberToHex(chainId),\n            context,\n        ],\n    });\n    return {\n        ...rest,\n        ...(paymasterPostOpGasLimit && {\n            paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n        }),\n        ...(paymasterVerificationGasLimit && {\n            paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n        }),\n    };\n}\n//# sourceMappingURL=getPaymasterData.js.map","import { hexToBigInt } from '../../../utils/encoding/fromHex.js';\nimport { numberToHex } from '../../../utils/encoding/toHex.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\n/**\n * Retrieves paymaster-related User Operation properties to be used for gas estimation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterStubData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterStubDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterStubDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterStubData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterStubData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterStubData(client, parameters) {\n    const { chainId, entryPointAddress, context, ...userOperation } = parameters;\n    const request = formatUserOperationRequest(userOperation);\n    const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } = await client.request({\n        method: 'pm_getPaymasterStubData',\n        params: [\n            {\n                ...request,\n                callGasLimit: request.callGasLimit ?? '0x0',\n                verificationGasLimit: request.verificationGasLimit ?? '0x0',\n                preVerificationGas: request.preVerificationGas ?? '0x0',\n            },\n            entryPointAddress,\n            numberToHex(chainId),\n            context,\n        ],\n    });\n    return {\n        ...rest,\n        ...(paymasterPostOpGasLimit && {\n            paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n        }),\n        ...(paymasterVerificationGasLimit && {\n            paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n        }),\n    };\n}\n//# sourceMappingURL=getPaymasterStubData.js.map","import { parseAccount, } from '../../../accounts/utils/parseAccount.js';\nimport { prepareAuthorization } from '../../../actions/index.js';\nimport { estimateFeesPerGas, } from '../../../actions/public/estimateFeesPerGas.js';\nimport { getChainId as getChainId_ } from '../../../actions/public/getChainId.js';\nimport { AccountNotFoundError } from '../../../errors/account.js';\nimport { encodeFunctionData, } from '../../../utils/abi/encodeFunctionData.js';\nimport { concat } from '../../../utils/data/concat.js';\nimport { getAction } from '../../../utils/getAction.js';\nimport { getPaymasterData as getPaymasterData_, } from '../paymaster/getPaymasterData.js';\nimport { getPaymasterStubData as getPaymasterStubData_, } from '../paymaster/getPaymasterStubData.js';\nimport { estimateUserOperationGas, } from './estimateUserOperationGas.js';\nconst defaultParameters = [\n    'factory',\n    'fees',\n    'gas',\n    'paymaster',\n    'nonce',\n    'signature',\n    'authorization',\n];\n/**\n * Prepares a User Operation and fills in missing properties.\n *\n * - Docs: https://viem.sh/actions/bundler/prepareUserOperation\n *\n * @param args - {@link PrepareUserOperationParameters}\n * @returns The User Operation. {@link PrepareUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const request = await prepareUserOperation(client, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function prepareUserOperation(client, parameters_) {\n    const parameters = parameters_;\n    const { account: account_ = client.account, parameters: properties = defaultParameters, stateOverride, } = parameters;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Assert that an Account is defined.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (!account_)\n        throw new AccountNotFoundError();\n    const account = parseAccount(account_);\n    ////////////////////////////////////////////////////////////////////////////////\n    // Declare typed Bundler Client.\n    ////////////////////////////////////////////////////////////////////////////////\n    const bundlerClient = client;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Declare Paymaster properties.\n    ////////////////////////////////////////////////////////////////////////////////\n    const paymaster = parameters.paymaster ?? bundlerClient?.paymaster;\n    const paymasterAddress = typeof paymaster === 'string' ? paymaster : undefined;\n    const { getPaymasterStubData, getPaymasterData } = (() => {\n        // If `paymaster: true`, we will assume the Bundler Client supports Paymaster Actions.\n        if (paymaster === true)\n            return {\n                getPaymasterStubData: (parameters) => getAction(bundlerClient, getPaymasterStubData_, 'getPaymasterStubData')(parameters),\n                getPaymasterData: (parameters) => getAction(bundlerClient, getPaymasterData_, 'getPaymasterData')(parameters),\n            };\n        // If Actions are passed to `paymaster` (via Paymaster Client or directly), we will use them.\n        if (typeof paymaster === 'object') {\n            const { getPaymasterStubData, getPaymasterData } = paymaster;\n            return {\n                getPaymasterStubData: (getPaymasterData && getPaymasterStubData\n                    ? getPaymasterStubData\n                    : getPaymasterData),\n                getPaymasterData: getPaymasterData && getPaymasterStubData\n                    ? getPaymasterData\n                    : undefined,\n            };\n        }\n        // No Paymaster functions.\n        return {\n            getPaymasterStubData: undefined,\n            getPaymasterData: undefined,\n        };\n    })();\n    const paymasterContext = parameters.paymasterContext\n        ? parameters.paymasterContext\n        : bundlerClient?.paymasterContext;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Set up the User Operation request.\n    ////////////////////////////////////////////////////////////////////////////////\n    let request = {\n        ...parameters,\n        paymaster: paymasterAddress,\n        sender: account.address,\n    };\n    ////////////////////////////////////////////////////////////////////////////////\n    // Concurrently prepare properties required to fill the User Operation.\n    ////////////////////////////////////////////////////////////////////////////////\n    const [callData, factory, fees, nonce, authorization] = await Promise.all([\n        (async () => {\n            if (parameters.calls)\n                return account.encodeCalls(parameters.calls.map((call_) => {\n                    const call = call_;\n                    if (call.abi)\n                        return {\n                            data: encodeFunctionData(call),\n                            to: call.to,\n                            value: call.value,\n                        };\n                    return call;\n                }));\n            return parameters.callData;\n        })(),\n        (async () => {\n            if (!properties.includes('factory'))\n                return undefined;\n            if (parameters.initCode)\n                return { initCode: parameters.initCode };\n            if (parameters.factory && parameters.factoryData) {\n                return {\n                    factory: parameters.factory,\n                    factoryData: parameters.factoryData,\n                };\n            }\n            const { factory, factoryData } = await account.getFactoryArgs();\n            if (account.entryPoint.version === '0.6')\n                return {\n                    initCode: factory && factoryData ? concat([factory, factoryData]) : undefined,\n                };\n            return {\n                factory,\n                factoryData,\n            };\n        })(),\n        (async () => {\n            if (!properties.includes('fees'))\n                return undefined;\n            // If we have sufficient properties for fees, return them.\n            if (typeof parameters.maxFeePerGas === 'bigint' &&\n                typeof parameters.maxPriorityFeePerGas === 'bigint')\n                return request;\n            // If the Bundler Client has a `estimateFeesPerGas` hook, run it.\n            if (bundlerClient?.userOperation?.estimateFeesPerGas) {\n                const fees = await bundlerClient.userOperation.estimateFeesPerGas({\n                    account,\n                    bundlerClient,\n                    userOperation: request,\n                });\n                return {\n                    ...request,\n                    ...fees,\n                };\n            }\n            // Otherwise, we will need to estimate the fees to fill the fee properties.\n            try {\n                const client_ = bundlerClient.client ?? client;\n                const fees = await getAction(client_, estimateFeesPerGas, 'estimateFeesPerGas')({\n                    chain: client_.chain,\n                    type: 'eip1559',\n                });\n                return {\n                    maxFeePerGas: typeof parameters.maxFeePerGas === 'bigint'\n                        ? parameters.maxFeePerGas\n                        : BigInt(\n                        // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                        2n * fees.maxFeePerGas),\n                    maxPriorityFeePerGas: typeof parameters.maxPriorityFeePerGas === 'bigint'\n                        ? parameters.maxPriorityFeePerGas\n                        : BigInt(\n                        // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                        2n * fees.maxPriorityFeePerGas),\n                };\n            }\n            catch {\n                return undefined;\n            }\n        })(),\n        (async () => {\n            if (!properties.includes('nonce'))\n                return undefined;\n            if (typeof parameters.nonce === 'bigint')\n                return parameters.nonce;\n            return account.getNonce();\n        })(),\n        (async () => {\n            if (!properties.includes('authorization'))\n                return undefined;\n            if (typeof parameters.authorization === 'object')\n                return parameters.authorization;\n            if (account.authorization && !(await account.isDeployed())) {\n                const authorization = await prepareAuthorization(account.client, account.authorization);\n                return {\n                    ...authorization,\n                    r: '0xfffffffffffffffffffffffffffffff000000000000000000000000000000000',\n                    s: '0x7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n                    yParity: 1,\n                };\n            }\n            return undefined;\n        })(),\n    ]);\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with the prepared properties from above.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (typeof callData !== 'undefined')\n        request.callData = callData;\n    if (typeof factory !== 'undefined')\n        request = { ...request, ...factory };\n    if (typeof fees !== 'undefined')\n        request = { ...request, ...fees };\n    if (typeof nonce !== 'undefined')\n        request.nonce = nonce;\n    if (typeof authorization !== 'undefined')\n        request.authorization = authorization;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with the `signature` property.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (properties.includes('signature')) {\n        if (typeof parameters.signature !== 'undefined')\n            request.signature = parameters.signature;\n        else\n            request.signature = await account.getStubSignature(request);\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // `initCode` is required to be filled with EntryPoint 0.6.\n    ////////////////////////////////////////////////////////////////////////////////\n    // If no `initCode` is provided, we use an empty bytes string.\n    if (account.entryPoint.version === '0.6' && !request.initCode)\n        request.initCode = '0x';\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with paymaster-related properties for **gas estimation**.\n    ////////////////////////////////////////////////////////////////////////////////\n    let chainId;\n    async function getChainId() {\n        if (chainId)\n            return chainId;\n        if (client.chain)\n            return client.chain.id;\n        const chainId_ = await getAction(client, getChainId_, 'getChainId')({});\n        chainId = chainId_;\n        return chainId;\n    }\n    // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n    // User Operation properties required to estimate the User Operation gas.\n    let isPaymasterPopulated = false;\n    if (properties.includes('paymaster') &&\n        getPaymasterStubData &&\n        !paymasterAddress &&\n        !parameters.paymasterAndData) {\n        const { isFinal = false, sponsor, ...paymasterArgs } = await getPaymasterStubData({\n            chainId: await getChainId(),\n            entryPointAddress: account.entryPoint.address,\n            context: paymasterContext,\n            ...request,\n        });\n        isPaymasterPopulated = isFinal;\n        request = {\n            ...request,\n            ...paymasterArgs,\n        };\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // `paymasterAndData` is required to be filled with EntryPoint 0.6.\n    ////////////////////////////////////////////////////////////////////////////////\n    // If no `paymasterAndData` is provided, we use an empty bytes string.\n    if (account.entryPoint.version === '0.6' && !request.paymasterAndData)\n        request.paymasterAndData = '0x';\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with gas-related properties.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (properties.includes('gas')) {\n        // If the Account has opinionated gas estimation logic, run the `estimateGas` hook and\n        // fill the request with the prepared gas properties.\n        if (account.userOperation?.estimateGas) {\n            const gas = await account.userOperation.estimateGas(request);\n            request = {\n                ...request,\n                ...gas,\n            };\n        }\n        // If not all the gas properties are already populated, we will need to estimate the gas\n        // to fill the gas properties.\n        if (typeof request.callGasLimit === 'undefined' ||\n            typeof request.preVerificationGas === 'undefined' ||\n            typeof request.verificationGasLimit === 'undefined' ||\n            (request.paymaster &&\n                typeof request.paymasterPostOpGasLimit === 'undefined') ||\n            (request.paymaster &&\n                typeof request.paymasterVerificationGasLimit === 'undefined')) {\n            const gas = await getAction(bundlerClient, estimateUserOperationGas, 'estimateUserOperationGas')({\n                account,\n                // Some Bundlers fail if nullish gas values are provided for gas estimation :') –\n                // so we will need to set a default zeroish value.\n                callGasLimit: 0n,\n                preVerificationGas: 0n,\n                verificationGasLimit: 0n,\n                stateOverride,\n                ...(request.paymaster\n                    ? {\n                        paymasterPostOpGasLimit: 0n,\n                        paymasterVerificationGasLimit: 0n,\n                    }\n                    : {}),\n                ...request,\n            });\n            request = {\n                ...request,\n                callGasLimit: request.callGasLimit ?? gas.callGasLimit,\n                preVerificationGas: request.preVerificationGas ?? gas.preVerificationGas,\n                verificationGasLimit: request.verificationGasLimit ?? gas.verificationGasLimit,\n                paymasterPostOpGasLimit: request.paymasterPostOpGasLimit ?? gas.paymasterPostOpGasLimit,\n                paymasterVerificationGasLimit: request.paymasterVerificationGasLimit ??\n                    gas.paymasterVerificationGasLimit,\n            };\n        }\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with paymaster-related properties for **sending** the User Operation.\n    ////////////////////////////////////////////////////////////////////////////////\n    // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n    // User Operation properties required to send the User Operation.\n    if (properties.includes('paymaster') &&\n        getPaymasterData &&\n        !paymasterAddress &&\n        !parameters.paymasterAndData &&\n        !isPaymasterPopulated) {\n        // Retrieve paymaster-related User Operation properties to be used for **sending** the User Operation.\n        const paymaster = await getPaymasterData({\n            chainId: await getChainId(),\n            entryPointAddress: account.entryPoint.address,\n            context: paymasterContext,\n            ...request,\n        });\n        request = {\n            ...request,\n            ...paymaster,\n        };\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // Remove redundant properties that do not conform to the User Operation schema.\n    ////////////////////////////////////////////////////////////////////////////////\n    delete request.calls;\n    delete request.parameters;\n    delete request.paymasterContext;\n    if (typeof request.paymaster !== 'string')\n        delete request.paymaster;\n    ////////////////////////////////////////////////////////////////////////////////\n    return request;\n}\n//# sourceMappingURL=prepareUserOperation.js.map","import { parseAccount, } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError, } from '../../errors/account.js';\nimport { isAddressEqual } from '../../utils/address/isAddressEqual.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { getChainId } from '../public/getChainId.js';\nimport { getTransactionCount } from '../public/getTransactionCount.js';\n/**\n * Prepares an [EIP-7702 Authorization](https://eips.ethereum.org/EIPS/eip-7702) object for signing.\n * This Action will fill the required fields of the Authorization object if they are not provided (e.g. `nonce` and `chainId`).\n *\n * With the prepared Authorization object, you can use [`signAuthorization`](https://viem.sh/docs/eip7702/signAuthorization) to sign over the Authorization object.\n *\n * @param client - Client to use\n * @param parameters - {@link PrepareAuthorizationParameters}\n * @returns The prepared Authorization object. {@link PrepareAuthorizationReturnType}\n *\n * @example\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   account: privateKeyToAccount('0x..'),\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n *\n * @example\n * // Account Hoisting\n * import { createClient, http } from 'viem'\n * import { privateKeyToAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareAuthorization } from 'viem/experimental'\n *\n * const client = createClient({\n *   account: privateKeyToAccount('0x…'),\n *   chain: mainnet,\n *   transport: http(),\n * })\n * const authorization = await prepareAuthorization(client, {\n *   contractAddress: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n * })\n */\nexport async function prepareAuthorization(client, parameters) {\n    const { account: account_ = client.account, chainId, nonce } = parameters;\n    if (!account_)\n        throw new AccountNotFoundError({\n            docsPath: '/docs/eip7702/prepareAuthorization',\n        });\n    const account = parseAccount(account_);\n    const executor = (() => {\n        if (!parameters.executor)\n            return undefined;\n        if (parameters.executor === 'self')\n            return parameters.executor;\n        return parseAccount(parameters.executor);\n    })();\n    const authorization = {\n        address: parameters.contractAddress ?? parameters.address,\n        chainId,\n        nonce,\n    };\n    if (typeof authorization.chainId === 'undefined')\n        authorization.chainId =\n            client.chain?.id ??\n                (await getAction(client, getChainId, 'getChainId')({}));\n    if (typeof authorization.nonce === 'undefined') {\n        authorization.nonce = await getAction(client, getTransactionCount, 'getTransactionCount')({\n            address: account.address,\n            blockTag: 'pending',\n        });\n        if (executor === 'self' ||\n            (executor?.address && isAddressEqual(executor.address, account.address)))\n            authorization.nonce += 1;\n    }\n    return authorization;\n}\n//# sourceMappingURL=prepareAuthorization.js.map","import { parseAccount, } from '../../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../../errors/account.js';\nimport { getAction } from '../../../utils/getAction.js';\nimport { serializeStateOverride } from '../../../utils/stateOverride.js';\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js';\nimport { formatUserOperationGas, } from '../../utils/formatters/userOperationGas.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\nimport { prepareUserOperation, } from './prepareUserOperation.js';\n/**\n * Returns an estimate of gas values necessary to execute the User Operation.\n *\n * - Docs: https://viem.sh/actions/bundler/estimateUserOperationGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateUserOperationGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateUserOperationGasReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { estimateUserOperationGas } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await estimateUserOperationGas(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function estimateUserOperationGas(client, parameters) {\n    const { account: account_ = client.account, entryPointAddress, stateOverride, } = parameters;\n    if (!account_ && !parameters.sender)\n        throw new AccountNotFoundError();\n    const account = account_ ? parseAccount(account_) : undefined;\n    const rpcStateOverride = serializeStateOverride(stateOverride);\n    const request = account\n        ? await getAction(client, prepareUserOperation, 'prepareUserOperation')({\n            ...parameters,\n            parameters: [\n                'authorization',\n                'factory',\n                'nonce',\n                'paymaster',\n                'signature',\n            ],\n        })\n        : parameters;\n    try {\n        const params = [\n            formatUserOperationRequest(request),\n            (entryPointAddress ?? account?.entryPoint?.address),\n        ];\n        const result = await client.request({\n            method: 'eth_estimateUserOperationGas',\n            params: rpcStateOverride ? [...params, rpcStateOverride] : [...params],\n        });\n        return formatUserOperationGas(result);\n    }\n    catch (error) {\n        const calls = parameters.calls;\n        throw getUserOperationError(error, {\n            ...request,\n            ...(calls ? { calls } : {}),\n        });\n    }\n}\n//# sourceMappingURL=estimateUserOperationGas.js.map","export function formatUserOperationGas(parameters) {\n    const gas = {};\n    if (parameters.callGasLimit)\n        gas.callGasLimit = BigInt(parameters.callGasLimit);\n    if (parameters.preVerificationGas)\n        gas.preVerificationGas = BigInt(parameters.preVerificationGas);\n    if (parameters.verificationGasLimit)\n        gas.verificationGasLimit = BigInt(parameters.verificationGasLimit);\n    if (parameters.paymasterPostOpGasLimit)\n        gas.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit);\n    if (parameters.paymasterVerificationGasLimit)\n        gas.paymasterVerificationGasLimit = BigInt(parameters.paymasterVerificationGasLimit);\n    return gas;\n}\n//# sourceMappingURL=userOperationGas.js.map","export function formatUserOperation(parameters) {\n    const userOperation = { ...parameters };\n    if (parameters.callGasLimit)\n        userOperation.callGasLimit = BigInt(parameters.callGasLimit);\n    if (parameters.maxFeePerGas)\n        userOperation.maxFeePerGas = BigInt(parameters.maxFeePerGas);\n    if (parameters.maxPriorityFeePerGas)\n        userOperation.maxPriorityFeePerGas = BigInt(parameters.maxPriorityFeePerGas);\n    if (parameters.nonce)\n        userOperation.nonce = BigInt(parameters.nonce);\n    if (parameters.paymasterPostOpGasLimit)\n        userOperation.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit);\n    if (parameters.paymasterVerificationGasLimit)\n        userOperation.paymasterVerificationGasLimit = BigInt(parameters.paymasterVerificationGasLimit);\n    if (parameters.preVerificationGas)\n        userOperation.preVerificationGas = BigInt(parameters.preVerificationGas);\n    if (parameters.verificationGasLimit)\n        userOperation.verificationGasLimit = BigInt(parameters.verificationGasLimit);\n    return userOperation;\n}\n//# sourceMappingURL=userOperation.js.map","import { UserOperationReceiptNotFoundError, } from '../../errors/userOperation.js';\nimport { formatUserOperationReceipt } from '../../utils/formatters/userOperationReceipt.js';\n/**\n * Returns the User Operation Receipt given a User Operation hash.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationReceiptParameters}\n * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperationReceipt } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperationReceipt(client, { hash }) {\n    const receipt = await client.request({\n        method: 'eth_getUserOperationReceipt',\n        params: [hash],\n    }, { dedupe: true });\n    if (!receipt)\n        throw new UserOperationReceiptNotFoundError({ hash });\n    return formatUserOperationReceipt(receipt);\n}\n//# sourceMappingURL=getUserOperationReceipt.js.map","import { formatLog } from '../../../utils/formatters/log.js';\nimport { formatTransactionReceipt } from '../../../utils/formatters/transactionReceipt.js';\nexport function formatUserOperationReceipt(parameters) {\n    const receipt = { ...parameters };\n    if (parameters.actualGasCost)\n        receipt.actualGasCost = BigInt(parameters.actualGasCost);\n    if (parameters.actualGasUsed)\n        receipt.actualGasUsed = BigInt(parameters.actualGasUsed);\n    if (parameters.logs)\n        receipt.logs = parameters.logs.map((log) => formatLog(log));\n    if (parameters.receipt)\n        receipt.receipt = formatTransactionReceipt(receipt.receipt);\n    return receipt;\n}\n//# sourceMappingURL=userOperationReceipt.js.map","import { getChainId, } from '../../../actions/public/getChainId.js';\nimport { estimateUserOperationGas, } from '../../actions/bundler/estimateUserOperationGas.js';\nimport { getSupportedEntryPoints, } from '../../actions/bundler/getSupportedEntryPoints.js';\nimport { getUserOperation, } from '../../actions/bundler/getUserOperation.js';\nimport { getUserOperationReceipt, } from '../../actions/bundler/getUserOperationReceipt.js';\nimport { prepareUserOperation, } from '../../actions/bundler/prepareUserOperation.js';\nimport { sendUserOperation, } from '../../actions/bundler/sendUserOperation.js';\nimport { waitForUserOperationReceipt, } from '../../actions/bundler/waitForUserOperationReceipt.js';\nexport function bundlerActions(client) {\n    return {\n        estimateUserOperationGas: (parameters) => estimateUserOperationGas(client, parameters),\n        getChainId: () => getChainId(client),\n        getSupportedEntryPoints: () => getSupportedEntryPoints(client),\n        getUserOperation: (parameters) => getUserOperation(client, parameters),\n        getUserOperationReceipt: (parameters) => getUserOperationReceipt(client, parameters),\n        prepareUserOperation: (parameters) => prepareUserOperation(client, parameters),\n        sendUserOperation: (parameters) => sendUserOperation(client, parameters),\n        waitForUserOperationReceipt: (parameters) => waitForUserOperationReceipt(client, parameters),\n    };\n}\n//# sourceMappingURL=bundler.js.map","/**\n * Returns the EntryPoints that the bundler supports.\n *\n * - Docs: https://viem.sh/actions/bundler/getSupportedEntryPoints\n *\n * @param client - Client to use\n * @param parameters - {@link GetSupportedEntryPointsParameters}\n * @returns Supported Entry Points. {@link GetSupportedEntryPointsReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getSupportedEntryPoints } from 'viem/actions'\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const addresses = await getSupportedEntryPoints(bundlerClient)\n */\nexport function getSupportedEntryPoints(client) {\n    return client.request({ method: 'eth_supportedEntryPoints' });\n}\n//# sourceMappingURL=getSupportedEntryPoints.js.map","import { UserOperationNotFoundError, } from '../../errors/userOperation.js';\nimport { formatUserOperation } from '../../utils/formatters/userOperation.js';\n/**\n * Retrieves information about a User Operation given a hash.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/bundler/getUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationParameters}\n * @returns The receipt. {@link GetUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperation } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperation(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperation(client, { hash }) {\n    const result = await client.request({\n        method: 'eth_getUserOperationByHash',\n        params: [hash],\n    }, { dedupe: true });\n    if (!result)\n        throw new UserOperationNotFoundError({ hash });\n    const { blockHash, blockNumber, entryPoint, transactionHash, userOperation } = result;\n    return {\n        blockHash,\n        blockNumber: BigInt(blockNumber),\n        entryPoint,\n        transactionHash,\n        userOperation: formatUserOperation(userOperation),\n    };\n}\n//# sourceMappingURL=getUserOperation.js.map","import { parseAccount } from '../../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../../errors/account.js';\nimport { getAction } from '../../../utils/getAction.js';\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\nimport { prepareUserOperation, } from './prepareUserOperation.js';\n/**\n * Broadcasts a User Operation to the Bundler.\n *\n * - Docs: https://viem.sh/actions/bundler/sendUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link SendUserOperationParameters}\n * @returns The User Operation hash. {@link SendUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { toSmartAccount } from 'viem/accounts'\n * import { sendUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await sendUserOperation(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function sendUserOperation(client, parameters) {\n    const { account: account_ = client.account, entryPointAddress } = parameters;\n    if (!account_ && !parameters.sender)\n        throw new AccountNotFoundError();\n    const account = account_ ? parseAccount(account_) : undefined;\n    const request = account\n        ? await getAction(client, prepareUserOperation, 'prepareUserOperation')(parameters)\n        : parameters;\n    const signature = (parameters.signature ||\n        (await account?.signUserOperation?.(request)));\n    const rpcParameters = formatUserOperationRequest({\n        ...request,\n        signature,\n    });\n    try {\n        return await client.request({\n            method: 'eth_sendUserOperation',\n            params: [\n                rpcParameters,\n                (entryPointAddress ?? account?.entryPoint?.address),\n            ],\n        }, { retryCount: 0 });\n    }\n    catch (error) {\n        const calls = parameters.calls;\n        throw getUserOperationError(error, {\n            ...request,\n            ...(calls ? { calls } : {}),\n            signature,\n        });\n    }\n}\n//# sourceMappingURL=sendUserOperation.js.map","import { getAction } from '../../../utils/getAction.js';\nimport { observe } from '../../../utils/observe.js';\nimport { poll } from '../../../utils/poll.js';\nimport { stringify } from '../../../utils/stringify.js';\nimport { WaitForUserOperationReceiptTimeoutError, } from '../../errors/userOperation.js';\nimport { getUserOperationReceipt, } from './getUserOperationReceipt.js';\n/**\n * Waits for the User Operation to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the User Operation receipt.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/waitForUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForUserOperationReceiptParameters}\n * @returns The receipt. {@link WaitForUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForUserOperationReceipt } from 'viem/actions'\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await waitForUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport function waitForUserOperationReceipt(client, parameters) {\n    const { hash, pollingInterval = client.pollingInterval, retryCount, timeout = 120_000, } = parameters;\n    let count = 0;\n    const observerId = stringify([\n        'waitForUserOperationReceipt',\n        client.uid,\n        hash,\n    ]);\n    return new Promise((resolve, reject) => {\n        const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n            const done = (fn) => {\n                unpoll();\n                fn();\n                unobserve();\n            };\n            const unpoll = poll(async () => {\n                if (retryCount && count >= retryCount)\n                    done(() => emit.reject(new WaitForUserOperationReceiptTimeoutError({ hash })));\n                try {\n                    const receipt = await getAction(client, getUserOperationReceipt, 'getUserOperationReceipt')({ hash });\n                    done(() => emit.resolve(receipt));\n                }\n                catch (err) {\n                    const error = err;\n                    if (error.name !== 'UserOperationReceiptNotFoundError')\n                        done(() => emit.reject(error));\n                }\n                count++;\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            if (timeout)\n                setTimeout(() => done(() => emit.reject(new WaitForUserOperationReceiptTimeoutError({ hash }))), timeout);\n            return unpoll;\n        });\n    });\n}\n//# sourceMappingURL=waitForUserOperationReceipt.js.map","export const entryPoint06Address = '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789';\nexport const entryPoint07Address = '0x0000000071727De22E5E9d8BAf0edAc6f37da032';\nexport const entryPoint08Address = '0x4337084D9E255Ff0702461CF8895CE9E3b5Ff108';\n//# sourceMappingURL=address.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const abey = /*#__PURE__*/ defineChain({\n    id: 179,\n    name: 'ABEY Mainnet',\n    nativeCurrency: { name: 'ABEY', symbol: 'ABEY', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.abeychain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Abey Scan',\n            url: 'https://abeyscan.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=abey.js.map","import { maxUint16 } from '../../constants/number.js';\nexport const gasPerPubdataDefault = 50000n;\nexport const maxBytecodeSize = maxUint16 * 32n;\nexport const requiredL1ToL2GasPerPubdataLimit = 800n;\n//# sourceMappingURL=number.js.map","import { hexToBigInt, hexToNumber } from '../utils/encoding/fromHex.js';\nimport { hexToBytes } from '../utils/encoding/toBytes.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { formatLog } from '../utils/formatters/log.js';\nimport { defineTransaction } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js';\nimport { gasPerPubdataDefault } from './constants/number.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatters.transaction?.format(transaction);\n                if (formatted.typeHex === '0x71')\n                    formatted.type = 'eip712';\n                else if (formatted.typeHex === '0xff')\n                    formatted.type = 'priority';\n                return formatted;\n            });\n            return {\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTimestamp: args.l1BatchTimestamp\n                    ? hexToBigInt(args.l1BatchTimestamp)\n                    : null,\n                transactions,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x71')\n                transaction.type = 'eip712';\n            else if (args.type === '0xff')\n                transaction.type = 'priority';\n            return {\n                ...transaction,\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTxIndex: args.l1BatchTxIndex\n                    ? hexToBigInt(args.l1BatchTxIndex)\n                    : null,\n            };\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1BatchNumber: args.l1BatchNumber\n                    ? hexToBigInt(args.l1BatchNumber)\n                    : null,\n                l1BatchTxIndex: args.l1BatchTxIndex\n                    ? hexToBigInt(args.l1BatchTxIndex)\n                    : null,\n                logs: args.logs.map((log) => {\n                    return {\n                        ...formatLog(log),\n                        l1BatchNumber: log.l1BatchNumber\n                            ? hexToBigInt(log.l1BatchNumber)\n                            : null,\n                        transactionLogIndex: hexToNumber(log.transactionLogIndex),\n                        logType: log.logType,\n                    };\n                }),\n                l2ToL1Logs: args.l2ToL1Logs.map((l2ToL1Log) => {\n                    return {\n                        blockNumber: hexToBigInt(l2ToL1Log.blockHash),\n                        blockHash: l2ToL1Log.blockHash,\n                        l1BatchNumber: l2ToL1Log.l1BatchNumber\n                            ? hexToBigInt(l2ToL1Log.l1BatchNumber)\n                            : null,\n                        transactionIndex: hexToBigInt(l2ToL1Log.transactionIndex),\n                        shardId: hexToBigInt(l2ToL1Log.shardId),\n                        isService: l2ToL1Log.isService,\n                        sender: l2ToL1Log.sender,\n                        key: l2ToL1Log.key,\n                        value: l2ToL1Log.value,\n                        transactionHash: l2ToL1Log.transactionHash,\n                        logIndex: hexToBigInt(l2ToL1Log.logIndex),\n                    };\n                }),\n            };\n        },\n    }),\n    transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n        exclude: [\n            'customSignature',\n            'factoryDeps',\n            'gasPerPubdata',\n            'paymaster',\n            'paymasterInput',\n        ],\n        format(args) {\n            if (args.gasPerPubdata ||\n                (args.paymaster && args.paymasterInput) ||\n                args.factoryDeps ||\n                args.customSignature)\n                return {\n                    eip712Meta: {\n                        ...(args.gasPerPubdata\n                            ? { gasPerPubdata: toHex(args.gasPerPubdata) }\n                            : { gasPerPubdata: toHex(gasPerPubdataDefault) }),\n                        ...(args.paymaster && args.paymasterInput\n                            ? {\n                                paymasterParams: {\n                                    paymaster: args.paymaster,\n                                    paymasterInput: Array.from(hexToBytes(args.paymasterInput)),\n                                },\n                            }\n                            : {}),\n                        ...(args.factoryDeps\n                            ? {\n                                factoryDeps: args.factoryDeps.map((dep) => Array.from(hexToBytes(dep))),\n                            }\n                            : {}),\n                        ...(args.customSignature\n                            ? {\n                                customSignature: Array.from(hexToBytes(args.customSignature)),\n                            }\n                            : {}),\n                    },\n                    type: '0x71',\n                };\n            return {};\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { BaseError } from '../../errors/base.js';\nexport class InvalidEip712TransactionError extends BaseError {\n    constructor() {\n        super([\n            'Transaction is not an EIP712 transaction.',\n            '',\n            'Transaction must:',\n            '  - include `type: \"eip712\"`',\n            '  - include one of the following: `customSignature`, `paymaster`, `paymasterInput`, `gasPerPubdata`, `factoryDeps`',\n        ].join('\\n'), { name: 'InvalidEip712TransactionError' });\n    }\n}\n//# sourceMappingURL=transaction.js.map","export function isEIP712Transaction(transaction) {\n    if (transaction.type === 'eip712')\n        return true;\n    if (('customSignature' in transaction && transaction.customSignature) ||\n        ('paymaster' in transaction && transaction.paymaster) ||\n        ('paymasterInput' in transaction && transaction.paymasterInput) ||\n        ('gasPerPubdata' in transaction &&\n            typeof transaction.gasPerPubdata === 'bigint') ||\n        ('factoryDeps' in transaction && transaction.factoryDeps))\n        return true;\n    return false;\n}\n//# sourceMappingURL=isEip712Transaction.js.map","import { InvalidAddressError } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { InvalidChainIdError } from '../../errors/chain.js';\nimport { isAddress } from '../../utils/address/isAddress.js';\nimport { InvalidEip712TransactionError } from '../errors/transaction.js';\nimport { isEIP712Transaction } from './isEip712Transaction.js';\nexport function assertEip712Transaction(transaction) {\n    const { chainId, to, from, paymaster, paymasterInput } = transaction;\n    if (!isEIP712Transaction(transaction))\n        throw new InvalidEip712TransactionError();\n    if (!chainId || chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (paymaster && !isAddress(paymaster))\n        throw new InvalidAddressError({ address: paymaster });\n    if (paymaster && !paymasterInput) {\n        throw new BaseError('`paymasterInput` must be provided when `paymaster` is defined');\n    }\n    if (!paymaster && paymasterInput) {\n        throw new BaseError('`paymaster` must be provided when `paymasterInput` is defined');\n    }\n}\n//# sourceMappingURL=assertEip712Transaction.js.map","import { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_ } from '../utils/transaction/serializeTransaction.js';\nimport { gasPerPubdataDefault } from './constants/number.js';\nimport { assertEip712Transaction } from './utils/assertEip712Transaction.js';\nimport { isEIP712Transaction } from './utils/isEip712Transaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isEIP712Transaction(transaction))\n        return serializeTransactionEIP712(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionEIP712(transaction) {\n    const { chainId, gas, nonce, to, from, value, maxFeePerGas, maxPriorityFeePerGas, customSignature, factoryDeps, paymaster, paymasterInput, gasPerPubdata, data, } = transaction;\n    assertEip712Transaction(transaction);\n    const serializedTransaction = [\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        toHex(chainId),\n        toHex(''),\n        toHex(''),\n        toHex(chainId),\n        from ?? '0x',\n        gasPerPubdata ? toHex(gasPerPubdata) : toHex(gasPerPubdataDefault),\n        factoryDeps ?? [],\n        customSignature ?? '0x', // EIP712 signature\n        paymaster && paymasterInput ? [paymaster, paymasterInput] : [],\n    ];\n    return concatHex([\n        '0x71',\n        toRlp(serializedTransaction),\n    ]);\n}\n//# sourceMappingURL=serializers.js.map","import { BaseError } from '../../errors/base.js';\nexport class BytecodeLengthExceedsMaxSizeError extends BaseError {\n    constructor({ givenLength, maxBytecodeSize, }) {\n        super(`Bytecode cannot be longer than ${maxBytecodeSize} bytes. Given length: ${givenLength}`, { name: 'BytecodeLengthExceedsMaxSizeError' });\n    }\n}\nexport class BytecodeLengthInWordsMustBeOddError extends BaseError {\n    constructor({ givenLengthInWords }) {\n        super(`Bytecode length in 32-byte words must be odd. Given length in words: ${givenLengthInWords}`, { name: 'BytecodeLengthInWordsMustBeOddError' });\n    }\n}\nexport class BytecodeLengthMustBeDivisibleBy32Error extends BaseError {\n    constructor({ givenLength }) {\n        super(`The bytecode length in bytes must be divisible by 32. Given length: ${givenLength}`, { name: 'BytecodeLengthMustBeDivisibleBy32Error' });\n    }\n}\n//# sourceMappingURL=bytecode.js.map","import { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nimport { getEip712Domain } from './utils/getEip712Domain.js';\nexport const chainConfig = {\n    blockTime: 1_000,\n    formatters,\n    serializers,\n    custom: {\n        getEip712Domain,\n    },\n};\n//# sourceMappingURL=chainConfig.js.map","import { toHex } from '../../utils/encoding/toHex.js';\nimport { gasPerPubdataDefault } from '../constants/number.js';\nimport { assertEip712Transaction } from './assertEip712Transaction.js';\nimport { hashBytecode } from './hashBytecode.js';\nexport const getEip712Domain = (transaction) => {\n    assertEip712Transaction(transaction);\n    const message = transactionToMessage(transaction);\n    return {\n        domain: {\n            name: 'zkSync',\n            version: '2',\n            chainId: transaction.chainId,\n        },\n        types: {\n            Transaction: [\n                { name: 'txType', type: 'uint256' },\n                { name: 'from', type: 'uint256' },\n                { name: 'to', type: 'uint256' },\n                { name: 'gasLimit', type: 'uint256' },\n                { name: 'gasPerPubdataByteLimit', type: 'uint256' },\n                { name: 'maxFeePerGas', type: 'uint256' },\n                { name: 'maxPriorityFeePerGas', type: 'uint256' },\n                { name: 'paymaster', type: 'uint256' },\n                { name: 'nonce', type: 'uint256' },\n                { name: 'value', type: 'uint256' },\n                { name: 'data', type: 'bytes' },\n                { name: 'factoryDeps', type: 'bytes32[]' },\n                { name: 'paymasterInput', type: 'bytes' },\n            ],\n        },\n        primaryType: 'Transaction',\n        message: message,\n    };\n};\n//////////////////////////////////////////////////////////////////////////////\n// Utilities\nfunction transactionToMessage(transaction) {\n    const { gas, nonce, to, from, value, maxFeePerGas, maxPriorityFeePerGas, factoryDeps, paymaster, paymasterInput, gasPerPubdata, data, } = transaction;\n    return {\n        txType: 113n,\n        from: BigInt(from),\n        to: to ? BigInt(to) : 0n,\n        gasLimit: gas ?? 0n,\n        gasPerPubdataByteLimit: gasPerPubdata ?? gasPerPubdataDefault,\n        maxFeePerGas: maxFeePerGas ?? 0n,\n        maxPriorityFeePerGas: maxPriorityFeePerGas ?? 0n,\n        paymaster: paymaster ? BigInt(paymaster) : 0n,\n        nonce: nonce ? BigInt(nonce) : 0n,\n        value: value ?? 0n,\n        data: data ?? '0x',\n        factoryDeps: factoryDeps?.map((dep) => toHex(hashBytecode(dep))) ?? [],\n        paymasterInput: paymasterInput ? paymasterInput : '0x',\n    };\n}\n//# sourceMappingURL=getEip712Domain.js.map","import { pad } from '../../utils/data/pad.js';\nimport { toBytes } from '../../utils/encoding/toBytes.js';\nimport { sha256 } from '../../utils/hash/sha256.js';\nimport { maxBytecodeSize } from '../constants/number.js';\nimport { BytecodeLengthExceedsMaxSizeError, BytecodeLengthInWordsMustBeOddError, BytecodeLengthMustBeDivisibleBy32Error, } from '../errors/bytecode.js';\nexport function hashBytecode(bytecode) {\n    const bytecodeBytes = toBytes(bytecode);\n    if (bytecodeBytes.length % 32 !== 0)\n        throw new BytecodeLengthMustBeDivisibleBy32Error({\n            givenLength: bytecodeBytes.length,\n        });\n    if (bytecodeBytes.length > maxBytecodeSize)\n        throw new BytecodeLengthExceedsMaxSizeError({\n            givenLength: bytecodeBytes.length,\n            maxBytecodeSize,\n        });\n    const hashStr = sha256(bytecodeBytes);\n    const hash = toBytes(hashStr);\n    // Note that the length of the bytecode\n    // should be provided in 32-byte words.\n    const bytecodeLengthInWords = bytecodeBytes.length / 32;\n    if (bytecodeLengthInWords % 2 === 0) {\n        throw new BytecodeLengthInWordsMustBeOddError({\n            givenLengthInWords: bytecodeLengthInWords,\n        });\n    }\n    const bytecodeLength = toBytes(bytecodeLengthInWords);\n    // The bytecode should always take the first 2 bytes of the bytecode hash,\n    // so we pad it from the left in case the length is smaller than 2 bytes.\n    const bytecodeLengthPadded = pad(bytecodeLength, { size: 2 });\n    const codeHashVersion = new Uint8Array([1, 0]);\n    hash.set(codeHashVersion, 0);\n    hash.set(bytecodeLengthPadded, 2);\n    return hash;\n}\n//# sourceMappingURL=hashBytecode.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const abstract = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 2_741,\n    name: 'Abstract',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://api.mainnet.abs.xyz'],\n            webSocket: ['wss://api.mainnet.abs.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://abscan.org',\n        },\n        native: {\n            name: 'Abstract Explorer',\n            url: 'https://explorer.mainnet.abs.xyz',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xAa4De41dba0Ca5dCBb288b7cC6b708F3aaC759E7',\n            blockCreated: 5288,\n        },\n        universalSignatureVerifier: {\n            address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n            blockCreated: 5263,\n        },\n    },\n});\n//# sourceMappingURL=abstract.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const abstractTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 11_124,\n    name: 'Abstract Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.testnet.abs.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia.abscan.org',\n        },\n        native: {\n            name: 'Abstract Explorer',\n            url: 'https://explorer.testnet.abs.xyz',\n        },\n    },\n    testnet: true,\n    contracts: {\n        multicall3: {\n            address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n            blockCreated: 358349,\n        },\n        universalSignatureVerifier: {\n            address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n            blockCreated: 431682,\n        },\n    },\n});\n//# sourceMappingURL=abstractTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const acala = /*#__PURE__*/ defineChain({\n    id: 787,\n    name: 'Acala',\n    network: 'acala',\n    nativeCurrency: {\n        name: 'Acala',\n        symbol: 'ACA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://eth-rpc-acala.aca-api.network'],\n            webSocket: ['wss://eth-rpc-acala.aca-api.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Acala Blockscout',\n            url: 'https://blockscout.acala.network',\n            apiUrl: 'https://blockscout.acala.network/api',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=acala.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const acria = /*#__PURE__*/ defineChain({\n    id: 47,\n    name: 'Acria IntelliChain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ACRIA',\n        symbol: 'ACRIA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://aic.acria.ai'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Acria Explorer',\n            url: 'https://explorer.acria.ai',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=acria.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const adf = /*#__PURE__*/ defineChain({\n    id: 1215,\n    name: 'ADF Chain',\n    nativeCurrency: { name: 'ADDFILL', symbol: 'ADF', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.adftechnology.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ADF Mainnet Explorer',\n            url: 'https://explorer.adftechnology.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=adf.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const aioz = /*#__PURE__*/ defineChain({\n    id: 168,\n    name: 'AIOZ Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'AIOZ',\n        symbol: 'AIOZ',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://eth-dataseed.aioz.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'AIOZ Explorer',\n            url: 'https://explorer.aioz.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=aioz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const alephZero = /*#__PURE__*/ defineChain({\n    id: 41_455,\n    name: 'Aleph Zero',\n    nativeCurrency: { name: 'Aleph Zero', symbol: 'AZERO', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.alephzero.raas.gelato.cloud'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Aleph Zero EVM Explorer',\n            url: 'https://evm-explorer.alephzero.org',\n            apiUrl: 'https://evm-explorer.alephzero.org/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4603377,\n        },\n    },\n});\n//# sourceMappingURL=alephZero.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const alephZeroTestnet = /*#__PURE__*/ defineChain({\n    id: 2039,\n    name: 'Aleph Zero Testnet',\n    nativeCurrency: { name: 'TZERO', symbol: 'TZERO', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.alephzero-testnet.gelato.digital'],\n            webSocket: ['wss://ws.alephzero-testnet.gelato.digital'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Aleph Zero EVM Testnet explorer',\n            url: 'https://evm-explorer-testnet.alephzero.org',\n            apiUrl: 'https://evm-explorer-testnet.alephzero.org/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 2861745,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=alephZeroTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const alienx = /*#__PURE__*/ defineChain({\n    id: 10241024,\n    name: 'AlienX Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.alienxchain.io/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'AlienX Explorer',\n            url: 'https://explorer.alienxchain.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=alienX.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const alienxHalTestnet = /*#__PURE__*/ defineChain({\n    id: 10241025,\n    name: 'ALIENX Hal Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://hal-rpc.alienxchain.io/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'AlienX Explorer',\n            url: 'https://hal-explorer.alienxchain.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=alienXHalTestnet.js.map","/**\n * Predeploy contracts for OP Stack.\n * @see https://github.com/ethereum-optimism/optimism/blob/develop/specs/predeploys.md\n */\nexport const contracts = {\n    gasPriceOracle: { address: '0x420000000000000000000000000000000000000F' },\n    l1Block: { address: '0x4200000000000000000000000000000000000015' },\n    l2CrossDomainMessenger: {\n        address: '0x4200000000000000000000000000000000000007',\n    },\n    l2Erc721Bridge: { address: '0x4200000000000000000000000000000000000014' },\n    l2StandardBridge: { address: '0x4200000000000000000000000000000000000010' },\n    l2ToL1MessagePasser: {\n        address: '0x4200000000000000000000000000000000000016',\n    },\n};\n//# sourceMappingURL=contracts.js.map","import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction, } from '../utils/formatters/transaction.js';\nimport { defineTransactionReceipt } from '../utils/formatters/transactionReceipt.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatTransaction(transaction);\n                if (formatted.typeHex === '0x7e') {\n                    formatted.isSystemTx = transaction.isSystemTx;\n                    formatted.mint = transaction.mint\n                        ? hexToBigInt(transaction.mint)\n                        : undefined;\n                    formatted.sourceHash = transaction.sourceHash;\n                    formatted.type = 'deposit';\n                }\n                return formatted;\n            });\n            return {\n                transactions,\n                stateRoot: args.stateRoot,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            const transaction = {};\n            if (args.type === '0x7e') {\n                transaction.isSystemTx = args.isSystemTx;\n                transaction.mint = args.mint ? hexToBigInt(args.mint) : undefined;\n                transaction.sourceHash = args.sourceHash;\n                transaction.type = 'deposit';\n            }\n            return transaction;\n        },\n    }),\n    transactionReceipt: /*#__PURE__*/ defineTransactionReceipt({\n        format(args) {\n            return {\n                l1GasPrice: args.l1GasPrice ? hexToBigInt(args.l1GasPrice) : null,\n                l1GasUsed: args.l1GasUsed ? hexToBigInt(args.l1GasUsed) : null,\n                l1Fee: args.l1Fee ? hexToBigInt(args.l1Fee) : null,\n                l1FeeScalar: args.l1FeeScalar ? Number(args.l1FeeScalar) : null,\n            };\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { InvalidAddressError } from '../errors/address.js';\nimport { isAddress } from '../utils/address/isAddress.js';\nimport { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeTransaction as serializeTransaction_, } from '../utils/transaction/serializeTransaction.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isDeposit(transaction))\n        return serializeTransactionDeposit(transaction);\n    return serializeTransaction_(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionDeposit(transaction) {\n    assertTransactionDeposit(transaction);\n    const { sourceHash, data, from, gas, isSystemTx, mint, to, value } = transaction;\n    const serializedTransaction = [\n        sourceHash,\n        from,\n        to ?? '0x',\n        mint ? toHex(mint) : '0x',\n        value ? toHex(value) : '0x',\n        gas ? toHex(gas) : '0x',\n        isSystemTx ? '0x1' : '0x',\n        data ?? '0x',\n    ];\n    return concatHex([\n        '0x7e',\n        toRlp(serializedTransaction),\n    ]);\n}\nfunction isDeposit(transaction) {\n    if (transaction.type === 'deposit')\n        return true;\n    if (typeof transaction.sourceHash !== 'undefined')\n        return true;\n    return false;\n}\nexport function assertTransactionDeposit(transaction) {\n    const { from, to } = transaction;\n    if (from && !isAddress(from))\n        throw new InvalidAddressError({ address: from });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n}\n//# sourceMappingURL=serializers.js.map","import { contracts } from './contracts.js';\nimport { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nexport const chainConfig = {\n    blockTime: 2_000,\n    contracts,\n    formatters,\n    serializers,\n};\n//# sourceMappingURL=chainConfig.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const ancient8 = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 888888888,\n    name: 'Ancient8',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.ancient8.gg'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ancient8 explorer',\n            url: 'https://scan.ancient8.gg',\n            apiUrl: 'https://scan.ancient8.gg/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xB09DC08428C8b4EFB4ff9C0827386CDF34277996',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x639F2AECE398Aa76b07e59eF6abe2cFe32bacb68',\n                blockCreated: 19070571,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xd5e3eDf5b68135D559D572E26bF863FBC1950033',\n                blockCreated: 19070571,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=ancient8.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const ancient8Sepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 28122024,\n    name: 'Ancient8 Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpcv2-testnet.ancient8.gg'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ancient8 Celestia Testnet explorer',\n            url: 'https://scanv2-testnet.ancient8.gg',\n            apiUrl: 'https://scanv2-testnet.ancient8.gg/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x942fD5017c0F60575930D8574Eaca13BEcD6e1bB',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xfa1d9E26A6aCD7b22115D27572c1221B9803c960',\n                blockCreated: 4972908,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xF6Bc0146d3c74D48306e79Ae134A260E418C9335',\n                blockCreated: 4972908,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=ancient8Sepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const anvil = /*#__PURE__*/ defineChain({\n    id: 31_337,\n    name: 'Anvil',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['http://127.0.0.1:8545'],\n            webSocket: ['ws://127.0.0.1:8545'],\n        },\n    },\n});\n//# sourceMappingURL=anvil.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 42_161; // Arbitrum One\nexport const apeChain = /*#__PURE__*/ defineChain({\n    id: 33139,\n    name: 'Ape Chain',\n    nativeCurrency: {\n        name: 'ApeCoin',\n        symbol: 'APE',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.apechain.com/http'],\n            webSocket: ['wss://rpc.apechain.com/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Apescan',\n            url: 'https://apescan.io',\n            apiUrl: 'https://api.apescan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 20889,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=apeChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const apexTestnet = /*#__PURE__*/ defineChain({\n    id: 3993,\n    name: 'APEX Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet.apexlayer.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://exp-testnet.apexlayer.xyz',\n            apiUrl: 'https://exp-testnet.apexlayer.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xf7642be33a6b18D16a995657adb5a68CD0438aE2',\n            blockCreated: 283775,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=apexTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arbitrum = /*#__PURE__*/ defineChain({\n    id: 42_161,\n    name: 'Arbitrum One',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://arb1.arbitrum.io/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arbiscan',\n            url: 'https://arbiscan.io',\n            apiUrl: 'https://api.arbiscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 7654707,\n        },\n    },\n});\n//# sourceMappingURL=arbitrum.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arbitrumGoerli = /*#__PURE__*/ defineChain({\n    id: 421_613,\n    name: 'Arbitrum Goerli',\n    nativeCurrency: {\n        name: 'Arbitrum Goerli Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://goerli-rollup.arbitrum.io/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arbiscan',\n            url: 'https://goerli.arbiscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 88114,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=arbitrumGoerli.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arbitrumNova = /*#__PURE__*/ defineChain({\n    id: 42_170,\n    name: 'Arbitrum Nova',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://nova.arbitrum.io/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arbiscan',\n            url: 'https://nova.arbiscan.io',\n            apiUrl: 'https://api-nova.arbiscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1746963,\n        },\n    },\n});\n//# sourceMappingURL=arbitrumNova.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arbitrumSepolia = /*#__PURE__*/ defineChain({\n    id: 421_614,\n    name: 'Arbitrum Sepolia',\n    nativeCurrency: {\n        name: 'Arbitrum Sepolia Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia-rollup.arbitrum.io/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arbiscan',\n            url: 'https://sepolia.arbiscan.io',\n            apiUrl: 'https://api-sepolia.arbiscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 81930,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=arbitrumSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arenaz = /*#__PURE__*/ defineChain({\n    id: 7897,\n    name: 'Arena-Z',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.arena-z.gg'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arena-Z Explorer',\n            url: 'https://explorer.arena-z.gg',\n            apiUrl: 'https://explorer.arena-z.gg',\n        },\n    },\n});\n//# sourceMappingURL=arenaz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const areonNetwork = /*#__PURE__*/ defineChain({\n    id: 463,\n    name: 'Areon Network',\n    nativeCurrency: { decimals: 18, name: 'AREA', symbol: 'AREA' },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet-rpc.areon.network'],\n            webSocket: ['wss://mainnet-ws.areon.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Areonscan',\n            url: 'https://areonscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 353286,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=areonNetwork.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const areonNetworkTestnet = /*#__PURE__*/ defineChain({\n    id: 462,\n    name: 'Areon Network Testnet',\n    nativeCurrency: { decimals: 18, name: 'TAREA', symbol: 'TAREA' },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.areon.network'],\n            webSocket: ['wss://testnet-ws.areon.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Areonscan',\n            url: 'https://areonscan.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=areonNetworkTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const artelaTestnet = /*#__PURE__*/ defineChain({\n    id: 11822,\n    name: 'Artela Testnet',\n    nativeCurrency: { name: 'ART', symbol: 'ART', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://betanet-rpc1.artela.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Artela',\n            url: 'https://betanet-scan.artela.network',\n            apiUrl: 'https://betanet-scan.artela.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xd07c8635f76e8745Ee7092fbb6e8fbc5FeF09DD7',\n            blockCreated: 7001871,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=artelaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const arthera = /*#__PURE__*/ defineChain({\n    id: 10242,\n    name: 'Arthera',\n    nativeCurrency: { name: 'Arthera', symbol: 'AA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.arthera.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arthera EVM Explorer',\n            url: 'https://explorer.arthera.net',\n            apiUrl: 'https://explorer.arthera.net/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4502791,\n        },\n    },\n});\n//# sourceMappingURL=arthera.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const artheraTestnet = /*#__PURE__*/ defineChain({\n    id: 10243,\n    name: 'Arthera Testnet',\n    nativeCurrency: { name: 'Arthera', symbol: 'AA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-test.arthera.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Arthera EVM Explorer',\n            url: 'https://explorer-test.arthera.net',\n            apiUrl: 'https://explorer-test.arthera.net/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 22051,\n        },\n    },\n});\n//# sourceMappingURL=artheraTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const assetChain = /*#__PURE__*/ defineChain({\n    id: 42_420,\n    name: 'AssetChain Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Real World Asset',\n        symbol: 'RWA',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet-rpc.assetchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Asset Chain Explorer',\n            url: 'https://scan.assetchain.org',\n            apiUrl: 'https://scan.assetchain.org/api',\n        },\n    },\n    testnet: false,\n    contracts: {},\n});\n//# sourceMappingURL=assetChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const assetChainTestnet = /*#__PURE__*/ defineChain({\n    id: 42_421,\n    name: 'AssetChain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Real World Asset',\n        symbol: 'RWA',\n    },\n    rpcUrls: {\n        default: { http: ['https://enugu-rpc.assetchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Asset Chain Testnet Explorer',\n            url: 'https://scan-testnet.assetchain.org',\n            apiUrl: 'https://scan-testnet.assetchain.org/api',\n        },\n    },\n    testnet: true,\n    contracts: {\n        multicall3: {\n            address: '0x989F832D35988cb5e3eB001Fa2Fe789469EC31Ea',\n            blockCreated: 17177,\n        },\n    },\n});\n//# sourceMappingURL=assetChainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const astar = /*#__PURE__*/ defineChain({\n    id: 592,\n    name: 'Astar',\n    network: 'astar-mainnet',\n    nativeCurrency: {\n        name: 'Astar',\n        symbol: 'ASTR',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://astar.api.onfinality.io/public'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Astar Subscan',\n            url: 'https://astar.subscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 761794,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=astar.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const astarZkEVM = /*#__PURE__*/ defineChain({\n    id: 3_776,\n    name: 'Astar zkEVM',\n    network: 'AstarZkEVM',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-zkevm.astar.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Astar zkEVM Explorer',\n            url: 'https://astar-zkevm.explorer.startale.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 93528,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=astarZkEVM.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const astarZkyoto = /*#__PURE__*/ defineChain({\n    id: 6_038_361,\n    name: 'Astar zkEVM Testnet zKyoto',\n    network: 'zKyoto',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.startale.com/zkyoto'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'zKyoto Explorer',\n            url: 'https://zkyoto.explorer.startale.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 196153,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=astarZkyoto.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const atletaOlympia = /*#__PURE__*/ defineChain({\n    id: 2340,\n    name: 'Atleta Olympia',\n    nativeCurrency: { decimals: 18, name: 'Atla', symbol: 'ATLA' },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://testnet-rpc.atleta.network:9944',\n                'https://testnet-rpc.atleta.network',\n            ],\n            ws: ['wss://testnet-rpc.atleta.network:9944'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Atleta Olympia Explorer',\n            url: 'https://blockscout.atleta.network',\n            apiUrl: 'https://blockscout.atleta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x1472ec6392180fb84F345d2455bCC75B26577115',\n            blockCreated: 1076473,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=atletaOlympia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const aurora = /*#__PURE__*/ defineChain({\n    id: 1313161554,\n    name: 'Aurora',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.aurora.dev'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Aurorascan',\n            url: 'https://aurorascan.dev',\n            apiUrl: 'https://aurorascan.dev/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 62907816,\n        },\n    },\n});\n//# sourceMappingURL=aurora.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const auroraTestnet = /*#__PURE__*/ defineChain({\n    id: 1313161555,\n    name: 'Aurora Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://testnet.aurora.dev'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Aurorascan',\n            url: 'https://testnet.aurorascan.dev',\n            apiUrl: 'https://testnet.aurorascan.dev/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=auroraTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const auroria = /*#__PURE__*/ defineChain({\n    id: 205205,\n    name: 'Auroria Testnet',\n    network: 'auroria',\n    nativeCurrency: {\n        name: 'Auroria Stratis',\n        symbol: 'tSTRAX',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://auroria.rpc.stratisevm.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Auroria Testnet Explorer',\n            url: 'https://auroria.explorer.stratisevm.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=auroria.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const avalanche = /*#__PURE__*/ defineChain({\n    id: 43_114,\n    name: 'Avalanche',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Avalanche',\n        symbol: 'AVAX',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.avax.network/ext/bc/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SnowTrace',\n            url: 'https://snowtrace.io',\n            apiUrl: 'https://api.snowtrace.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 11907934,\n        },\n    },\n});\n//# sourceMappingURL=avalanche.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const avalancheFuji = /*#__PURE__*/ defineChain({\n    id: 43_113,\n    name: 'Avalanche Fuji',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Avalanche Fuji',\n        symbol: 'AVAX',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.avax-test.network/ext/bc/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SnowTrace',\n            url: 'https://testnet.snowtrace.io',\n            apiUrl: 'https://api-testnet.snowtrace.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 7096959,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=avalancheFuji.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 8453; // base\nexport const b3 = /*#__PURE__*/ defineChain({\n    id: 8333,\n    name: 'B3',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet-rpc.b3.fun/http'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.b3.fun',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=b3.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 168_587_773; // base-sepolia\nexport const b3Sepolia = /*#__PURE__*/ defineChain({\n    id: 1993,\n    name: 'B3 Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.b3.fun/http'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://sepolia.explorer.b3.fun',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=b3Sepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bahamut = /*#__PURE__*/ defineChain({\n    id: 5165,\n    network: 'bahamut',\n    name: 'Bahamut',\n    nativeCurrency: { name: 'Fasttoken', symbol: 'FTN', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc1.bahamut.io',\n                'https://bahamut-rpc.publicnode.com',\n                'https://rpc2.bahamut.io',\n            ],\n            webSocket: [\n                'wss://ws1.sahara.bahamutchain.com',\n                'wss://bahamut-rpc.publicnode.com',\n                'wss://ws2.sahara.bahamutchain.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ftnscan',\n            url: 'https://www.ftnscan.com',\n            apiUrl: 'https://www.ftnscan.com/api',\n        },\n    },\n});\n//# sourceMappingURL=bahamut.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const base = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 8453,\n    name: 'Base',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.base.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Basescan',\n            url: 'https://basescan.org',\n            apiUrl: 'https://api.basescan.org/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x43edB88C4B80fDD2AdFF2412A7BebF9dF42cB40e',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x56315b90c40730925ec5485cf004d835058518A0',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 5022,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x49048044D57e1C92A77f79988d21Fa8fAF74E97e',\n                blockCreated: 17482143,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x3154Cf16ccdb4C6d922629664174b904d80F2C35',\n                blockCreated: 17482143,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=base.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const basecampTestnet = /*#__PURE__*/ defineChain({\n    id: 123420001114,\n    name: 'Basecamp Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Camp',\n        symbol: 'CAMP',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.basecamp.t.raas.gelato.cloud'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'basecamp',\n            url: 'https://basecamp.cloud.blockscout.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=basecampTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 5; // goerli\nexport const baseGoerli = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 84531,\n    name: 'Base Goerli',\n    nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://goerli.base.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Basescan',\n            url: 'https://goerli.basescan.org',\n            apiUrl: 'https://goerli.basescan.org/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x2A35891ff30313CcFa6CE88dcf3858bb075A2298',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1376988,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xe93c8cD0D409341205A592f8c4Ac1A5fe5585cfA',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xfA6D8Ee5BE770F84FC001D098C4bD604Fe01284a',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=baseGoerli.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const baseSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 84532,\n    network: 'base-sepolia',\n    name: 'Base Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.base.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Basescan',\n            url: 'https://sepolia.basescan.org',\n            apiUrl: 'https://api-sepolia.basescan.org/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xd6E6dBf4F7EA0ac412fD8b65ED297e64BB7a06E1',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x84457ca9D0163FbC4bbfe4Dfbb20ba46e48DF254',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x49f53e41452c74589e85ca1677426ba426459e85',\n                blockCreated: 4446677,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xfd0Bf71F60660E2f608ed56e1659C450eB113120',\n                blockCreated: 4446677,\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1059647,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=baseSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const beam = /*#__PURE__*/ defineChain({\n    id: 4337,\n    name: 'Beam',\n    network: 'beam',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Beam',\n        symbol: 'BEAM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://build.onbeam.com/rpc'],\n            webSocket: ['wss://build.onbeam.com/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Beam Explorer',\n            url: 'https://subnets.avax.network/beam',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x4956f15efdc3dc16645e90cc356eafa65ffc65ec',\n            blockCreated: 1,\n        },\n    },\n});\n//# sourceMappingURL=beam.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const beamTestnet = /*#__PURE__*/ defineChain({\n    id: 13337,\n    name: 'Beam Testnet',\n    network: 'beam',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Beam',\n        symbol: 'BEAM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://build.onbeam.com/rpc/testnet'],\n            webSocket: ['wss://build.onbeam.com/ws/testnet'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Beam Explorer',\n            url: 'https://subnets-test.avax.network/beam',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x9bf49b704ee2a095b95c1f2d4eb9010510c41c9e',\n            blockCreated: 3,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=beamTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bearNetworkChainMainnet = /*#__PURE__*/ defineChain({\n    id: 641230,\n    name: 'Bear Network Chain Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BearNetworkChain',\n        symbol: 'BRNKC',\n    },\n    rpcUrls: {\n        default: { http: ['https://brnkc-mainnet.bearnetwork.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BrnkScan',\n            url: 'https://brnkscan.bearnetwork.net',\n            apiUrl: 'https://brnkscan.bearnetwork.net/api',\n        },\n    },\n});\n//# sourceMappingURL=bearNetworkChainMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bearNetworkChainTestnet = /*#__PURE__*/ defineChain({\n    id: 751230,\n    name: 'Bear Network Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'tBRNKC',\n        symbol: 'tBRNKC',\n    },\n    rpcUrls: {\n        default: { http: ['https://brnkc-test.bearnetwork.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BrnkTestScan',\n            url: 'https://brnktest-scan.bearnetwork.net',\n            apiUrl: 'https://brnktest-scan.bearnetwork.net/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bearNetworkChainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const berachain = /*#__PURE__*/ defineChain({\n    id: 80094,\n    name: 'Berachain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BERA Token',\n        symbol: 'BERA',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n        ensRegistry: {\n            address: '0x5b22280886a2f5e09a49bea7e320eab0e5320e28',\n            blockCreated: 877007,\n        },\n        ensUniversalResolver: {\n            address: '0xddfb18888a9466688235887dec2a10c4f5effee9',\n            blockCreated: 877008,\n        },\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.berachain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Berascan',\n            url: 'https://berascan.com',\n        },\n    },\n    ensTlds: ['.bera'],\n    testnet: false,\n});\n//# sourceMappingURL=berachain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const berachainBepolia = /*#__PURE__*/ defineChain({\n    id: 80069,\n    name: 'Berachain Bepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BERA Token',\n        symbol: 'BERA',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n    },\n    rpcUrls: {\n        default: { http: ['https://bepolia.rpc.berachain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Berascan',\n            url: 'https://bepolia.beratrail.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=berachainBepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const berachainTestnet = /*#__PURE__*/ defineChain({\n    id: 80085,\n    name: 'Berachain Artio',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BERA Token',\n        symbol: 'BERA',\n    },\n    rpcUrls: {\n        default: { http: ['https://artio.rpc.berachain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Berachain',\n            url: 'https://artio.beratrail.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 866924,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=berachainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const berachainTestnetbArtio = /*#__PURE__*/ defineChain({\n    id: 80084,\n    name: 'Berachain bArtio',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BERA Token',\n        symbol: 'BERA',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 109269,\n        },\n        ensRegistry: {\n            address: '0xB0eef18971290b333450586D33dcA6cE122651D2',\n            blockCreated: 7736794,\n        },\n        ensUniversalResolver: {\n            address: '0x41692Ef1EA0C79E6b73077E4A67572D2BDbD7057',\n            blockCreated: 7736795,\n        },\n    },\n    ensTlds: ['.bera'],\n    rpcUrls: {\n        default: { http: ['https://bartio.rpc.berachain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Berachain bArtio Beratrail',\n            url: 'https://bartio.beratrail.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=berachainTestnetbArtio.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bevmMainnet = /*#__PURE__*/ defineChain({\n    id: 11501,\n    name: 'BEVM Mainnet',\n    nativeCurrency: { name: 'Bitcoin', symbol: 'BTC', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc-mainnet-1.bevm.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bevmscan',\n            url: 'https://scan-mainnet.bevm.io',\n            apiUrl: 'https://scan-mainnet-api.bevm.io/api',\n        },\n    },\n});\n//# sourceMappingURL=bevmMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bifrost = /*#__PURE__*/ defineChain({\n    id: 3068,\n    name: 'Bifrost Mainnet',\n    nativeCurrency: { name: 'BFC', symbol: 'BFC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://public-01.mainnet.bifrostnetwork.com/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bifrost Blockscout',\n            url: 'https://explorer.mainnet.bifrostnetwork.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=bifrost.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitgert = /*#__PURE__*/ defineChain({\n    id: 32520,\n    name: 'Bitgert Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Brise',\n        symbol: 'Brise',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc-bitgert.icecreamswap.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bitgert Scan',\n            url: 'https://brisescan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 2118034,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=bitgert.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitkub = /*#__PURE__*/ defineChain({\n    id: 96,\n    name: 'KUB Mainnet',\n    nativeCurrency: { name: 'KUB Coin', symbol: 'KUB', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.bitkubchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'KUB Chain Mainnet Explorer',\n            url: 'https://www.bkcscan.com',\n            apiUrl: 'https://www.bkcscan.com/api',\n        },\n    },\n});\n//# sourceMappingURL=bitkub.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitkubTestnet = /*#__PURE__*/ defineChain({\n    id: 25925,\n    name: 'Bitkub Testnet',\n    network: 'Bitkub Testnet',\n    nativeCurrency: { name: 'Bitkub Test', symbol: 'tKUB', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet.bitkubchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bitkub Chain Testnet Explorer',\n            url: 'https://testnet.bkcscan.com',\n            apiUrl: 'https://testnet.bkcscan.com/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bitkubTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitlayer = /*#__PURE__*/ defineChain({\n    id: 200901,\n    name: 'Bitlayer Mainnet',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.bitlayer.org'],\n            webSocket: ['wss://ws.bitlayer.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'bitlayer mainnet scan',\n            url: 'https://www.btrscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x5B256fE9e993902eCe49D138a5b1162cBb529474',\n            blockCreated: 2421963,\n        },\n    },\n});\n//# sourceMappingURL=bitlayer.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitlayerTestnet = /*#__PURE__*/ defineChain({\n    id: 200810,\n    name: 'Bitlayer Testnet',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.bitlayer.org'],\n            webSocket: ['wss://testnet-ws.bitlayer.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'bitlayer testnet scan',\n            url: 'https://testnet.btrscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x5B256fE9e993902eCe49D138a5b1162cBb529474',\n            blockCreated: 4135671,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bitlayerTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitrock = /*#__PURE__*/ defineChain({\n    id: 7171,\n    name: 'Bitrock Mainnet',\n    nativeCurrency: { name: 'BROCK', symbol: 'BROCK', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://brockrpc.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bitrock Explorer',\n            url: 'https://explorer.bit-rock.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=bitrock.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitTorrent = /*#__PURE__*/ defineChain({\n    id: 199,\n    name: 'BitTorrent',\n    network: 'bittorrent-chain-mainnet',\n    nativeCurrency: { name: 'BitTorrent', symbol: 'BTT', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.bittorrentchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bttcscan',\n            url: 'https://bttcscan.com',\n            apiUrl: 'https://api.bttcscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 31078552,\n        },\n    },\n});\n//# sourceMappingURL=bitTorrent.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bitTorrentTestnet = /*#__PURE__*/ defineChain({\n    id: 1028,\n    name: 'BitTorrent Chain Testnet',\n    network: 'bittorrent-chain-testnet',\n    nativeCurrency: { name: 'BitTorrent', symbol: 'BTT', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://testrpc.bittorrentchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bttcscan',\n            url: 'https://testnet.bttcscan.com',\n            apiUrl: 'https://testnet.bttcscan.com/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bitTorrentTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const birdlayer = defineChain({\n    id: 53456,\n    name: 'BirdLayer',\n    nativeCurrency: { decimals: 18, name: 'Ether', symbol: 'ETH' },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.birdlayer.xyz', 'https://rpc1.birdlayer.xyz'],\n            webSocket: ['wss://rpc.birdlayer.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BirdLayer Explorer',\n            url: 'https://scan.birdlayer.xyz',\n        },\n    },\n});\n//# sourceMappingURL=birdlayer.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const blast = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 81457,\n    name: 'Blast',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.blast.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blastscan',\n            url: 'https://blastscan.io',\n            apiUrl: 'https://api.blastscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 212929,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x826D1B0D4111Ad9146Eb8941D7Ca2B6a44215c76',\n                blockCreated: 19300358,\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x0Ec68c5B10F21EFFb74f2A5C61DFe6b08C0Db6Cb',\n                blockCreated: 19300357,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x697402166Fbf2F22E970df8a6486Ef171dbfc524',\n                blockCreated: 19300360,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=blast.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const blastSepolia = /*#__PURE__*/ defineChain({\n    id: 168_587_773,\n    name: 'Blast Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.blast.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blastscan',\n            url: 'https://sepolia.blastscan.io',\n            apiUrl: 'https://api-sepolia.blastscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 756690,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=blastSepolia.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const bob = defineChain({\n    ...chainConfig,\n    id: 60808,\n    name: 'BOB',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.gobob.xyz'],\n            webSocket: ['wss://rpc.gobob.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BOB Explorer',\n            url: 'https://explorer.gobob.xyz',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 23131,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdDa53E23f8a32640b04D7256e651C1db98dB11C1',\n                blockCreated: 4462615,\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x8AdeE124447435fE03e3CD24dF3f4cAE32E65a3E',\n                blockCreated: 4462615,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=bob.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const boba = /*#__PURE__*/ defineChain({\n    id: 288,\n    name: 'Boba Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.boba.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BOBAScan',\n            url: 'https://bobascan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 446859,\n        },\n    },\n});\n//# sourceMappingURL=boba.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bobaSepolia = /*#__PURE__*/ defineChain({\n    id: 28882,\n    name: 'Boba Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://sepolia.boba.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BOBAScan',\n            url: 'https://testnet.bobascan.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bobaSepolia.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const bobSepolia = defineChain({\n    ...chainConfig,\n    id: 808813,\n    name: 'BOB Sepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://bob-sepolia.rpc.gobob.xyz'],\n            webSocket: ['wss://bob-sepolia.rpc.gobob.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BOB Sepolia Explorer',\n            url: 'https://bob-sepolia.explorer.gobob.xyz',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 35677,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x14D0069452b4AE2b250B395b8adAb771E4267d2f',\n                blockCreated: 4462615,\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x867B1Aa872b9C8cB5E9F7755feDC45BB24Ad0ae4',\n                blockCreated: 4462615,\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=bobSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const boolBetaMainnet = /*#__PURE__*/ defineChain({\n    id: 11100,\n    name: 'Bool Beta Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BOL',\n        symbol: 'BOL',\n    },\n    rpcUrls: {\n        default: { http: ['https://beta-rpc-node-http.bool.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BoolScan',\n            url: 'https://beta-mainnet.boolscan.com/',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=boolBetaMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const botanixTestnet = /*#__PURE__*/ defineChain({\n    id: 3636,\n    name: 'Botanix Testnet',\n    nativeCurrency: { name: 'Botanix', symbol: 'BTC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://node.botanixlabs.dev'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Botanix Testnet Explorer',\n            url: 'https://testnet.botanixscan.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=botanixTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bounceBit = /*#__PURE__*/ defineChain({\n    id: 6001,\n    name: 'BounceBit Mainnet',\n    nativeCurrency: { name: 'BounceBit', symbol: 'BB', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://fullnode-mainnet.bouncebitapi.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BB Scan',\n            url: 'https://bbscan.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=bounceBit.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bounceBitTestnet = /*#__PURE__*/ defineChain({\n    id: 6000,\n    name: 'BounceBit Testnet',\n    nativeCurrency: { name: 'BounceBit', symbol: 'BB', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://fullnode-testnet.bouncebitapi.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BB Scan',\n            url: 'https://testnet.bbscan.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bounceBitTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bronos = /*#__PURE__*/ defineChain({\n    id: 1039,\n    name: 'Bronos',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BRO',\n        symbol: 'BRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.bronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BronoScan',\n            url: 'https://broscan.bronos.org',\n        },\n    },\n});\n//# sourceMappingURL=bronos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bronosTestnet = /*#__PURE__*/ defineChain({\n    id: 1038,\n    name: 'Bronos Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Bronos Coin',\n        symbol: 'tBRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm-testnet.bronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BronoScan',\n            url: 'https://tbroscan.bronos.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bronosTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bsc = /*#__PURE__*/ defineChain({\n    id: 56,\n    name: 'BNB Smart Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BNB',\n        symbol: 'BNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://56.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BscScan',\n            url: 'https://bscscan.com',\n            apiUrl: 'https://api.bscscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 15921452,\n        },\n    },\n});\n//# sourceMappingURL=bsc.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bscGreenfield = /*#__PURE__*/ defineChain({\n    id: 1017,\n    name: 'BNB Greenfield Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BNB',\n        symbol: 'BNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://greenfield-chain.bnbchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BNB Greenfield Mainnet Scan',\n            url: 'https://greenfieldscan.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=bscGreenfield.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bscTestnet = /*#__PURE__*/ defineChain({\n    id: 97,\n    name: 'BNB Smart Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BNB',\n        symbol: 'tBNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://data-seed-prebsc-1-s1.bnbchain.org:8545'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'BscScan',\n            url: 'https://testnet.bscscan.com',\n            apiUrl: 'https://api-testnet.bscscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 17422483,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bscTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bsquared = /*#__PURE__*/ defineChain({\n    id: 223,\n    name: 'B2',\n    nativeCurrency: {\n        name: 'Bitcoin',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.bsquared.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://explorer.bsquared.network',\n        },\n    },\n});\n//# sourceMappingURL=bsquared.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bsquaredTestnet = /*#__PURE__*/ defineChain({\n    id: 1123,\n    name: 'B2 Testnet',\n    nativeCurrency: {\n        name: 'Bitcoin',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.bsquared.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://testnet-explorer.bsquared.network',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bsquaredTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const btr = /*#__PURE__*/ defineChain({\n    id: 200901,\n    name: 'Bitlayer',\n    nativeCurrency: {\n        name: 'Bitcoin',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.bitlayer.org', 'https://rpc.bitlayer-rpc.com'],\n            webSocket: ['wss://ws.bitlayer.org', 'wss://ws.bitlayer-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bitlayer(BTR) Scan',\n            url: 'https://www.btrscan.com',\n        },\n    },\n});\n//# sourceMappingURL=btr.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const btrTestnet = /*#__PURE__*/ defineChain({\n    id: 200810,\n    name: 'Bitlayer Testnet',\n    nativeCurrency: {\n        name: 'Bitcoin',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.bitlayer.org'],\n            webSocket: [\n                'wss://testnet-ws.bitlayer.org',\n                'wss://testnet-ws.bitlayer-rpc.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Bitlayer(BTR) Scan',\n            url: 'https://testnet.btrscan.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=btrTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bxn = /*#__PURE__*/ defineChain({\n    id: 4999,\n    name: 'BlackFort Exchange Network',\n    nativeCurrency: { name: 'BlackFort Token', symbol: 'BXN', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.blackfort.network/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.blackfort.network',\n            apiUrl: 'https://explorer.blackfort.network/api',\n        },\n    },\n});\n//# sourceMappingURL=bxn.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const bxnTestnet = /*#__PURE__*/ defineChain({\n    id: 4777,\n    name: 'BlackFort Exchange Network Testnet',\n    nativeCurrency: {\n        name: 'BlackFort Testnet Token',\n        symbol: 'TBXN',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.blackfort.network/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://testnet-explorer.blackfort.network',\n            apiUrl: 'https://testnet-explorer.blackfort.network/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=bxnTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cannon = /*#__PURE__*/ defineChain({\n    id: 13_370,\n    name: 'Cannon',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['http://127.0.0.1:8545'] },\n    },\n});\n//# sourceMappingURL=cannon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const canto = /*#__PURE__*/ defineChain({\n    id: 7_700,\n    name: 'Canto',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Canto',\n        symbol: 'CANTO',\n    },\n    rpcUrls: {\n        default: { http: ['https://canto.gravitychain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Tuber.Build (Blockscout)',\n            url: 'https://tuber.build',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 2905789,\n        },\n    },\n});\n//# sourceMappingURL=canto.js.map","export const fees = {\n    /*\n     * Estimates the fees per gas for a transaction.\n  \n     * If the transaction is to be paid in a token (feeCurrency is present) then the fees\n     * are estimated in the value of the token. Otherwise falls back to the default\n     * estimation by returning null.\n     *\n     * @param params fee estimation function parameters\n     */\n    estimateFeesPerGas: async (params) => {\n        if (!params.request?.feeCurrency)\n            return null;\n        const [gasPrice, maxPriorityFeePerGas] = await Promise.all([\n            estimateFeePerGasInFeeCurrency(params.client, params.request.feeCurrency),\n            estimateMaxPriorityFeePerGasInFeeCurrency(params.client, params.request.feeCurrency),\n        ]);\n        // eth_gasPrice for cel2 returns baseFeePerGas + maxPriorityFeePerGas\n        const maxFeePerGas = params.multiply(gasPrice - maxPriorityFeePerGas) + maxPriorityFeePerGas;\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n        };\n    },\n};\n/*\n * Estimate the fee per gas in the value of the fee token\n\n *\n * @param client - Client to use\n * @param feeCurrency -  Address of a whitelisted fee token\n * @returns The fee per gas in wei in the value of the  fee token\n *\n */\nasync function estimateFeePerGasInFeeCurrency(client, feeCurrency) {\n    const fee = await client.request({\n        method: 'eth_gasPrice',\n        params: [feeCurrency],\n    });\n    return BigInt(fee);\n}\n/*\n * Estimate the max priority fee per gas in the value of the fee token\n\n *\n * @param client - Client to use\n * @param feeCurrency -  Address of a whitelisted fee token\n * @returns The fee per gas in wei in the value of the  fee token\n *\n */\nasync function estimateMaxPriorityFeePerGasInFeeCurrency(client, feeCurrency) {\n    const feesPerGas = await client.request({\n        method: 'eth_maxPriorityFeePerGas',\n        params: [feeCurrency],\n    });\n    return BigInt(feesPerGas);\n}\n//# sourceMappingURL=fees.js.map","import { trim } from '../utils/data/trim.js';\nexport function isEmpty(value) {\n    return (value === 0 ||\n        value === 0n ||\n        value === undefined ||\n        value === null ||\n        value === '0' ||\n        value === '' ||\n        (typeof value === 'string' &&\n            (trim(value).toLowerCase() === '0x' ||\n                trim(value).toLowerCase() === '0x00')));\n}\nexport function isPresent(value) {\n    return !isEmpty(value);\n}\n/** @internal */\nexport function isEIP1559(transaction) {\n    return (typeof transaction.maxFeePerGas !== 'undefined' &&\n        typeof transaction.maxPriorityFeePerGas !== 'undefined');\n}\nexport function isCIP64(transaction) {\n    /*\n     * Enable end user to force the tx to be considered as a CIP-64.\n     *\n     * The preliminary type will be determined as \"eip1559\" by src/utils/transaction/getTransactionType.ts\n     * and so we need the logic below to check for the specific value instead of checking if just any\n     * transaction type is provided. If that's anything else than \"cip64\" then we need to reevaluate the\n     * type based on the transaction fields.\n     *\n     * Modify with caution and according to https://github.com/celo-org/celo-proposals/blob/master/CIPs/cip-0064.md\n     */\n    if (transaction.type === 'cip64') {\n        return true;\n    }\n    return isEIP1559(transaction) && isPresent(transaction.feeCurrency);\n}\n//# sourceMappingURL=utils.js.map","import { maxUint256 } from '../constants/number.js';\nimport { InvalidAddressError } from '../errors/address.js';\nimport { BaseError } from '../errors/base.js';\nimport { InvalidChainIdError } from '../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../errors/node.js';\nimport { serializeTransaction as serializeTransaction_op } from '../op-stack/serializers.js';\nimport { isAddress } from '../utils/address/isAddress.js';\nimport { concatHex } from '../utils/data/concat.js';\nimport { toHex } from '../utils/encoding/toHex.js';\nimport { toRlp } from '../utils/encoding/toRlp.js';\nimport { serializeAccessList } from '../utils/transaction/serializeAccessList.js';\nimport { toYParitySignatureArray } from '../utils/transaction/serializeTransaction.js';\nimport { isCIP64, isEmpty, isPresent } from './utils.js';\nexport function serializeTransaction(transaction, signature) {\n    if (isCIP64(transaction))\n        return serializeTransactionCIP64(transaction, signature);\n    return serializeTransaction_op(transaction, signature);\n}\nexport const serializers = {\n    transaction: serializeTransaction,\n};\nfunction serializeTransactionCIP64(transaction, signature) {\n    assertTransactionCIP64(transaction);\n    const { chainId, gas, nonce, to, value, maxFeePerGas, maxPriorityFeePerGas, accessList, feeCurrency, data, } = transaction;\n    const serializedTransaction = [\n        toHex(chainId),\n        nonce ? toHex(nonce) : '0x',\n        maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n        maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n        gas ? toHex(gas) : '0x',\n        to ?? '0x',\n        value ? toHex(value) : '0x',\n        data ?? '0x',\n        serializeAccessList(accessList),\n        feeCurrency,\n        ...toYParitySignatureArray(transaction, signature),\n    ];\n    return concatHex([\n        '0x7b',\n        toRlp(serializedTransaction),\n    ]);\n}\n// maxFeePerGas must be less than maxUint256\nconst MAX_MAX_FEE_PER_GAS = maxUint256;\nexport function assertTransactionCIP42(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, feeCurrency, gatewayFee, gatewayFeeRecipient, } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (gasPrice)\n        throw new BaseError('`gasPrice` is not a valid CIP-42 Transaction attribute.');\n    if (isPresent(maxFeePerGas) && maxFeePerGas > MAX_MAX_FEE_PER_GAS)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (isPresent(maxPriorityFeePerGas) &&\n        isPresent(maxFeePerGas) &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n    if ((isPresent(gatewayFee) && isEmpty(gatewayFeeRecipient)) ||\n        (isPresent(gatewayFeeRecipient) && isEmpty(gatewayFee))) {\n        throw new BaseError('`gatewayFee` and `gatewayFeeRecipient` must be provided together.');\n    }\n    if (isPresent(feeCurrency) && !isAddress(feeCurrency)) {\n        throw new BaseError('`feeCurrency` MUST be a token address for CIP-42 transactions.');\n    }\n    if (isPresent(gatewayFeeRecipient) && !isAddress(gatewayFeeRecipient)) {\n        throw new InvalidAddressError(gatewayFeeRecipient);\n    }\n    if (isEmpty(feeCurrency) && isEmpty(gatewayFeeRecipient)) {\n        throw new BaseError('Either `feeCurrency` or `gatewayFeeRecipient` must be provided for CIP-42 transactions.');\n    }\n}\nexport function assertTransactionCIP64(transaction) {\n    const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to, feeCurrency, } = transaction;\n    if (chainId <= 0)\n        throw new InvalidChainIdError({ chainId });\n    if (to && !isAddress(to))\n        throw new InvalidAddressError({ address: to });\n    if (gasPrice)\n        throw new BaseError('`gasPrice` is not a valid CIP-64 Transaction attribute.');\n    if (isPresent(maxFeePerGas) && maxFeePerGas > MAX_MAX_FEE_PER_GAS)\n        throw new FeeCapTooHighError({ maxFeePerGas });\n    if (isPresent(maxPriorityFeePerGas) &&\n        isPresent(maxFeePerGas) &&\n        maxPriorityFeePerGas > maxFeePerGas)\n        throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas });\n    if (isPresent(feeCurrency) && !isAddress(feeCurrency)) {\n        throw new BaseError('`feeCurrency` MUST be a token address for CIP-64 transactions.');\n    }\n    if (isEmpty(feeCurrency)) {\n        throw new BaseError('`feeCurrency` must be provided for CIP-64 transactions.');\n    }\n}\n//# sourceMappingURL=serializers.js.map","import { contracts } from '../op-stack/contracts.js';\nimport { fees } from './fees.js';\nimport { formatters } from './formatters.js';\nimport { serializers } from './serializers.js';\nexport const chainConfig = {\n    blockTime: 1_000,\n    contracts,\n    formatters,\n    serializers,\n    fees,\n};\n//# sourceMappingURL=chainConfig.js.map","import { hexToBigInt } from '../utils/encoding/fromHex.js';\nimport { defineBlock } from '../utils/formatters/block.js';\nimport { defineTransaction, formatTransaction, } from '../utils/formatters/transaction.js';\nimport { defineTransactionRequest } from '../utils/formatters/transactionRequest.js';\nimport { isCIP64 } from './utils.js';\nexport const formatters = {\n    block: /*#__PURE__*/ defineBlock({\n        format(args) {\n            const transactions = args.transactions?.map((transaction) => {\n                if (typeof transaction === 'string')\n                    return transaction;\n                const formatted = formatTransaction(transaction);\n                return {\n                    ...formatted,\n                    ...(transaction.gatewayFee\n                        ? {\n                            gatewayFee: hexToBigInt(transaction.gatewayFee),\n                            gatewayFeeRecipient: transaction.gatewayFeeRecipient,\n                        }\n                        : {}),\n                    feeCurrency: transaction.feeCurrency,\n                };\n            });\n            return {\n                transactions,\n            };\n        },\n    }),\n    transaction: /*#__PURE__*/ defineTransaction({\n        format(args) {\n            if (args.type === '0x7e')\n                return {\n                    isSystemTx: args.isSystemTx,\n                    mint: args.mint ? hexToBigInt(args.mint) : undefined,\n                    sourceHash: args.sourceHash,\n                    type: 'deposit',\n                };\n            const transaction = { feeCurrency: args.feeCurrency };\n            if (args.type === '0x7b')\n                transaction.type = 'cip64';\n            else {\n                if (args.type === '0x7c')\n                    transaction.type = 'cip42';\n                transaction.gatewayFee = args.gatewayFee\n                    ? hexToBigInt(args.gatewayFee)\n                    : null;\n                transaction.gatewayFeeRecipient = args.gatewayFeeRecipient;\n            }\n            return transaction;\n        },\n    }),\n    transactionRequest: /*#__PURE__*/ defineTransactionRequest({\n        format(args) {\n            const request = {};\n            if (args.feeCurrency)\n                request.feeCurrency = args.feeCurrency;\n            if (isCIP64(args))\n                request.type = '0x7b';\n            return request;\n        },\n    }),\n};\n//# sourceMappingURL=formatters.js.map","import { chainConfig } from '../../celo/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const celo = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 42_220,\n    name: 'Celo',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CELO',\n        symbol: 'CELO',\n    },\n    rpcUrls: {\n        default: { http: ['https://forno.celo.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Celo Explorer',\n            url: 'https://celoscan.io',\n            apiUrl: 'https://api.celoscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 13112599,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=celo.js.map","import { chainConfig } from '../../celo/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 17000; // holsky\n// source https://storage.googleapis.com/cel2-rollup-files/alfajores/deployment-l1.json\nexport const celoAlfajores = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 44_787,\n    name: 'Alfajores',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CELO',\n        symbol: 'A-CELO',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://alfajores-forno.celo-testnet.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Celo Alfajores Explorer',\n            url: 'https://celo-alfajores.blockscout.com',\n            apiUrl: 'https://celo-alfajores.blockscout.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 14569001,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x82527353927d8D069b3B452904c942dA149BA381',\n                blockCreated: 2411324,\n            },\n        },\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xE28AAdcd9883746c0e5068F58f9ea06027b214cb',\n                blockCreated: 2411324,\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x4a2635e9e4f6e45817b1D402ac4904c1d1752438',\n                blockCreated: 2411324,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xD1B0E0581973c9eB7f886967A606b9441A897037',\n                blockCreated: 2411324,\n            },\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=celoAlfajores.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const chang = /*#__PURE__*/ defineChain({\n    id: 5858,\n    name: 'Chang Chain Foundation Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CTH',\n        symbol: 'CTH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.cthscan.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chang Chain explorer',\n            url: 'https://cthscan.com',\n        },\n    },\n});\n//# sourceMappingURL=chang.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const chiliz = /*#__PURE__*/ defineChain({\n    id: 88_888,\n    name: 'Chiliz Chain',\n    network: 'chiliz-chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CHZ',\n        symbol: 'CHZ',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.chiliz.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chiliz Explorer',\n            url: 'https://scan.chiliz.com',\n            apiUrl: 'https://scan.chiliz.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 8080847,\n        },\n    },\n});\n//# sourceMappingURL=chiliz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const chips = /*#__PURE__*/ defineChain({\n    id: 2882,\n    name: 'Chips Network',\n    network: 'CHIPS',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IOTA',\n        symbol: 'IOTA',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://node.chips.ooo/wasp/api/v1/chains/iota1pp3d3mnap3ufmgqnjsnw344sqmf5svjh26y2khnmc89sv6788y3r207a8fn/evm',\n            ],\n        },\n    },\n});\n//# sourceMappingURL=chips.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const citreaTestnet = /*#__PURE__*/ defineChain({\n    id: 5115,\n    name: 'Citrea Testnet',\n    nativeCurrency: { name: 'cBTC', symbol: 'cBTC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.citrea.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Citrea Explorer',\n            url: 'https://explorer.testnet.citrea.xyz',\n            apiUrl: 'https://explorer.testnet.citrea.xyz/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=citreaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const classic = /*#__PURE__*/ defineChain({\n    id: 61,\n    name: 'Ethereum Classic',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETC',\n        symbol: 'ETC',\n    },\n    rpcUrls: {\n        default: { http: ['https://etc.rivet.link'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://blockscout.com/etc/mainnet',\n        },\n    },\n});\n//# sourceMappingURL=classic.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const coinbit = /*#__PURE__*/ defineChain({\n    id: 112,\n    name: 'Coinbit Mainnet',\n    nativeCurrency: { name: 'GIDR', symbol: 'GIDR', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://coinbit-rpc-mainnet.chain.sbcrypto.app'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Coinbit Explorer',\n            url: 'https://coinbit-explorer.chain.sbcrypto.app',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=coinbit.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const coinex = /*#__PURE__*/ defineChain({\n    id: 52,\n    name: 'CoinEx Mainnet',\n    nativeCurrency: { name: 'cet', symbol: 'cet', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.coinex.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'CoinEx Explorer',\n            url: 'https://www.coinex.net',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=coinex.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const confluxESpace = /*#__PURE__*/ defineChain({\n    id: 1_030,\n    name: 'Conflux eSpace',\n    nativeCurrency: { name: 'Conflux', symbol: 'CFX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evm.confluxrpc.com'],\n            webSocket: ['wss://evm.confluxrpc.com/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ConfluxScan',\n            url: 'https://evm.confluxscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xEFf0078910f638cd81996cc117bccD3eDf2B072F',\n            blockCreated: 68602935,\n        },\n    },\n});\n//# sourceMappingURL=confluxESpace.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const confluxESpaceTestnet = /*#__PURE__*/ defineChain({\n    id: 71,\n    name: 'Conflux eSpace Testnet',\n    network: 'cfx-espace-testnet',\n    testnet: true,\n    nativeCurrency: { name: 'Conflux', symbol: 'CFX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evmtestnet.confluxrpc.com'],\n            webSocket: ['wss://evmtestnet.confluxrpc.com/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ConfluxScan',\n            url: 'https://evmtestnet.confluxscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xEFf0078910f638cd81996cc117bccD3eDf2B072F',\n            blockCreated: 117499050,\n        },\n    },\n});\n//# sourceMappingURL=confluxESpaceTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const coreDao = /*#__PURE__*/ defineChain({\n    id: 1116,\n    name: 'Core Dao',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Core',\n        symbol: 'CORE',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.coredao.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'CoreDao',\n            url: 'https://scan.coredao.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 11_907_934,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=coreDao.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const coreTestnet1 = /*#__PURE__*/ defineChain({\n    id: 1115,\n    name: 'Core Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'tCore',\n        symbol: 'TCORE',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.test.btcs.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Core Testnet',\n            url: 'https://scan.test.btcs.network',\n            apiUrl: 'https://api.test.btcs.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xCcddF20A1932537123C2E48Bd8e00b108B8f7569',\n            blockCreated: 29_350_509,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=coreTestnet1.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const coreTestnet2 = /*#__PURE__*/ defineChain({\n    id: 1114,\n    name: 'Core Testnet2',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'tCore2',\n        symbol: 'TCORE2',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.test2.btcs.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Core Testnet2',\n            url: 'https://scan.test2.btcs.network',\n            apiUrl: 'https://api.test2.btcs.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x3CB285ff3Cd5C7C7e570b1E7DE3De17A0f985e56',\n            blockCreated: 3_838_600,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=coreTestnet2.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const corn = /*#__PURE__*/ defineChain({\n    id: 21_000_000,\n    name: 'Corn',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Bitcorn',\n        symbol: 'BTCN',\n    },\n    rpcUrls: {\n        default: { http: ['https://21000000.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Corn Explorer',\n            url: 'https://cornscan.io',\n            apiUrl: 'https://api.routescan.io/v2/network/mainnet/evm/21000000/etherscan/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3228,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=corn.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const cornTestnet = /*#__PURE__*/ defineChain({\n    id: 21_000_001,\n    name: 'Corn Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Bitcorn',\n        symbol: 'BTCN',\n    },\n    rpcUrls: {\n        default: { http: ['https://21000001.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Corn Testnet Explorer',\n            url: 'https://testnet.cornscan.io',\n            apiUrl: 'https://api.routescan.io/v2/network/testnet/evm/21000001/etherscan/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 4886,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=cornTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const crab = defineChain({\n    id: 44,\n    name: 'Crab Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Crab Network Native Token',\n        symbol: 'CRAB',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://crab-rpc.darwinia.network'],\n            webSocket: ['wss://crab-rpc.darwinia.network'],\n        },\n    },\n    blockExplorers: {\n        default: { name: 'Blockscout', url: 'https://crab-scan.darwinia.network' },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 3032593,\n        },\n    },\n});\n//# sourceMappingURL=crab.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const creatorTestnet = defineChain({\n    id: 66665,\n    name: 'Creator',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.creatorchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: { name: 'Explorer', url: 'https://explorer.creatorchain.io' },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=creatorTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const creditCoin3Mainnet = /*#__PURE__*/ defineChain({\n    id: 102030,\n    name: 'Creditcoin3 Mainnet',\n    nativeCurrency: { name: 'Creditcoin3 Mainnet', symbol: 'CTC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet3.creditcoin.network'],\n            webSocket: ['wss://mainnet3.creditcoin.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://creditcoin.blockscout.com',\n            apiUrl: 'https://creditcoin.blockscout.com/api',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=creditCoin3Mainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const creditCoin3Testnet = /*#__PURE__*/ defineChain({\n    id: 102031,\n    name: 'Creditcoin3 Testnet',\n    nativeCurrency: { name: 'Creditcoin3 Testnet', symbol: 'TCTC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.cc3-testnet.creditcoin.network'],\n            webSocket: ['wss://rpc.cc3-testnet.creditcoin.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://creditcoin-testnet.blockscout.com',\n            apiUrl: 'https://creditcoin-testnet.blockscout.com/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=creditCoin3Testnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cronos = /*#__PURE__*/ defineChain({\n    id: 25,\n    name: 'Cronos Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Cronos',\n        symbol: 'CRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.cronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Cronos Explorer',\n            url: 'https://explorer.cronos.org',\n            apiUrl: 'https://explorer-api.cronos.org/mainnet/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1963112,\n        },\n    },\n});\n//# sourceMappingURL=cronos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cronosTestnet = /*#__PURE__*/ defineChain({\n    id: 338,\n    name: 'Cronos Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CRO',\n        symbol: 'tCRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm-t3.cronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Cronos Explorer',\n            url: 'https://cronos.org/explorer/testnet3',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 10191251,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=cronosTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cronoszkEVM = /*#__PURE__*/ defineChain({\n    id: 388,\n    name: 'Cronos zkEVM Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Cronos zkEVM CRO',\n        symbol: 'zkCRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.zkevm.cronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Cronos zkEVM (Mainnet) Chain Explorer',\n            url: 'https://explorer.zkevm.cronos.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x06f4487d7c4a5983d2660db965cc6d2565e4cfaa',\n            blockCreated: 72,\n        },\n    },\n});\n//# sourceMappingURL=cronoszkEVM.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cronoszkEVMTestnet = /*#__PURE__*/ defineChain({\n    id: 282,\n    name: 'Cronos zkEVM Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Cronos zkEVM Test Coin',\n        symbol: 'zkTCRO',\n    },\n    rpcUrls: {\n        default: { http: ['https://testnet.zkevm.cronos.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Cronos zkEVM Testnet Explorer',\n            url: 'https://explorer.zkevm.cronos.org/testnet',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=cronoszkEVMTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const crossbell = /*#__PURE__*/ defineChain({\n    id: 3_737,\n    name: 'Crossbell',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CSB',\n        symbol: 'CSB',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.crossbell.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'CrossScan',\n            url: 'https://scan.crossbell.io',\n            apiUrl: 'https://scan.crossbell.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 38_246_031,\n        },\n    },\n});\n//# sourceMappingURL=crossbell.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const curtis = /*#__PURE__*/ defineChain({\n    id: 33_111,\n    name: 'Curtis',\n    nativeCurrency: { name: 'ApeCoin', symbol: 'APE', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.curtis.apechain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Curtis Explorer',\n            url: 'https://explorer.curtis.apechain.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=curtis.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cyber = /*#__PURE__*/ defineChain({\n    id: 7_560,\n    name: 'Cyber',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://cyber.alt.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://cyberscan.co',\n            apiUrl: 'https://cyberscan.co/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n    },\n});\n//# sourceMappingURL=cyber.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const cyberTestnet = /*#__PURE__*/ defineChain({\n    id: 111_557_560,\n    name: 'Cyber Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://cyber-testnet.alt.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://testnet.cyberscan.co',\n            apiUrl: 'https://testnet.cyberscan.co/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xffc391F0018269d4758AEA1a144772E8FB99545E',\n            blockCreated: 304545,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=cyberTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dailyNetwork = /*#__PURE__*/ defineChain({\n    id: 824,\n    name: 'Daily Network Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Daily',\n        symbol: 'DLY',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.mainnet.dailycrypto.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Daily Mainnet Explorer',\n            url: 'https://explorer.mainnet.dailycrypto.net',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=dailyNetwork.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dailyNetworkTestnet = /*#__PURE__*/ defineChain({\n    id: 825,\n    name: 'Daily Network Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Daily',\n        symbol: 'DLY',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.testnet.dailycrypto.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Daily Testnet Explorer',\n            url: 'https://explorer.testnet.dailycrypto.net',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=dailyNetworkTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const darwinia = /*#__PURE__*/ defineChain({\n    id: 46,\n    name: 'Darwinia Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'RING',\n        symbol: 'RING',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.darwinia.network'],\n            webSocket: ['wss://rpc.darwinia.network'],\n        },\n    },\n    blockExplorers: {\n        default: { name: 'Explorer', url: 'https://explorer.darwinia.network' },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 69420,\n        },\n    },\n});\n//# sourceMappingURL=darwinia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dbkchain = /*#__PURE__*/ defineChain({\n    id: 20_240_603,\n    name: 'DBK chain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.dbkchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DBK Chain Explorer',\n            url: 'https://scan.dbkchain.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=dbkchain.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const dchain = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 2716446429837000,\n    name: 'Dchain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://dchain-2716446429837000-1.jsonrpc.sagarpc.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Dchain Explorer',\n            url: 'https://dchain-2716446429837000-1.sagaexplorer.io',\n            apiUrl: 'https://api-dchain-2716446429837000-1.sagaexplorer.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n    },\n});\n//# sourceMappingURL=dchain.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const dchainTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 2713017997578000,\n    name: 'Dchain Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://dchaintestnet-2713017997578000-1.jsonrpc.testnet.sagarpc.io',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Dchain Explorer',\n            url: 'https://dchaintestnet-2713017997578000-1.testnet.sagaexplorer.io',\n            apiUrl: 'https://api-dchaintestnet-2713017997578000-1.testnet.sagaexplorer.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n    },\n});\n//# sourceMappingURL=dchainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const defichainEvm = /*#__PURE__*/ defineChain({\n    id: 1130,\n    network: 'defichain-evm',\n    name: 'DeFiChain EVM Mainnet',\n    nativeCurrency: {\n        name: 'DeFiChain',\n        symbol: 'DFI',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://eth.mainnet.ocean.jellyfishsdk.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DeFiScan',\n            url: 'https://meta.defiscan.live',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 137852,\n        },\n    },\n});\n//# sourceMappingURL=defichainEvm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const defichainEvmTestnet = /*#__PURE__*/ defineChain({\n    id: 1131,\n    network: 'defichain-evm-testnet',\n    name: 'DeFiChain EVM Testnet',\n    nativeCurrency: {\n        name: 'DeFiChain',\n        symbol: 'DFI',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://eth.testnet.ocean.jellyfishsdk.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DeFiScan',\n            url: 'https://meta.defiscan.live/?network=TestNet',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 156462,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=defichainEvmTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const degen = /*#__PURE__*/ defineChain({\n    id: 666666666,\n    name: 'Degen',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Degen',\n        symbol: 'DEGEN',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.degen.tips'],\n            webSocket: ['wss://rpc.degen.tips'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Degen Chain Explorer',\n            url: 'https://explorer.degen.tips',\n            apiUrl: 'https://explorer.degen.tips/api/v2',\n        },\n    },\n});\n//# sourceMappingURL=degen.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dfk = /*#__PURE__*/ defineChain({\n    id: 53_935,\n    name: 'DFK Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Jewel',\n        symbol: 'JEWEL',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://subnets.avax.network/defi-kingdoms/dfk-chain/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DFKSubnetScan',\n            url: 'https://subnets.avax.network/defi-kingdoms',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14790551,\n        },\n    },\n});\n//# sourceMappingURL=dfk.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const diode = /*#__PURE__*/ defineChain({\n    id: 15,\n    name: 'Diode Prenet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'DIODE',\n        symbol: 'DIODE',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://prenet.diode.io:8443'],\n            webSocket: ['wss://prenet.diode.io:8443/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Diode Explorer',\n            url: 'https://diode.io/prenet',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=diode.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const disChain = /*#__PURE__*/ defineChain({\n    id: 513100,\n    name: 'DisChain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'DIS',\n        symbol: 'DIS',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.dischain.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DisChain Explorer',\n            url: 'https://www.oklink.com/dis',\n        },\n    },\n});\n//# sourceMappingURL=disChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dodochainTestnet = defineChain({\n    id: 53457,\n    name: 'DODOchain Testnet',\n    nativeCurrency: { decimals: 18, name: 'DODO', symbol: 'DODO' },\n    rpcUrls: {\n        default: {\n            http: ['https://dodochain-testnet.alt.technology'],\n            webSocket: ['wss://dodochain-testnet.alt.technology/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DODOchain Testnet (Sepolia) Explorer',\n            url: 'https://testnet-scan.dodochain.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=dodochainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dogechain = /*#__PURE__*/ defineChain({\n    id: 2_000,\n    name: 'Dogechain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Wrapped Dogecoin',\n        symbol: 'WDOGE',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.dogechain.dog'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DogeChainExplorer',\n            url: 'https://explorer.dogechain.dog',\n            apiUrl: 'https://explorer.dogechain.dog/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x68a8609a60a008EFA633dfdec592c03B030cC508',\n            blockCreated: 25384031,\n        },\n    },\n});\n//# sourceMappingURL=dogechain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const donatuz = /*#__PURE__*/ defineChain({\n    id: 42_026,\n    name: 'Donatuz',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.donatuz.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Donatuz Explorer',\n            url: 'https://explorer.donatuz.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n    },\n});\n//# sourceMappingURL=donatuz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dosChain = /*#__PURE__*/ defineChain({\n    id: 7979,\n    name: 'DOS Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'DOS Chain',\n        symbol: 'DOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://main.doschain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DOS Chain Explorer',\n            url: 'https://doscan.io',\n            apiUrl: 'https://api.doscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 161908,\n        },\n    },\n});\n//# sourceMappingURL=dosChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dosChainTestnet = /*#__PURE__*/ defineChain({\n    id: 3939,\n    name: 'DOS Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'DOS Chain Testnet',\n        symbol: 'DOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://test.doschain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DOS Chain Testnet Explorer',\n            url: 'https://test.doscan.io',\n            apiUrl: 'https://api-test.doscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 69623,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=dosChainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dreyerxMainnet = /*#__PURE__*/ defineChain({\n    id: 23451,\n    name: 'DreyerX Mainnet',\n    nativeCurrency: {\n        name: 'DreyerX',\n        symbol: 'DRX',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.dreyerx.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DreyerX Scan',\n            url: 'https://scan.dreyerx.com',\n        },\n    },\n});\n//# sourceMappingURL=dreyerxMainnet.js.map","import { defineChain } from '../utils.js';\nexport const dreyerxTestnet = /*#__PURE__*/ defineChain({\n    id: 23452,\n    name: 'DreyerX Testnet',\n    nativeCurrency: {\n        name: 'DreyerX',\n        symbol: 'DRX',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['http://testnet-rpc.dreyerx.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'DreyerX Testnet Scan',\n            url: 'https://testnet-scan.dreyerx.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=dreyerxTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const dustboyIoT = /*#__PURE__*/ defineChain({\n    id: 555888,\n    name: 'DustBoy IoT',\n    nativeCurrency: { name: 'Ether', symbol: 'DST', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://dustboy-rpc.jibl2.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://dustboy.jibl2.com',\n            apiUrl: 'https://dustboy.jibl2.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xFFD34aa2C62B2D52E00A361e466C229788f4eD6a',\n            blockCreated: 526569,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=dustboyIoT.js.map","import { defineChain } from '../utils.js';\nexport const dymension = /*#__PURE__*/ defineChain({\n    id: 1100,\n    name: 'Dymension',\n    nativeCurrency: {\n        name: 'DYM',\n        symbol: 'DYM',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://dymension-evm-rpc.publicnode.com'],\n            webSocket: ['wss://dymension-evm-rpc.publicnode.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Dym FYI',\n            url: 'https://dym.fyi',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=dymension.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const edexaTestnet = /*#__PURE__*/ defineChain({\n    id: 1995,\n    name: 'edeXa Testnet',\n    nativeCurrency: { name: 'edeXa', symbol: 'tEDX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.edexa.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'edeXa Testnet Explorer',\n            url: 'https://explorer.testnet.edexa.network',\n            apiUrl: 'https://explorer.testnet.edexa.network/api/v2',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=edexaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const edexa = /*#__PURE__*/ defineChain({\n    id: 5424,\n    name: 'edeXa',\n    nativeCurrency: { name: 'edeXa', symbol: 'EDX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.edexa.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'edeXa Explorer',\n            url: 'https://explorer.edexa.network',\n            apiUrl: 'https://explorer.edexa.network/api/v2',\n        },\n    },\n});\n//# sourceMappingURL=edexa.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const edgeless = /*#__PURE__*/ defineChain({\n    id: 2_026,\n    name: 'Edgeless Network',\n    nativeCurrency: {\n        name: 'Edgeless Wrapped ETH',\n        symbol: 'EwETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.edgeless.network/http'],\n            webSocket: ['wss://rpc.edgeless.network/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Edgeless Explorer',\n            url: 'https://explorer.edgeless.network',\n        },\n    },\n});\n//# sourceMappingURL=edgeless.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const edgelessTestnet = /*#__PURE__*/ defineChain({\n    id: 202,\n    name: 'Edgeless Testnet',\n    nativeCurrency: {\n        name: 'Edgeless Wrapped ETH',\n        symbol: 'EwETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://edgeless-testnet.rpc.caldera.xyz/http'],\n            webSocket: ['wss://edgeless-testnet.rpc.caldera.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Edgeless Testnet Explorer',\n            url: 'https://testnet.explorer.edgeless.network',\n        },\n    },\n});\n//# sourceMappingURL=edgelessTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const edgeware = /*#__PURE__*/ defineChain({\n    id: 2021,\n    name: 'Edgeware EdgeEVM Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Edgeware',\n        symbol: 'EDG',\n    },\n    rpcUrls: {\n        default: { http: ['https://edgeware-evm.jelliedowl.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Edgscan by Bharathcoorg',\n            url: 'https://edgscan.live',\n            apiUrl: 'https://edgscan.live/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 18117872,\n        },\n    },\n});\n//# sourceMappingURL=edgeware.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const edgewareTestnet = /*#__PURE__*/ defineChain({\n    id: 2022,\n    name: 'Beresheet BereEVM Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Testnet EDG',\n        symbol: 'tEDG',\n    },\n    rpcUrls: {\n        default: { http: ['https://beresheet-evm.jelliedowl.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Edgscan by Bharathcoorg',\n            url: 'https://testnet.edgscan.live',\n            apiUrl: 'https://testnet.edgscan.live/api',\n        },\n    },\n});\n//# sourceMappingURL=edgewareTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const eduChain = /*#__PURE__*/ defineChain({\n    id: 41923,\n    name: 'EDU Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EDU',\n        symbol: 'EDU',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.edu-chain.raas.gelato.cloud'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'EDU Chain Explorer',\n            url: 'https://educhain.blockscout.com/',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=eduChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const eduChainTestnet = /*#__PURE__*/ defineChain({\n    id: 656476,\n    name: 'EDU Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EDU',\n        symbol: 'EDU',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.open-campus-codex.gelato.digital/'],\n            webSocket: ['wss://ws.open-campus-codex.gelato.digital'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'EDU Chain Testnet Explorer',\n            url: 'https://opencampus-codex.blockscout.com',\n            apiUrl: 'https://opencampus-codex.blockscout.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 15514133,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=eduChainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ekta = /*#__PURE__*/ defineChain({\n    id: 1994,\n    name: 'Ekta',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EKTA',\n        symbol: 'EKTA',\n    },\n    rpcUrls: {\n        default: { http: ['https://main.ekta.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ektascan',\n            url: 'https://ektascan.io',\n            apiUrl: 'https://ektascan.io/api',\n        },\n    },\n});\n//# sourceMappingURL=ekta.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ektaTestnet = /*#__PURE__*/ defineChain({\n    id: 1004,\n    name: 'Ekta Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EKTA',\n        symbol: 'EKTA',\n    },\n    rpcUrls: {\n        default: { http: ['https://test.ekta.io:8545'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Test Ektascan',\n            url: 'https://test.ektascan.io',\n            apiUrl: 'https://test.ektascan.io/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=ektaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const elastos = /*#__PURE__*/ defineChain({\n    id: 20,\n    name: 'Elastos Smart Chain',\n    nativeCurrency: { name: 'ELA', symbol: 'ELA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api2.elastos.io/eth'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Elastos Explorer',\n            url: 'https://esc.elastos.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=elastos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const elastosTestnet = /*#__PURE__*/ defineChain({\n    id: 21,\n    name: 'Elastos Smart Chain Testnet',\n    nativeCurrency: { name: 'tELA', symbol: 'tELA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api-testnet.elastos.io/eth'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Elastos Explorer',\n            url: 'https://esc-testnet.elastos.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=elastosTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const electroneum = /*#__PURE__*/ defineChain({\n    id: 52014,\n    name: 'Electroneum Mainnet',\n    nativeCurrency: {\n        name: 'ETN',\n        symbol: 'ETN',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.electroneum.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Electroneum Block Explorer',\n            url: 'https://blockexplorer.electroneum.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=electroneum.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const electroneumTestnet = /*#__PURE__*/ defineChain({\n    id: 5201420,\n    name: 'Electroneum Testnet',\n    nativeCurrency: {\n        name: 'ETN',\n        symbol: 'ETN',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.electroneum.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Electroneum Block Explorer',\n            url: 'https://blockexplorer.thesecurityteam.rocks',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=electroneumTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const elysiumTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1338,\n    name: 'Elysium Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'LAVA',\n        symbol: 'LAVA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://elysium-test-rpc.vulcanforged.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Elysium testnet explorer',\n            url: 'https://elysium-explorer.vulcanforged.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=elysiumTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const energy = /*#__PURE__*/ defineChain({\n    id: 246,\n    name: 'Energy Mainnet',\n    nativeCurrency: { name: 'EWT', symbol: 'EWT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.energyweb.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'EnergyWeb Explorer',\n            url: 'https://explorer.energyweb.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=energy.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const enuls = /*#__PURE__*/ defineChain({\n    id: 119,\n    name: 'ENULS Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'NULS',\n        symbol: 'NULS',\n    },\n    rpcUrls: {\n        default: { http: ['https://evmapi2.nuls.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ENULS Explorer',\n            url: 'https://evmscan.nuls.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=enuls.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const eon = /*#__PURE__*/ defineChain({\n    id: 7_332,\n    name: 'Horizen EON',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ZEN',\n        symbol: 'ZEN',\n    },\n    rpcUrls: {\n        default: { http: ['https://eon-rpc.horizenlabs.io/ethv1'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'EON Explorer',\n            url: 'https://eon-explorer.horizenlabs.io',\n        },\n    },\n    contracts: {},\n});\n//# sourceMappingURL=eon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const eos = /*#__PURE__*/ defineChain({\n    id: 17777,\n    name: 'EOS EVM',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EOS',\n        symbol: 'EOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.evm.eosnetwork.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'EOS EVM Explorer',\n            url: 'https://explorer.evm.eosnetwork.com',\n            apiUrl: 'https://explorer.evm.eosnetwork.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 7943933,\n        },\n    },\n});\n//# sourceMappingURL=eos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const eosTestnet = /*#__PURE__*/ defineChain({\n    id: 15557,\n    name: 'EOS EVM Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EOS',\n        symbol: 'EOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.testnet.evm.eosnetwork.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'EOS EVM Testnet Explorer',\n            url: 'https://explorer.testnet.evm.eosnetwork.com',\n            apiUrl: 'https://explorer.testnet.evm.eosnetwork.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 9067940,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=eosTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const etherlink = /*#__PURE__*/ defineChain({\n    id: 42793,\n    name: 'Etherlink',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Tez',\n        symbol: 'XTZ',\n    },\n    rpcUrls: {\n        default: { http: ['https://node.mainnet.etherlink.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherlink',\n            url: 'https://explorer.etherlink.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 33899,\n        },\n    },\n});\n//# sourceMappingURL=etherlink.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const etherlinkTestnet = /*#__PURE__*/ defineChain({\n    id: 128123,\n    name: 'Etherlink Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Tez',\n        symbol: 'XTZ',\n    },\n    rpcUrls: {\n        default: { http: ['https://node.ghostnet.etherlink.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherlink Testnet',\n            url: 'https://testnet.explorer.etherlink.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=etherlinkTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ethernity = /*#__PURE__*/ defineChain({\n    id: 183,\n    name: 'Ethernity',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.ethernitychain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ethernity Explorer',\n            url: 'https://ernscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=ethernity.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const etp = /*#__PURE__*/ defineChain({\n    id: 20_256_789,\n    name: 'ETP Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETP Chain Native Token',\n        symbol: 'ETP',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.etpscan.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ETP Scan',\n            url: 'https://etpscan.xyz',\n        },\n    },\n});\n//# sourceMappingURL=etp.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const evmos = /*#__PURE__*/ defineChain({\n    id: 9_001,\n    name: 'Evmos',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Evmos',\n        symbol: 'EVMOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://eth.bd.evmos.org:8545'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Evmos Block Explorer',\n            url: 'https://escan.live',\n        },\n    },\n});\n//# sourceMappingURL=evmos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const evmosTestnet = /*#__PURE__*/ defineChain({\n    id: 9_000,\n    name: 'Evmos Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Evmos',\n        symbol: 'EVMOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://eth.bd.evmos.dev:8545'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Evmos Testnet Block Explorer',\n            url: 'https://evm.evmos.dev/',\n        },\n    },\n});\n//# sourceMappingURL=evmosTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const excelonMainnet = /*#__PURE__*/ defineChain({\n    id: 22052002,\n    name: 'Excelon Mainnet',\n    network: 'XLON',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Excelon',\n        symbol: 'xlon',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://edgewallet1.xlon.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Excelon explorer',\n            url: 'https://explorer.excelon.io',\n        },\n    },\n});\n//# sourceMappingURL=excelonMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const expanse = /*#__PURE__*/ defineChain({\n    id: 2,\n    name: 'Expanse Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EXP',\n        symbol: 'EXP',\n    },\n    rpcUrls: {\n        default: { http: ['https://node.expanse.tech'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Expanse Explorer',\n            url: 'https://explorer.expanse.tech',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=expanse.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const exsat = /*#__PURE__*/ defineChain({\n    id: 7200,\n    name: 'exSat Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BTC',\n        symbol: 'BTC',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.exsat.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'exSat Explorer',\n            url: 'https://scan.exsat.network',\n            apiUrl: 'https://scan.exsat.network/api',\n        },\n    },\n});\n//# sourceMappingURL=exSat.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const exsatTestnet = /*#__PURE__*/ defineChain({\n    id: 839999,\n    name: 'exSat Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BTC',\n        symbol: 'BTC',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm-tst3.exsat.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'exSat Explorer',\n            url: 'https://scan-testnet.exsat.network',\n            apiUrl: 'https://scan-testnet.exsat.network/api',\n        },\n    },\n});\n//# sourceMappingURL=exSatTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fantom = /*#__PURE__*/ defineChain({\n    id: 250,\n    name: 'Fantom',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Fantom',\n        symbol: 'FTM',\n    },\n    rpcUrls: {\n        default: { http: ['https://250.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'FTMScan',\n            url: 'https://ftmscan.com',\n            apiUrl: 'https://api.ftmscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 33001987,\n        },\n    },\n});\n//# sourceMappingURL=fantom.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fantomSonicTestnet = /*#__PURE__*/ defineChain({\n    id: 64_240,\n    name: 'Fantom Sonic Open Testnet',\n    network: 'fantom-sonic-testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Fantom',\n        symbol: 'FTM',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpcapi.sonic.fantom.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Fantom Sonic Open Testnet Explorer',\n            url: 'https://public-sonic.fantom.network',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=fantomSonicTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fantomTestnet = /*#__PURE__*/ defineChain({\n    id: 4_002,\n    name: 'Fantom Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Fantom',\n        symbol: 'FTM',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.testnet.fantom.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'FTMScan',\n            url: 'https://testnet.ftmscan.com',\n            apiUrl: 'https://testnet.ftmscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 8328688,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=fantomTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fibo = /*#__PURE__*/ defineChain({\n    id: 12306,\n    name: 'Fibo Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'fibo',\n        symbol: 'FIBO',\n    },\n    rpcUrls: {\n        default: { http: ['https://network.hzroc.art'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'FiboScan',\n            url: 'https://scan.fibochain.org',\n        },\n    },\n});\n//# sourceMappingURL=fibo.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const filecoin = /*#__PURE__*/ defineChain({\n    id: 314,\n    name: 'Filecoin Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'filecoin',\n        symbol: 'FIL',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.node.glif.io/rpc/v1'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Filfox',\n            url: 'https://filfox.info/en',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3328594,\n        },\n    },\n});\n//# sourceMappingURL=filecoin.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const filecoinCalibration = /*#__PURE__*/ defineChain({\n    id: 314_159,\n    name: 'Filecoin Calibration',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'testnet filecoin',\n        symbol: 'tFIL',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.calibration.node.glif.io/rpc/v1'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Filscan',\n            url: 'https://calibration.filscan.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=filecoinCalibration.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const filecoinHyperspace = /*#__PURE__*/ defineChain({\n    id: 314_1,\n    name: 'Filecoin Hyperspace',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'testnet filecoin',\n        symbol: 'tFIL',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.hyperspace.node.glif.io/rpc/v1'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Filfox',\n            url: 'https://hyperspace.filfox.info/en',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=filecoinHyperspace.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fireChain = /*#__PURE__*/ defineChain({\n    id: 995,\n    name: '5ireChain',\n    nativeCurrency: { name: '5ire Token', symbol: '5IRE', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.5ire.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: '5ireChain Mainnet Explorer',\n            url: 'https://5irescan.io/',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=5ireChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const flame = /*#__PURE__*/ defineChain({\n    id: 253368190,\n    name: 'Flame',\n    network: 'flame',\n    nativeCurrency: {\n        symbol: 'TIA',\n        name: 'TIA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.flame.astria.org'],\n            webSocket: ['wss://ws.flame.astria.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Flame Explorer',\n            url: 'https://explorer.flame.astria.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 6829148,\n        },\n    },\n});\n//# sourceMappingURL=flame.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const flare = /*#__PURE__*/ defineChain({\n    id: 14,\n    name: 'Flare Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Flare',\n        symbol: 'FLR',\n    },\n    rpcUrls: {\n        default: { http: ['https://flare-api.flare.network/ext/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Flare Explorer',\n            url: 'https://flare-explorer.flare.network',\n            apiUrl: 'https://flare-explorer.flare.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3002461,\n        },\n    },\n});\n//# sourceMappingURL=flare.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const flareTestnet = /*#__PURE__*/ defineChain({\n    id: 114,\n    name: 'Flare Testnet Coston2',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Coston2 Flare',\n        symbol: 'C2FLR',\n    },\n    rpcUrls: {\n        default: { http: ['https://coston2-api.flare.network/ext/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Coston2 Explorer',\n            url: 'https://coston2-explorer.flare.network',\n            apiUrl: 'https://coston2-explorer.flare.network/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=flareTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const flowMainnet = /*#__PURE__*/ defineChain({\n    id: 747,\n    name: 'Flow EVM Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Flow',\n        symbol: 'FLOW',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.evm.nodes.onflow.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mainnet Explorer',\n            url: 'https://evm.flowscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 6205,\n        },\n    },\n    blockTime: 800,\n});\n//# sourceMappingURL=flowMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const flowPreviewnet = /*#__PURE__*/ defineChain({\n    id: 646,\n    name: 'Flow EVM Previewnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Flow',\n        symbol: 'FLOW',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://previewnet.evm.nodes.onflow.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Previewnet Explorer',\n            url: 'https://previewnet.flowdiver.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 6205,\n        },\n    },\n});\n//# sourceMappingURL=flowPreviewnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const flowTestnet = /*#__PURE__*/ defineChain({\n    id: 545,\n    name: 'Flow EVM Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Flow',\n        symbol: 'FLOW',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.evm.nodes.onflow.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Flow Diver',\n            url: 'https://evm-testnet.flowscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 137518,\n        },\n    },\n    testnet: true,\n    blockTime: 800,\n});\n//# sourceMappingURL=flowTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fluence = /*#__PURE__*/ defineChain({\n    id: 9_999_999,\n    name: 'Fluence',\n    nativeCurrency: { name: 'FLT', symbol: 'FLT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.fluence.dev'],\n            webSocket: ['wss://ws.mainnet.fluence.dev'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://blockscout.mainnet.fluence.dev',\n            apiUrl: 'https://blockscout.mainnet.fluence.dev/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 207583,\n        },\n    },\n});\n//# sourceMappingURL=fluence.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fluenceStage = /*#__PURE__*/ defineChain({\n    id: 123_420_000_220,\n    name: 'Fluence Stage',\n    nativeCurrency: { name: 'tFLT', symbol: 'tFLT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.stage.fluence.dev'],\n            webSocket: ['wss://ws.stage.fluence.dev'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://blockscout.stage.fluence.dev',\n            apiUrl: 'https://blockscout.stage.fluence.dev/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 83227,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=fluenceStage.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fluenceTestnet = /*#__PURE__*/ defineChain({\n    id: 52_164_803,\n    name: 'Fluence Testnet',\n    nativeCurrency: { name: 'tFLT', symbol: 'tFLT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.fluence.dev'],\n            webSocket: ['wss://ws.testnet.fluence.dev'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://blockscout.testnet.fluence.dev',\n            apiUrl: 'https://blockscout.testnet.fluence.dev/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 96424,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=fluenceTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fluentTestnet = /*#__PURE__*/ defineChain({\n    id: 20_993,\n    name: 'Fluent Testnet',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.dev.gblend.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Fluent Explorer',\n            url: 'https://blockscout.dev.gblend.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=fluentTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const forma = /*#__PURE__*/ defineChain({\n    id: 984122,\n    name: 'Forma',\n    network: 'forma',\n    nativeCurrency: {\n        symbol: 'TIA',\n        name: 'TIA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.forma.art'],\n            webSocket: ['wss://ws.forma.art'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Forma Explorer',\n            url: 'https://explorer.forma.art',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xd53C6FFB123F7349A32980F87faeD8FfDc9ef079',\n            blockCreated: 252705,\n        },\n    },\n});\n//# sourceMappingURL=forma.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const form = /*#__PURE__*/ defineChain({\n    id: 478,\n    name: 'Form Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ethereum',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.form.network/http'],\n            webSocket: ['wss://rpc.form.network/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Form Explorer',\n            url: 'https://explorer.form.network',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        addressManager: {\n            [sourceId]: {\n                address: '0x15c249E46A2F924C2dB3A1560CF86729bAD1f07B',\n            },\n        },\n        l1CrossDomainMessenger: {\n            [sourceId]: {\n                address: '0xF333158DCCad1dF6C3F0a3aEe8BC31fA94d9eD5c',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x4ccAAF69F41c5810cA875183648B577CaCf1F67E',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x4E259Ee5F4136408908160dD32295A5031Fa426F',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xdc20aA63D3DE59574E065957190D8f24e0F7B8Ba',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=form.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const formicarium = /*#__PURE__*/ defineChain({\n    id: 43521,\n    name: 'Formicarium',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'M',\n        symbol: 'M',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.formicarium.memecore.net'],\n            webSocket: ['wss://ws.formicarium.memecore.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MemeCore Testnet Explorer',\n            url: 'https://formicarium.memecorescan.io',\n        },\n        okx: {\n            name: 'MemeCore Testnet Explorer',\n            url: 'https://web3.okx.com/explorer/formicarium-testnet',\n        },\n        memecore: {\n            name: 'MemeCore Testnet Explorer',\n            url: 'https://formicarium.blockscout.memecore.com',\n            apiUrl: 'https://formicarium.blockscout.memecore.com/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=memecoreFormicariumTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const formTestnet = /*#__PURE__*/ defineChain({\n    id: 132_902,\n    name: 'Form Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ethereum',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia-rpc.form.network/http'],\n            webSocket: ['wss://sepolia-rpc.form.network/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Form Testnet Explorer',\n            url: 'https://sepolia-explorer.form.network',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        addressManager: {\n            [sourceId]: {\n                address: '0xd5C38fa934f7fd7477D4800F4f38a1c5BFdF1373',\n            },\n        },\n        l1CrossDomainMessenger: {\n            [sourceId]: {\n                address: '0x37A68565c4BE9700b3E3Ec60cC4416cAC3052FAa',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x9eA2239E65a59EC9C7F1ED4C116dD58Da71Fc1e2',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x60377e3cE15dF4CCA24c4beF076b60314240b032',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xD4531f633942b2725896F47cD2aFd260b44Ab1F7',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=formTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const forta = /*#__PURE__*/ defineChain({\n    id: 80_931,\n    name: 'Forta Chain',\n    nativeCurrency: {\n        symbol: 'FORT',\n        name: 'FORT',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-forta-chain-8gj1qndmfc.t.conduit.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Forta Explorer',\n            url: 'https://explorer.forta.org',\n        },\n    },\n});\n//# sourceMappingURL=forta.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const foundry = /*#__PURE__*/ defineChain({\n    id: 31_337,\n    name: 'Foundry',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['http://127.0.0.1:8545'],\n            webSocket: ['ws://127.0.0.1:8545'],\n        },\n    },\n});\n//# sourceMappingURL=foundry.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const fraxtal = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 252,\n    name: 'Fraxtal',\n    nativeCurrency: { name: 'Frax', symbol: 'FRAX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.frax.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'fraxscan',\n            url: 'https://fraxscan.com',\n            apiUrl: 'https://api.fraxscan.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x66CC916Ed5C6C2FA97014f7D1cD141528Ae171e4',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x36cb65c1967A0Fb0EEE11569C51C2f2aA1Ca6f6D',\n                blockCreated: 19135323,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x34C0bD5877A5Ee7099D0f5688D65F4bB9158BDE2',\n                blockCreated: 19135323,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=fraxtal.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 17000; // holesky\nexport const fraxtalTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 2522,\n    name: 'Fraxtal Testnet',\n    nativeCurrency: { name: 'Frax', symbol: 'FRAX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.frax.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'fraxscan testnet',\n            url: 'https://holesky.fraxscan.com',\n            apiUrl: 'https://api-holesky.fraxscan.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x715EA64DA13F4d0831ece4Ad3E8c1aa013167F32',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xB9c64BfA498d5b9a8398Ed6f46eb76d90dE5505d',\n                blockCreated: 318416,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x0BaafC217162f64930909aD9f2B27125121d6332',\n                blockCreated: 318416,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=fraxtalTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const funkiMainnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 33979,\n    name: 'Funki',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-mainnet.funkichain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Funki Mainnet Explorer',\n            url: 'https://funkiscan.io',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n    },\n    sourceId,\n});\n//# sourceMappingURL=funkiMainnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const funkiSepolia = defineChain({\n    ...chainConfig,\n    id: 3397901,\n    network: 'funkiSepolia',\n    name: 'Funki Sepolia Sandbox',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://funki-testnet.alt.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Funki Sepolia Sandbox Explorer',\n            url: 'https://sepolia-sandbox.funkichain.com/',\n        },\n    },\n    testnet: true,\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1620204,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=funkiSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fuse = /*#__PURE__*/ defineChain({\n    id: 122,\n    name: 'Fuse',\n    nativeCurrency: { name: 'Fuse', symbol: 'FUSE', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.fuse.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Fuse Explorer',\n            url: 'https://explorer.fuse.io',\n            apiUrl: 'https://explorer.fuse.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 16146628,\n        },\n    },\n});\n//# sourceMappingURL=fuse.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fuseSparknet = /*#__PURE__*/ defineChain({\n    id: 123,\n    name: 'Fuse Sparknet',\n    nativeCurrency: { name: 'Spark', symbol: 'SPARK', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.fusespark.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sparkent Explorer',\n            url: 'https://explorer.fusespark.io',\n            apiUrl: 'https://explorer.fusespark.io/api',\n        },\n    },\n});\n//# sourceMappingURL=fuseSparknet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fusion = /*#__PURE__*/ defineChain({\n    id: 32659,\n    name: 'Fusion Mainnet',\n    nativeCurrency: { name: 'Fusion', symbol: 'FSN', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.fusionnetwork.io'],\n            webSocket: ['wss://mainnet.fusionnetwork.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'FSNscan',\n            url: 'https://fsnscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 10441605,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=fusion.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const fusionTestnet = /*#__PURE__*/ defineChain({\n    id: 46688,\n    name: 'Fusion Testnet',\n    nativeCurrency: { name: 'Fusion', symbol: 'FSN', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.fusionnetwork.io'],\n            webSocket: ['wss://testnet.fusionnetwork.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'FSNscan',\n            url: 'https://testnet.fsnscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 10428309,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=fusionTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 17000; // Holesky testnet\nexport const garnet = defineChain({\n    ...chainConfig,\n    name: 'Garnet Testnet',\n    testnet: true,\n    id: 17069,\n    sourceId,\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.garnetchain.com'],\n            webSocket: ['wss://rpc.garnetchain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.garnetchain.com',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x57ee40586fbE286AfC75E67cb69511A6D9aF5909',\n                blockCreated: 1274684,\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xCb8E7AC561b8EF04F2a15865e9fbc0766FEF569B',\n                blockCreated: 1274684,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x09bcDd311FE398F80a78BE37E489f5D440DB95DE',\n                blockCreated: 1274684,\n            },\n        },\n    },\n});\n//# sourceMappingURL=garnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const geist = /*#__PURE__*/ defineChain({\n    id: 63157,\n    name: 'Geist Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Aavegotchi GHST Token',\n        symbol: 'GHST',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://geist-mainnet.g.alchemy.com/public'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://geist-mainnet.explorer.alchemy.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 660735,\n        },\n    },\n});\n//# sourceMappingURL=geist.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const genesys = /*#__PURE__*/ defineChain({\n    id: 16507,\n    name: 'Genesys Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'GSYS',\n        symbol: 'GSYS',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.genesys.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Genesys Explorer',\n            url: 'https://gchainexplorer.genesys.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=genesys.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const glideL1Protocol = /*#__PURE__*/ defineChain({\n    id: 251,\n    name: 'Glide L1 Protocol XP',\n    nativeCurrency: { name: 'GLXP', symbol: 'GLXP', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-api.glideprotocol.xyz/l1-rpc'],\n            webSocket: ['wss://rpc-api.glideprotocol.xyz/l1-rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Glide Protocol Explore',\n            url: 'https://blockchain-explorer.glideprotocol.xyz',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=glideL1Protocol.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const glideL2Protocol = /*#__PURE__*/ defineChain({\n    id: 253,\n    name: 'Glide L2 Protocol XP',\n    nativeCurrency: { name: 'GLXP', symbol: 'GLXP', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-api.glideprotocol.xyz/l2-rpc'],\n            webSocket: ['wss://rpc-api.glideprotocol.xyz/l2-rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Glide Protocol Explore',\n            url: 'https://blockchain-explorer.glideprotocol.xyz',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=glideL2Protocol.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const gnosis = /*#__PURE__*/ defineChain({\n    id: 100,\n    name: 'Gnosis',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'xDAI',\n        symbol: 'XDAI',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.gnosischain.com'],\n            webSocket: ['wss://rpc.gnosischain.com/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Gnosisscan',\n            url: 'https://gnosisscan.io',\n            apiUrl: 'https://api.gnosisscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 21022491,\n        },\n    },\n});\n//# sourceMappingURL=gnosis.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const gnosisChiado = /*#__PURE__*/ defineChain({\n    id: 10_200,\n    name: 'Gnosis Chiado',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Gnosis',\n        symbol: 'xDAI',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.chiadochain.net'],\n            webSocket: ['wss://rpc.chiadochain.net/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://blockscout.chiadochain.net',\n            apiUrl: 'https://blockscout.chiadochain.net/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 4967313,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=gnosisChiado.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const goat = /*#__PURE__*/ defineChain({\n    id: 2345,\n    name: 'GOAT',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Bitcoin',\n        symbol: 'BTC',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.goat.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Goat Explorer',\n            url: 'https://explorer.goat.network',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n    },\n});\n//# sourceMappingURL=goat.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const gobi = /*#__PURE__*/ defineChain({\n    id: 1_663,\n    name: 'Horizen Gobi Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Test ZEN',\n        symbol: 'tZEN',\n    },\n    rpcUrls: {\n        default: { http: ['https://gobi-testnet.horizenlabs.io/ethv1'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Gobi Explorer',\n            url: 'https://gobi-explorer.horizen.io',\n        },\n    },\n    contracts: {},\n    testnet: true,\n});\n//# sourceMappingURL=gobi.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const goChain = /*#__PURE__*/ defineChain({\n    id: 60,\n    name: 'GoChain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'GO',\n        symbol: 'GO',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.gochain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'GoChain Explorer',\n            url: 'https://explorer.gochain.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=goChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const godwoken = /*#__PURE__*/ defineChain({\n    id: 71402,\n    name: 'Godwoken Mainnet',\n    nativeCurrency: { decimals: 18, name: 'pCKB', symbol: 'pCKB' },\n    rpcUrls: {\n        default: {\n            http: ['https://v1.mainnet.godwoken.io/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'GW Scan',\n            url: 'https://v1.gwscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 15034,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=godwoken.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const goerli = /*#__PURE__*/ defineChain({\n    id: 5,\n    name: 'Goerli',\n    nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://5.rpc.thirdweb.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://goerli.etherscan.io',\n            apiUrl: 'https://api-goerli.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        ensUniversalResolver: {\n            address: '0xfc4AC75C46C914aF5892d6d3eFFcebD7917293F1',\n            blockCreated: 10_339_206,\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 6507670,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=goerli.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const gravity = /*#__PURE__*/ defineChain({\n    id: 1625,\n    name: 'Gravity Alpha Mainnet',\n    nativeCurrency: { name: 'G', symbol: 'G', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.gravity.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Gravity Explorer',\n            url: 'https://explorer.gravity.xyz',\n            apiUrl: 'https://explorer.gravity.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xf8ac4BEB2F75d2cFFb588c63251347fdD629B92c',\n            blockCreated: 16851,\n        },\n    },\n});\n//# sourceMappingURL=gravity.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const gunz = /*#__PURE__*/ defineChain({\n    id: 43_419,\n    name: 'Gunz Mainnet',\n    nativeCurrency: { name: 'GUN', symbol: 'GUN', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc.gunzchain.io/ext/bc/2M47TxWHGnhNtq6pM5zPXdATBtuqubxn5EPFgFmEawCQr9WFML/rpc',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Gunz Explorer',\n            url: 'https://gunzscan.io/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 70502,\n        },\n    },\n});\n//# sourceMappingURL=gunz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const guruNetwork = /*#__PURE__*/ defineChain({\n    id: 260,\n    name: 'Guru Network Mainnet',\n    nativeCurrency: {\n        name: 'GURU Token',\n        symbol: 'GURU',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc-main.gurunetwork.ai',\n                'https://rpc.gurunetwork.ai/archive/260',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Guruscan',\n            url: 'https://scan.gurunetwork.ai',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 271691,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=guruNetwork.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const guruTestnet = /*#__PURE__*/ defineChain({\n    id: 261,\n    name: 'Guru Network Testnet',\n    nativeCurrency: {\n        name: 'tGURU Token',\n        symbol: 'tGURU',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc-test.gurunetwork.ai',\n                'https://rpc.gurunetwork.ai/archive/261',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Guruscan',\n            url: 'https://sepolia.gurunetwork.ai',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=guruTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ham = /*#__PURE__*/ defineChain({\n    id: 5112,\n    name: 'Ham',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ham',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.ham.fun'],\n            webSocket: ['wss://rpc.ham.fun'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ham Chain Explorer',\n            url: 'https://explorer.ham.fun',\n            apiUrl: 'https://explorer.ham.fun/api/v2',\n        },\n    },\n});\n//# sourceMappingURL=ham.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const happychainTestnet = /*#__PURE__*/ defineChain({\n    id: 216,\n    name: 'Happychain Testnet',\n    nativeCurrency: {\n        symbol: 'HAPPY',\n        name: 'HAPPY',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.happy.tech/http'],\n            webSocket: ['wss://rpc.testnet.happy.tech/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Happy Chain Testnet Explorer',\n            url: 'https://explorer.testnet.happy.tech',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=happychainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const haqqMainnet = /*#__PURE__*/ defineChain({\n    id: 11235,\n    name: 'HAQQ Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Islamic Coin',\n        symbol: 'ISLM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.eth.haqq.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'HAQQ Explorer',\n            url: 'https://explorer.haqq.network',\n            apiUrl: 'https://explorer.haqq.network/api',\n        },\n    },\n});\n//# sourceMappingURL=haqqMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const haqqTestedge2 = /*#__PURE__*/ defineChain({\n    id: 54211,\n    name: 'HAQQ Testedge 2',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Islamic Coin',\n        symbol: 'ISLMT',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.eth.testedge2.haqq.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'HAQQ Explorer',\n            url: 'https://explorer.testedge2.haqq.network',\n            apiUrl: 'https://explorer.testedge2.haqq.network/api',\n        },\n    },\n});\n//# sourceMappingURL=haqqTestedge2.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hardhat = /*#__PURE__*/ defineChain({\n    id: 31_337,\n    name: 'Hardhat',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['http://127.0.0.1:8545'] },\n    },\n});\n//# sourceMappingURL=hardhat.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const harmonyOne = /*#__PURE__*/ defineChain({\n    id: 1_666_600_000,\n    name: 'Harmony One',\n    nativeCurrency: {\n        name: 'Harmony',\n        symbol: 'ONE',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://1666600000.rpc.thirdweb.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Harmony Explorer',\n            url: 'https://explorer.harmony.one',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 24185753,\n        },\n    },\n});\n//# sourceMappingURL=harmonyOne.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hashkey = /*#__PURE__*/ defineChain({\n    id: 177,\n    name: 'HashKey Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'HashKey EcoPoints',\n        symbol: 'HSK',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.hsk.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'HashKey Chain Explorer',\n            url: 'https://hashkey.blockscout.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n    },\n});\n//# sourceMappingURL=hashKeyChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hashkeyTestnet = /*#__PURE__*/ defineChain({\n    id: 133,\n    name: 'HashKey Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'HashKey EcoPoints',\n        symbol: 'HSK',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://hashkeychain-testnet.alt.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'HashKey Chain Explorer',\n            url: 'https://hashkeychain-testnet-explorer.alt.technology',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=hashkeyChainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const haustTestnet = /*#__PURE__*/ defineChain({\n    id: 1_523_903_251,\n    name: 'Haust Network Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'HAUST',\n        symbol: 'HAUST',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet.haust.app'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Haust Network Testnet Explorer',\n            url: 'https://explorer-testnet.haust.app',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=haustTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hedera = /*#__PURE__*/ defineChain({\n    id: 295,\n    name: 'Hedera Mainnet',\n    network: 'hedera-mainnet',\n    nativeCurrency: {\n        symbol: 'HBAR',\n        name: 'HBAR',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.hashio.io/api'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Hashscan',\n            url: 'https://hashscan.io/mainnet',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=hedera.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hederaPreviewnet = /*#__PURE__*/ defineChain({\n    id: 297,\n    name: 'Hedera Previewnet',\n    network: 'hedera-previewnet',\n    nativeCurrency: {\n        symbol: 'HBAR',\n        name: 'HBAR',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://previewnet.hashio.io/api'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Hashscan',\n            url: 'https://hashscan.io/previewnet',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=hederaPreviewnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hederaTestnet = /*#__PURE__*/ defineChain({\n    id: 296,\n    name: 'Hedera Testnet',\n    network: 'hedera-testnet',\n    nativeCurrency: {\n        symbol: 'HBAR',\n        name: 'HBAR',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.hashio.io/api'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Hashscan',\n            url: 'https://hashscan.io/testnet',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=hederaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hela = /*#__PURE__*/ defineChain({\n    id: 8668,\n    name: 'Hela Mainnet',\n    nativeCurrency: {\n        name: 'HLUSD',\n        symbol: 'HLUSD',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet-rpc.helachain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Hela explorer',\n            url: 'https://mainnet-blockexplorer.helachain.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=hela.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hemi = /*#__PURE__*/ defineChain({\n    id: 43111,\n    name: 'Hemi',\n    network: 'Hemi',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.hemi.network/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://explorer.hemi.xyz',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=hemi.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hemiSepolia = /*#__PURE__*/ defineChain({\n    id: 743111,\n    name: 'Hemi Sepolia',\n    network: 'Hemi Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.rpc.hemi.network/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Hemi Sepolia explorer',\n            url: 'https://testnet.explorer.hemi.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=hemiSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const holesky = /*#__PURE__*/ defineChain({\n    id: 17000,\n    name: 'Holesky',\n    nativeCurrency: { name: 'Holesky Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://ethereum-holesky-rpc.publicnode.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://holesky.etherscan.io',\n            apiUrl: 'https://api-holesky.etherscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 77,\n        },\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n            blockCreated: 801613,\n        },\n        ensUniversalResolver: {\n            address: '0xa6AC935D4971E3CD133b950aE053bECD16fE7f3b',\n            blockCreated: 973484,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=holesky.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hoodi = /*#__PURE__*/ defineChain({\n    id: 560048,\n    name: 'Hoodi',\n    nativeCurrency: { name: 'Hoodi Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.hoodi.ethpandaops.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://hoodi.etherscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 2589,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=hoodi.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hpb = /*#__PURE__*/ defineChain({\n    id: 269,\n    name: 'High Performance Blockchain',\n    nativeCurrency: { name: 'HPB', symbol: 'HPB', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://hpbnode.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'hpbScan',\n            url: 'https://hscan.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=hpb.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 42_161; // Arbitrum One\nexport const huddle01Mainnet = /*#__PURE__*/ defineChain({\n    id: 12323,\n    name: 'Huddle01 dRTC Chain',\n    nativeCurrency: {\n        name: 'Ethereum',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://huddle01.calderachain.xyz/http'],\n            webSocket: ['wss://huddle01.calderachain.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Huddle01 Caldera Explorer',\n            url: 'https://huddle01.calderaexplorer.xyz',\n            apiUrl: 'https://huddle01.calderaexplorer.xyz/api',\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=huddle01Mainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 421_614; // Arbitrum Sepolia\nexport const huddle01Testnet = /*#__PURE__*/ defineChain({\n    id: 2524852,\n    name: 'Huddle01 dRTC Chain Testnet',\n    nativeCurrency: {\n        name: 'Ethereum',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://huddle-testnet.rpc.caldera.xyz/http'],\n            webSocket: ['wss://huddle-testnet.rpc.caldera.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Huddle01 Caldera Explorer',\n            url: 'https://huddle-testnet.explorer.caldera.xyz',\n            apiUrl: 'https://huddle-testnet.explorer.caldera.xyz/api',\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=huddle01Testnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const humanode = /*#__PURE__*/ defineChain({\n    id: 5234,\n    name: 'Humanode',\n    nativeCurrency: { name: 'HMND', symbol: 'HMND', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://explorer-rpc-http.mainnet.stages.humanode.io'],\n            webSocket: ['wss://explorer-rpc-ws.mainnet.stages.humanode.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Subscan',\n            url: 'https://humanode.subscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4_413_097,\n        },\n    },\n});\n//# sourceMappingURL=humanode.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const humanodeTestnet5 = /*#__PURE__*/ defineChain({\n    id: 14853,\n    name: 'Humanode Testnet 5',\n    nativeCurrency: { name: 'HMND', symbol: 'HMND', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://explorer-rpc-http.testnet5.stages.humanode.io'],\n            webSocket: ['wss://explorer-rpc-ws.testnet5.stages.humanode.io'],\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n    },\n});\n//# sourceMappingURL=humanodeTestnet5.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hychain = /*#__PURE__*/ defineChain({\n    id: 2911,\n    name: 'HYCHAIN',\n    nativeCurrency: { name: 'HYTOPIA', symbol: 'TOPIA', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.hychain.com/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'HYCHAIN Explorer',\n            url: 'https://explorer.hychain.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=hychain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const hychainTestnet = /*#__PURE__*/ defineChain({\n    id: 29112,\n    name: 'HYCHAIN Testnet',\n    nativeCurrency: { name: 'HYTOPIA', symbol: 'TOPIA', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.hychain.com/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'HYCHAIN Explorer',\n            url: 'https://testnet-rpc.hychain.com/http',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=hychainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const idchain = /*#__PURE__*/ defineChain({\n    id: 74,\n    name: 'IDChain Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'EIDI',\n        symbol: 'EIDI',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://idchain.one/rpc'],\n            webSocket: ['wss://idchain.one/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'IDChain Explorer',\n            url: 'https://explorer.idchain.one',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=idchain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const immutableZkEvm = /*#__PURE__*/ defineChain({\n    id: 13371,\n    name: 'Immutable zkEVM',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Immutable Coin',\n        symbol: 'IMX',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.immutable.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Immutable Explorer',\n            url: 'https://explorer.immutable.com',\n            apiUrl: 'https://explorer.immutable.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x236bdA4589e44e6850f5aC6a74BfCa398a86c6c0',\n            blockCreated: 4335972,\n        },\n    },\n});\n//# sourceMappingURL=immutableZkEvm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const immutableZkEvmTestnet = /*#__PURE__*/ defineChain({\n    id: 13473,\n    name: 'Immutable zkEVM Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Immutable Coin',\n        symbol: 'IMX',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.immutable.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Immutable Testnet Explorer',\n            url: 'https://explorer.testnet.immutable.com/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x2CC787Ed364600B0222361C4188308Fa8E68bA60',\n            blockCreated: 5977391,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=immutableZkEvmTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const inEVM = /*#__PURE__*/ defineChain({\n    id: 2525,\n    name: 'inEVM Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Injective',\n        symbol: 'INJ',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.rpc.inevm.com/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'inEVM Explorer',\n            url: 'https://inevm.calderaexplorer.xyz',\n            apiUrl: 'https://inevm.calderaexplorer.xyz/api/v2',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 118606,\n        },\n    },\n});\n//# sourceMappingURL=inEVM.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const initVerse = /*#__PURE__*/ defineChain({\n    id: 7_233,\n    name: 'InitVerse Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'InitVerse',\n        symbol: 'INI',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc-mainnet.inichain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'InitVerseScan',\n            url: 'https://www.iniscan.com',\n            apiUrl: 'https://explorer-api.inichain.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x83466BE48A067115FFF91f7b892Ed1726d032e47',\n            blockCreated: 2318,\n        },\n    },\n});\n//# sourceMappingURL=initVerse.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const initVerseGenesis = /*#__PURE__*/ defineChain({\n    id: 7_234,\n    name: 'InitVerse Genesis Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'InitVerse',\n        symbol: 'INI',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc-testnet.inichain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'InitVerseGenesisScan',\n            url: 'https://genesis-testnet.iniscan.com',\n            apiUrl: 'https://explorer-testnet-api.inichain.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x0cF32CBDd6c437331EA4f85ed2d881A5379B5a6F',\n            blockCreated: 16361,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=initVerseGenesis.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const ink = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 57073,\n    name: 'Ink',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc-gel.inkonchain.com',\n                'https://rpc-qnd.inkonchain.com',\n            ],\n            webSocket: [\n                'wss://rpc-gel.inkonchain.com',\n                'wss://rpc-qnd.inkonchain.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.inkonchain.com',\n            apiUrl: 'https://explorer.inkonchain.com/api/v2',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x10d7b35078d3baabb96dd45a9143b94be65b12cd',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x5d66c1782664115999c47c9fa5cd031f495d3e4f',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x88ff1e5b602916615391f55854588efcbb7663f0',\n            },\n        },\n    },\n    testnet: false,\n    sourceId,\n});\n//# sourceMappingURL=ink.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const inkSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 763373,\n    name: 'Ink Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-gel-sepolia.inkonchain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer-sepolia.inkonchain.com/',\n            apiUrl: 'https://explorer-sepolia.inkonchain.com/api/v2',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x860e626c700af381133d9f4af31412a2d1db3d5d',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x5c1d29c6c9c8b0800692acc95d700bcb4966a1d7',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x33f60714bbd74d62b66d79213c348614de51901c',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=inkSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const iota = /*#__PURE__*/ defineChain({\n    id: 8822,\n    name: 'IOTA EVM',\n    network: 'iotaevm',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IOTA',\n        symbol: 'IOTA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://json-rpc.evm.iotaledger.net'],\n            webSocket: ['wss://ws.json-rpc.evm.iotaledger.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://explorer.evm.iota.org',\n            apiUrl: 'https://explorer.evm.iota.org/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 25022,\n        },\n    },\n});\n//# sourceMappingURL=iota.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const iotaTestnet = /*#__PURE__*/ defineChain({\n    id: 1075,\n    name: 'IOTA EVM Testnet',\n    network: 'iotaevm-testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IOTA',\n        symbol: 'IOTA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://json-rpc.evm.testnet.iotaledger.net'],\n            webSocket: ['wss://ws.json-rpc.evm.testnet.iotaledger.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://explorer.evm.testnet.iotaledger.net',\n            apiUrl: 'https://explorer.evm.testnet.iotaledger.net/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=iotaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const iotex = /*#__PURE__*/ defineChain({\n    id: 4_689,\n    name: 'IoTeX',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IoTeX',\n        symbol: 'IOTX',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://babel-api.mainnet.iotex.io'],\n            webSocket: ['wss://babel-api.mainnet.iotex.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'IoTeXScan',\n            url: 'https://iotexscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 22163670,\n        },\n    },\n});\n//# sourceMappingURL=iotex.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const iotexTestnet = /*#__PURE__*/ defineChain({\n    id: 4_690,\n    name: 'IoTeX Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IoTeX',\n        symbol: 'IOTX',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://babel-api.testnet.iotex.io'],\n            webSocket: ['wss://babel-api.testnet.iotex.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'IoTeXScan',\n            url: 'https://testnet.iotexscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xb5cecD6894c6f473Ec726A176f1512399A2e355d',\n            blockCreated: 24347592,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=iotexTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const iSunCoin = /*#__PURE__*/ defineChain({\n    id: 8017,\n    name: 'iSunCoin Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ISC',\n        symbol: 'ISC',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.isuncoin.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'iSunCoin Explorer',\n            url: 'https://baifa.io/app/chains/8017',\n        },\n    },\n});\n//# sourceMappingURL=iSunCoin.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const jbc = /*#__PURE__*/ defineChain({\n    id: 8899,\n    name: 'JB Chain',\n    network: 'jbc',\n    nativeCurrency: { name: 'JBC', symbol: 'JBC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-l1.jibchain.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://exp-l1.jibchain.net',\n            apiUrl: 'https://exp-l1.jibchain.net/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xc0C8C486D1466C57Efe13C2bf000d4c56F47CBdC',\n            blockCreated: 2299048,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=jbc.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const jbcTestnet = /*#__PURE__*/ defineChain({\n    id: 88991,\n    name: 'Jibchain Testnet',\n    nativeCurrency: { name: 'tJBC', symbol: 'tJBC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.jibchain.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://exp.testnet.jibchain.net',\n            apiUrl: 'https://exp.testnet.jibchain.net/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xa1a858ad9041B4741e620355a3F96B3c78e70ecE',\n            blockCreated: 32848,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=jbcTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneo = /*#__PURE__*/ defineChain({\n    id: 45_003,\n    name: 'Juneo JUNE-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'JUNE-Chain',\n        symbol: 'JUNE',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/JUNE/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/2',\n            apiUrl: 'https://juneoscan.io/chain/2/api',\n        },\n    },\n});\n//# sourceMappingURL=juneo.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoBCH1Chain = /*#__PURE__*/ defineChain({\n    id: 45_013,\n    name: 'Juneo BCH1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo BCH1-Chain',\n        symbol: 'BCH1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/BCH1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/12',\n            apiUrl: 'https://juneoscan.io/chain/12/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoBCH1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoDAI1Chain = /*#__PURE__*/ defineChain({\n    id: 45_004,\n    name: 'Juneo DAI1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo DAI1-Chain',\n        symbol: 'DAI1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/DAI1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/5',\n            apiUrl: 'https://juneoscan.io/chain/5/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoDAI1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoDOGE1Chain = /*#__PURE__*/ defineChain({\n    id: 45_010,\n    name: 'Juneo DOGE1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo DOGE1-Chain',\n        symbol: 'DOGE1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/DOGE1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/10',\n            apiUrl: 'https://juneoscan.io/chain/10/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoDOGE1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoEUR1Chain = /*#__PURE__*/ defineChain({\n    id: 45_011,\n    name: 'Juneo EUR1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo EUR1-Chain',\n        symbol: 'EUR1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/EUR1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/6',\n            apiUrl: 'https://juneoscan.io/chain/6/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoEUR1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoGLD1Chain = /*#__PURE__*/ defineChain({\n    id: 45_008,\n    name: 'Juneo GLD1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo GLD1-Chain',\n        symbol: 'GLD1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/GLD1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/8',\n            apiUrl: 'https://juneoscan.io/chain/8/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoGLD1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoLINK1Chain = /*#__PURE__*/ defineChain({\n    id: 45_014,\n    name: 'Juneo LINK1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo LINK1-Chain',\n        symbol: 'LINK1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/LINK1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/13',\n            apiUrl: 'https://juneoscan.io/chain/13/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoLINK1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoLTC1Chain = /*#__PURE__*/ defineChain({\n    id: 45_009,\n    name: 'Juneo LTC1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo LTC1-Chain',\n        symbol: 'LTC1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/LTC1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/11',\n            apiUrl: 'https://juneoscan.io/chain/11/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoLTC1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneomBTC1Chain = /*#__PURE__*/ defineChain({\n    id: 45_007,\n    name: 'Juneo mBTC1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo mBTC1-Chain',\n        symbol: 'mBTC1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/mBTC1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/9',\n            apiUrl: 'https://juneoscan.io/chain/9/api',\n        },\n    },\n});\n//# sourceMappingURL=juneomBTC1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoSGD1Chain = /*#__PURE__*/ defineChain({\n    id: 45_012,\n    name: 'Juneo SGD1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo SGD1-Chain',\n        symbol: 'SGD1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/SGD1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/7',\n            apiUrl: 'https://juneoscan.io/chain/7/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoSGD1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoSocotraTestnet = /*#__PURE__*/ defineChain({\n    id: 101_003,\n    name: 'Socotra JUNE-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Socotra JUNE-Chain',\n        symbol: 'JUNE',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.socotra-testnet.network/ext/bc/JUNE/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://socotra.juneoscan.io/chain/2',\n            apiUrl: 'https://socotra.juneoscan.io/chain/2/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=juneoSocotraTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoUSD1Chain = /*#__PURE__*/ defineChain({\n    id: 45_006,\n    name: 'Juneo USD1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo USD1-Chain',\n        symbol: 'USD1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/USD1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/4',\n            apiUrl: 'https://juneoscan.io/chain/4/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoUSD1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const juneoUSDT1Chain = /*#__PURE__*/ defineChain({\n    id: 45_005,\n    name: 'Juneo USDT1-Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Juneo USDT1-Chain',\n        symbol: 'USDT1',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.juneo-mainnet.network/ext/bc/USDT1/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Juneo Scan',\n            url: 'https://juneoscan.io/chain/3',\n            apiUrl: 'https://juneoscan.io/chain/3/api',\n        },\n    },\n});\n//# sourceMappingURL=juneoUSDT1Chain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const karura = /*#__PURE__*/ defineChain({\n    id: 686,\n    name: 'Karura',\n    network: 'karura',\n    nativeCurrency: {\n        name: 'Karura',\n        symbol: 'KAR',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://eth-rpc-karura.aca-api.network'],\n            webSocket: ['wss://eth-rpc-karura.aca-api.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Karura Blockscout',\n            url: 'https://blockscout.karura.network',\n            apiUrl: 'https://blockscout.karura.network/api',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=karura.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kakarotSepolia = /*#__PURE__*/ defineChain({\n    id: 1802203764,\n    name: 'Kakarot Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia-rpc.kakarot.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Kakarot Scan',\n            url: 'https://sepolia.kakarotscan.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=kakarotSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kakarotStarknetSepolia = /*#__PURE__*/ defineChain({\n    id: 920637907288165,\n    name: 'Kakarot Starknet Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia-rpc.kakarot.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Kakarot Scan',\n            url: 'https://sepolia.kakarotscan.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=kakarotStarknetSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kardiaChain = /*#__PURE__*/ defineChain({\n    id: 24,\n    name: 'KardiaChain Mainnet',\n    nativeCurrency: { name: 'KAI', symbol: 'KAI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.kardiachain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'KardiaChain Explorer',\n            url: 'https://explorer.kardiachain.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=kardiaChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kava = /*#__PURE__*/ defineChain({\n    id: 2222,\n    name: 'Kava EVM',\n    network: 'kava-mainnet',\n    nativeCurrency: {\n        name: 'Kava',\n        symbol: 'KAVA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.kava.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Kava EVM Explorer',\n            url: 'https://kavascan.com',\n            apiUrl: 'https://kavascan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 3661165,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=kava.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kavaTestnet = /*#__PURE__*/ defineChain({\n    id: 2221,\n    name: 'Kava EVM Testnet',\n    network: 'kava-testnet',\n    nativeCurrency: {\n        name: 'Kava',\n        symbol: 'KAVA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.testnet.kava.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Kava EVM Testnet Explorer',\n            url: 'https://testnet.kavascan.com/',\n            apiUrl: 'https://testnet.kavascan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xDf1D724A7166261eEB015418fe8c7679BBEa7fd6',\n            blockCreated: 7242179,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=kavaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kcc = /*#__PURE__*/ defineChain({\n    id: 321,\n    name: 'KCC Mainnet',\n    network: 'KCC Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'KCS',\n        symbol: 'KCS',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://kcc-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: { name: 'KCC Explorer', url: 'https://explorer.kcc.io' },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 11760430,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=kcc.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kinto = /*#__PURE__*/ defineChain({\n    id: 7887,\n    name: 'Kinto Mainnet',\n    network: 'Kinto Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.kinto.xyz/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Kinto Explorer',\n            url: 'https://explorer.kinto.xyz',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=kinto.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const klaytn = /*#__PURE__*/ defineChain({\n    id: 8_217,\n    name: 'Klaytn',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Klaytn',\n        symbol: 'KLAY',\n    },\n    rpcUrls: {\n        default: { http: ['https://public-en-cypress.klaytn.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'KlaytnScope',\n            url: 'https://scope.klaytn.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 96002415,\n        },\n    },\n});\n//# sourceMappingURL=klaytn.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kaia = /*#__PURE__*/ defineChain({\n    id: 8_217,\n    name: 'Kaia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Kaia',\n        symbol: 'KAIA',\n    },\n    rpcUrls: {\n        default: { http: ['https://public-en.node.kaia.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'KaiaScan',\n            url: 'https://kaiascan.io',\n            apiUrl: 'https://api-cypress.klaytnscope.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 96002415,\n        },\n    },\n});\n//# sourceMappingURL=kaia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kairos = /*#__PURE__*/ defineChain({\n    id: 1_001,\n    name: 'Kairos Testnet',\n    network: 'kairos',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Kairos KAIA',\n        symbol: 'KAIA',\n    },\n    rpcUrls: {\n        default: { http: ['https://public-en-kairos.node.kaia.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'KaiaScan',\n            url: 'https://kairos.kaiascan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 123390593,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=kairos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const klaytnBaobab = /*#__PURE__*/ defineChain({\n    id: 1_001,\n    name: 'Klaytn Baobab Testnet',\n    network: 'klaytn-baobab',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Baobab Klaytn',\n        symbol: 'KLAY',\n    },\n    rpcUrls: {\n        default: { http: ['https://public-en-baobab.klaytn.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'KlaytnScope',\n            url: 'https://baobab.klaytnscope.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 123390593,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=klaytnBaobab.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const koi = defineChain({\n    id: 701,\n    name: 'Koi Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Koi Network Native Token',\n        symbol: 'KRING',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://koi-rpc.darwinia.network'],\n            webSocket: ['wss://koi-rpc.darwinia.network'],\n        },\n    },\n    blockExplorers: {\n        default: { name: 'Blockscout', url: 'https://koi-scan.darwinia.network' },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 180001,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=koi.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kroma = /*#__PURE__*/ defineChain({\n    id: 255,\n    name: 'Kroma',\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.kroma.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Kroma Explorer',\n            url: 'https://blockscout.kroma.network',\n            apiUrl: 'https://blockscout.kroma.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 16054868,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=kroma.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const kromaSepolia = /*#__PURE__*/ defineChain({\n    id: 2358,\n    name: 'Kroma Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.sepolia.kroma.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Kroma Sepolia Explorer',\n            url: 'https://blockscout.sepolia.kroma.network',\n            apiUrl: 'https://blockscout.sepolia.kroma.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 8900914,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=kromaSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const l3x = /*#__PURE__*/ defineChain({\n    id: 12324,\n    name: 'L3X Protocol',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-mainnet.l3x.com'],\n            webSocket: ['wss://rpc-mainnet.l3x.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'L3X Mainnet Explorer',\n            url: 'https://explorer.l3x.com',\n            apiUrl: 'https://explorer.l3x.com/api/v2',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=l3x.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const l3xTestnet = /*#__PURE__*/ defineChain({\n    id: 12325,\n    name: 'L3X Protocol Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet.l3x.com'],\n            webSocket: ['wss://rpc-testnet.l3x.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'L3X Testnet Explorer',\n            url: 'https://explorer-testnet.l3x.com',\n            apiUrl: 'https://explorer-testnet.l3x.com/api/v2',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=l3xTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lavita = /*#__PURE__*/ defineChain({\n    id: 360890,\n    name: 'LAVITA Mainnet',\n    nativeCurrency: { name: 'vTFUEL', symbol: 'vTFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://tsub360890-eth-rpc.thetatoken.org/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'LAVITA Explorer',\n            url: 'https://tsub360890-explorer.thetatoken.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=lavita.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lens = /*#__PURE__*/ defineChain({\n    id: 232,\n    name: 'Lens',\n    nativeCurrency: { name: 'GHO', symbol: 'GHO', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.lens.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lens Block Explorer',\n            url: 'https://explorer.lens.xyz',\n            apiUrl: 'https://explorer.lens.xyz/api',\n        },\n    },\n});\n//# sourceMappingURL=lens.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lensTestnet = /*#__PURE__*/ defineChain({\n    id: 37_111,\n    name: 'Lens Testnet',\n    nativeCurrency: { name: 'GRASS', symbol: 'GRASS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.lens.dev'],\n            webSocket: ['wss://rpc.testnet.lens.dev/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lens Block Explorer',\n            url: 'https://block-explorer.testnet.lens.dev',\n            apiUrl: 'https://block-explorer-api.staging.lens.dev/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=lensTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lestnet = /*#__PURE__*/ defineChain({\n    id: 21363,\n    name: 'Lestnet',\n    nativeCurrency: { name: 'Lestnet Ether', symbol: 'LETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://service.lestnet.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lestnet Explorer',\n            url: 'https://explore.lestnet.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=lestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lightlinkPegasus = /*#__PURE__*/ defineChain({\n    id: 1_891,\n    name: 'LightLink Pegasus Testnet',\n    network: 'lightlink-pegasus',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://replicator.pegasus.lightlink.io/rpc/v1'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'LightLink Pegasus Explorer',\n            url: 'https://pegasus.lightlink.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 127_188_532,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=lightlinkPegasus.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lightlinkPhoenix = /*#__PURE__*/ defineChain({\n    id: 1_890,\n    name: 'LightLink Phoenix Mainnet',\n    network: 'lightlink-phoenix',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://replicator.phoenix.lightlink.io/rpc/v1'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'LightLink Phoenix Explorer',\n            url: 'https://phoenix.lightlink.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 125_499_184,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=lightlinkPhoenix.js.map","import { estimateGas } from './actions/estimateGas.js';\nexport const chainConfig = {\n    fees: {\n        estimateFeesPerGas,\n        async maxPriorityFeePerGas({ block, client, request }) {\n            const response = await estimateFeesPerGas({\n                block,\n                client,\n                multiply: (x) => x,\n                request,\n                type: 'eip1559',\n            });\n            // Returning `null` will trigger the base `estimateMaxPriorityFeePerGas` to perform\n            // fallback mechanisms to estimate priority fee.\n            if (!response?.maxPriorityFeePerGas)\n                return null;\n            return response.maxPriorityFeePerGas;\n        },\n    },\n};\n///////////////////////////////////////////////////////////////////////////\n// Internal\n///////////////////////////////////////////////////////////////////////////\nasync function estimateFeesPerGas({ client, multiply, request, type, }) {\n    try {\n        const response = await estimateGas(client, {\n            ...request,\n            account: request?.account,\n        });\n        const { priorityFeePerGas: maxPriorityFeePerGas } = response;\n        const baseFeePerGas = multiply(BigInt(response.baseFeePerGas));\n        const maxFeePerGas = baseFeePerGas + maxPriorityFeePerGas;\n        if (type === 'legacy')\n            return { gasPrice: maxFeePerGas };\n        return {\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n        };\n    }\n    catch {\n        // Returning `null` will trigger the base `estimateFeesPerGas` to perform\n        // fallback mechanisms to estimate fees.\n        return null;\n    }\n}\n//# sourceMappingURL=chainConfig.js.map","import { parseAccount } from '../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../errors/account.js';\nimport { numberToHex } from '../../utils/encoding/toHex.js';\nimport { getCallError } from '../../utils/errors/getCallError.js';\nimport { extract } from '../../utils/formatters/extract.js';\nimport { formatTransactionRequest } from '../../utils/formatters/transactionRequest.js';\nimport { assertRequest, } from '../../utils/transaction/assertRequest.js';\n/**\n * Estimates the gas and fees per gas necessary to complete a transaction without submitting it to the network.\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateGasParameters}\n * @returns A gas estimate and fees per gas (in wei). {@link EstimateGasReturnType}\n *\n * @example\n * import { createPublicClient, http, parseEther } from 'viem'\n * import { linea } from 'viem/chains'\n * import { estimateGas } from 'viem/linea'\n *\n * const client = createPublicClient({\n *   chain: linea,\n *   transport: http(),\n * })\n * const gasEstimate = await estimateGas(client, {\n *   account: '0xA0Cf798816D4b9b9866b5330EEa46a18382f251e',\n *   to: '0x70997970c51812dc3a010c7d01b50e0d17dc79c8',\n *   value: 0n,\n * })\n */\nexport async function estimateGas(client, args) {\n    const { account: account_ = client.account } = args;\n    if (!account_)\n        throw new AccountNotFoundError();\n    const account = parseAccount(account_);\n    try {\n        const { accessList, blockNumber, blockTag, data, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, nonce, to, value, ...rest } = args;\n        const blockNumberHex = typeof blockNumber === 'bigint' ? numberToHex(blockNumber) : undefined;\n        const block = blockNumberHex || blockTag;\n        assertRequest(args);\n        const chainFormat = client.chain?.formatters?.transactionRequest?.format;\n        const format = chainFormat || formatTransactionRequest;\n        const request = format({\n            // Pick out extra data that might exist on the chain's transaction request type.\n            ...extract(rest, { format: chainFormat }),\n            from: account?.address,\n            accessList,\n            data,\n            gas,\n            gasPrice,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            nonce,\n            to,\n            value,\n        });\n        const { baseFeePerGas, gasLimit, priorityFeePerGas } = await client.request({\n            method: 'linea_estimateGas',\n            params: block ? [request, block] : [request],\n        });\n        return {\n            baseFeePerGas: BigInt(baseFeePerGas),\n            gasLimit: BigInt(gasLimit),\n            priorityFeePerGas: BigInt(priorityFeePerGas),\n        };\n    }\n    catch (err) {\n        throw getCallError(err, {\n            ...args,\n            account,\n            chain: client.chain,\n        });\n    }\n}\n//# sourceMappingURL=estimateGas.js.map","import { chainConfig } from '../../linea/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const linea = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 59_144,\n    name: 'Linea Mainnet',\n    nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.linea.build'],\n            webSocket: ['wss://rpc.linea.build'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://lineascan.build',\n            apiUrl: 'https://api.lineascan.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 42,\n        },\n        ensRegistry: {\n            address: '0x50130b669B28C339991d8676FA73CF122a121267',\n            blockCreated: 6682888,\n        },\n        ensUniversalResolver: {\n            address: '0x3aA974fb3f8C1E02796048BDCdeD79e9D53a6965',\n            blockCreated: 6683000,\n        },\n    },\n    ensTlds: ['.linea.eth'],\n    testnet: false,\n});\n//# sourceMappingURL=linea.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lineaGoerli = /*#__PURE__*/ defineChain({\n    id: 59_140,\n    name: 'Linea Goerli Testnet',\n    nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.goerli.linea.build'],\n            webSocket: ['wss://rpc.goerli.linea.build'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://goerli.lineascan.build',\n            apiUrl: 'https://api-goerli.lineascan.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 498623,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=lineaGoerli.js.map","import { chainConfig } from '../../linea/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const lineaSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 59_141,\n    name: 'Linea Sepolia Testnet',\n    nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.sepolia.linea.build'],\n            webSocket: ['wss://rpc.sepolia.linea.build'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia.lineascan.build',\n            apiUrl: 'https://api-sepolia.lineascan.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 227427,\n        },\n        ensRegistry: {\n            address: '0x5B2636F0f2137B4aE722C01dd5122D7d3e9541f7',\n            blockCreated: 2395094,\n        },\n        ensUniversalResolver: {\n            address: '0x72560a31B3DAEE82B984a7F51c6b3b1bb7CC9F50',\n            blockCreated: 2395255,\n        },\n    },\n    ensTlds: ['.linea.eth'],\n    testnet: true,\n});\n//# sourceMappingURL=lineaSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lineaTestnet = /*#__PURE__*/ defineChain({\n    id: 59_140,\n    name: 'Linea Goerli Testnet',\n    nativeCurrency: { name: 'Linea Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.goerli.linea.build'],\n            webSocket: ['wss://rpc.goerli.linea.build'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://goerli.lineascan.build',\n            apiUrl: 'https://goerli.lineascan.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 498623,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=lineaTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const lisk = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1135,\n    name: 'Lisk',\n    network: 'lisk',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.api.lisk.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://blockscout.lisk.com',\n            apiUrl: 'https://blockscout.lisk.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xA9d71E1dd7ca26F26e656E66d6AA81ed7f745bf0',\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x113cB99283AF242Da0A0C54347667edF531Aa7d6',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x26dB93F8b8b4f7016240af62F7730979d353f9A7',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x2658723Bf70c7667De6B25F99fcce13A16D25d08',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=lisk.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const liskSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 4202,\n    network: 'lisk-sepolia',\n    name: 'Lisk Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.sepolia-api.lisk.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://sepolia-blockscout.lisk.com',\n            apiUrl: 'https://sepolia-blockscout.lisk.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xA0E35F56C318DE1bD5D9ca6A94Fe7e37C5663348',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xe3d90F21490686Ec7eF37BE788E02dfC12787264',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x1Fb30e446eA791cd1f011675E5F3f5311b70faF5',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=liskSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const localhost = /*#__PURE__*/ defineChain({\n    id: 1_337,\n    name: 'Localhost',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['http://127.0.0.1:8545'] },\n    },\n});\n//# sourceMappingURL=localhost.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const loop = /*#__PURE__*/ defineChain({\n    id: 15551,\n    name: 'LoopNetwork Mainnet',\n    nativeCurrency: {\n        name: 'LOOP',\n        symbol: 'LOOP',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://api.mainnetloop.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'LoopNetwork Blockchain Explorer',\n            url: 'https://explorer.mainnetloop.com/',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=loop.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lukso = /*#__PURE__*/ defineChain({\n    id: 42,\n    network: 'lukso',\n    name: 'LUKSO',\n    nativeCurrency: {\n        name: 'LUKSO',\n        symbol: 'LYX',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.lukso.network'],\n            webSocket: ['wss://ws-rpc.mainnet.lukso.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'LUKSO Mainnet Explorer',\n            url: 'https://explorer.execution.mainnet.lukso.network',\n            apiUrl: 'https://api.explorer.execution.mainnet.lukso.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 468183,\n        },\n    },\n});\n//# sourceMappingURL=lukso.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const luksoTestnet = /*#__PURE__*/ defineChain({\n    id: 4201,\n    name: 'LUKSO Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'LUKSO Testnet',\n        symbol: 'LYXt',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.lukso.network'],\n            webSocket: ['wss://ws-rpc.testnet.lukso.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'LUKSO Testnet Explorer',\n            url: 'https://explorer.execution.testnet.lukso.network',\n            apiUrl: 'https://api.explorer.execution.testnet.lukso.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 605348,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=luksoTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lumiaMainnet = /*#__PURE__*/ defineChain({\n    id: 994873017,\n    name: 'Lumia Mainnet',\n    network: 'LumiaMainnet',\n    nativeCurrency: { name: 'Lumia', symbol: 'LUMIA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet-rpc.lumia.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lumia Explorer',\n            url: 'https://explorer.lumia.org/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3975939,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=lumiaMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lumiaTestnet = /*#__PURE__*/ defineChain({\n    id: 1952959480,\n    name: 'Lumia Testnet',\n    network: 'LumiaTestnet',\n    nativeCurrency: {\n        name: 'Lumia',\n        symbol: 'LUMIA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.lumia.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lumia Testnet Explorer',\n            url: 'https://testnet-explorer.lumia.org/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 2235063,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=lumiaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lumoz = /*#__PURE__*/ defineChain({\n    id: 96_370,\n    name: 'Lumoz',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Lumoz Token',\n        symbol: 'MOZ',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.lumoz.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lumoz Scan',\n            url: 'https://scan.lumoz.info',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=lumoz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lumozTestnet = /*#__PURE__*/ defineChain({\n    id: 105_363,\n    name: 'Lumoz Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Lumoz Testnet Token',\n        symbol: 'MOZ',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.lumoz.org'],\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=lumozTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lycan = /*#__PURE__*/ defineChain({\n    id: 721,\n    name: 'Lycan',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Lycan',\n        symbol: 'LYC',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc.lycanchain.com',\n                'https://us-east.lycanchain.com',\n                'https://us-west.lycanchain.com',\n                'https://eu-north.lycanchain.com',\n                'https://eu-west.lycanchain.com',\n                'https://asia-southeast.lycanchain.com',\n            ],\n            webSocket: [\n                'wss://rpc.lycanchain.com',\n                'wss://us-east.lycanchain.com',\n                'wss://us-west.lycanchain.com',\n                'wss://eu-north.lycanchain.com',\n                'wss://eu-west.lycanchain.com',\n                'wss://asia-southeast.lycanchain.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lycan Explorer',\n            url: 'https://explorer.lycanchain.com',\n        },\n    },\n});\n//# sourceMappingURL=lycan.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const lyra = /*#__PURE__*/ defineChain({\n    id: 957,\n    name: 'Lyra Chain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.lyra.finance'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lyra Explorer',\n            url: 'https://explorer.lyra.finance',\n            apiUrl: 'https://explorer.lyra.finance/api/v2',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1935198,\n        },\n    },\n});\n//# sourceMappingURL=lyra.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mainnet = /*#__PURE__*/ defineChain({\n    id: 1,\n    name: 'Ethereum',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://eth.merkle.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://etherscan.io',\n            apiUrl: 'https://api.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        ensUniversalResolver: {\n            address: '0xce01f8eee7E479C928F8919abD53E553a36CeF67',\n            blockCreated: 19_258_213,\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14_353_601,\n        },\n    },\n});\n//# sourceMappingURL=mainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mandala = /*#__PURE__*/ defineChain({\n    id: 595,\n    name: 'Mandala TC9',\n    network: 'mandala',\n    nativeCurrency: {\n        name: 'Mandala',\n        symbol: 'mACA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://eth-rpc-tc9.aca-staging.network'],\n            webSocket: ['wss://eth-rpc-tc9.aca-staging.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mandala Blockscout',\n            url: 'https://blockscout.mandala.aca-staging.network',\n            apiUrl: 'https://blockscout.mandala.aca-staging.network/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mandala.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const manta = /*#__PURE__*/ defineChain({\n    id: 169,\n    name: 'Manta Pacific Mainnet',\n    network: 'manta',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://pacific-rpc.manta.network/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Manta Explorer',\n            url: 'https://pacific-explorer.manta.network',\n            apiUrl: 'https://pacific-explorer.manta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 332890,\n        },\n    },\n});\n//# sourceMappingURL=manta.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantaSepoliaTestnet = /*#__PURE__*/ defineChain({\n    id: 3_441_006,\n    name: 'Manta Pacific Sepolia Testnet',\n    network: 'manta-sepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://pacific-rpc.sepolia-testnet.manta.network/http'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Manta Sepolia Testnet Explorer',\n            url: 'https://pacific-explorer.sepolia-testnet.manta.network',\n            apiUrl: 'https://pacific-explorer.sepolia-testnet.manta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca54918f7B525C8df894668846506767412b53E3',\n            blockCreated: 479584,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mantaSepoliaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantaTestnet = /*#__PURE__*/ defineChain({\n    id: 3_441_005,\n    name: 'Manta Pacific Testnet',\n    network: 'manta-testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://manta-testnet.calderachain.xyz/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Manta Testnet Explorer',\n            url: 'https://pacific-explorer.testnet.manta.network',\n            apiUrl: 'https://pacific-explorer.testnet.manta.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x211B1643b95Fe76f11eD8880EE810ABD9A4cf56C',\n            blockCreated: 419915,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mantaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantle = /*#__PURE__*/ defineChain({\n    id: 5000,\n    name: 'Mantle',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MNT',\n        symbol: 'MNT',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.mantle.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mantle Explorer',\n            url: 'https://mantlescan.xyz/',\n            apiUrl: 'https://api.mantlescan.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 304717,\n        },\n    },\n});\n//# sourceMappingURL=mantle.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantleSepoliaTestnet = /*#__PURE__*/ defineChain({\n    id: 5003,\n    name: 'Mantle Sepolia Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MNT',\n        symbol: 'MNT',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.sepolia.mantle.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mantle Testnet Explorer',\n            url: 'https://explorer.sepolia.mantle.xyz/',\n            apiUrl: 'https://explorer.sepolia.mantle.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 4584012,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mantleSepoliaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mantleTestnet = /*#__PURE__*/ defineChain({\n    id: 5001,\n    name: 'Mantle Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MNT',\n        symbol: 'MNT',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.testnet.mantle.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mantle Testnet Explorer',\n            url: 'https://explorer.testnet.mantle.xyz',\n            apiUrl: 'https://explorer.testnet.mantle.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 561333,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mantleTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mapProtocol = /*#__PURE__*/ defineChain({\n    id: 22776,\n    name: 'MAP Protocol',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MAPO',\n        symbol: 'MAPO',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.maplabs.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MAPO Scan',\n            url: 'https://maposcan.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=mapProtocol.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const matchain = /*#__PURE__*/ defineChain({\n    id: 698,\n    name: 'Matchain',\n    nativeCurrency: {\n        name: 'BNB',\n        symbol: 'BNB',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.matchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Matchain Scan',\n            url: 'https://matchscan.io',\n        },\n    },\n});\n//# sourceMappingURL=matchain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const matchainTestnet = /*#__PURE__*/ defineChain({\n    id: 699,\n    name: 'Matchain Testnet',\n    nativeCurrency: {\n        name: 'BNB',\n        symbol: 'BNB',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://testnet-rpc.matchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Matchain Scan',\n            url: 'https://testnet.matchscan.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=matchainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mchVerse = /*#__PURE__*/ defineChain({\n    id: 29548,\n    name: 'MCH Verse',\n    nativeCurrency: { name: 'Oasys', symbol: 'OAS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.oasys.mycryptoheroes.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MCH Verse Explorer',\n            url: 'https://explorer.oasys.mycryptoheroes.net',\n            apiUrl: 'https://explorer.oasys.mycryptoheroes.net/api',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=mchVerse.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const megaethTestnet = /*#__PURE__*/ defineChain({\n    id: 6342,\n    name: 'MegaETH Testnet',\n    nativeCurrency: {\n        name: 'MegaETH Testnet Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://carrot.megaeth.com/rpc'],\n            webSocket: ['wss://carrot.megaeth.com/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MegaETH Testnet Explorer',\n            url: 'https://www.megaexplorer.xyz/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=megaethTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mekong = /*#__PURE__*/ defineChain({\n    id: 7078815900,\n    name: 'Mekong Pectra Devnet',\n    nativeCurrency: { name: 'eth', symbol: 'eth', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mekong.ethpandaops.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Block Explorer',\n            url: 'https://explorer.mekong.ethpandaops.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mekong.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const meld = /*#__PURE__*/ defineChain({\n    id: 333000333,\n    name: 'Meld',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Meld',\n        symbol: 'MELD',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc-1.meld.com'] },\n    },\n    blockExplorers: {\n        default: { name: 'MELDscan', url: 'https://meldscan.io' },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x769ee5a8e82c15c1b6e358f62ac8eb6e3abe8dc5',\n            blockCreated: 360069,\n        },\n    },\n});\n//# sourceMappingURL=meld.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const memecore = /*#__PURE__*/ defineChain({\n    id: 4352,\n    name: 'MemeCore',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'M',\n        symbol: 'M',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.memecore.net'],\n            webSocket: ['wss://ws.memecore.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MemeCore Explorer',\n            url: 'https://memecorescan.io',\n            apiUrl: 'https://api.memecorescan.io/api',\n        },\n        okx: {\n            name: 'MemeCore Explorer',\n            url: 'https://web3.okx.com/explorer/memecore',\n        },\n        memecore: {\n            name: 'MemeCore Explorer',\n            url: 'https://blockscout.memecore.com',\n            apiUrl: 'https://blockscout.memecore.com/api',\n        },\n    },\n});\n//# sourceMappingURL=memecore.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const merlin = /*#__PURE__*/ defineChain({\n    id: 4200,\n    name: 'Merlin',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.merlinchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://scan.merlinchain.io',\n            apiUrl: 'https://scan.merlinchain.io/api',\n        },\n    },\n});\n//# sourceMappingURL=merlin.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const merlinErigonTestnet = /*#__PURE__*/ defineChain({\n    id: 4203,\n    name: 'Merlin Erigon Testnet',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://testnet-erigon-rpc.merlinchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://testnet-erigon-scan.merlinchain.io',\n            apiUrl: 'https://testnet-erigon-scan.merlinchain.io/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=merlinErigonTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const metachain = /*#__PURE__*/ defineChain({\n    id: 571,\n    name: 'MetaChain Mainnet',\n    nativeCurrency: { name: 'Metatime Coin', symbol: 'MTC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.metatime.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MetaExplorer',\n            url: 'https://explorer.metatime.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x0000000000000000000000000000000000003001',\n            blockCreated: 0,\n        },\n    },\n});\n//# sourceMappingURL=metachain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const metachainIstanbul = /*#__PURE__*/ defineChain({\n    id: 1_453,\n    name: 'MetaChain Istanbul',\n    nativeCurrency: { name: 'Metatime Coin', symbol: 'MTC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://istanbul-rpc.metachain.dev'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MetaExplorer',\n            url: 'https://istanbul-explorer.metachain.dev',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x0000000000000000000000000000000000003001',\n            blockCreated: 0,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=metachainIstanbul.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const metadium = /*#__PURE__*/ defineChain({\n    id: 11,\n    name: 'Metadium Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'META',\n        symbol: 'META',\n    },\n    rpcUrls: {\n        default: { http: ['https://api.metadium.com/prod'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Metadium Explorer',\n            url: 'https://explorer.metadium.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=metadium.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const metalL2 = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1750,\n    name: 'Metal L2',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.metall2.com'],\n            webSocket: ['wss://rpc.metall2.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://explorer.metall2.com',\n            apiUrl: 'https://explorer.metall2.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x3B1F7aDa0Fcc26B13515af752Dd07fB1CAc11426',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x3F37aBdE2C6b5B2ed6F8045787Df1ED1E3753956',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x6d0f65D59b55B0FEC5d2d15365154DcADC140BF3',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=metalL2.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const meter = /*#__PURE__*/ defineChain({\n    id: 82,\n    name: 'Meter',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MTR',\n        symbol: 'MTR',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.meter.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MeterScan',\n            url: 'https://scan.meter.io',\n        },\n    },\n});\n//# sourceMappingURL=meter.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const meterTestnet = /*#__PURE__*/ defineChain({\n    id: 83,\n    name: 'Meter Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MTR',\n        symbol: 'MTR',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpctest.meter.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'MeterTestnetScan',\n            url: 'https://scan-warringstakes.meter.io',\n        },\n    },\n});\n//# sourceMappingURL=meterTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const metis = /*#__PURE__*/ defineChain({\n    id: 1_088,\n    name: 'Metis',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Metis',\n        symbol: 'METIS',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://metis.rpc.hypersync.xyz',\n                'https://metis-pokt.nodies.app',\n                'https://api.blockeden.xyz/metis/67nCBdZQSH9z3YqDDjdm',\n                'https://metis-andromeda.rpc.thirdweb.com',\n                'https://metis-andromeda.gateway.tenderly.co',\n                'https://metis.api.onfinality.io/public',\n                'https://andromeda.metis.io/?owner=1088',\n                'https://metis-mainnet.public.blastapi.io',\n            ],\n            webSocket: ['wss://metis-rpc.publicnode.com', 'wss://metis.drpc.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Metis Explorer',\n            url: 'https://explorer.metis.io',\n            apiUrl: 'https://api.routescan.io/v2/network/mainnet/evm/1088/etherscan/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 2338552,\n        },\n    },\n});\n//# sourceMappingURL=metis.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const metisSepolia = /*#__PURE__*/ defineChain({\n    id: 59902,\n    name: 'Metis Sepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Test Metis',\n        symbol: 'tMETIS',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://sepolia.metisdevops.link',\n                'https://metis-sepolia-rpc.publicnode.com',\n                'https://metis-sepolia.gateway.tenderly.co',\n            ],\n            webSocket: ['wss://metis-sepolia-rpc.publicnode.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Metis Sepolia Explorer',\n            url: 'https://sepolia-explorer.metisdevops.link',\n            apiUrl: 'https://sepolia-explorer.metisdevops.link/api-docs',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 224185,\n        },\n    },\n});\n//# sourceMappingURL=metisSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const metisGoerli = /*#__PURE__*/ defineChain({\n    id: 599,\n    name: 'Metis Goerli',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Metis Goerli',\n        symbol: 'METIS',\n    },\n    rpcUrls: {\n        default: { http: ['https://goerli.gateway.metisdevops.link'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Metis Goerli Explorer',\n            url: 'https://goerli.explorer.metisdevops.link',\n            apiUrl: 'https://goerli.explorer.metisdevops.link/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1006207,\n        },\n    },\n});\n//# sourceMappingURL=metisGoerli.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mev = /*#__PURE__*/ defineChain({\n    id: 7518,\n    name: 'MEVerse Chain Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MEVerse',\n        symbol: 'MEV',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.meversemainnet.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://www.meversescan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 86881340,\n        },\n    },\n});\n//# sourceMappingURL=mev.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mevTestnet = /*#__PURE__*/ defineChain({\n    id: 4759,\n    name: 'MEVerse Chain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MEVerse',\n        symbol: 'MEV',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.meversetestnet.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://testnet.meversescan.io/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 64371115,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mevTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mint = /*#__PURE__*/ defineChain({\n    id: 185,\n    name: 'Mint Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mintchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mintchain explorer',\n            url: 'https://explorer.mintchain.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=mint.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mintSepoliaTestnet = /*#__PURE__*/ defineChain({\n    id: 1686,\n    name: 'Mint Sepolia Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.mintchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mintchain Testnet explorer',\n            url: 'https://testnet-explorer.mintchain.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mintSepoliaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const mitosisTestnet = /*#__PURE__*/ defineChain({\n    id: 124_832,\n    name: 'Mitosis Testnet',\n    nativeCurrency: { name: 'MITO', symbol: 'MITO', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.mitosis.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Mitosis testnet explorer',\n            url: 'https://testnet.mitosiscan.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=mitosisTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const mode = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 34443,\n    name: 'Mode Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.mode.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Modescan',\n            url: 'https://modescan.io',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 2465882,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x4317ba146D4933D889518a3e5E11Fe7a53199b04',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x8B34b14c7c7123459Cf3076b8Cb929BE097d0C07',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x735aDBbE72226BD52e818E7181953f42E3b0FF21',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=mode.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const modeTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 919,\n    name: 'Mode Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.mode.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://sepolia.explorer.mode.network',\n            apiUrl: 'https://sepolia.explorer.mode.network/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x2634BD65ba27AB63811c74A63118ACb312701Bfa',\n                blockCreated: 3778393,\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x320e1580effF37E008F1C92700d1eBa47c1B23fD',\n                blockCreated: 3778395,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xbC5C679879B2965296756CD959C3C739769995E2',\n                blockCreated: 3778392,\n            },\n        },\n        multicall3: {\n            address: '0xBAba8373113Fb7a68f195deF18732e01aF8eDfCF',\n            blockCreated: 3019007,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=modeTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const monadTestnet = /*#__PURE__*/ defineChain({\n    id: 10_143,\n    name: 'Monad Testnet',\n    nativeCurrency: {\n        name: 'Testnet MON Token',\n        symbol: 'MON',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.monad.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Monad Testnet explorer',\n            url: 'https://testnet.monadexplorer.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 251449,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=monadTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const moonbaseAlpha = /*#__PURE__*/ defineChain({\n    id: 1287,\n    name: 'Moonbase Alpha',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'DEV',\n        symbol: 'DEV',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.api.moonbase.moonbeam.network'],\n            webSocket: ['wss://wss.api.moonbase.moonbeam.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Moonscan',\n            url: 'https://moonbase.moonscan.io',\n            apiUrl: 'https://moonbase.moonscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1850686,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=moonbaseAlpha.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const moonbeam = /*#__PURE__*/ defineChain({\n    id: 1284,\n    name: 'Moonbeam',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'GLMR',\n        symbol: 'GLMR',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://moonbeam.public.blastapi.io'],\n            webSocket: ['wss://moonbeam.public.blastapi.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Moonscan',\n            url: 'https://moonscan.io',\n            apiUrl: 'https://api-moonbeam.moonscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 609002,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=moonbeam.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const moonbeamDev = /*#__PURE__*/ defineChain({\n    id: 1281,\n    name: 'Moonbeam Development Node',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'DEV',\n        symbol: 'DEV',\n    },\n    rpcUrls: {\n        default: {\n            http: ['http://127.0.0.1:9944'],\n            webSocket: ['wss://127.0.0.1:9944'],\n        },\n    },\n});\n//# sourceMappingURL=moonbeamDev.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const moonriver = /*#__PURE__*/ defineChain({\n    id: 1285,\n    name: 'Moonriver',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MOVR',\n        symbol: 'MOVR',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://moonriver.public.blastapi.io'],\n            webSocket: ['wss://moonriver.public.blastapi.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Moonscan',\n            url: 'https://moonriver.moonscan.io',\n            apiUrl: 'https://api-moonriver.moonscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1597904,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=moonriver.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const morph = /*#__PURE__*/ defineChain({\n    id: 2818,\n    name: 'Morph',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.morphl2.io'],\n            webSocket: ['wss://rpc.morphl2.io:8443'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Morph Explorer',\n            url: 'https://explorer.morphl2.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3654913,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=morph.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const morphHolesky = /*#__PURE__*/ defineChain({\n    id: 2810,\n    name: 'Morph Holesky',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-quicknode-holesky.morphl2.io'],\n            webSocket: ['wss://rpc-quicknode-holesky.morphl2.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Morph Holesky Explorer',\n            url: 'https://explorer-holesky.morphl2.io',\n            apiUrl: 'https://explorer-api-holesky.morphl2.io/api?',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=morphHolesky.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const morphSepolia = /*#__PURE__*/ defineChain({\n    id: 2710,\n    name: 'Morph Sepolia',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet.morphl2.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Morph Testnet Explorer',\n            url: 'https://explorer-testnet.morphl2.io',\n            apiUrl: 'https://explorer-api-testnet.morphl2.io/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=morphSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const nahmii = /*#__PURE__*/ defineChain({\n    id: 5551,\n    name: 'Nahmii 2 Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://l2.nahmii.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Nahmii 2 Explorer',\n            url: 'https://explorer.n2.nahmii.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=nahmii.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const nautilus = /*#__PURE__*/ defineChain({\n    id: 22222,\n    name: 'Nautilus Mainnet',\n    nativeCurrency: { name: 'ZBC', symbol: 'ZBC', decimals: 9 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.nautilus.nautchain.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'NautScan',\n            url: 'https://nautscan.com',\n        },\n    },\n});\n//# sourceMappingURL=nautilus.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const near = /*#__PURE__*/ defineChain({\n    id: 397,\n    name: 'NEAR Protocol',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'NEAR',\n        symbol: 'NEAR',\n    },\n    rpcUrls: {\n        default: { http: ['https://eth-rpc.mainnet.near.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'NEAR Explorer',\n            url: 'https://eth-explorer.near.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=near.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const nearTestnet = /*#__PURE__*/ defineChain({\n    id: 398,\n    name: 'NEAR Protocol Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'NEAR',\n        symbol: 'NEAR',\n    },\n    rpcUrls: {\n        default: { http: ['https://eth-rpc.testnet.near.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'NEAR Explorer',\n            url: 'https://eth-explorer-testnet.near.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=nearTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const neonDevnet = /*#__PURE__*/ defineChain({\n    id: 245_022_926,\n    name: 'Neon EVM DevNet',\n    nativeCurrency: { name: 'NEON', symbol: 'NEON', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://devnet.neonevm.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Neonscan',\n            url: 'https://devnet.neonscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 205206112,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=neonDevnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const neonMainnet = /*#__PURE__*/ defineChain({\n    id: 245_022_934,\n    network: 'neonMainnet',\n    name: 'Neon EVM MainNet',\n    nativeCurrency: { name: 'NEON', symbol: 'NEON', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://neon-proxy-mainnet.solana.p2p.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Neonscan',\n            url: 'https://neonscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 206545524,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=neonMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const neoxMainnet = /*#__PURE__*/ defineChain({\n    id: 47763,\n    name: 'Neo X Mainnet',\n    nativeCurrency: { name: 'Gas', symbol: 'GAS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://mainnet-1.rpc.banelabs.org',\n                'https://mainnet-2.rpc.banelabs.org',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Neo X - Explorer',\n            url: 'https://xexplorer.neo.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=neoxMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const neoxT4 = /*#__PURE__*/ defineChain({\n    id: 12227332,\n    name: 'Neo X Testnet T4',\n    nativeCurrency: { name: 'Gas', symbol: 'GAS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.rpc.banelabs.org/'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'neox-scan',\n            url: 'https://xt4scan.ngd.network',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=neoxT4.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const newton = /*#__PURE__*/ defineChain({\n    id: 1012,\n    name: 'Newton',\n    nativeCurrency: {\n        name: 'Newton',\n        symbol: 'NEW',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://global.rpc.mainnet.newtonproject.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'NewFi explorer',\n            url: 'https://explorer.newtonproject.org/',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=newton.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const nexi = /*#__PURE__*/ defineChain({\n    id: 4242,\n    name: 'Nexi',\n    nativeCurrency: { name: 'Nexi', symbol: 'NEXI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.chain.nexi.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'NexiScan',\n            url: 'https://www.nexiscan.com',\n            apiUrl: 'https://www.nexiscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x0277A46Cc69A57eE3A6C8c158bA874832F718B8E',\n            blockCreated: 25770160,\n        },\n    },\n});\n//# sourceMappingURL=nexi.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const nexilix = /*#__PURE__*/ defineChain({\n    id: 240,\n    name: 'Nexilix Smart Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Nexilix',\n        symbol: 'NEXILIX',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpcurl.pos.nexilix.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'NexilixScan',\n            url: 'https://scan.nexilix.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x58381c8e2BF9d0C2C4259cA14BdA9Afe02831244',\n            blockCreated: 74448,\n        },\n    },\n});\n//# sourceMappingURL=nexilix.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const nibiru = /*#__PURE__*/ defineChain({\n    id: 6900,\n    name: 'Nibiru',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'NIBI',\n        symbol: 'NIBI',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm-rpc.nibiru.fi'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'NibiScan',\n            url: 'https://nibiscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 19587573,\n        },\n    },\n});\n//# sourceMappingURL=nibiru.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const oasisTestnet = /*#__PURE__*/ defineChain({\n    id: 4090,\n    network: 'oasis-testnet',\n    name: 'Oasis Testnet',\n    nativeCurrency: { name: 'Fasttoken', symbol: 'FTN', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc1.oasis.bahamutchain.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ftnscan',\n            url: 'https://oasis.ftnscan.com',\n            apiUrl: 'https://oasis.ftnscan.com/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=oasisTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const oasys = /*#__PURE__*/ defineChain({\n    id: 248,\n    name: 'Oasys',\n    nativeCurrency: { name: 'Oasys', symbol: 'OAS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.oasys.games'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'OasysScan',\n            url: 'https://scan.oasys.games',\n            apiUrl: 'https://scan.oasys.games/api',\n        },\n    },\n});\n//# sourceMappingURL=oasys.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const odysseyTestnet = /*#__PURE__*/ defineChain({\n    id: 911867,\n    name: 'Odyssey Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://odyssey.ithaca.xyz'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Odyssey Explorer',\n            url: 'https://odyssey-explorer.ithaca.xyz',\n            apiUrl: 'https://odyssey-explorer.ithaca.xyz/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=odysseyTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const okc = /*#__PURE__*/ defineChain({\n    id: 66,\n    name: 'OKC',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OKT',\n        symbol: 'OKT',\n    },\n    rpcUrls: {\n        default: { http: ['https://exchainrpc.okex.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'oklink',\n            url: 'https://www.oklink.com/okc',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 10364792,\n        },\n    },\n});\n//# sourceMappingURL=okc.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const omax = /*#__PURE__*/ defineChain({\n    id: 311,\n    name: 'Omax Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OMAX',\n        symbol: 'OMAX',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainapi.omaxray.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Omax Explorer',\n            url: 'https://omaxscan.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=omax.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const omni = defineChain({\n    id: 166,\n    name: 'Omni',\n    nativeCurrency: { name: 'Omni', symbol: 'OMNI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.omni.network'],\n            webSocket: ['wss://mainnet.omni.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'OmniScan',\n            url: 'https://omniscan.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=omni.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const omniOmega = /*#__PURE__*/ defineChain({\n    id: 164,\n    name: 'Omni Omega',\n    nativeCurrency: { name: 'Omni', symbol: 'OMNI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://omega.omni.network'],\n            webSocket: ['wss://omega.omni.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Omega OmniScan',\n            url: 'https://omega.omniscan.network/',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=omniOmega.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const oneWorld = /*#__PURE__*/ defineChain({\n    id: 309075,\n    name: 'One World Chain Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OWCT',\n        symbol: 'OWCT',\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet-rpc.oneworldchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'One World Explorer',\n            url: 'https://mainnet.oneworldchain.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=oneWorld.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const oortMainnetDev = /*#__PURE__*/ defineChain({\n    id: 9700,\n    name: 'OORT MainnetDev',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OORT',\n        symbol: 'OORT',\n    },\n    rpcUrls: {\n        default: { http: ['https://dev-rpc.oortech.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'OORT MainnetDev Explorer',\n            url: 'https://dev-scan.oortech.com',\n        },\n    },\n});\n//# sourceMappingURL=oortmainnetDev.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 56; // bsc mainnet\nexport const opBNB = /*#__PURE__*/ defineChain({\n    id: 204,\n    name: 'opBNB',\n    nativeCurrency: {\n        name: 'BNB',\n        symbol: 'BNB',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://opbnb-mainnet-rpc.bnbchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'opBNB (BSCScan)',\n            url: 'https://opbnb.bscscan.com',\n            apiUrl: 'https://api-opbnb.bscscan.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 512881,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x153CAB79f4767E2ff862C94aa49573294B13D169',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x1876EA7702C0ad0C6A2ae6036DE7733edfBca519',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xF05F0e4362859c3331Cb9395CBC201E3Fa6757Ea',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=opBNB.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 97; // bsc testnet\nexport const opBNBTestnet = /*#__PURE__*/ defineChain({\n    id: 5611,\n    name: 'opBNB Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'tBNB',\n        symbol: 'tBNB',\n    },\n    rpcUrls: {\n        default: { http: ['https://opbnb-testnet-rpc.bnbchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'opbnbscan',\n            url: 'https://testnet.opbnbscan.com',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3705108,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xFf2394Bb843012562f4349C6632a0EcB92fC8810',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x4386C8ABf2009aC0c263462Da568DD9d46e52a31',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x677311Fd2cCc511Bbc0f581E8d9a07B033D5E840',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=opBNBTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const optimism = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 10,\n    name: 'OP Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optimism Explorer',\n            url: 'https://optimistic.etherscan.io',\n            apiUrl: 'https://api-optimistic.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xe5965Ab5962eDc7477C8520243A95517CD252fA9',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xdfe97868233d1aa22e815a266982f2cf17685a27',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 4286263,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xbEb5Fc579115071764c7423A4f12eDde41f106Ed',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x99C9fc46f92E8a1c0deC1b1747d010903E884bE1',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=optimism.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 5; // goerli\nexport const optimismGoerli = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 420,\n    name: 'Optimism Goerli',\n    nativeCurrency: { name: 'Goerli Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://goerli.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://goerli-optimism.etherscan.io',\n            apiUrl: 'https://goerli-optimism.etherscan.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xE6Dfba0953616Bacab0c9A8ecb3a9BBa77FC15c0',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 49461,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x5b47E1A08Ea6d985D6649300584e6722Ec4B1383',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x636Af16bf2f682dD3109e60102b8E1A089FedAa8',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=optimismGoerli.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const optimismSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 11155420,\n    name: 'OP Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.optimism.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://optimism-sepolia.blockscout.com',\n            apiUrl: 'https://optimism-sepolia.blockscout.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x05F9613aDB30026FFd634f38e5C4dFd30a197Fa1',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x90E9c4f8a994a250F6aEfd61CAFb4F2e895D458F',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1620204,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x16Fc5058F25648194471939df75CF27A2fdC48BC',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xFBb0621E0B23b5478B630BD55a5f21f67730B0F1',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=optimismSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const optopia = /*#__PURE__*/ defineChain({\n    id: 62050,\n    name: 'Optopia',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc-mainnet.optopia.ai'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optopia Explorer',\n            url: 'https://scan.optopia.ai',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=optopia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const optopiaTestnet = /*#__PURE__*/ defineChain({\n    id: 62049,\n    name: 'Optopia Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc-testnet.optopia.ai'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Optopia Explorer',\n            url: 'https://scan-testnet.optopia.ai',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=optopiaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const orderly = /*#__PURE__*/ defineChain({\n    id: 291,\n    name: 'Orderly',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.orderly.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Orderly Explorer',\n            url: 'https://explorer.orderly.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=orderly.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const orderlySepolia = /*#__PURE__*/ defineChain({\n    id: 4460,\n    name: 'Orderly Sepolia',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://l2-orderly-l2-4460-sepolia-8tc3sd7dvy.t.conduit.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Orderly Explorer',\n            url: 'https://explorerl2new-orderly-l2-4460-sepolia-8tc3sd7dvy.t.conduit.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=orderlySepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const otimDevnet = /*#__PURE__*/ defineChain({\n    id: 41144114,\n    name: 'Otim Devnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['http://devnet.otim.xyz'],\n        },\n    },\n    contracts: {\n        batchInvoker: {\n            address: '0x5FbDB2315678afecb367f032d93F642f64180aa3',\n        },\n    },\n});\n//# sourceMappingURL=otimDevnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const palm = /*#__PURE__*/ defineChain({\n    id: 11_297_108_109,\n    name: 'Palm',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'PALM',\n        symbol: 'PALM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://palm-mainnet.public.blastapi.io'],\n            webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chainlens',\n            url: 'https://palm.chainlens.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 15429248,\n        },\n    },\n});\n//# sourceMappingURL=palm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const palmTestnet = /*#__PURE__*/ defineChain({\n    id: 11_297_108_099,\n    name: 'Palm Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'PALM',\n        symbol: 'PALM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://palm-mainnet.public.blastapi.io'],\n            webSocket: ['wss://palm-mainnet.public.blastapi.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chainlens',\n            url: 'https://palm.chainlens.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 15429248,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=palmTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const peaq = /*#__PURE__*/ defineChain({\n    id: 3338,\n    name: 'Peaq',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'peaq',\n        symbol: 'PEAQ',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://peaq-rpc.publicnode.com',\n                'https://peaq.api.onfinality.io/public',\n                'https://peaq-rpc.dwellir.com',\n                'https://evm.peaq.network',\n            ],\n            webSocket: [\n                'wss://peaq-rpc.publicnode.com',\n                'wss://peaq.api.onfinality.io/public',\n                'wss://peaq-rpc.dwellir.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Subscan',\n            url: 'https://peaq.subscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 3566354,\n        },\n    },\n});\n//# sourceMappingURL=peaq.js.map","import { formatters } from '../../op-stack/formatters.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const pgn = /*#__PURE__*/ defineChain({\n    id: 424,\n    network: 'pgn',\n    name: 'PGN',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.publicgoods.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PGN Explorer',\n            url: 'https://explorer.publicgoods.network',\n            apiUrl: 'https://explorer.publicgoods.network/api',\n        },\n    },\n    contracts: {\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3380209,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xb26Fd985c5959bBB382BAFdD0b879E149e48116c',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xD0204B9527C1bA7bD765Fa5CCD9355d38338272b',\n            },\n        },\n    },\n    formatters,\n    sourceId,\n});\n//# sourceMappingURL=pgn.js.map","import { formatters } from '../../op-stack/formatters.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const pgnTestnet = /*#__PURE__*/ defineChain({\n    id: 58008,\n    network: 'pgn-testnet',\n    name: 'PGN ',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.publicgoods.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PGN Testnet Explorer',\n            url: 'https://explorer.sepolia.publicgoods.network',\n            apiUrl: 'https://explorer.sepolia.publicgoods.network/api',\n        },\n    },\n    contracts: {\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xD5bAc3152ffC25318F848B3DD5dA6C85171BaEEe',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xF04BdD5353Bb0EFF6CA60CfcC78594278eBfE179',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xFaE6abCAF30D23e233AC7faF747F2fC3a5a6Bfa3',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3754925,\n        },\n    },\n    formatters,\n    sourceId,\n    testnet: true,\n});\n//# sourceMappingURL=pgnTestnet.js.map","// src/chains/definitions/phoenix.ts\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const phoenix = /*#__PURE__*/ defineChain({\n    id: 13381,\n    name: 'Phoenix Blockchain',\n    nativeCurrency: { name: 'Phoenix', symbol: 'PHX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.phoenixplorer.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Phoenixplorer',\n            url: 'https://phoenixplorer.com',\n            apiUrl: 'https://phoenixplorer.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x498cF757a575cFF2c2Ed9f532f56Efa797f86442',\n            blockCreated: 5620192,\n        },\n    },\n});\n//# sourceMappingURL=phoenix.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const planq = /*#__PURE__*/ defineChain({\n    id: 7070,\n    name: 'Planq Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'PLQ',\n        symbol: 'PLQ',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://planq-rpc.nodies.app',\n                'https://evm-rpc.planq.network',\n                'https://jsonrpc.planq.nodestake.top',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Planq Explorer',\n            url: 'https://evm.planq.network',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 8470015,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=planq.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const playfiAlbireo = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1_612_127,\n    name: 'PlayFi Albireo Testnet',\n    network: 'albireo',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://albireo-rpc.playfi.ai'],\n            webSocket: ['wss://albireo-rpc-ws.playfi.ai/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PlayFi Albireo Explorer',\n            url: 'https://albireo-explorer.playfi.ai',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=playfiAlbireo.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const plinga = /*#__PURE__*/ defineChain({\n    id: 242,\n    name: 'Plinga',\n    nativeCurrency: { name: 'Plinga', symbol: 'PLINGA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpcurl.mainnet.plgchain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Plgscan',\n            url: 'https://www.plgscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x0989576160f2e7092908BB9479631b901060b6e4',\n            blockCreated: 204489,\n        },\n    },\n});\n//# sourceMappingURL=plinga.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // ethereum\nexport const plume = /*#__PURE__*/ defineChain({\n    id: 98_865,\n    name: 'Plume (Legacy)',\n    nativeCurrency: {\n        name: 'Plume Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.plumenetwork.xyz'],\n            webSocket: ['wss://rpc.plumenetwork.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.plumenetwork.xyz',\n            apiUrl: 'https://explorer.plumenetwork.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 48_577,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=plume.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const plumeDevnet = /*#__PURE__*/ defineChain({\n    id: 98_864,\n    name: 'Plume Devnet (Legacy)',\n    nativeCurrency: {\n        name: 'Plume Sepolia Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://test-rpc.plumenetwork.xyz'],\n            webSocket: ['wss://test-rpc.plumenetwork.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://test-explorer.plumenetwork.xyz',\n            apiUrl: 'https://test-explorer.plumenetwork.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 481_948,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=plumeDevnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // ethereum\nexport const plumeMainnet = /*#__PURE__*/ defineChain({\n    id: 98_866,\n    name: 'Plume',\n    nativeCurrency: {\n        name: 'Plume',\n        symbol: 'PLUME',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.plume.org'],\n            webSocket: ['wss://rpc.plume.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.plume.org',\n            apiUrl: 'https://explorer.plume.org/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 39_679,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=plumeMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const plumeSepolia = /*#__PURE__*/ defineChain({\n    id: 98_867,\n    name: 'Plume Testnet',\n    nativeCurrency: {\n        name: 'Plume',\n        symbol: 'PLUME',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.plume.org'],\n            webSocket: ['wss://testnet-rpc.plume.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://testnet-explorer.plume.org',\n            apiUrl: 'https://testnet-explorer.plume.org/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 199_712,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=plumeSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const plumeTestnet = /*#__PURE__*/ defineChain({\n    id: 161_221_135,\n    name: 'Plume Testnet (Legacy)',\n    nativeCurrency: {\n        name: 'Plume Sepolia Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.plumenetwork.xyz/http'],\n            webSocket: ['wss://testnet-rpc.plumenetwork.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://testnet-explorer.plumenetwork.xyz',\n            apiUrl: 'https://testnet-explorer.plumenetwork.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 6_022_332,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=plumeTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polterTestnet = /*#__PURE__*/ defineChain({\n    id: 631571,\n    name: 'Polter Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Polter GHST',\n        symbol: 'GHST',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://geist-polter.g.alchemy.com/public'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://polter-testnet.explorer.alchemy.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 11245,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=polterTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygon = /*#__PURE__*/ defineChain({\n    id: 137,\n    name: 'Polygon',\n    nativeCurrency: { name: 'POL', symbol: 'POL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://polygon-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://polygonscan.com',\n            apiUrl: 'https://api.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 25770160,\n        },\n    },\n});\n//# sourceMappingURL=polygon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygonAmoy = /*#__PURE__*/ defineChain({\n    id: 80_002,\n    name: 'Polygon Amoy',\n    nativeCurrency: { name: 'POL', symbol: 'POL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-amoy.polygon.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://amoy.polygonscan.com',\n            apiUrl: 'https://api-amoy.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 3127388,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=polygonAmoy.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygonMumbai = /*#__PURE__*/ defineChain({\n    id: 80_001,\n    name: 'Polygon Mumbai',\n    nativeCurrency: { name: 'MATIC', symbol: 'MATIC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://80001.rpc.thirdweb.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://mumbai.polygonscan.com',\n            apiUrl: 'https://api-testnet.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 25770160,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=polygonMumbai.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygonZkEvm = /*#__PURE__*/ defineChain({\n    id: 1101,\n    name: 'Polygon zkEVM',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://zkevm-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://zkevm.polygonscan.com',\n            apiUrl: 'https://api-zkevm.polygonscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 57746,\n        },\n    },\n});\n//# sourceMappingURL=polygonZkEvm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygonZkEvmCardona = /*#__PURE__*/ defineChain({\n    id: 2442,\n    name: 'Polygon zkEVM Cardona',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.cardona.zkevm-rpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://cardona-zkevm.polygonscan.com',\n            apiUrl: 'https://cardona-zkevm.polygonscan.com/api',\n        },\n    },\n    testnet: true,\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 114091,\n        },\n    },\n});\n//# sourceMappingURL=polygonZkEvmCardona.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polygonZkEvmTestnet = /*#__PURE__*/ defineChain({\n    id: 1442,\n    name: 'Polygon zkEVM Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.public.zkevm-test.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PolygonScan',\n            url: 'https://testnet-zkevm.polygonscan.com',\n            apiUrl: 'https://testnet-zkevm.polygonscan.com/api',\n        },\n    },\n    testnet: true,\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 525686,\n        },\n    },\n});\n//# sourceMappingURL=polygonZkEvmTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polynomial = /*#__PURE__*/ defineChain({\n    id: 8008,\n    name: 'Polynomial',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.polynomial.fi'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Polynomial Scan',\n            url: 'https://polynomialscan.io',\n        },\n    },\n    testnet: false,\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n    },\n});\n//# sourceMappingURL=polynomial.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const polynomialSepolia = /*#__PURE__*/ defineChain({\n    id: 80008,\n    name: 'Polynomia Sepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.sepolia.polynomial.fi'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Polynomial Scan',\n            url: 'https://sepolia.polynomialscan.io',\n        },\n    },\n    testnet: true,\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n    },\n});\n//# sourceMappingURL=polynomialSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const premiumBlockTestnet = /*#__PURE__*/ defineChain({\n    id: 23_023,\n    name: 'PremiumBlock Testnet',\n    nativeCurrency: { name: 'Premium Block', symbol: 'PBLK', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.premiumblock.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PremiumBlocks Explorer',\n            url: 'https://scan.premiumblock.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=premiumBlock.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const pulsechain = /*#__PURE__*/ defineChain({\n    id: 369,\n    name: 'PulseChain',\n    nativeCurrency: { name: 'Pulse', symbol: 'PLS', decimals: 18 },\n    testnet: false,\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.pulsechain.com'],\n            webSocket: ['wss://ws.pulsechain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PulseScan',\n            url: 'https://scan.pulsechain.com',\n            apiUrl: 'https://api.scan.pulsechain.com/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14353601,\n        },\n    },\n});\n//# sourceMappingURL=pulsechain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const pulsechainV4 = /*#__PURE__*/ defineChain({\n    id: 943,\n    name: 'PulseChain V4',\n    testnet: true,\n    nativeCurrency: { name: 'V4 Pulse', symbol: 'v4PLS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.v4.testnet.pulsechain.com'],\n            webSocket: ['wss://ws.v4.testnet.pulsechain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'PulseScan',\n            url: 'https://scan.v4.testnet.pulsechain.com',\n            apiUrl: 'https://scan.v4.testnet.pulsechain.com/api',\n        },\n    },\n    contracts: {\n        ensRegistry: {\n            address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14353601,\n        },\n    },\n});\n//# sourceMappingURL=pulsechainV4.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const pumpfiTestnet = /*#__PURE__*/ defineChain({\n    id: 490_092,\n    name: 'Pumpfi Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'PMPT',\n        symbol: 'PMPT',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc1testnet.pumpfi.me'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Pumpfi Testnet Scan',\n            url: 'https://testnetscan.pumpfi.me',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=pumpfiTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11155111; // Sepolia testnet\nexport const pyrope = defineChain({\n    ...chainConfig,\n    name: 'Pyrope Testnet',\n    testnet: true,\n    id: 695569,\n    sourceId,\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.pyropechain.com'],\n            webSocket: ['wss://rpc.pyropechain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://pyrope.blockscout.com',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xC24932c31D9621aE9e792576152B7ef010cFC2F8',\n            },\n        },\n    },\n});\n//# sourceMappingURL=pyrope.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ql1 = /*#__PURE__*/ defineChain({\n    id: 766,\n    name: 'QL1',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'QOM',\n        symbol: 'QOM',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.qom.one'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ql1 Explorer',\n            url: 'https://scan.qom.one',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x7A52370716ea730585884F5BDB0f6E60C39b8C64',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=ql1.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const qMainnet = /*#__PURE__*/ defineChain({\n    id: 35441,\n    name: 'Q Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Q',\n        symbol: 'Q',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.q.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Q Mainnet Explorer',\n            url: 'https://explorer.q.org',\n            apiUrl: 'https://explorer.q.org/api',\n        },\n    },\n});\n//# sourceMappingURL=qMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const qTestnet = /*#__PURE__*/ defineChain({\n    id: 35443,\n    name: 'Q Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Q',\n        symbol: 'Q',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.qtestnet.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Q Testnet Explorer',\n            url: 'https://explorer.qtestnet.org',\n            apiUrl: 'https://explorer.qtestnet.org/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=qTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const real = /*#__PURE__*/ defineChain({\n    id: 111188,\n    name: 're.al',\n    nativeCurrency: {\n        name: 'reETH',\n        decimals: 18,\n        symbol: 'reETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.realforreal.gelato.digital'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 're.al Explorer',\n            url: 'https://explorer.re.al',\n            apiUrl: 'https://explorer.re.al/api/v2',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 695,\n        },\n    },\n});\n//# sourceMappingURL=real.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const redbellyMainnet = /*#__PURE__*/ defineChain({\n    id: 151,\n    name: 'Redbelly Network Mainnet',\n    nativeCurrency: {\n        name: 'Redbelly Native Coin',\n        symbol: 'RBNT',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://governors.mainnet.redbelly.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Routescan',\n            url: 'https://redbelly.routescan.io',\n            apiUrl: 'https://api.routescan.io/v2/network/mainnet/evm/151/etherscan/api',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=redbellyMainnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const redbellyTestnet = /*#__PURE__*/ defineChain({\n    id: 153,\n    name: 'Redbelly Network Testnet',\n    nativeCurrency: {\n        name: 'Redbelly Native Coin',\n        symbol: 'RBNT',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://governors.testnet.redbelly.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Routescan',\n            url: 'https://redbelly.testnet.routescan.io',\n            apiUrl: 'https://api.routescan.io/v2/network/testnet/evm/153_2/etherscan/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=redbellyTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // Ethereum mainnet\nexport const redstone = defineChain({\n    ...chainConfig,\n    name: 'Redstone',\n    id: 690,\n    sourceId,\n    nativeCurrency: { decimals: 18, name: 'Ether', symbol: 'ETH' },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.redstonechain.com'],\n            webSocket: ['wss://rpc.redstonechain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.redstone.xyz',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xC7bCb0e8839a28A1cFadd1CF716de9016CdA51ae',\n                blockCreated: 19578329,\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xa426A052f657AEEefc298b3B5c35a470e4739d69',\n                blockCreated: 19578337,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xc473ca7E02af24c129c2eEf51F2aDf0411c1Df69',\n                blockCreated: 19578331,\n            },\n        },\n    },\n});\n//# sourceMappingURL=redstone.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const rei = /*#__PURE__*/ defineChain({\n    id: 47805,\n    name: 'REI Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'REI',\n        symbol: 'REI',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.rei.network'],\n            webSocket: ['wss://rpc.rei.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'REI Scan',\n            url: 'https://scan.rei.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=rei.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const reyaNetwork = /*#__PURE__*/ defineChain({\n    id: 1729,\n    name: 'Reya Network',\n    nativeCurrency: { decimals: 18, name: 'Ether', symbol: 'ETH' },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.reya.network'],\n            webSocket: ['wss://ws.reya.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Reya Network Explorer',\n            url: 'https://explorer.reya.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=reyaNetwork.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const reddioSepolia = /*#__PURE__*/ defineChain({\n    id: 50341,\n    name: 'Reddio Sepolia',\n    nativeCurrency: { name: 'Reddio', symbol: 'RED', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://reddio-dev.reddio.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Reddioscan',\n            url: 'https://reddio-devnet.l2scan.co',\n            apiUrl: 'https://reddio-devnet.l2scan.co/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=reddioSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const riseTestnet = /*#__PURE__*/ defineChain({\n    id: 11_155_931,\n    name: 'RISE Testnet',\n    nativeCurrency: { name: 'RISE Testnet Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.riselabs.xyz'],\n            webSocket: ['wss://testnet.riselabs.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.testnet.riselabs.xyz/',\n            apiUrl: 'https://explorer.testnet.riselabs.xyz/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=riseTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const rivalz = /*#__PURE__*/ defineChain({\n    id: 753,\n    name: 'Rivalz',\n    nativeCurrency: { decimals: 18, name: 'Ether', symbol: 'ETH' },\n    rpcUrls: {\n        default: {\n            http: ['https://rivalz.calderachain.xyz/http'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Rivalz Caldera Explorer',\n            url: 'https://rivalz.calderaexplorer.xyz',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=rivalz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const rollux = /*#__PURE__*/ defineChain({\n    id: 570,\n    name: 'Rollux Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Syscoin',\n        symbol: 'SYS',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.rollux.com'],\n            webSocket: ['wss://rpc.rollux.com/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'RolluxExplorer',\n            url: 'https://explorer.rollux.com',\n            apiUrl: 'https://explorer.rollux.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 119222,\n        },\n    },\n});\n//# sourceMappingURL=rollux.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const rolluxTestnet = /*#__PURE__*/ defineChain({\n    id: 57000,\n    name: 'Rollux Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Syscoin',\n        symbol: 'SYS',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-tanenbaum.rollux.com/'],\n            webSocket: ['wss://rpc-tanenbaum.rollux.com/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'RolluxTestnetExplorer',\n            url: 'https://rollux.tanenbaum.io',\n            apiUrl: 'https://rollux.tanenbaum.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1813675,\n        },\n    },\n});\n//# sourceMappingURL=rolluxTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ronin = /*#__PURE__*/ defineChain({\n    id: 2020,\n    name: 'Ronin',\n    nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.roninchain.com/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ronin Explorer',\n            url: 'https://app.roninchain.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 26023535,\n        },\n    },\n});\n//# sourceMappingURL=ronin.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const root = /*#__PURE__*/ defineChain({\n    id: 7668,\n    name: 'The Root Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'XRP',\n        symbol: 'XRP',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://root.rootnet.live/archive'],\n            webSocket: ['wss://root.rootnet.live/archive/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Rootscan',\n            url: 'https://rootscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xc9C2E2429AeC354916c476B30d729deDdC94988d',\n            blockCreated: 9218338,\n        },\n    },\n});\n//# sourceMappingURL=root.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const rootPorcini = /*#__PURE__*/ defineChain({\n    id: 7672,\n    name: 'The Root Network - Porcini',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'XRP',\n        symbol: 'XRP',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://porcini.rootnet.app/archive'],\n            webSocket: ['wss://porcini.rootnet.app/archive/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Rootscan',\n            url: 'https://porcini.rootscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xc9C2E2429AeC354916c476B30d729deDdC94988d',\n            blockCreated: 10555692,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=rootPorcini.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const rootstock = /*#__PURE__*/ defineChain({\n    id: 30,\n    name: 'Rootstock Mainnet',\n    network: 'rootstock',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Rootstock Bitcoin',\n        symbol: 'RBTC',\n    },\n    rpcUrls: {\n        default: { http: ['https://public-node.rsk.co'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'RSK Explorer',\n            url: 'https://explorer.rsk.co',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 4249540,\n        },\n    },\n});\n//# sourceMappingURL=rootstock.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const rootstockTestnet = /*#__PURE__*/ defineChain({\n    id: 31,\n    name: 'Rootstock Testnet',\n    network: 'rootstock',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Rootstock Bitcoin',\n        symbol: 'tRBTC',\n    },\n    rpcUrls: {\n        default: { http: ['https://public-node.testnet.rsk.co'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'RSK Explorer',\n            url: 'https://explorer.testnet.rootstock.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 2771150,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=rootstockTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const rss3 = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 12_553,\n    name: 'RSS3 VSL Mainnet',\n    nativeCurrency: { name: 'RSS3', symbol: 'RSS3', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.rss3.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'RSS3 VSL Mainnet Scan',\n            url: 'https://scan.rss3.io',\n            apiUrl: 'https://scan.rss3.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xE6f24d2C32B3109B18ed33cF08eFb490b1e09C10',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14193,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x6A12432491bbbE8d3babf75F759766774C778Db4',\n                blockCreated: 19387057,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x4cbab69108Aa72151EDa5A3c164eA86845f18438',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=rss3.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const rss3Sepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 2_331,\n    name: 'RSS3 VSL Sepolia Testnet',\n    nativeCurrency: { name: 'RSS3', symbol: 'RSS3', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.rss3.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'RSS3 VSL Sepolia Testnet Scan',\n            url: 'https://scan.testnet.rss3.io',\n            apiUrl: 'https://scan.testnet.rss3.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xDb5c46C3Eaa6Ed6aE8b2379785DF7dd029C0dC81',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 55697,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xcBD77E8E1E7F06B25baDe67142cdE82652Da7b57',\n                blockCreated: 5345035,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xdDD29bb63B0839FB1cE0eE439Ff027738595D07B',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=rss3Sepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const saakuru = /*#__PURE__*/ defineChain({\n    id: 7225878,\n    name: 'Saakuru Mainnet',\n    nativeCurrency: { name: 'OAS', symbol: 'OAS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.saakuru.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Saakuru Explorer',\n            url: 'https://explorer.saakuru.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=saakuru.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const saga = /*#__PURE__*/ defineChain({\n    id: 5464,\n    name: 'Saga',\n    network: 'saga',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'gas',\n        symbol: 'GAS',\n    },\n    rpcUrls: {\n        default: { http: ['https://sagaevm.jsonrpc.sagarpc.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Saga Explorer',\n            url: 'https://sagaevm.sagaexplorer.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x864DDc9B50B9A0dF676d826c9B9EDe9F8913a160',\n            blockCreated: 467530,\n        },\n    },\n});\n//# sourceMappingURL=saga.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const saigon = /*#__PURE__*/ defineChain({\n    id: 2021,\n    name: 'Saigon Testnet',\n    nativeCurrency: { name: 'RON', symbol: 'RON', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://saigon-testnet.roninchain.com/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Saigon Explorer',\n            url: 'https://saigon-app.roninchain.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 18736871,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=saigon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sanko = /*#__PURE__*/ defineChain({\n    id: 1996,\n    name: 'Sanko',\n    nativeCurrency: { name: 'DMT', symbol: 'DMT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.sanko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sanko Explorer',\n            url: 'https://explorer.sanko.xyz',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 37,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=sanko.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sapphire = /*#__PURE__*/ defineChain({\n    id: 23294,\n    name: 'Oasis Sapphire',\n    network: 'sapphire',\n    nativeCurrency: { name: 'Sapphire Rose', symbol: 'ROSE', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sapphire.oasis.io'],\n            webSocket: ['wss://sapphire.oasis.io/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Oasis Explorer',\n            url: 'https://explorer.oasis.io/mainnet/sapphire',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 734531,\n        },\n    },\n});\n//# sourceMappingURL=sapphire.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sapphireTestnet = /*#__PURE__*/ defineChain({\n    id: 23295,\n    name: 'Oasis Sapphire Testnet',\n    network: 'sapphire-testnet',\n    nativeCurrency: { name: 'Sapphire Test Rose', symbol: 'TEST', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.sapphire.oasis.dev'],\n            webSocket: ['wss://testnet.sapphire.oasis.dev/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Oasis Explorer',\n            url: 'https://explorer.oasis.io/testnet/sapphire',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sapphireTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const satoshiVM = /*#__PURE__*/ defineChain({\n    id: 3109,\n    name: 'SatoshiVM Alpha Mainnet',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://alpha-rpc-node-http.svmscan.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://svmscan.io',\n            apiUrl: 'https://svmscan.io/api',\n        },\n    },\n});\n//# sourceMappingURL=satoshivm.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const satoshiVMTestnet = /*#__PURE__*/ defineChain({\n    id: 3110,\n    name: 'SatoshiVM Testnet',\n    nativeCurrency: {\n        name: 'BTC',\n        symbol: 'BTC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://test-rpc-node-http.svmscan.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://testnet.svmscan.io',\n            apiUrl: 'https://testnet.svmscan.io/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=satoshivmTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const scroll = /*#__PURE__*/ defineChain({\n    id: 534_352,\n    name: 'Scroll',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.scroll.io'],\n            webSocket: ['wss://wss-rpc.scroll.io/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Scrollscan',\n            url: 'https://scrollscan.com',\n            apiUrl: 'https://api.scrollscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 14,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=scroll.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const scrollSepolia = /*#__PURE__*/ defineChain({\n    id: 534_351,\n    name: 'Scroll Sepolia',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia-rpc.scroll.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Scrollscan',\n            url: 'https://sepolia.scrollscan.com',\n            apiUrl: 'https://api-sepolia.scrollscan.com/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 9473,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=scrollSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sei = /*#__PURE__*/ defineChain({\n    id: 1329,\n    name: 'Sei Network',\n    nativeCurrency: { name: 'Sei', symbol: 'SEI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evm-rpc.sei-apis.com/'],\n            webSocket: ['wss://evm-ws.sei-apis.com/'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Seitrace',\n            url: 'https://seitrace.com',\n            apiUrl: 'https://seitrace.com/pacific-1/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n});\n//# sourceMappingURL=sei.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const seiDevnet = /*#__PURE__*/ defineChain({\n    id: 713_715,\n    name: 'Sei Devnet',\n    nativeCurrency: { name: 'Sei', symbol: 'SEI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evm-rpc-arctic-1.sei-apis.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Seitrace',\n            url: 'https://seitrace.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=seiDevnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const seismicDevnet = /*#__PURE__*/ defineChain({\n    id: 5124,\n    name: 'Seismic Devnet',\n    nativeCurrency: { name: 'Seismic Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://node-2.seismicdev.net/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Seismic Devnet Explorer',\n            url: 'https://explorer-2.seismicdev.net',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=seismicDevnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const seiTestnet = /*#__PURE__*/ defineChain({\n    id: 1328,\n    name: 'Sei Testnet',\n    nativeCurrency: { name: 'Sei', symbol: 'SEI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evm-rpc-testnet.sei-apis.com'],\n            webSocket: ['wss://evm-ws-testnet.sei-apis.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Seitrace',\n            url: 'https://seitrace.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=seiTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sepolia = /*#__PURE__*/ defineChain({\n    id: 11_155_111,\n    name: 'Sepolia',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.drpc.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia.etherscan.io',\n            apiUrl: 'https://api-sepolia.etherscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 751532,\n        },\n        ensRegistry: { address: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e' },\n        ensUniversalResolver: {\n            address: '0xc8Af999e38273D658BE1b921b88A9Ddf005769cC',\n            blockCreated: 5_317_080,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sepolia.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const shape = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 360,\n    name: 'Shape',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.shape.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'shapescan',\n            url: 'https://shapescan.xyz',\n            apiUrl: 'https://shapescan.xyz/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x6Ef8c69CfE4635d866e3E02732068022c06e724D',\n                blockCreated: 20369940,\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xEB06fFa16011B5628BaB98E29776361c83741dd3',\n                blockCreated: 20369933,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x62Edd5f4930Ea92dCa3fB81689bDD9b9d076b57B',\n                blockCreated: 20369935,\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=shape.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const shapeSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 11_011,\n    name: 'Shape Sepolia Testnet',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.shape.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://explorer-sepolia.shape.network/',\n            apiUrl: 'https://explorer-sepolia.shape.network/api/v2',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=shapeSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const shardeum = /*#__PURE__*/ defineChain({\n    id: 8118,\n    name: 'Shardeum',\n    nativeCurrency: { name: 'Shardeum', symbol: 'SHM', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.shardeum.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Shardeum Explorer',\n            url: 'https://explorer.shardeum.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=shardeum.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const shardeumSphinx = /*#__PURE__*/ defineChain({\n    id: 8082,\n    name: 'Shardeum Sphinx',\n    nativeCurrency: { name: 'SHARDEUM', symbol: 'SHM', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sphinx.shardeum.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Shardeum Explorer',\n            url: 'https://explorer-sphinx.shardeum.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=shardeumSphinx.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const shibarium = /*#__PURE__*/ defineChain({\n    id: 109,\n    name: 'Shibarium',\n    network: 'shibarium',\n    nativeCurrency: { name: 'Bone', symbol: 'BONE', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.shibrpc.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://shibariumscan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x864Bf681ADD6052395188A89101A1B37d3B4C961',\n            blockCreated: 265900,\n        },\n    },\n});\n//# sourceMappingURL=shibarium.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const shibariumTestnet = /*#__PURE__*/ defineChain({\n    id: 157,\n    name: 'Puppynet Shibarium',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Bone',\n        symbol: 'BONE',\n    },\n    rpcUrls: {\n        default: { http: ['https://puppynet.shibrpc.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://puppyscan.shib.io',\n            apiUrl: 'https://puppyscan.shib.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xA4029b74FBA366c926eDFA7Dd10B21C621170a4c',\n            blockCreated: 3035769,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=shibariumTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const shiden = /*#__PURE__*/ defineChain({\n    id: 336,\n    name: 'Shiden',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'SDN',\n        symbol: 'SDN',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://shiden.public.blastapi.io'],\n            webSocket: ['wss://shiden-rpc.dwellir.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Shiden Scan',\n            url: 'https://shiden.subscan.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=shiden.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const shimmer = /*#__PURE__*/ defineChain({\n    id: 148,\n    name: 'Shimmer',\n    network: 'shimmer',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Shimmer',\n        symbol: 'SMR',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://json-rpc.evm.shimmer.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Shimmer Network Explorer',\n            url: 'https://explorer.evm.shimmer.network',\n            apiUrl: 'https://explorer.evm.shimmer.network/api',\n        },\n    },\n});\n//# sourceMappingURL=shimmer.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const shimmerTestnet = /*#__PURE__*/ defineChain({\n    id: 1073,\n    name: 'Shimmer Testnet',\n    network: 'shimmer-testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Shimmer',\n        symbol: 'SMR',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://json-rpc.evm.testnet.shimmer.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Shimmer Network Explorer',\n            url: 'https://explorer.evm.testnet.shimmer.network',\n            apiUrl: 'https://explorer.evm.testnet.shimmer.network/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=shimmerTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sidraChain = /*#__PURE__*/ defineChain({\n    id: 97_453,\n    name: 'Sidra Chain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Sidra Digital Asset',\n        symbol: 'SDA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://node.sidrachain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sidra Chain Explorer',\n            url: 'https://ledger.sidrachain.com',\n        },\n    },\n});\n//# sourceMappingURL=sidra.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const silicon = /*#__PURE__*/ defineChain({\n    id: 2355,\n    name: 'Silicon zkEVM',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc.silicon.network',\n                'https://silicon-mainnet.nodeinfra.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SiliconScope',\n            url: 'https://scope.silicon.network',\n        },\n    },\n});\n//# sourceMappingURL=silicon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const siliconSepolia = /*#__PURE__*/ defineChain({\n    id: 1722641160,\n    name: 'Silicon Sepolia zkEVM',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://rpc-sepolia.silicon.network',\n                'https://silicon-testnet.nodeinfra.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SiliconSepoliaScope',\n            url: 'https://scope-sepolia.silicon.network',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=siliconSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sixProtocol = /*#__PURE__*/ defineChain({\n    id: 98,\n    name: 'Six Protocol',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'SIX',\n        symbol: 'SIX',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sixnet-rpc-evm.sixprotocol.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Six Protocol Scan',\n            url: 'https://sixscan.io/sixnet',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=sixProtocol.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleBlockBrawlers = /*#__PURE__*/ defineChain({\n    id: 391_845_894,\n    name: 'SKALE | Block Brawlers',\n    nativeCurrency: { name: 'BRAWL', symbol: 'BRAWL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/frayed-decent-antares'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/frayed-decent-antares'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://frayed-decent-antares.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {},\n});\n//# sourceMappingURL=brawl.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleCalypso = /*#__PURE__*/ defineChain({\n    id: 1_564_830_818,\n    name: 'SKALE Calypso Hub',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/honorable-steel-rasalhague'],\n            webSocket: [\n                'wss://mainnet.skalenodes.com/v1/ws/honorable-steel-rasalhague',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://honorable-steel-rasalhague.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3_107_626,\n        },\n    },\n});\n//# sourceMappingURL=calypso.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleCalypsoTestnet = /*#__PURE__*/ defineChain({\n    id: 974_399_131,\n    name: 'SKALE Calypso Testnet',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.skalenodes.com/v1/giant-half-dual-testnet'],\n            webSocket: ['wss://testnet.skalenodes.com/v1/ws/giant-half-dual-testnet'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://giant-half-dual-testnet.explorer.testnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 103_220,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=calypsoTestnet.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleCryptoBlades = /*#__PURE__*/ defineChain({\n    id: 1_026_062_157,\n    name: 'SKALE | CryptoBlades',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/affectionate-immediate-pollux'],\n            webSocket: [\n                'wss://mainnet.skalenodes.com/v1/ws/affectionate-immediate-pollux',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://affectionate-immediate-pollux.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {},\n});\n//# sourceMappingURL=cryptoBlades.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleCryptoColosseum = /*#__PURE__*/ defineChain({\n    id: 1_032_942_172,\n    name: 'SKALE | Crypto Colosseum',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/haunting-devoted-deneb'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/haunting-devoted-deneb'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://haunting-devoted-deneb.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {},\n});\n//# sourceMappingURL=cryptoColosseum.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleEuropa = /*#__PURE__*/ defineChain({\n    id: 2_046_399_126,\n    name: 'SKALE Europa Hub',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/elated-tan-skat'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/elated-tan-skat'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://elated-tan-skat.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 3_113_495,\n        },\n    },\n});\n//# sourceMappingURL=europa.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleEuropaTestnet = /*#__PURE__*/ defineChain({\n    id: 1_444_673_419,\n    name: 'SKALE Europa Testnet',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.skalenodes.com/v1/juicy-low-small-testnet'],\n            webSocket: ['wss://testnet.skalenodes.com/v1/ws/juicy-low-small-testnet'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://juicy-low-small-testnet.explorer.testnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 110_858,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=europaTestnet.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleExorde = /*#__PURE__*/ defineChain({\n    id: 2_139_927_552,\n    name: 'Exorde Network',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/light-vast-diphda'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/light-vast-diphda'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://light-vast-diphda.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {},\n});\n//# sourceMappingURL=exorde.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleHumanProtocol = /*#__PURE__*/ defineChain({\n    id: 1_273_227_453,\n    name: 'SKALE | Human Protocol',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/wan-red-ain'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/wan-red-ain'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://wan-red-ain.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {},\n});\n//# sourceMappingURL=humanProtocol.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleNebula = /*#__PURE__*/ defineChain({\n    id: 1_482_601_649,\n    name: 'SKALE Nebula Hub',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/green-giddy-denebola'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/green-giddy-denebola'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://green-giddy-denebola.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 2_372_986,\n        },\n    },\n});\n//# sourceMappingURL=nebula.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleNebulaTestnet = /*#__PURE__*/ defineChain({\n    id: 37_084_624,\n    name: 'SKALE Nebula Testnet',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.skalenodes.com/v1/lanky-ill-funny-testnet'],\n            webSocket: ['wss://testnet.skalenodes.com/v1/ws/lanky-ill-funny-testnet'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://lanky-ill-funny-testnet.explorer.testnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 105_141,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=nebulaTestnet.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleRazor = /*#__PURE__*/ defineChain({\n    id: 278_611_351,\n    name: 'SKALE | Razor Network',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/turbulent-unique-scheat'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/turbulent-unique-scheat'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://turbulent-unique-scheat.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {},\n});\n//# sourceMappingURL=razor.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleTitan = /*#__PURE__*/ defineChain({\n    id: 1_350_216_234,\n    name: 'SKALE Titan Hub',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.skalenodes.com/v1/parallel-stormy-spica'],\n            webSocket: ['wss://mainnet.skalenodes.com/v1/ws/parallel-stormy-spica'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://parallel-stormy-spica.explorer.mainnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 2_076_458,\n        },\n    },\n});\n//# sourceMappingURL=titan.js.map","import { defineChain } from '../../../utils/chain/defineChain.js';\nexport const skaleTitanTestnet = /*#__PURE__*/ defineChain({\n    id: 1_020_352_220,\n    name: 'SKALE Titan Testnet',\n    nativeCurrency: { name: 'sFUEL', symbol: 'sFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.skalenodes.com/v1/aware-fake-trim-testnet'],\n            webSocket: ['wss://testnet.skalenodes.com/v1/ws/aware-fake-trim-testnet'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SKALE Explorer',\n            url: 'https://aware-fake-trim-testnet.explorer.testnet.skalenodes.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 104_072,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=titanTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sketchpad = /*#__PURE__*/ defineChain({\n    id: 984123,\n    name: 'Forma Sketchpad',\n    network: 'sketchpad',\n    nativeCurrency: {\n        symbol: 'TIA',\n        name: 'TIA',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.sketchpad-1.forma.art'],\n            webSocket: ['wss://ws.sketchpad-1.forma.art'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sketchpad Explorer',\n            url: 'https://explorer.sketchpad-1.forma.art',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sketchpad.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const snax = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 2192,\n    network: 'snaxchain-mainnet',\n    name: 'SnaxChain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.snaxchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Snax Explorer',\n            url: 'https://explorer.snaxchain.io',\n            apiUrl: 'https://explorer.snaxchain.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x472562Fcf26D6b2793f8E0b0fB660ba0E5e08A46',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x2172e492Fc807F5d5645D0E3543f139ECF539294',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x79f446D024d74D0Bb6E699C131c703463c5D65E9',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x6534Bdb6b5c060d3e6aa833433333135eFE8E0aA',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=snax.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const snaxTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 13001,\n    network: 'snaxchain-testnet',\n    name: 'SnaxChain Testnet',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.snaxchain.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Snax Explorer',\n            url: 'https://testnet-explorer.snaxchain.io',\n            apiUrl: 'https://testnet-explorer.snaxchain.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x206a75d89d45F146C54020F132FF93bEDD09f55E',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x60e3A368a4cdCEf85ffB964e372726F56A46221e',\n            },\n        },\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xb5afdd0E8dDF081Ef90e8A3e0c7b5798e66E954E',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xbd37E1a59D4C00C9A46F75018dffd84061bC5f74',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=snaxTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const somniaTestnet = /*#__PURE__*/ defineChain({\n    id: 50312,\n    name: 'Somnia Testnet',\n    nativeCurrency: { name: 'STT', symbol: 'STT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://dream-rpc.somnia.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Somnia Testnet Explorer',\n            url: 'https://shannon-explorer.somnia.network/',\n            apiUrl: 'https://shannon-explorer.somnia.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x841b8199E6d3Db3C6f264f6C2bd8848b3cA64223',\n            blockCreated: 71314235,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=somniaTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const soneium = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1868,\n    name: 'Soneium Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.soneium.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://soneium.blockscout.com',\n            apiUrl: 'https://soneium.blockscout.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x512a3d2c7a43bd9261d2b8e8c9c70d4bd4d503c0',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x0000000000000000000000000000000000000000',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x88e529a6ccd302c948689cd5156c83d4614fae92',\n                blockCreated: 7061266,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xeb9bf100225c214efc3e7c651ebbadcf85177607',\n                blockCreated: 7061266,\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1,\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=soneium.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const soneiumMinato = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1946,\n    name: 'Soneium Minato Testnet',\n    nativeCurrency: { name: 'Sepolia Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.minato.soneium.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://soneium-minato.blockscout.com',\n            apiUrl: 'https://soneium-minato.blockscout.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xB3Ad2c38E6e0640d7ce6aA952AB3A60E81bf7a01',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x710e5286C746eC38beeB7538d0146f60D27be343',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x65ea1489741A5D72fFdD8e6485B216bBdcC15Af3',\n                blockCreated: 6466136,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x5f5a404A5edabcDD80DB05E8e54A78c9EBF000C2',\n                blockCreated: 6466136,\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1,\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=soneiumMinato.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sonic = /*#__PURE__*/ defineChain({\n    id: 146,\n    name: 'Sonic',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Sonic',\n        symbol: 'S',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.soniclabs.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sonic Explorer',\n            url: 'https://sonicscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 60,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=sonic.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sonicTestnet = /*#__PURE__*/ defineChain({\n    id: 64_165,\n    name: 'Sonic Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Sonic',\n        symbol: 'S',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.testnet.soniclabs.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sonic Testnet Explorer',\n            url: 'https://testnet.soniclabs.com/',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sonicTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const sonicBlazeTestnet = /*#__PURE__*/ defineChain({\n    id: 57_054,\n    name: 'Sonic Blaze Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Sonic',\n        symbol: 'S',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.blaze.soniclabs.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sonic Blaze Testnet Explorer',\n            url: 'https://testnet.sonicscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1100,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sonicBlazeTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const songbird = /*#__PURE__*/ defineChain({\n    id: 19,\n    name: 'Songbird Canary-Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Songbird',\n        symbol: 'SGB',\n    },\n    rpcUrls: {\n        default: { http: ['https://songbird-api.flare.network/ext/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Songbird Explorer',\n            url: 'https://songbird-explorer.flare.network',\n            apiUrl: 'https://songbird-explorer.flare.network/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 13382504,\n        },\n    },\n});\n//# sourceMappingURL=songbird.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const songbirdTestnet = /*#__PURE__*/ defineChain({\n    id: 16,\n    name: 'Songbird Testnet Coston',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Coston Flare',\n        symbol: 'CFLR',\n    },\n    rpcUrls: {\n        default: { http: ['https://coston-api.flare.network/ext/C/rpc'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Coston Explorer',\n            url: 'https://coston-explorer.flare.network',\n            apiUrl: 'https://coston-explorer.flare.network/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=songbirdTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const sophon = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 50104,\n    name: 'Sophon',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Sophon',\n        symbol: 'SOPH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.sophon.xyz'],\n            webSocket: ['wss://rpc.sophon.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sophon Block Explorer',\n            url: 'https://explorer.sophon.xyz',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x5f4867441d2416cA88B1b3fd38f21811680CD2C8',\n            blockCreated: 116,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=sophon.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const sophonTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 531_050_104,\n    name: 'Sophon Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Sophon',\n        symbol: 'SOPH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.sophon.xyz'],\n            webSocket: ['wss://rpc.testnet.sophon.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Sophon Block Explorer',\n            url: 'https://explorer.testnet.sophon.xyz',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x83c04d112adedA2C6D9037bb6ecb42E7f0b108Af',\n            blockCreated: 15_642,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=sophonTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const spicy = /*#__PURE__*/ defineChain({\n    id: 88_882,\n    name: 'Chiliz Spicy Testnet',\n    network: 'chiliz-spicy-Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'CHZ',\n        symbol: 'CHZ',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://spicy-rpc.chiliz.com',\n                'https://chiliz-spicy-rpc.publicnode.com',\n            ],\n            webSocket: [\n                'wss://spicy-rpc-ws.chiliz.com',\n                'wss://chiliz-spicy-rpc.publicnode.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Chiliz Explorer',\n            url: 'http://spicy-explorer.chiliz.com',\n            apiUrl: 'http://spicy-explorer.chiliz.com/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=spicy.js.map","import { chainConfig } from '../../linea/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const statusSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1_660_990_954,\n    name: 'Status Network Sepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://public.sepolia.rpc.status.network'],\n            webSocket: ['wss://public.sepolia.rpc.status.network/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://sepoliascan.status.network',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1_578_364,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=statusNetworkSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const step = /*#__PURE__*/ defineChain({\n    id: 1234,\n    name: 'Step Network',\n    nativeCurrency: { name: 'FITFI', symbol: 'FITFI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.step.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Step Scan',\n            url: 'https://stepscan.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=step.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const story = /*#__PURE__*/ defineChain({\n    id: 1514,\n    name: 'Story',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IP Token',\n        symbol: 'IP',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 340998,\n        },\n        ensRegistry: {\n            address: '0x5dc881dda4e4a8d312be3544ad13118d1a04cb17',\n            blockCreated: 648924,\n        },\n        ensUniversalResolver: {\n            address: '0xddfb18888a9466688235887dec2a10c4f5effee9',\n            blockCreated: 649114,\n        },\n    },\n    rpcUrls: {\n        default: { http: ['https://mainnet.storyrpc.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Story explorer',\n            url: 'https://storyscan.xyz',\n            apiUrl: 'https://storyscan.xyz/api/v2',\n        },\n    },\n    ensTlds: ['.ip'],\n    testnet: false,\n});\n//# sourceMappingURL=story.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const storyAeneid = /*#__PURE__*/ defineChain({\n    id: 1315,\n    name: 'Story Aeneid',\n    network: 'story-aeneid',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IP',\n        symbol: 'IP',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 1792,\n        },\n        ensRegistry: {\n            address: '0x5dC881dDA4e4a8d312be3544AD13118D1a04Cb17',\n            blockCreated: 1322033,\n        },\n        ensUniversalResolver: {\n            address: '0x6D3B3F99177FB2A5de7F9E928a9BD807bF7b5BAD',\n            blockCreated: 1322097,\n        },\n    },\n    rpcUrls: {\n        default: { http: ['https://aeneid.storyrpc.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Story Aeneid Explorer',\n            url: 'https://aeneid.storyscan.xyz',\n            apiUrl: 'https://aeneid.storyscan.xyz/api/v2',\n        },\n    },\n    ensTlds: ['.ip'],\n    testnet: true,\n});\n//# sourceMappingURL=storyAeneid.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const storyOdyssey = /*#__PURE__*/ defineChain({\n    id: 1516,\n    name: 'Story Odyssey',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IP',\n        symbol: 'IP',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.odyssey.storyrpc.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Story Odyssey Explorer',\n            url: 'https://odyssey.storyscan.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=storyOdyssey.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const storyTestnet = /*#__PURE__*/ defineChain({\n    id: 1513,\n    name: 'Story Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'IP',\n        symbol: 'IP',\n    },\n    rpcUrls: {\n        default: { http: ['https://testnet.storyrpc.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Story Testnet Explorer',\n            url: 'https://testnet.storyscan.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=storyTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const stratis = /*#__PURE__*/ defineChain({\n    id: 105105,\n    name: 'Stratis Mainnet',\n    network: 'stratis',\n    nativeCurrency: {\n        name: 'Stratis',\n        symbol: 'STRAX',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.stratisevm.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Stratis Explorer',\n            url: 'https://explorer.stratisevm.com',\n        },\n    },\n});\n//# sourceMappingURL=stratis.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const superlumio = /*#__PURE__*/ defineChain({\n    id: 8866,\n    name: 'SuperLumio',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.lumio.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Lumio explorer',\n            url: 'https://explorer.lumio.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=superlumio.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const superposition = /*#__PURE__*/ defineChain({\n    id: 55244,\n    name: 'Superposition',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc.superposition.so'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Superposition Explorer',\n            url: 'https://explorer.superposition.so',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 39,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=superposition.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const superseed = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 5330,\n    name: 'Superseed',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.superseed.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Superseed Explorer',\n            url: 'https://explorer.superseed.xyz',\n            apiUrl: 'https://explorer.superseed.xyz/api/v2',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x8b097CF1f9BbD9cbFD0DD561858a1FCbC8857Be0',\n                blockCreated: 20737481,\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x693A0F8854F458D282DE3C5b69E8eE5EEE8aA949',\n                blockCreated: 20737481,\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x2c2150aa5c75A24fB93d4fD2F2a895D618054f07',\n                blockCreated: 20737481,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x8b0576E39F1233679109F9b40cFcC2a7E0901Ede',\n                blockCreated: 20737481,\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=superseed.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11155111; // sepolia\nexport const superseedSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 53302,\n    name: 'Superseed Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.superseed.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Superseed Sepolia Explorer',\n            url: 'https://sepolia-explorer.superseed.xyz',\n            apiUrl: 'https://sepolia-explorer.superseed.xyz/api/v2',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x7A0db8C51432d2C3eb4e8f360a2EeB26FF2809fB',\n                blockCreated: 5523438,\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x2B227A603fAAdB3De0ED050b63ADD232B5f2c28C',\n                blockCreated: 5523442,\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=superseedSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const swan = /*#__PURE__*/ defineChain({\n    id: 254,\n    name: 'Swan Chain Mainnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://mainnet-rpc.swanchain.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Swan Explorer',\n            url: 'https://swanscan.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=swan.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const swanProximaTestnet = /*#__PURE__*/ defineChain({\n    id: 20241133,\n    name: 'Swan Proxima Testnet',\n    nativeCurrency: { name: 'Swan Ether', symbol: 'sETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://rpc-proxima.swanchain.io\t'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Swan Explorer',\n            url: 'https://proxima-explorer.swanchain.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=swanProximaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const swanSaturnTestnet = /*#__PURE__*/ defineChain({\n    id: 2024,\n    name: 'Swan Saturn Testnet',\n    nativeCurrency: { name: 'Swan Ether', symbol: 'sETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://saturn-rpc.swanchain.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Swan Explorer',\n            url: 'https://saturn-explorer.swanchain.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=swanSaturnTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const swellchain = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1923,\n    name: 'Swellchain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://swell-mainnet.alt.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Swell Explorer',\n            url: 'https://explorer.swellnetwork.io',\n            apiUrl: 'https://explorer.swellnetwork.io/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1,\n        },\n    },\n});\n//# sourceMappingURL=swellchain.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nexport const swellchainTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1924,\n    name: 'Swellchain Testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://swell-testnet.alt.technology'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Swellchain Testnet Explorer',\n            url: 'https://swell-testnet-explorer.alt.technology',\n            apiUrl: 'https://swell-testnet-explorer.alt.technology/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1,\n        },\n    },\n});\n//# sourceMappingURL=swellchainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const swissdlt = /*#__PURE__*/ defineChain({\n    id: 94,\n    name: 'SwissDLT Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'BCTS',\n        symbol: 'BCTS',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.swissdlt.ch'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SwissDLT Explorer',\n            url: 'https://explorer.swissdlt.ch',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=swissdlt.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const syscoin = /*#__PURE__*/ defineChain({\n    id: 57,\n    name: 'Syscoin Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Syscoin',\n        symbol: 'SYS',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.syscoin.org'],\n            webSocket: ['wss://rpc.syscoin.org/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SyscoinExplorer',\n            url: 'https://explorer.syscoin.org',\n            apiUrl: 'https://explorer.syscoin.org/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 287139,\n        },\n    },\n});\n//# sourceMappingURL=syscoin.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const syscoinTestnet = /*#__PURE__*/ defineChain({\n    id: 5700,\n    name: 'Syscoin Tanenbaum Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Syscoin',\n        symbol: 'SYS',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.tanenbaum.io'],\n            webSocket: ['wss://rpc.tanenbaum.io/wss'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'SyscoinTestnetExplorer',\n            url: 'https://tanenbaum.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 271288,\n        },\n    },\n});\n//# sourceMappingURL=syscoinTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const tac = /*#__PURE__*/ defineChain({\n    id: 239,\n    name: 'TAC',\n    nativeCurrency: { name: 'TAC', symbol: 'TAC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.ankr.com/tac'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://tac.blockscout.com',\n            apiUrl: 'https://tac.blockscout.com/api',\n        },\n        native: {\n            name: 'TAC Explorer',\n            url: 'https://explorer.tac.build',\n            apiUrl: 'https://explorer.tac.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n    },\n});\n//# sourceMappingURL=tac.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const tacSPB = /*#__PURE__*/ defineChain({\n    id: 2_391,\n    name: 'TAC SPB Testnet',\n    nativeCurrency: {\n        name: 'TAC',\n        symbol: 'TAC',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://spb.rpc.tac.build'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'TAC',\n            url: 'https://spb.explorer.tac.build',\n            apiUrl: 'https://spb.explorer.tac.build/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 471429,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=tacSPB.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taiko = /*#__PURE__*/ defineChain({\n    id: 167000,\n    name: 'Taiko Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.taiko.xyz'],\n            webSocket: ['wss://ws.mainnet.taiko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Taikoscan',\n            url: 'https://taikoscan.io',\n            apiUrl: 'https://api.taikoscan.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcb2436774C3e191c85056d248EF4260ce5f27A9D',\n        },\n    },\n});\n//# sourceMappingURL=taiko.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taikoHekla = /*#__PURE__*/ defineChain({\n    id: 167_009,\n    name: 'Taiko Hekla L2',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.hekla.taiko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Taikoscan',\n            url: 'https://hekla.taikoscan.network',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 59757,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=taikoHekla.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taikoJolnir = /*#__PURE__*/ defineChain({\n    id: 167007,\n    name: 'Taiko Jolnir (Alpha-5 Testnet)',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.jolnir.taiko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://explorer.jolnir.taiko.xyz',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 732706,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=taikoJolnir.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taikoKatla = /*#__PURE__*/ defineChain({\n    id: 167008,\n    name: 'Taiko Katla (Alpha-6 Testnet)',\n    network: 'tko-katla',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.katla.taiko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://explorer.katla.taiko.xyz',\n        },\n    },\n});\n//# sourceMappingURL=taikoKatla.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taikoTestnetSepolia = /*#__PURE__*/ defineChain({\n    id: 167005,\n    name: 'Taiko (Alpha-3 Testnet)',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.test.taiko.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://explorer.test.taiko.xyz',\n        },\n    },\n});\n//# sourceMappingURL=taikoTestnetSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taraxa = /*#__PURE__*/ defineChain({\n    id: 841,\n    name: 'Taraxa Mainnet',\n    nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.mainnet.taraxa.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Taraxa Explorer',\n            url: 'https://explorer.mainnet.taraxa.io',\n        },\n    },\n});\n//# sourceMappingURL=taraxa.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const taraxaTestnet = /*#__PURE__*/ defineChain({\n    id: 842,\n    name: 'Taraxa Testnet',\n    nativeCurrency: { name: 'Tara', symbol: 'TARA', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.taraxa.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Taraxa Explorer',\n            url: 'https://explorer.testnet.taraxa.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=taraxaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const telcoinTestnet = /*#__PURE__*/ defineChain({\n    id: 2017,\n    name: 'Telcoin Adiri Testnet',\n    nativeCurrency: { name: 'Telcoin', symbol: 'TEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.telcoin.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'telscan',\n            url: 'https://telscan.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=telcoinTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const telos = /*#__PURE__*/ defineChain({\n    id: 40,\n    name: 'Telos',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Telos',\n        symbol: 'TLOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.telos.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Teloscan',\n            url: 'https://www.teloscan.io/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 246530709,\n        },\n    },\n});\n//# sourceMappingURL=telos.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const telosTestnet = /*#__PURE__*/ defineChain({\n    id: 41,\n    name: 'Telos',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Telos',\n        symbol: 'TLOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.testnet.telos.net'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Teloscan (testnet)',\n            url: 'https://testnet.teloscan.io/',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=telosTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const tenet = /*#__PURE__*/ defineChain({\n    id: 1559,\n    name: 'Tenet',\n    network: 'tenet-mainnet',\n    nativeCurrency: {\n        name: 'TENET',\n        symbol: 'TENET',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.tenet.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'TenetScan Mainnet',\n            url: 'https://tenetscan.io',\n            apiUrl: 'https://tenetscan.io/api',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=tenet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ternoa = /*#__PURE__*/ defineChain({\n    id: 752025,\n    name: 'Ternoa',\n    nativeCurrency: { name: 'Capsule Coin', symbol: 'CAPS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-mainnet.zkevm.ternoa.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ternoa Explorer',\n            url: 'https://explorer-mainnet.zkevm.ternoa.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=ternoa.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const thaiChain = /*#__PURE__*/ defineChain({\n    id: 7,\n    name: 'ThaiChain',\n    nativeCurrency: { name: 'TCH', symbol: 'TCH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.thaichain.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://exp.thaichain.org',\n            apiUrl: 'https://exp.thaichain.org/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x0DaD6130e832c21719C5CE3bae93454E16A84826',\n            blockCreated: 4806386,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=thaiChain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const that = /*#__PURE__*/ defineChain({\n    id: 8428,\n    name: 'THAT Mainnet',\n    nativeCurrency: { name: 'THAT', symbol: 'THAT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.thatchain.io/mainnet'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://that.blockscout.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=that.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const theta = /*#__PURE__*/ defineChain({\n    id: 361,\n    name: 'Theta Mainnet',\n    nativeCurrency: { name: 'TFUEL', symbol: 'TFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://eth-rpc-api.thetatoken.org/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Theta Explorer',\n            url: 'https://explorer.thetatoken.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=theta.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const thetaTestnet = /*#__PURE__*/ defineChain({\n    id: 365,\n    name: 'Theta Testnet',\n    nativeCurrency: { name: 'TFUEL', symbol: 'TFUEL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://eth-rpc-api-testnet.thetatoken.org/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Theta Explorer',\n            url: 'https://testnet-explorer.thetatoken.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=thetaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const thunderCore = /*#__PURE__*/ defineChain({\n    id: 108,\n    name: 'ThunderCore Mainnet',\n    nativeCurrency: { name: 'TT', symbol: 'TT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet-rpc.thundercore.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ThunderCore Explorer',\n            url: 'https://explorer-mainnet.thundercore.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 0,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=thunderCore.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const thunderTestnet = /*#__PURE__*/ defineChain({\n    id: 997,\n    name: '5ireChain Thunder Testnet',\n    nativeCurrency: { name: '5ire Token', symbol: '5IRE', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.5ire.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: '5ireChain Thunder Explorer',\n            url: 'https://testnet.5irescan.io/',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=thunderTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const tiktrixTestnet = /*#__PURE__*/ defineChain({\n    id: 62092,\n    name: 'TikTrix Testnet',\n    nativeCurrency: {\n        name: 'tTTX',\n        symbol: 'tTTX',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://tiktrix-rpc.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'TikTrix Testnet Explorer',\n            url: 'https://tiktrix.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=tiktrixTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const tomb = /*#__PURE__*/ defineChain({\n    id: 6969,\n    name: 'Tomb Mainnet',\n    nativeCurrency: { name: 'TOMB', symbol: 'TOMB', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.tombchain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Tomb Explorer',\n            url: 'https://tombscout.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=tomb.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const treasure = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 61_166,\n    name: 'Treasure',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MAGIC',\n        symbol: 'MAGIC',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.treasure.lol'],\n            webSocket: ['wss://rpc.treasure.lol/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Treasure Block Explorer',\n            url: 'https://treasurescan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x2e29fe39496a56856D8698bD43e1dF4D0CE6266a',\n            blockCreated: 101,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=treasure.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const treasureTopaz = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 978_658,\n    name: 'Treasure Topaz Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'MAGIC',\n        symbol: 'MAGIC',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.topaz.treasure.lol'],\n            webSocket: ['wss://rpc.topaz.treasure.lol/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Treasure Topaz Block Explorer',\n            url: 'https://topaz.treasurescan.io',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n            blockCreated: 108112,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=treasureTopaz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const tron = /*#__PURE__*/ defineChain({\n    id: 728126428,\n    name: 'Tron',\n    nativeCurrency: { name: 'TRON', symbol: 'TRX', decimals: 6 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.trongrid.io/jsonrpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Tronscan',\n            url: 'https://tronscan.org',\n            apiUrl: 'https://apilist.tronscanapi.com/api',\n        },\n    },\n});\n//# sourceMappingURL=tron.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const tronShasta = /*#__PURE__*/ defineChain({\n    id: 2494104990,\n    name: 'Tron Shasta',\n    nativeCurrency: { name: 'TRON', symbol: 'TRX', decimals: 6 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.shasta.trongrid.io/jsonrpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Tronscan',\n            url: 'https://shasta.tronscan.org',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=tronShasta.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ubiq = /*#__PURE__*/ defineChain({\n    id: 8,\n    name: 'Ubiq Mainnet',\n    nativeCurrency: { name: 'UBQ', symbol: 'UBQ', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://pyrus2.ubiqscan.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ubiq Scan',\n            url: 'https://ubiqscan.io',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=ubiq.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ultra = /*#__PURE__*/ defineChain({\n    id: 19991,\n    name: 'Ultra EVM',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ultra Token',\n        symbol: 'UOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.ultra.eosusa.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ultra EVM Explorer',\n            url: 'https://evmexplorer.ultra.io',\n        },\n    },\n});\n//# sourceMappingURL=ultra.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ultraTestnet = /*#__PURE__*/ defineChain({\n    id: 18881,\n    name: 'Ultra EVM Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ultra Token',\n        symbol: 'UOS',\n    },\n    rpcUrls: {\n        default: { http: ['https://evm.test.ultra.eosusa.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ultra EVM Testnet Explorer',\n            url: 'https://evmexplorer.testnet.ultra.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=ultraTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ultron = /*#__PURE__*/ defineChain({\n    id: 1231,\n    name: 'Ultron Mainnet',\n    nativeCurrency: { name: 'ULX', symbol: 'ULX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://ultron-rpc.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ultron Scan',\n            url: 'https://ulxscan.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=ultron.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const ultronTestnet = /*#__PURE__*/ defineChain({\n    id: 1230,\n    name: 'Ultron Testnet',\n    nativeCurrency: { name: 'ULX', symbol: 'ULX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://ultron-dev.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ultron Scan',\n            url: 'https://explorer.ultron-dev.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=ultronTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const unichain = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 130,\n    name: 'Unichain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.unichain.org/'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Uniscan',\n            url: 'https://uniscan.xyz',\n            apiUrl: 'https://api.uniscan.xyz/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x2F12d621a16e2d3285929C9996f478508951dFe4',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x0bd48f6B86a26D3a217d0Fa6FfE2B491B956A7a2',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x81014F44b0a345033bB2b3B21C7a1A308B35fEeA',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=unichain.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const unichainSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 1301,\n    name: 'Unichain Sepolia',\n    nativeCurrency: {\n        name: 'Ether',\n        symbol: 'ETH',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.unichain.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Uniscan',\n            url: 'https://sepolia.uniscan.xyz',\n            apiUrl: 'https://api-sepolia.uniscan.xyz/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x0d83dab629f0e0F9d36c0Cbc89B69a489f0751bD',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xea58fcA6849d79EAd1f26608855c2D6407d54Ce2',\n            },\n        },\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0xeff73e5aa3B9AEC32c659Aa3E00444d20a84394b',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=unichainSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const unique = /*#__PURE__*/ defineChain({\n    id: 8880,\n    name: 'Unique Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'UNQ',\n        symbol: 'UNQ',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.unique.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Unique Subscan',\n            url: 'https://unique.subscan.io/',\n        },\n    },\n});\n//# sourceMappingURL=unique.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const uniqueOpal = /*#__PURE__*/ defineChain({\n    id: 8882,\n    name: 'Opal Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OPL',\n        symbol: 'OPL',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc-opal.unique.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Opal Subscan',\n            url: 'https://opal.subscan.io/',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=uniqueOpal.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const uniqueQuartz = /*#__PURE__*/ defineChain({\n    id: 8881,\n    name: 'Quartz Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'QTZ',\n        symbol: 'QTZ',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc-quartz.unique.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Quartz Subscan',\n            url: 'https://quartz.subscan.io/',\n        },\n    },\n});\n//# sourceMappingURL=uniqueQuartz.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const unreal = /*#__PURE__*/ defineChain({\n    id: 18233,\n    name: 'Unreal',\n    nativeCurrency: {\n        name: 'reETH',\n        decimals: 18,\n        symbol: 'reETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.unreal-orbit.gelato.digital'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Unreal Explorer',\n            url: 'https://unreal.blockscout.com',\n            apiUrl: 'https://unreal.blockscout.com/api/v2',\n        },\n    },\n    testnet: true,\n    contracts: {\n        multicall3: {\n            address: '0x8b6B0e60D8CD84898Ea8b981065A12F876eA5677',\n            blockCreated: 1745,\n        },\n    },\n});\n//# sourceMappingURL=unreal.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const vanar = /*#__PURE__*/ defineChain({\n    id: 2040,\n    name: 'Vanar Mainnet',\n    nativeCurrency: { name: 'VANRY', symbol: 'VANRY', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.vanarchain.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Vanar Mainnet Explorer',\n            url: 'https://explorer.vanarchain.com/',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=vanar.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const vechain = /*#__PURE__*/ defineChain({\n    id: 100009,\n    name: 'Vechain',\n    nativeCurrency: { name: 'VeChain', symbol: 'VET', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.vechain.org'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Vechain Explorer',\n            url: 'https://explore.vechain.org',\n        },\n        vechainStats: {\n            name: 'Vechain Stats',\n            url: 'https://vechainstats.com',\n        },\n    },\n});\n//# sourceMappingURL=vechain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const velas = /*#__PURE__*/ defineChain({\n    id: 106,\n    name: 'Velas EVM Mainnet',\n    nativeCurrency: { name: 'VLX', symbol: 'VLX', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evmexplorer.velas.com/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Velas Explorer',\n            url: 'https://evmexplorer.velas.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 55883577,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=velas.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const viction = /*#__PURE__*/ defineChain({\n    id: 88,\n    name: 'Viction',\n    nativeCurrency: { name: 'Viction', symbol: 'VIC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.viction.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'VIC Scan',\n            url: 'https://vicscan.xyz',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=viction.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const victionTestnet = /*#__PURE__*/ defineChain({\n    id: 89,\n    name: 'Viction Testnet',\n    nativeCurrency: { name: 'Viction', symbol: 'VIC', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet.viction.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'VIC Scan',\n            url: 'https://testnet.vicscan.xyz',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 12170179,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=victionTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const vision = /*#__PURE__*/ defineChain({\n    id: 888888,\n    name: 'Vision',\n    nativeCurrency: { name: 'VISION', symbol: 'VS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://infragrid.v.network/ethereum/compatible'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Vision Scan',\n            url: 'https://visionscan.org',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=vision.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const visionTestnet = /*#__PURE__*/ defineChain({\n    id: 666666,\n    name: 'Vision Testnet',\n    nativeCurrency: { name: 'VISION', symbol: 'VS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://vpioneer.infragrid.v.network/ethereum/compatible'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Vision Scan',\n            url: 'https://visionscan.org/?chain=vpioneer',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=visionTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const wanchain = /*#__PURE__*/ defineChain({\n    id: 888,\n    name: 'Wanchain',\n    nativeCurrency: { name: 'WANCHAIN', symbol: 'WAN', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://gwan-ssl.wandevs.org:56891',\n                'https://gwan2-ssl.wandevs.org',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'WanScan',\n            url: 'https://wanscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcDF6A1566e78EB4594c86Fe73Fcdc82429e97fbB',\n            blockCreated: 25312390,\n        },\n    },\n});\n//# sourceMappingURL=wanchain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const wanchainTestnet = /*#__PURE__*/ defineChain({\n    id: 999,\n    name: 'Wanchain Testnet',\n    nativeCurrency: { name: 'WANCHAIN', symbol: 'WANt', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://gwan-ssl.wandevs.org:46891'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'WanScanTest',\n            url: 'https://wanscan.org',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x11c89bF4496c39FB80535Ffb4c92715839CC5324',\n            blockCreated: 24743448,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=wanchainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const weaveVMAlphanet = /*#__PURE__*/ defineChain({\n    id: 9496,\n    name: 'WeaveVM Alphanet',\n    nativeCurrency: { name: 'Testnet WeaveVM', symbol: 'tWVM', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://testnet-rpc.wvm.dev'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'WeaveVM Alphanet Explorer',\n            url: 'https://explorer.wvm.dev',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=weavevmAlphanet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const wemix = /*#__PURE__*/ defineChain({\n    id: 1111,\n    name: 'WEMIX',\n    network: 'wemix-mainnet',\n    nativeCurrency: { name: 'WEMIX', symbol: 'WEMIX', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://api.wemix.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'wemixExplorer',\n            url: 'https://explorer.wemix.com',\n        },\n    },\n});\n//# sourceMappingURL=wemix.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const wemixTestnet = /*#__PURE__*/ defineChain({\n    id: 1112,\n    name: 'WEMIX Testnet',\n    network: 'wemix-testnet',\n    nativeCurrency: { name: 'WEMIX', symbol: 'tWEMIX', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://api.test.wemix.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'wemixExplorer',\n            url: 'https://testnet.wemixscan.com',\n            apiUrl: 'https://testnet.wemixscan.com/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=wemixTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const westendAssetHub = /*#__PURE__*/ defineChain({\n    id: 420_420_421,\n    name: 'Westend Asset Hub',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Westies',\n        symbol: 'WND',\n    },\n    rpcUrls: {\n        default: { http: ['https://westend-asset-hub-eth-rpc.polkadot.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'subscan',\n            url: 'https://westend-asset-hub-eth-explorer.parity.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=westendAssetHub.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const whitechain = /*#__PURE__*/ defineChain({\n    testnet: false,\n    name: 'Whitechain',\n    blockExplorers: {\n        default: {\n            name: 'Whitechain Explorer',\n            url: 'https://explorer.whitechain.io',\n        },\n    },\n    id: 1875,\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.whitechain.io'],\n        },\n    },\n    nativeCurrency: {\n        decimals: 18,\n        name: 'WhiteBIT Coin',\n        symbol: 'WBT',\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 25212237,\n        },\n    },\n});\n//# sourceMappingURL=whitechain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const whitechainTestnet = /*#__PURE__*/ defineChain({\n    testnet: true,\n    name: 'Whitechain Testnet',\n    blockExplorers: {\n        default: {\n            name: 'Whitechain Explorer',\n            url: 'https://testnet.whitechain.io',\n        },\n    },\n    id: 2625,\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet.whitechain.io'],\n        },\n    },\n    nativeCurrency: {\n        decimals: 18,\n        name: 'WhiteBIT Coin',\n        symbol: 'WBT',\n    },\n});\n//# sourceMappingURL=whitechainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const wmcTestnet = /*#__PURE__*/ defineChain({\n    id: 42070,\n    name: 'WMC Testnet',\n    nativeCurrency: { name: 'WMTx', symbol: 'WMTx', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc-testnet-base.worldmobile.net'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'WMC Explorer',\n            url: 'https://explorer2-base-testnet.worldmobile.net',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=wmcTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const worldchain = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 480,\n    name: 'World Chain',\n    network: 'worldchain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://worldchain-mainnet.g.alchemy.com/public'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Worldscan',\n            url: 'https://worldscan.org',\n            apiUrl: 'https://api.worldscan.org/api',\n        },\n        blockscout: {\n            name: 'Blockscout',\n            url: 'https://worldchain-mainnet.explorer.alchemy.com',\n            apiUrl: 'https://worldchain-mainnet.explorer.alchemy.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x069c4c579671f8c120b1327a73217D01Ea2EC5ea',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x19A6d1E9034596196295CF148509796978343c5D',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xd5ec14a83B7d95BE1E2Ac12523e2dEE12Cbeea6C',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x470458C91978D2d929704489Ad730DC3E3001113',\n            },\n        },\n    },\n    testnet: false,\n    sourceId,\n});\n//# sourceMappingURL=worldchain.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const worldchainSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 4801,\n    name: 'World Chain Sepolia',\n    network: 'worldchain-sepolia',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: { http: ['https://worldchain-sepolia.g.alchemy.com/public'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Worldscan Sepolia',\n            url: 'https://sepolia.worldscan.org',\n            apiUrl: 'https://api-sepolia.worldscan.org/api',\n        },\n        blockscout: {\n            name: 'Blockscout',\n            url: 'https://worldchain-sepolia.explorer.alchemy.com',\n            apiUrl: 'https://worldchain-sepolia.explorer.alchemy.com/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 0,\n        },\n        disputeGameFactory: {\n            [sourceId]: {\n                address: '0x8Ec1111f67Dad6b6A93B3F42DfBC92D81c98449A',\n            },\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xc8886f8BAb6Eaeb215aDB5f1c686BF699248300e',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xFf6EBa109271fe6d4237EeeD4bAb1dD9A77dD1A4',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0xd7DF54b3989855eb66497301a4aAEc33Dbb3F8DE',\n            },\n        },\n    },\n    testnet: true,\n    sourceId,\n});\n//# sourceMappingURL=worldchainSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const worldLand = /*#__PURE__*/ defineChain({\n    id: 103,\n    name: 'WorldLand Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'WLC',\n        symbol: 'WLC',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://seoul.worldland.foundation'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'WorldLand Scan',\n            url: 'https://scan.worldland.foundation',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=worldLand.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xai = /*#__PURE__*/ defineChain({\n    id: 660279,\n    name: 'Xai Mainnet',\n    nativeCurrency: { name: 'Xai', symbol: 'XAI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://xai-chain.net/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://explorer.xai-chain.net',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 222549,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=xai.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xaiTestnet = /*#__PURE__*/ defineChain({\n    id: 37714555429,\n    name: 'Xai Testnet',\n    nativeCurrency: { name: 'sXai', symbol: 'sXAI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-v2.xai-chain.net/rpc'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://testnet-explorer-v2.xai-chain.net',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=xaiTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xdc = /*#__PURE__*/ defineChain({\n    id: 50,\n    name: 'XDC Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'XDC',\n        symbol: 'XDC',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.xdcrpc.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'XDCScan',\n            url: 'https://xdcscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x0B1795ccA8E4eC4df02346a082df54D437F8D9aF',\n            blockCreated: 75884020,\n        },\n    },\n});\n//# sourceMappingURL=xdc.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xdcTestnet = /*#__PURE__*/ defineChain({\n    id: 51,\n    name: 'Apothem Network',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'TXDC',\n        symbol: 'TXDC',\n    },\n    rpcUrls: {\n        default: { http: ['https://erpc.apothem.network'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'XDCScan',\n            url: 'https://testnet.xdcscan.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 59765389,\n        },\n    },\n});\n//# sourceMappingURL=xdcTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xLayer = /*#__PURE__*/ defineChain({\n    id: 196,\n    name: 'X Layer Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OKB',\n        symbol: 'OKB',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.xlayer.tech'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'OKLink',\n            url: 'https://www.oklink.com/xlayer',\n            apiUrl: 'https://www.oklink.com/api/v5/explorer/xlayer/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 47416,\n        },\n    },\n});\n//# sourceMappingURL=xLayer.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xLayerTestnet = /*#__PURE__*/ defineChain({\n    id: 195,\n    name: 'X1 Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'OKB',\n        symbol: 'OKB',\n    },\n    rpcUrls: {\n        default: { http: ['https://xlayertestrpc.okx.com'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'OKLink',\n            url: 'https://www.oklink.com/xlayer-test',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 624344,\n        },\n    },\n    testnet: true,\n});\nexport { xLayerTestnet as x1Testnet };\n//# sourceMappingURL=xLayerTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xrOne = /*#__PURE__*/ defineChain({\n    id: 273,\n    name: 'XR One',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'XR1',\n        symbol: 'XR1',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://xr1.calderachain.xyz/http'],\n            webSocket: ['wss://xr1.calderachain.xyz/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://xr1.calderaexplorer.xyz',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=xrOne.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xrplevmDevnet = /*#__PURE__*/ defineChain({\n    id: 1440002,\n    name: 'XRPL EVM Devnet',\n    nativeCurrency: {\n        name: 'XRP',\n        symbol: 'XRP',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.xrplevm.org/'],\n        },\n        public: {\n            http: ['https://rpc.xrplevm.org/'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'XRPLEVM Devnet Explorer',\n            url: 'https://explorer.xrplevm.org/',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x82Cc144D7d0AD4B1c27cb41420e82b82Ad6e9B31',\n            blockCreated: 15237286,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=xrplevmDevnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xrplevmTestnet = /*#__PURE__*/ defineChain({\n    id: 1449000,\n    name: 'XRPL EVM Testnet',\n    nativeCurrency: {\n        name: 'XRP',\n        symbol: 'XRP',\n        decimals: 18,\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.testnet.xrplevm.org'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'blockscout',\n            url: 'https://explorer.testnet.xrplevm.org',\n            apiUrl: 'https://explorer.testnet.xrplevm.org/api/v2',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0x82Cc144D7d0AD4B1c27cb41420e82b82Ad6e9B31',\n            blockCreated: 492302,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=xrplevmTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const xrSepolia = /*#__PURE__*/ defineChain({\n    id: 2730,\n    name: 'XR Sepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'tXR',\n        symbol: 'tXR',\n    },\n    rpcUrls: {\n        default: { http: ['https://xr-sepolia-testnet.rpc.caldera.xyz/http'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'https://xr-sepolia-testnet.explorer.caldera.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=xrSepolia.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const yooldoVerse = /*#__PURE__*/ defineChain({\n    id: 50_005,\n    name: 'Yooldo Verse',\n    nativeCurrency: { name: 'OAS', symbol: 'OAS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.yooldo-verse.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Yooldo Verse Explorer',\n            url: 'https://explorer.yooldo-verse.xyz',\n        },\n    },\n});\n//# sourceMappingURL=yooldoVerse.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const yooldoVerseTestnet = /*#__PURE__*/ defineChain({\n    id: 50_006,\n    name: 'Yooldo Verse Testnet',\n    nativeCurrency: { name: 'OAS', symbol: 'OAS', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.testnet.yooldo-verse.xyz'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Yooldo Verse Testnet Explorer',\n            url: 'https://explorer.testnet.yooldo-verse.xyz',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=yooldoVerseTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zenchainTestnet = /*#__PURE__*/ defineChain({\n    id: 8408,\n    name: 'ZenChain Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ZTC',\n        symbol: 'ZTC',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://zenchain-testnet.api.onfinality.io/public'],\n            webSocket: ['wss://zenchain-testnet.api.onfinality.io/public-ws'],\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 230019,\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Zentrace',\n            url: 'https://zentrace.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zenchainTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zeniq = /*#__PURE__*/ defineChain({\n    id: 383414847825,\n    name: 'Zeniq Mainnet',\n    nativeCurrency: { name: 'ZENIQ', symbol: 'ZENIQ', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.zeniq.network'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Zeniq Explorer',\n            url: 'https://zeniqscan.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zeniq.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zeroG = /*#__PURE__*/ defineChain({\n    id: 16_600,\n    name: '0G Newton Testnet',\n    nativeCurrency: { name: 'A0GI', symbol: 'A0GI', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://evmrpc-testnet.0g.ai'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: '0G BlockChain Explorer',\n            url: 'https://chainscan-newton.0g.ai',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=0g.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zeroNetwork = /*#__PURE__*/ defineChain({\n    id: 543_210,\n    name: 'Zero Network',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.zerion.io/v1/zero'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Zero Network Explorer',\n            url: 'https://explorer.zero.network',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zeroNetwork.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zetachain = /*#__PURE__*/ defineChain({\n    id: 7000,\n    name: 'ZetaChain',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Zeta',\n        symbol: 'ZETA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://zetachain-evm.blockpi.network/v1/rpc/public'],\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 1632781,\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ZetaScan',\n            url: 'https://explorer.zetachain.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zetachain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zetachainAthensTestnet = /*#__PURE__*/ defineChain({\n    id: 7001,\n    name: 'ZetaChain Athens Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Zeta',\n        symbol: 'aZETA',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://zetachain-athens-evm.blockpi.network/v1/rpc/public'],\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 2715217,\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ZetaScan',\n            url: 'https://athens.explorer.zetachain.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zetachainAthensTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zhejiang = /*#__PURE__*/ defineChain({\n    id: 1_337_803,\n    name: 'Zhejiang',\n    nativeCurrency: { name: 'Zhejiang Ether', symbol: 'ZhejETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.zhejiang.ethpandaops.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Beaconchain',\n            url: 'https://zhejiang.beaconcha.in',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zhejiang.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zilliqa = /*#__PURE__*/ defineChain({\n    id: 32769,\n    name: 'Zilliqa',\n    network: 'zilliqa',\n    nativeCurrency: { name: 'Zilliqa', symbol: 'ZIL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://api.zilliqa.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ethernal',\n            url: 'https://evmx.zilliqa.com',\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zilliqa.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zilliqaTestnet = /*#__PURE__*/ defineChain({\n    id: 33101,\n    name: 'Zilliqa Testnet',\n    network: 'zilliqa-testnet',\n    nativeCurrency: { name: 'Zilliqa', symbol: 'ZIL', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://dev-api.zilliqa.com'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Ethernal',\n            url: 'https://evmx.testnet.zilliqa.com',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zilliqaTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // ethereum mainnet\nexport const zircuit = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 48900,\n    name: 'Zircuit Mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://mainnet.zircuit.com',\n                'https://zircuit1-mainnet.liquify.com',\n                'https://zircuit1-mainnet.p2pify.com',\n                'https://zircuit-mainnet.drpc.org',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Zircuit Explorer',\n            url: 'https://explorer.zircuit.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x92Ef6Af472b39F1b363da45E35530c24619245A4',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x17bfAfA932d2e23Bd9B909Fd5B4D2e2a27043fb1',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x386B76D9cA5F5Fb150B6BFB35CF5379B22B26dd8',\n            },\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zircuit.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const zircuitGarfieldTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 48898,\n    name: 'Zircuit Garfield Testnet',\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://garfield-testnet.zircuit.com/'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Zircuit Garfield Testnet Explorer',\n            url: 'https://explorer.garfield-testnet.zircuit.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0xd69D3AC5CA686cCF94b258291772bc520FEAf211',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x4E21A71Ac3F7607Da5c06153A17B1DD20E702c21',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x87a7E2bCA9E35BA49282E832a28A6023904460D8',\n            },\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zircuitGarfieldTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const zircuitTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 48899,\n    name: 'Zircuit Testnet',\n    nativeCurrency: { name: 'ETH', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: [\n                'https://testnet.zircuit.com',\n                'https://zircuit1-testnet.p2pify.com',\n                'https://zircuit1-testnet.liquify.com',\n            ],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Zircuit Testnet Explorer',\n            url: 'https://explorer.testnet.zircuit.com',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 6040287,\n        },\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x740C2dac453aEf7140809F80b72bf0e647af8148',\n            },\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x787f1C8c5924178689E0560a43D848bF8E54b23e',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x0545c5fe980098C16fcD0eCB5E79753afa6d9af9',\n            },\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zircuitTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zkFair = /*#__PURE__*/ defineChain({\n    id: 42766,\n    name: 'ZKFair Mainnet',\n    network: 'zkfair-mainnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'USD Coin',\n        symbol: 'USDC',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.zkfair.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'zkFair Explorer',\n            url: 'https://scan.zkfair.io',\n            apiUrl: 'https://scan.zkfair.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xca11bde05977b3631167028862be2a173976ca11',\n            blockCreated: 6090959,\n        },\n    },\n    testnet: false,\n});\n//# sourceMappingURL=zkFair.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zkFairTestnet = /*#__PURE__*/ defineChain({\n    id: 43851,\n    name: 'ZKFair Testnet',\n    network: 'zkfair-testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'USD Coin',\n        symbol: 'USDC',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet-rpc.zkfair.io'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'zkFair Explorer',\n            url: 'https://testnet-scan.zkfair.io',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zkFairTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zkLinkNova = /*#__PURE__*/ defineChain({\n    id: 810180,\n    name: 'zkLink Nova',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://rpc.zklink.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'zkLink Nova Block Explorer',\n            url: 'https://explorer.zklink.io',\n        },\n    },\n});\n//# sourceMappingURL=zkLinkNova.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nexport const zkLinkNovaSepoliaTestnet = /*#__PURE__*/ defineChain({\n    id: 810181,\n    name: 'zkLink Nova Sepolia Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'ETH',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: { http: ['https://sepolia.rpc.zklink.io'] },\n    },\n    blockExplorers: {\n        default: {\n            name: 'zkLink Nova Block Explorer',\n            url: 'https://sepolia.explorer.zklink.io',\n        },\n    },\n});\n//# sourceMappingURL=zkLinkNovaSepoliaTestnet.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const zksync = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 324,\n    name: 'ZKsync Era',\n    network: 'zksync-era',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://mainnet.era.zksync.io'],\n            webSocket: ['wss://mainnet.era.zksync.io/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://era.zksync.network/',\n            apiUrl: 'https://api-era.zksync.network/api',\n        },\n        native: {\n            name: 'ZKsync Explorer',\n            url: 'https://explorer.zksync.io/',\n            apiUrl: 'https://block-explorer-api.mainnet.zksync.io/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n        },\n        universalSignatureVerifier: {\n            address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n            blockCreated: 45659388,\n        },\n    },\n});\n//# sourceMappingURL=zksync.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const zksyncInMemoryNode = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 260,\n    name: 'ZKsync InMemory Node',\n    network: 'zksync-in-memory-node',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['http://localhost:8011'],\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zksyncInMemoryNode.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\n// The local hyperchain setup: https://github.com/matter-labs/local-setup/blob/main/zk-chains-docker-compose.yml\nexport const zksyncLocalCustomHyperchain = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 272,\n    name: 'ZKsync CLI Local Custom Hyperchain',\n    nativeCurrency: { name: 'BAT', symbol: 'BAT', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['http://localhost:15200'],\n            webSocket: ['ws://localhost:15201'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ZKsync explorer',\n            url: 'http://localhost:15005/',\n            apiUrl: 'http://localhost:15005/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zksyncLocalCustomHyperchain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\n// The local hyperchain setup: https://github.com/matter-labs/local-setup/blob/main/zk-chains-docker-compose.yml\nexport const zksyncLocalHyperchain = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 270,\n    name: 'ZKsync CLI Local Hyperchain',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['http://localhost:15100'],\n            webSocket: ['ws://localhost:15101'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'ZKsync explorer',\n            url: 'http://localhost:15005/',\n            apiUrl: 'http://localhost:15005/api',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zksyncLocalHyperchain.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\n// The local hyperchain setup: https://github.com/matter-labs/local-setup/blob/main/zk-chains-docker-compose.yml\nexport const zksyncLocalHyperchainL1 = /*#__PURE__*/ defineChain({\n    id: 9,\n    name: 'ZKsync CLI Local Hyperchain L1',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['http://localhost:15045'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Blockscout',\n            url: 'http://localhost:15001/',\n            apiUrl: 'http://localhost:15001/api/v2',\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zksyncLocalHyperchainL1.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const zksyncLocalNode = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 270,\n    name: 'ZKsync CLI Local Node',\n    network: 'zksync-cli-local-node',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['http://localhost:3050'],\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zksyncLocalNode.js.map","import { defineChain } from '../../utils/chain/defineChain.js';\nimport { chainConfig } from '../../zksync/chainConfig.js';\nexport const zksyncSepoliaTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 300,\n    name: 'ZKsync Sepolia Testnet',\n    network: 'zksync-sepolia-testnet',\n    nativeCurrency: { name: 'Ether', symbol: 'ETH', decimals: 18 },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.era.zksync.dev'],\n            webSocket: ['wss://sepolia.era.zksync.dev/ws'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Etherscan',\n            url: 'https://sepolia-era.zksync.network/',\n            apiUrl: 'https://api-sepolia-era.zksync.network/api',\n        },\n        native: {\n            name: 'ZKsync Explorer',\n            url: 'https://sepolia.explorer.zksync.io/',\n            blockExplorerApi: 'https://block-explorer-api.sepolia.zksync.dev/api',\n        },\n    },\n    contracts: {\n        multicall3: {\n            address: '0xF9cda624FBC7e059355ce98a31693d299FACd963',\n        },\n        universalSignatureVerifier: {\n            address: '0xfB688330379976DA81eB64Fe4BF50d7401763B9C',\n            blockCreated: 3855712,\n        },\n    },\n    testnet: true,\n});\n//# sourceMappingURL=zksyncSepoliaTestnet.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 1; // mainnet\nexport const zora = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 7777777,\n    name: 'Zora',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Ether',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://rpc.zora.energy'],\n            webSocket: ['wss://rpc.zora.energy'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://explorer.zora.energy',\n            apiUrl: 'https://explorer.zora.energy/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x9E6204F750cD866b299594e2aC9eA824E2e5f95c',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 5882,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0x1a0ad011913A150f69f6A19DF447A0CfD9551054',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x3e2Ea9B92B7E48A52296fD261dc26fd995284631',\n            },\n        },\n    },\n    sourceId,\n});\n//# sourceMappingURL=zora.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 11_155_111; // sepolia\nexport const zoraSepolia = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 999999999,\n    name: 'Zora Sepolia',\n    network: 'zora-sepolia',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Zora Sepolia',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://sepolia.rpc.zora.energy'],\n            webSocket: ['wss://sepolia.rpc.zora.energy'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Zora Sepolia Explorer',\n            url: 'https://sepolia.explorer.zora.energy/',\n            apiUrl: 'https://sepolia.explorer.zora.energy/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        l2OutputOracle: {\n            [sourceId]: {\n                address: '0x2615B481Bd3E5A1C0C7Ca3Da1bdc663E8615Ade9',\n            },\n        },\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 83160,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xeffE2C6cA9Ab797D418f0D91eA60807713f3536f',\n            },\n        },\n        l1StandardBridge: {\n            [sourceId]: {\n                address: '0x5376f1D543dcbB5BD416c56C189e4cB7399fCcCB',\n            },\n        },\n    },\n    sourceId,\n    testnet: true,\n});\n//# sourceMappingURL=zoraSepolia.js.map","import { chainConfig } from '../../op-stack/chainConfig.js';\nimport { defineChain } from '../../utils/chain/defineChain.js';\nconst sourceId = 5; // goerli\nexport const zoraTestnet = /*#__PURE__*/ defineChain({\n    ...chainConfig,\n    id: 999,\n    name: 'Zora Goerli Testnet',\n    nativeCurrency: {\n        decimals: 18,\n        name: 'Zora Goerli',\n        symbol: 'ETH',\n    },\n    rpcUrls: {\n        default: {\n            http: ['https://testnet.rpc.zora.energy'],\n            webSocket: ['wss://testnet.rpc.zora.energy'],\n        },\n    },\n    blockExplorers: {\n        default: {\n            name: 'Explorer',\n            url: 'https://testnet.explorer.zora.energy',\n            apiUrl: 'https://testnet.explorer.zora.energy/api',\n        },\n    },\n    contracts: {\n        ...chainConfig.contracts,\n        multicall3: {\n            address: '0xcA11bde05977b3631167028862bE2a173976CA11',\n            blockCreated: 189123,\n        },\n        portal: {\n            [sourceId]: {\n                address: '0xDb9F51790365e7dc196e7D072728df39Be958ACe',\n            },\n        },\n    },\n    sourceId,\n    testnet: true,\n});\n//# sourceMappingURL=zoraTestnet.js.map",null,null,"import { createClient, } from '../../clients/createClient.js';\nimport { bundlerActions } from './decorators/bundler.js';\nexport function createBundlerClient(parameters) {\n    const { client: client_, key = 'bundler', name = 'Bundler Client', paymaster, paymasterContext, transport, userOperation, } = parameters;\n    const client = Object.assign(createClient({\n        ...parameters,\n        chain: parameters.chain ?? client_?.chain,\n        key,\n        name,\n        transport,\n        type: 'bundlerClient',\n    }), { client: client_, paymaster, paymasterContext, userOperation });\n    return client.extend(bundlerActions);\n}\n//# sourceMappingURL=createBundlerClient.js.map",null,null,null,null,"function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n",null,null,"import { p256 } from '@noble/curves/p256';\nimport * as Bytes from './Bytes.js';\nimport * as PublicKey from './PublicKey.js';\n/**\n * Generates an ECDSA P256 key pair that includes:\n *\n * - a `privateKey` of type [`CryptoKey`](https://developer.mozilla.org/en-US/docs/Web/API/CryptoKey)\n *\n * - a `publicKey` of type {@link ox#Hex.Hex} or {@link ox#Bytes.Bytes}\n *\n * @example\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { publicKey, privateKey } = await WebCryptoP256.createKeyPair()\n * // @log: {\n * // @log:   privateKey: CryptoKey {},\n * // @log:   publicKey: {\n * // @log:     x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:     y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log:     prefix: 4,\n * // @log:   },\n * // @log: }\n * ```\n *\n * @param options - Options for creating the key pair.\n * @returns The key pair.\n */\nexport async function createKeyPair(options = {}) {\n    const { extractable = false } = options;\n    const keypair = await globalThis.crypto.subtle.generateKey({\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n    }, extractable, ['sign', 'verify']);\n    const publicKey_raw = await globalThis.crypto.subtle.exportKey('raw', keypair.publicKey);\n    const publicKey = PublicKey.from(new Uint8Array(publicKey_raw));\n    return {\n        privateKey: keypair.privateKey,\n        publicKey,\n    };\n}\n/**\n * Signs a payload with the provided `CryptoKey` private key and returns a P256 signature.\n *\n * @example\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { privateKey } = await WebCryptoP256.createKeyPair()\n *\n * const signature = await WebCryptoP256.sign({ // [!code focus]\n *   payload: '0xdeadbeef', // [!code focus]\n *   privateKey, // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   r: 151231...4423n,\n * // @log:   s: 516123...5512n,\n * // @log: }\n * ```\n *\n * @param options - Options for signing the payload.\n * @returns The P256 ECDSA {@link ox#Signature.Signature}.\n */\nexport async function sign(options) {\n    const { payload, privateKey } = options;\n    const signature = await globalThis.crypto.subtle.sign({\n        name: 'ECDSA',\n        hash: 'SHA-256',\n    }, privateKey, Bytes.from(payload));\n    const signature_bytes = Bytes.fromArray(new Uint8Array(signature));\n    const r = Bytes.toBigInt(Bytes.slice(signature_bytes, 0, 32));\n    let s = Bytes.toBigInt(Bytes.slice(signature_bytes, 32, 64));\n    if (s > p256.CURVE.n / 2n)\n        s = p256.CURVE.n - s;\n    return { r, s };\n}\n/**\n * Verifies a payload was signed by the provided public key.\n *\n * @example\n *\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { privateKey, publicKey } = await WebCryptoP256.createKeyPair()\n * const signature = await WebCryptoP256.sign({ payload: '0xdeadbeef', privateKey })\n *\n * const verified = await WebCryptoP256.verify({ // [!code focus]\n *   payload: '0xdeadbeef', // [!code focus]\n *   publicKey, // [!code focus]\n *   signature, // [!code focus]\n * }) // [!code focus]\n * // @log: true\n * ```\n *\n * @param options - The verification options.\n * @returns Whether the payload was signed by the provided public key.\n */\nexport async function verify(options) {\n    const { payload, signature } = options;\n    const publicKey = await globalThis.crypto.subtle.importKey('raw', PublicKey.toBytes(options.publicKey), { name: 'ECDSA', namedCurve: 'P-256' }, true, ['verify']);\n    return await globalThis.crypto.subtle.verify({\n        name: 'ECDSA',\n        hash: 'SHA-256',\n    }, publicKey, Bytes.concat(Bytes.fromNumber(signature.r), Bytes.fromNumber(signature.s)), Bytes.from(payload));\n}\n//# sourceMappingURL=WebCryptoP256.js.map",null,null,null,null,null,"import { parseAbi } from 'abitype';\nimport { getCode } from '../../actions/public/getCode.js';\nimport { readContract } from '../../actions/public/readContract.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { createNonceManager } from '../../utils/nonceManager.js';\nimport { serializeErc6492Signature } from '../../utils/signature/serializeErc6492Signature.js';\n/**\n * @description Creates a Smart Account with a provided account implementation.\n *\n * @param parameters - {@link ToSmartAccountParameters}\n * @returns A Smart Account. {@link ToSmartAccountReturnType}\n */\nexport async function toSmartAccount(implementation) {\n    const { extend, nonceKeyManager = createNonceManager({\n        source: {\n            get() {\n                return Date.now();\n            },\n            set() { },\n        },\n    }), ...rest } = implementation;\n    let deployed = false;\n    const address = await implementation.getAddress();\n    return {\n        ...extend,\n        ...rest,\n        address,\n        async getFactoryArgs() {\n            if ('isDeployed' in this && (await this.isDeployed()))\n                return { factory: undefined, factoryData: undefined };\n            return implementation.getFactoryArgs();\n        },\n        async getNonce(parameters) {\n            const key = parameters?.key ??\n                BigInt(await nonceKeyManager.consume({\n                    address,\n                    chainId: implementation.client.chain.id,\n                    client: implementation.client,\n                }));\n            if (implementation.getNonce)\n                return await implementation.getNonce({ ...parameters, key });\n            const nonce = await readContract(implementation.client, {\n                abi: parseAbi([\n                    'function getNonce(address, uint192) pure returns (uint256)',\n                ]),\n                address: implementation.entryPoint.address,\n                functionName: 'getNonce',\n                args: [address, key],\n            });\n            return nonce;\n        },\n        async isDeployed() {\n            if (deployed)\n                return true;\n            const code = await getAction(implementation.client, getCode, 'getCode')({\n                address,\n            });\n            deployed = Boolean(code);\n            return deployed;\n        },\n        ...(implementation.sign\n            ? {\n                async sign(parameters) {\n                    const [{ factory, factoryData }, signature] = await Promise.all([\n                        this.getFactoryArgs(),\n                        implementation.sign(parameters),\n                    ]);\n                    if (factory && factoryData)\n                        return serializeErc6492Signature({\n                            address: factory,\n                            data: factoryData,\n                            signature,\n                        });\n                    return signature;\n                },\n            }\n            : {}),\n        async signMessage(parameters) {\n            const [{ factory, factoryData }, signature] = await Promise.all([\n                this.getFactoryArgs(),\n                implementation.signMessage(parameters),\n            ]);\n            if (factory && factoryData && factory !== '0x7702')\n                return serializeErc6492Signature({\n                    address: factory,\n                    data: factoryData,\n                    signature,\n                });\n            return signature;\n        },\n        async signTypedData(parameters) {\n            const [{ factory, factoryData }, signature] = await Promise.all([\n                this.getFactoryArgs(),\n                implementation.signTypedData(parameters),\n            ]);\n            if (factory && factoryData && factory !== '0x7702')\n                return serializeErc6492Signature({\n                    address: factory,\n                    data: factoryData,\n                    signature,\n                });\n            return signature;\n        },\n        type: 'smart',\n    };\n}\n//# sourceMappingURL=toSmartAccount.js.map","import { secp256k1 } from '@noble/curves/secp256k1';\nimport { numberToHex, } from '../../utils/encoding/toHex.js';\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * parseSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function parseSignature(signatureHex) {\n    const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130));\n    const yParityOrV = Number(`0x${signatureHex.slice(130)}`);\n    const [v, yParity] = (() => {\n        if (yParityOrV === 0 || yParityOrV === 1)\n            return [undefined, yParityOrV];\n        if (yParityOrV === 27)\n            return [BigInt(yParityOrV), 0];\n        if (yParityOrV === 28)\n            return [BigInt(yParityOrV), 1];\n        throw new Error('Invalid yParityOrV value');\n    })();\n    if (typeof v !== 'undefined')\n        return {\n            r: numberToHex(r, { size: 32 }),\n            s: numberToHex(s, { size: 32 }),\n            v,\n            yParity,\n        };\n    return {\n        r: numberToHex(r, { size: 32 }),\n        s: numberToHex(s, { size: 32 }),\n        yParity,\n    };\n}\n//# sourceMappingURL=parseSignature.js.map",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"names":["CB_WALLET_RPC_URL","PACKAGE_NAME","PACKAGE_VERSION","createJSONStorage","getStorage","options","storage","e","persistStorage","getItem","name","_a","parse","str2","JSON","undefined","str","Promise","then","setItem","newValue","stringify","removeItem","toThenable","fn","input","result","onFulfilled","_onRejected","this","_onFulfilled","catch","onRejected","persist","config","baseOptions","set","get","api","localStorage","partialize","state","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","Set","finishHydrationListeners","args","console","warn","savedSetState","setState","replace","configResult","stateFromStorage","getInitialState","hydrate","_b","forEach","cb","_a2","postRehydrationCallback","onRehydrateStorage","call","bind","deserializedStorageValue","migrate","migration","error","migrationResult","migrated","migratedState","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","add","delete","onFinishHydration","skipHydration","createStoreImpl","createState","listeners","partial","nextState","Object","is","previousState","assign","listener","getState","initialState","subscribe","createStore","createConfigSlice","sdkstore","chains","keys","account","subAccount","spendPermissions","subAccountConfig","clear","actions","subAccounts","address","subAccountsConfig","key","value","store","initCCA","window","deviceId","crypto","randomUUID","ClientAnalytics","init","identify","PlatformName","isProd","amplitudeApiKey","platform","web","projectName","showDebugLogging","apiEndpoint","spendPermissionManagerAddress","abi","inputs","stateMutability","type","anonymous","indexed","outputs","components","factoryAbi","spendPermissionManagerAbi","internalType","standardErrorCodes","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","invalidRequest","methodNotFound","invalidParams","internal","userRejectedRequest","unauthorized","unsupportedMethod","disconnected","chainDisconnected","unsupportedChain","errorValues","standard","message","FALLBACK_MESSAGE","getMessageFromCode","code","fallbackMessage","Number","isInteger","codeString","toString","hasKey","isJsonRpcServerError","serialize","shouldIncludeStack","serialized","Array","isArray","isValidCode","_error","data","originalError","assignOriginalError","hasStringProperty","stack","obj","prototype","hasOwnProperty","prop","standardErrors","arg","getEthJsonRpcError","server","opts","Error","getEthProviderError","custom","EthereumProviderError","parseOpts","EthereumRpcError","constructor","super","isValidEthProviderCode","isActionableHttpRequestError","errorObject","isViemError","assertPresence","assertArrayPresence","checkCrossOriginOpenerPolicy","getCrossOriginOpenerPolicy","crossOriginOpenerPolicy","async","url","location","origin","pathname","response","fetch","method","ok","status","headers","createCoopChecker","validateSubAccount","toAccount","BaseError","shortMessage","details","cause","docsPath","metaMessages","join","defineProperty","enumerable","configurable","writable","execTyped","regex","string","match","exec","groups","bytesRegex","integerRegex","isTupleRegex","tupleRegex","formatAbiParameter","abiParameter","test","length","i","array","formatAbiParameters","abiParameters","params","formatAbiItem","abiItem","errorSignatureRegex","eventSignatureRegex","functionSignatureRegex","structSignatureRegex","isStructSignature","signature","execStructSignature","constructorSignatureRegex","fallbackSignatureRegex","receiveSignatureRegex","eventModifiers","functionModifiers","InvalidAbiItemError","UnknownTypeError","UnknownSolidityTypeError","InvalidParameterError","param","SolidityProtectedKeywordError","InvalidModifierError","modifier","InvalidFunctionModifierError","InvalidAbiTypeParameterError","InvalidSignatureError","UnknownSignatureError","InvalidStructSignatureError","CircularReferenceError","InvalidParenthesisError","current","depth","trim","parameterCache","Map","parseSignature","structs","isFunctionSignature","execFunctionSignature","inputParams","splitParameters","parameters","inputLength","push","parseAbiParameter","modifiers","returns","outputParams","outputLength","parseFunctionSignature","isEventSignature","execEventSignature","parseEventSignature","isErrorSignature","execErrorSignature","parseErrorSignature","isConstructorSignature","execConstructorSignature","parseConstructorSignature","isFallbackSignature","execFallbackSignature","parseFallbackSignature","isReceiveSignature","abiParameterWithoutTupleRegex","abiParameterWithTupleRegex","dynamicIntegerRegex","parameterCacheKey","structKey","struct","entries","propertyKey","property","getParameterCacheKey","has","isTuple","protectedKeywordsRegex","isSolidityKeyword","components_","isSolidityType","isValidDataLocation","char","tail","slice","parseStructs","signatures","shallowStructs","signaturesLength","properties","split","propertiesLength","k","trimmed","resolvedStructs","entriesLength","resolveStructs","typeWithoutTupleRegex","ancestors","parseAbi","parseAbiItem","signature_","getAction","client","actionFn","action_implicit","action_explicit","includeName","InvalidDefinitionTypeError","formatAbiParams","map","startsWith","formatAbiParam","isHex","strict","size","Math","ceil","errorConfig","docsBaseUrl","docsSlug","docsUrl","walk","err","AbiConstructorNotFoundError","AbiConstructorParamsNotFoundError","AbiDecodingDataSizeTooSmallError","AbiDecodingZeroDataError","AbiEncodingArrayLengthMismatchError","expectedLength","givenLength","AbiEncodingBytesSizeMismatchError","expectedSize","AbiEncodingLengthMismatchError","AbiErrorInputsNotFoundError","errorName","AbiErrorNotFoundError","AbiErrorSignatureNotFoundError","AbiEventSignatureEmptyTopicsError","AbiEventSignatureNotFoundError","AbiEventNotFoundError","eventName","AbiFunctionNotFoundError","functionName","AbiFunctionOutputsNotFoundError","AbiFunctionSignatureNotFoundError","AbiItemAmbiguityError","x","y","givenSize","DecodeLogDataMismatch","DecodeLogTopicsMismatch","InvalidAbiEncodingTypeError","InvalidAbiDecodingTypeError","UnsupportedPackedAbiType","FilterTypeNotSupportedError","offset","position","targetSize","charAt","toUpperCase","toLowerCase","InvalidBytesLengthError","pad","hexOrBytes","dir","padHex","bytes","SizeExceedsPaddingSizeError","paddedBytes","Uint8Array","padEnd","padBytes","hex_","hex","max","min","signed","InvalidBytesBooleanError","InvalidHexBooleanError","maxSize","sliceLength","assertSize","size_","SizeOverflowError","hexToBigInt","BigInt","padStart","hexToNumber","hexToString","hexToBytes","TextDecoder","decode","hexes","from","_v","toHex","numberToHex","stringToHex","boolToHex","bytesToHex","value_","maxValue","MAX_SAFE_INTEGER","minValue","suffix","IntegerOutOfRangeError","encoder","TextEncoder","encode","toBytes","numberToBytes","boolToBytes","stringToBytes","charCodeMap","zero","nine","A","F","a","f","charCodeToBase16","hexString","index","j","nibbleLeft","charCodeAt","nibbleRight","U32_MASK64","_32n","fromBig","n","le","h","l","anumber","isSafeInteger","abytes","b","lengths","ArrayBuffer","isView","isBytes","includes","aexists","instance","checkFinished","destroyed","finished","aoutput","out","outputLen","clean","arrays","fill","createView","arr","DataView","buffer","byteOffset","byteLength","rotr","word","shift","byteSwap","swap32IfBE","Uint32Array","u","utf8ToBytes","Hash$2","createHasher","hashCons","hashC","msg","update","digest","tmp","blockLen","create","_0n","_1n","_2n","_7n","_256n","_0x71n","SHA3_PI","SHA3_ROTL","_SHA3_IOTA","round","R","t","IOTAS","lst","len","Ah","Al","SHA3_IOTA_H","SHA3_IOTA_L","rotlH","s","rotlBH","rotlSH","rotlL","rotlBL","rotlSL","Keccak","Hash","enableXOF","rounds","pos","posOut","state32","floor","clone","_cloneInto","keccak","B","idx1","idx0","B0","B1","Th","Tl","curH","curL","PI","keccakP","take","finish","writeInto","bufferOut","subarray","xofInto","xof","digestInto","destroy","to","keccak_256","gen","keccak256","to_","hashSignature","sig","toSignature","def","active","level","valid","normalizeSignature","toSignatureHash","toEventSelector","firstKey","next","checksumAddressCache","LruMap","checksumAddress","address_","chainId","hexAddress","substring","hash","getAddress","isAddress","InvalidAddressError","addressRegex","isAddressCache","cacheKey","concat","values","concatHex","concatBytes","reduce","acc","start","end","sliceHex","sliceBytes","assertStartOffset","SliceOffsetOutOfBoundsError","assertEndOffset","arrayRegex","encodeAbiParameters","preparedParams","prepareParam","prepareParams","encodeParams","arrayComponents","getArrayComponents","dynamic","InvalidArrayError","dynamicChild","preparedParam","encoded","encodeArray","param_","encodeTuple","encodeAddress","encodeBool","encodeNumber","paramSize","bytesSize","parseInt","encodeBytes","hexValue","partsLength","parts","encodeString","staticSize","staticParams","dynamicParams","dynamicSize","matches","toFunctionSelector","getAbiItem","isSelector","abiItems","filter","matchedAbiItem","matched","every","isArgOfType","ambiguousTypes","getAmbiguousTypes","argType","abiParameterType","component","sourceParameters","targetParameters","parameterIndex","sourceParameter","targetParameter","types","encodeEventTopics","item","definition","topics","indexedInputs","args_","_","encodeArg","createFilterRequestScope","requestMap","transport","onResponse","method_","id","request","createContractEventFilter","fromBlock","toBlock","getRequest","Boolean","parseAccount","encodeFunctionData","prepareEncodeFunctionData","panicReasons","solidityError","solidityPanic","NegativeOffsetError","PositionOutOfBoundsError","RecursiveReadLimitExceededError","count","limit","staticCursor","dataView","positionReadCount","recursiveReadCount","recursiveReadLimit","POSITIVE_INFINITY","assertReadLimit","assertPosition","decrementPosition","getReadCount","incrementPosition","inspectByte","position_","inspectBytes","inspectUint8","inspectUint16","getUint16","inspectUint24","getUint8","inspectUint32","getUint32","pushByte","byte","pushBytes","pushUint8","pushUint16","setUint16","pushUint24","setUint8","pushUint32","setUint32","readByte","_touch","readBytes","readUint8","readUint16","readUint24","readUint32","remaining","setPosition","oldPosition","createCursor","cursor","bytesToBigInt","bytesToBool","bytes_","bytesToNumber","decodeAbiParameters","consumed","consumed_","decodeParameter","staticPosition","sizeOfOffset","startOfData","sizeOfLength","hasDynamicChild","decodeArray","hasUnnamedChild","some","decodeTuple","decodeAddress","decodeBool","decodeBytes","decodeNumber","bytesToString","decodeString","endsWith","decodeErrorResult","find","replacer","space","formatAbiItemWithArgs","includeFunctionName","etherUnits","gwei","wei","gweiUnits","ether","formatUnits","decimals","display","negative","integer","fraction","formatEther","unit","formatGwei","AccountStateConflictError","StateAssignmentConflictError","prettyStateMapping","stateMapping","pretty","slot","prettyPrint","maxLength","FeeConflictError","InvalidLegacyVError","v","InvalidSerializableTransactionError","transaction","InvalidStorageKeySizeError","storageKey","TransactionNotFoundError","blockHash","blockNumber","blockTag","identifier","TransactionReceiptNotFoundError","WaitForTransactionReceiptTimeoutError","CallExecutionError","account_","chain","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","stateOverride","prettyArgs","nativeCurrency","symbol","val","balance","stateDiff","prettyStateOverride","ContractFunctionExecutionError","contractAddress","sender","formattedArgs","function","ContractFunctionRevertedError","decodedData","reason","errorArgs","firstArg","errorWithParams","raw","ContractFunctionZeroDataError","CounterfactualDeploymentFailedError","factory","RawContractError","HttpRequestError","body","RpcRequestError","TimeoutError","RpcError","ProviderRpcError","ParseRpcError","InvalidRequestRpcError","MethodNotFoundRpcError","InvalidParamsRpcError","InternalRpcError","InvalidInputRpcError","ResourceNotFoundRpcError","ResourceUnavailableRpcError","TransactionRejectedRpcError","MethodNotSupportedRpcError","LimitExceededRpcError","JsonRpcVersionUnsupportedError","UserRejectedRequestError","UnauthorizedProviderError","UnsupportedProviderMethodError","ProviderDisconnectedError","ChainDisconnectedError","SwitchChainError","UnsupportedNonOptionalCapabilityError","UnsupportedChainIdError","DuplicateIdError","UnknownBundleIdError","BundleTooLargeError","AtomicReadyWalletRejectedUpgradeError","AtomicityNotSupportedError","UnknownRpcError","EXECUTION_REVERTED_ERROR_CODE","getContractError","toRecoveryBit","yParityOrV","recoverAddress","publicKey","hashHex","secp256k1","resolve","secp256k1$1","r","yParity","recoveryBit","Signature","addRecoveryBit","signatureHex","fromCompact","recoverPublicKey","toRlp","encodable","getEncodable","list","bodyLength","sizeOfBodyLength","getSizeOfLength","getEncodableList","bytesOrHex","sizeOfBytesLength","getEncodableBytes","hashAuthorization","EstimateGasExecutionError","ExecutionRevertedError","FeeCapTooHighError","FeeCapTooLowError","NonceTooHighError","NonceTooLowError","NonceMaxValueError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","TransactionTypeNotSupportedError","TipAboveFeeCapError","UnknownNodeError","getNodeError","executionRevertedError","nodeMessage","extract","format","extract_","formatted","defineFormatter","exclude","overrides","rpcTransactionType","legacy","eip2930","eip1559","eip4844","eip7702","formatTransactionRequest","rpcRequest","authorizationList","authorization","accessList","blobVersionedHashes","blobs","maxFeePerBlobGas","defineTransactionRequest","serializeStateMapping","serializeAccountStateOverride","rpcAccountStateOverride","serializeStateOverride","rpcStateOverride","accountState","maxUint256","assertRequest","BaseFeeScalarError","Eip1559FeesNotSupportedError","MaxFeePerGasTooLowError","BlockNotFoundError","transactionType","formatTransaction","transaction_","transactionIndex","typeHex","defineTransaction","formatBlock","block","transactions","baseFeePerGas","blobGasUsed","difficulty","excessBlobGas","gasLimit","gasUsed","logsBloom","number","timestamp","totalDifficulty","defineBlock","getBlock","blockTag_","includeTransactions","includeTransactions_","blockNumberHex","dedupe","formatters","getGasPrice","internal_estimateMaxPriorityFeePerGas","block_","fees","defaultPriorityFee","maxPriorityFeePerGas_","all","estimateFeesPerGas","internal_estimateFeesPerGas","baseFeeMultiplier","denominator","multiply","base","getTransactionCount","blobsToCommitments","kzg","commitments","blob","blobToKzgCommitment","blobsToProofs","proofs","commitment","computeBlobKzgProof","Chi","c","Maj","padOffset","isLE","view","process","roundClean","setBigUint64","_u32_max","wh","wl","oview","outLen","res","SHA256_IV","SHA256_K","SHA256_W","HashMD","C","D","E","G","H","W15","W2","s0","s1","T1","T2","sha256","SHA256","noble_sha256","commitmentToVersionedHash","versionedHash","commitmentsToVersionedHashes","hashes","fieldElementsPerBlob","bytesPerBlob","bytesPerFieldElement","maxBytesPerTransaction","BlobSizeTooLargeError","EmptyBlobError","InvalidVersionedHashSizeError","InvalidVersionedHashVersionError","toBlobSidecars","toBlobs","sidecars","proof","getTransactionType","getChainId","defaultParameters","eip1559NetworkCache","prepareTransactionRequest","nonceManager","getBlock_","chainId_","getChainId_","consume","versionedHashes","isEip1559Network","uid","gasPrice_","estimateGas","getBalance","rest","recoverAuthorizationAddress","chainFormat","transactionRequest","estimateGas_rpc","estimate","estimates","curr","getEstimateGasError","isAddressEqual","decodeEventLog","strict_","argTopics","isUnnamed","argIndex","topic","decodeTopic","nonIndexedInputs","parseEventLogs","logs","log","event","matchArgs","isEqual","includesArgs","formatLog","logIndex","transactionHash","getLogs","events","events_","flatMap","formattedLogs","getContractEvents","decodeFunctionResult","abool","title","numberToHexUnpadded","num","asciis","asciiToBase16","ch","hl","al","ai","hi","n1","n2","bytesToNumberBE","bytesToNumberLE","reverse","numberToBytesBE","numberToBytesLE","ensureBytes","sum","isPosBig","inRange","aInRange","bitLen","bitMask","u8n","u8fr","createHmacDrbg","hashLen","qByteLen","hmacFn","reset","reseed","seed","sl","pred","validatorFns","bigint","boolean","stringOrUint8Array","field","object","Fp","isValid","validateObject","validators","optValidators","checkField","fieldName","isOptional","checkVal","String","memoized","WeakMap","computed","diff","docs","Bytes.size","Bytes.SizeOverflowError","Hex.size","Hex.SizeOverflowError","Hex.SizeExceedsPaddingSizeError","fromHex","fromArray","internal_hex.assertSize","Hex.padRight","internal.charCodeToBase16","Errors.BaseError","fromString","internal.assertSize","Bytes.SizeExceedsPaddingSizeError","internal.pad","padRight","Bytes.SliceOffsetOutOfBoundsError","internal.assertStartOffset","internal.assertEndOffset","toBigInt","max_unsigned","Hex.toBigInt","Hex.fromBytes","validate","InvalidBytesTypeError","BYTES_PER_ELEMENT","assert","Json.stringify","fromBytes","fromBoolean","padLeft","fromNumber","Hex.SliceOffsetOutOfBoundsError","InvalidHexTypeError","InvalidHexValueError","toRpc","withdrawal","amount","Hex.fromNumber","validatorIndex","blockOverrides","blobBaseFee","feeRecipient","prevRandao","time","withdrawals","Withdrawal.toRpc","multicall3Abi","batchGatewayAbi","universalResolverErrors","universalResolverResolveAbi","universalResolverReverseAbi","textResolverAbi","addressResolverAbi","universalSignatureValidatorAbi","aggregate3Signature","deploylessCallViaBytecodeBytecode","deploylessCallViaFactoryBytecode","ChainDoesNotSupportContract","contract","blockCreated","ClientChainNotConfiguredError","InvalidChainIdError","encodeDeployData","bytecode","description","getChainContractAddress","contracts","getCallError","withResolvers","reject","promise","resolve_","reject_","schedulerCache","createBatchScheduler","shouldSplitBatch","wait","sort","scheduler","getScheduler","flush","setScheduler","schedule","setTimeout","batch","multicall","data_","factoryData","deploylessCallViaBytecode","deploylessCallViaFactory","deploylessCall","toDeploylessCallViaBytecodeData","toDeploylessCallViaFactoryData","rpcBlockOverrides","BlockOverrides.toRpc","request_","shouldPerformMulticall","batchSize","multicallAddress","multicallAddress_","requests","calls","allowFailure","callData","target","calldata","returnData","success","scheduleMulticall","getRevertErrorData","offchainLookup","offchainLookupSignature","ccip","ccipRead","readContract","listenersCache","cleanupCache","callbackCount","observe","observerId","callbacks","callbackId","getListeners","unwatch","cleanup","p","unsubscribe","fns","emit","poll","emitOnBegin","initialWaitTime","interval","unpoll","initialWait","watch","promiseCache","responseCache","withCache","cacheTime","cache","buildCache","getCache","Date","getTime","created","getBlockNumber","getFilterChanges","_client","uninstallFilter","AccountNotFoundError","receiptStatuses","formatTransactionReceipt","transactionReceipt","receipt","cumulativeGasUsed","effectiveGasPrice","blobGasPrice","defineTransactionReceipt","fallbackTransactionErrorMagicIdentifier","waitForCallsStatus","pollingInterval","statusCode","timeout","timer","unobserve","done","clearTimeout","atomic","receipts","getStatus","getCallsStatus","WaitForCallsStatusTimeoutError","random","createClient","blockTime","defaultPollingInterval","extend","extendFn","extended","combined","withRetry","delay","delay_","retryCount","shouldRetry","attemptRetry","retry","buildRequest","overrideOptions","methods","retryDelay","include","enabled","finally","withDedupe","err_","retryAfter","UrlRequiredError","createIdStore","idCache","getHttpRpcClient","onRequest","fetchOptions","signal","signal_","errorInstance","timeoutId","controller","AbortController","abort","withTimeout","jsonrpc","Request","json","text","statusText","http","onFetchRequest","onFetchResponse","retryCount_","timeout_","url_","rpcUrls","default","rpcClient","uid_","createTransport","isNullUniversalResolverError","callType","decodeFunctionData","encodeErrorResult","localBatchGatewayUrl","localBatchGatewayRequest","ccipRequest","queries","failures","responses","query","urls","encodeFunctionResult","encodedLabelToLabelhash","label","indexOf","namehash","labels","hashFromEncodedLabel","hashed","encodeLabelhash","labelhash","packetToBytes","packet","EnsAvatarInvalidMetadataError","EnsAvatarInvalidNftUriError","EnsAvatarUriResolutionError","uri","EnsAvatarUnsupportedNamespaceError","namespace","networkRegex","ipfsHashRegex","base64Regex","dataURIRegex","getGateway","defaultGateway","resolveAvatarUri","gatewayUrls","isEncoded","isOnChain","ipfsGateway","ipfs","arweaveGateway","arweave","networkRegexMatch","protocol","subpath","subtarget","isIPNS","isIPFS","replacedUri","parsedUri","btoa","getJsonImage","image","image_url","image_data","parseAvatarUri","resolvedURI","isImage","contentType","globalThis","img","Image","onload","onerror","src","isImageUri","parseAvatarRecord","record","nft","uri_","reference","asset_namespace","tokenID","eip_namespace","chainID","erc_namespace","parseNftUri","nftUri","getNftTokenUri","resolvedNftUri","encodedJson","atob","uriTokenId","getMetadataAvatarUri","parseNftAvatarUri","getEnsText","universalResolverAddress","tlds","ensTlds","tld","readContractParameters","readContractAction","createAccessList","createEventFilter","createPendingTransactionFilter","getCode","Eip712DomainNotFoundError","getFeeHistory","blockCount","rewardPercentiles","feeHistory","gasUsedRatio","oldestBlock","reward","formatFeeHistory","OffchainLookupError","callbackSelector","extraData","flat","OffchainLookupResponseMalformedError","OffchainLookupSenderMismatchError","offchainLookupAbiItem","ccipRequest_","defineChain","serializers","InvalidDomainError","domain","InvalidPrimaryTypeError","primaryType","InvalidStructTypeError","hashTypedData","EIP712Domain","getTypesForEIP712Domain","validateData","integerMatch","_type","bytesMatch","BytesSizeMismatchError","validateReference","validateTypedData","hashStruct","hashDomain","encodeData","encodedTypes","encodedValues","hashType","encodeField","encodedHashType","unsortedDeps","findTypeDependencies","deps","encodeType","primaryType_","results","lastIndexOf","parsedType","typeValuePairs","verifyingContract","salt","intMatch","baseType","bits","arrayMatch","childType","assertTransactionEIP1559","serializeAccessList","serializedAccessList","storageKeys","serializeTransaction","serializedTransaction","toYParitySignatureArray","serializeTransactionEIP1559","assertTransactionEIP2930","serializeTransactionEIP2930","assertTransactionEIP4844","serializeTransactionEIP4844","assertTransactionEIP7702","serializedAuthorizationList","serializeAuthorizationList","serializeTransactionEIP7702","assertTransactionLegacy","serializeTransactionLegacy","hashMessage","message_","toPrefixedMessage","erc6492MagicBytes","serializeErc6492Signature","InvalidDecimalNumberError","parseUnits","left","right","rounded","createNonceManager","source","deltaMap","nonceMap","promiseMap","getKey","increment","delta","previousNonce","getProof","storageProof","formatProof","getTransaction","getTransactionReceipt","simulateBlocks","blocks","returnFullTransactions","traceTransfers","validation","blockStateCalls","call_","dataSuffix","stateOverrides","byteSwap32","Hash$1","wrapConstructor","randomBytes","bytesLength","getRandomValues","as","noble_keccak256","Bytes.from","checksum","compressed","prefix","InvalidPrefixError","InvalidUncompressedPrefixError","InvalidError","InvalidCompressedPrefixError","Hex.validate","Bytes.validate","InvalidSerializedSizeError","Hex.slice","includePrefix","Hex.concat","Hex.from","InvalidInputError","Caches.checksum","Hash.keccak256","Bytes.fromString","characters","InvalidChecksumError","Address.validate","prepare","abitype.parseAbiItem","getSignatureHash","getSelector","Hex.fromString","internal.normalizeSignature","abitype.formatAbiItem","getSignature","AmbiguityError","NotFoundError","prepareParameter","parameter","parameter_","AbiParameters.InvalidArrayError","AbiParameters.ArrayLengthMismatchError","preparedParameters","Address.assert","Hex.padLeft","Hex.fromBoolean","encodeBoolean","Hex.IntegerOutOfRangeError","parametersize","AbiParameters.BytesSizeMismatchError","AbiParameters.InvalidTypeError","staticParameters","dynamicParameters","LengthMismatchError","internal.prepareParameters","internal.encode","encodePacked","Solidity.integerRegex","Solidity.bytesRegex","Solidity.arrayRegex","InvalidTypeError","ArrayLengthMismatchError","abiFunction","overloads","internal.isArgOfType","internal.getAmbiguousTypes","AbiItem.fromAbi","AbiItem.NotFoundError","fromAbi","selector","AbiItem.getSelector","AbiParameters.encode","AbiItem.from","zeroAddress","simulateCalls","traceAssetChanges","getBalanceData","abiConstructor","AbiConstructor.encode","AbiFunction.encodeData","AbiFunction.from","assetAddresses","block_results","block_ethPre","block_assetsPre","block_ethPost","block_assetsPost","block_decimals","block_tokenURI","block_symbols","block_calls","balancesPre","balancesPost","symbols","tokenURI","changes","balancePost","balancePre","decimals_","symbol_","tokenURI_","token","change","pre","post","assetChanges","hasHexBuiltin","_key","ahash","iHash","oHash","buf","getPrototypeOf","hmac","HMAC","bytesToHex_","abytes_","hexToBytes_","isBytes_","_validateObject","fields","optFields","expectedType","isOpt","_3n","_4n","_5n","_8n","mod","pow2","power","modulo","invert","m","sqrt3mod4","p1div4","ORDER","root","pow","eql","sqr","sqrt5mod8","p5div8","mul","nv","sub","ONE","FpSqrt","P","Q","S","Z","_Fp","Field","FpLegendre","cc","Q1div2","is0","M","ZERO","t_tmp","exponent","tonelliShanks","FIELD_FIELDS","FpInvertBatch","nums","passZero","inverted","multipliedAcc","invertedAcc","inv","reduceRight","p1mod2","powered","yes","no","neg","bitLenOrOpts","_nbitLength","_sqrt","sqrt","_opts","BITS","nBitLength","nByteLength","BYTES","_nBitLength","nLength","sqrtP","freeze","MASK","isValidNot0","isOdd","lhs","rhs","d","FpPow","div","sqrN","addN","subN","mulN","invertBatch","cmov","getFieldBytesLength","fieldOrder","bitLength","getMinHashLength","negateCt","condition","negate","validateW","W","calcWOpts","scalarBits","maxNumber","windows","windowSize","mask","shiftBy","calcOffsets","wOpts","wbits","nextN","offsetStart","abs","isZero","isNeg","isNegF","offsetF","pointPrecomputes","pointWindowSizes","getW","assert0","pippenger","fieldN","points","scalars","validateMSMPoints","validateMSMScalars","plength","slength","buckets","scalar","resI","sumI","double","createField","order","validateField","validateSigVerOpts","lowS","prehash","DER","Err","DERErr","_tlv","tag","dataLen","lenLen","first","lengthBytes","_int","toSig","int","tlv","seqBytes","seqLeftBytes","rBytes","rLeftBytes","sBytes","sLeftBytes","hexFromSig","seq","_legacyHelperNormPriv","Fn","allowedPrivateKeyLengths","wrapPrivateKey","expected","padded","weierstrassN","CURVE","curveOpts","_createCurveFields","cofactor","CURVE_ORDER","allowInfinityPoint","clearCofactor","isTorsionFree","endo","beta","splitScalar","assertCompressionIsSupported","_c","point","isCompressed","toAffine","bx","pprefix","of","L","LC","LU","head","isValidXY","y2","weierstrassEquation","sqrtError","x2","x3","_legacyHelperEquat","Gx","Gy","_4a3","_27b2","acoord","banZero","aprjpoint","other","Point","toAffineMemo","iz","px","py","pz","z","ax","ay","zz","assertValidMemo","finishEndo","endoBeta","k1p","k2p","k1neg","k2neg","fromAffine","normalizeZ","toInv","affined","assertValidity","fromPrivateKey","privateKey","normPrivateKeyToScalar","BASE","msm","precompute","isLazy","wnaf","setWindowSize","_setWindowSize","hasEvenY","equals","X1","Y1","Z1","X2","Y2","Z2","U1","U2","b3","X3","Y3","Z3","t0","t1","t2","t3","t4","t5","subtract","fake","wNAFCached","k1","k2","k1f","k2f","multiplyUnsafe","sc","hasPrecomputes","p1","p2","mulEndoUnsafe","wNAFCachedUnsafe","multiplyAndAddUnsafe","invertedZ","toRawBytes","constTimeNegate","elm","unsafeLadder","precomputeWindow","wNAF","precomputes","wo","wNAFUnsafe","getPrecomputes","transform","comp","prev","ecdsa","ecdsaOpts","bits2int","bits2int_modN","randomBytes_","hmac_","msgs","fnBits","isBiggerThanHalfOrder","aValidRS","recovery","fromDER","msgHash","FIELD_ORDER","rec","radj","ir","u1","u2","hasHighS","normalizeS","toDERRawBytes","toDERHex","toCompactRawBytes","toCompactHex","utils","isValidPrivateKey","randomPrivateKey","fieldLen","minLen","reduced","mapHashToField","isProbPub","ORDER_MASK","int2octets","prepSig","defaultSigOpts","extraEntropy","ent","h1int","seedArgs","k2sig","kBytes","ik","q","normS","defaultVerOpts","getPublicKey","getSharedSecret","privateA","publicB","sign","privKey","drbg","u8of","concatBytes_","verify","sg","isObj","_sig","derError","_ecdsa_legacy_opts_to_new","_weierstrass_legacy_opts_to_new","weierstrass","ProjectivePoint","_ecdsa_new_output_to_legacy","secp256k1_CURVE","divNearest","Fpk1","_6n","_11n","_22n","_23n","_44n","_88n","b2","b6","b9","b11","b22","b44","b88","b176","b220","b223","curveDef","defHash","createCurve","a1","b1","a2","POW_2_128","c1","c2","verifyHash","universalSignatureVerifierAddress","universalSignatureVerifier","yParity_","serializeSignature","wrappedSignature","isErc6492Signature","hexToBool","watchBlockNumber","emitMissed","onBlockNumber","onError","poll_","prevBlockNumber","transports","unsubscribe_","onData","prefixRegex","suffixRegex","verifySiweMessage","scheme","callRequest","parsed","statement","expirationTime","issuedAt","notBefore","requestId","resources","parseSiweMessage","validateSiweMessage","publicActions","createBlockFilter","estimateContractGas","getBlobBaseFee","baseFee","getBlockTransactionCount","getBytecode","getEip712Domain","extensions","getEnsAddress","coinType","functionData","getEnsAvatar","assetGatewayUrls","getEnsName","universalResolverAddress_","reverseNode","resolvedAddress","getEnsResolver","resolverAddress","getFilterLogs","estimateMaxPriorityFeePerGas","getStorageAt","getTransactionConfirmations","transactionBlockNumber","batchSize_","chunkedCalls","currentChunk","currentChunkSize","aggregate3Results","allSettled","aggregate3Result","sendRawTransaction","simulate","simulateContract","verifyMessage","verifyTypedData","waitForTransactionReceipt","confirmations","onReplaced","replacedTransaction","_unobserve","_unwatch","retrying","blockNumber_","replacementTransaction","watchBlocks","onBlock","enablePolling","prevBlock","emitFetched","subscribeBlocks","watchContractEvent","onLogs","previousBlockNumber","initialized","pollContractEvent","subscribeContractEvent","watchEvent","subscribeEvent","watchPendingTransactions","onTransactions","subscribePendingTransactions","createPublicClient","ComponentType","ActionType","AnalyticsEventImportance","logEvent","importance","sdkVersion","sdkName","appName","metadata","appOrigin","logDialogShown","dialogContext","action","render","componentType","modal","high","logDialogDismissed","dismiss","logDialogActionClicked","dialogAction","click","button","FONT_NAME","o","w","parentNode","removeChild","arguments","children","defaultProps","g","props","ref","__k","__","__b","__e","__d","__c","__v","__i","__u","vnode","context","__r","debounceRendering","__P","O","__n","namespaceURI","$","N","I","nextSibling","V","contains","insertBefore","nodeType","T","setProperty","style","cssText","addEventListener","removeEventListener","removeAttribute","setAttribute","contextType","__E","__h","_sb","__s","getDerivedStateFromProps","componentWillMount","componentDidMount","componentWillReceiveProps","shouldComponentUpdate","componentWillUpdate","componentDidUpdate","getChildContext","getSnapshotBeforeUpdate","diffed","localName","document","createTextNode","createElementNS","__m","childNodes","attributes","__html","innerHTML","unmount","componentWillUnmount","firstChild","getDerivedStateFromError","componentDidCatch","forceUpdate","__source","__self","clsx","BaseLogo","_jsx","width","height","viewBox","xmlns","__H","__N","requestAnimationFrame","cancelAnimationFrame","isPhonePortrait","innerWidth","innerHeight","DialogHandleBar","showHandleBar","setShowHandleBar","useState","useEffect","checkOrientation","class","Dialog","items","nextItemKey","attach","el","createElement","className","appendChild","presentItem","itemProps","DialogContainer","_createElement","DialogInstance","handleClose","onClose","dragY","setDragY","isDragging","setIsDragging","startY","setStartY","_jsxs","onTouchStart","touch","touches","clientY","onTouchMove","deltaY","preventDefault","onTouchEnd","closeButton","querySelector","transition","actionItems","hidden","setHidden","isLoadingUsername","setIsLoadingUsername","username","setUsername","accounts","truncateAddress","getDisplayableUsername","fetchEnsName","headerTitle","useMemo","shouldShowHeaderTitle","onClick","variant","dialog","initDialog","textContent","injectFontStyle","POPUP_BLOCKED_TITLE","POPUP_BLOCKED_MESSAGE","openPopup","screenX","top","screenY","tryOpenPopup","popupId","popup","open","focus","coop","searchParams","append","appendAppInfoQueryParams","dappName","openPopupWithDialog","Communicator","preference","URL","postMessage","waitForPopupLoaded","postRequestAndWaitForResponse","responsePromise","onMessage","predicate","disconnect","closed","close","unknown","serializeError","errorMessage","errorCode","getErrorObject","docUrl","href","Events","EE","once","addListener","emitter","TypeError","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","getOwnPropertySymbols","handlers","ee","listenerCount","a3","a4","a5","removeListener","apply","on","removeAllListeners","off","prefixed","module","ProviderEventEmitter","parseErrorMessageFromAny","errorOrAny","HexString","IntNumber","INT_STRING_REGEX","HEXADECIMAL_STRING_REGEX","hexStringFromNumber","strip0x","ensureHexString","ensureIntNumber","isHexString","ensureEvenLengthHexString","decoder","integerToCharacter","fromEntries","base64","replaceAll","Bytes.fromHex","legendreC","ge","redef","lastMultiplied","validateBasic","curve","b2n","h2b","ut","ut.numberToHexUnpadded","ut.abytes","weierstrassPoints","ut.validateObject","validatePointOpts","_isCompressed","ut.concatBytes","ut.isBytes","ut.bytesToHex","ut.bytesToNumberBE","ut.aInRange","assertPrjPoint","f1p","f2p","_bits","offset1","offset2","cond1","cond2","isWithinCurveOrder","ut.inRange","validateOpts","compressedLen","uncompressedLen","modN","invN","cat","numToNByteStr","ut.numberToBytesBE","slcNum","ut.hexToBytes","ut.bitMask","ut.createHmacDrbg","getHash","Fp256","p256","getSignPayload","challenge","crossOrigin","extraClientData","flag","rpId","signCount","userVerification","authenticatorData","hostname","Hash.sha256","getAuthenticatorData","clientDataJSON","Base64.fromHex","getClientDataJSON","clientDataJSONHash","challengeIndex","typeIndex","userVerificationRequired","payload","isNaN","InvalidVError","vToYParity","InvalidYParityError","recovered","MissingPropertiesError","Solidity.maxUint256","InvalidRError","InvalidSError","yParityToV","entryPoint06Abi","getInitCode","userOperation","toPackedUserOperation","callGasLimit","paymaster","paymasterData","paymasterPostOpGasLimit","paymasterVerificationGasLimit","verificationGasLimit","accountGasLimits","initCode","gasFees","paymasterAndData","preVerificationGas","PackedUserOperation","getUserOperationHash","entryPointAddress","entryPointVersion","packedUserOp","getUserOperationTypedData","AccountNotDeployedError","FailedToSendToBeneficiaryError","GasValuesOverflowError","HandleOpsOutOfGasError","InitCodeFailedError","InitCodeMustCreateSenderError","InitCodeMustReturnSenderError","InsufficientPrefundError","InternalCallOnlyError","InvalidAggregatorError","InvalidAccountNonceError","InvalidBeneficiaryError","InvalidFieldsError","InvalidPaymasterAndDataError","PaymasterDepositTooLowError","PaymasterFunctionRevertedError","PaymasterNotDeployedError","PaymasterRateLimitError","PaymasterStakeTooLowError","PaymasterPostOpFunctionRevertedError","SenderAlreadyConstructedError","SignatureCheckFailedError","SmartAccountFunctionRevertedError","UnsupportedSignatureAggregatorError","UserOperationExpiredError","UserOperationPaymasterExpiredError","UserOperationSignatureError","UserOperationPaymasterSignatureError","UserOperationRejectedByEntryPointError","UserOperationRejectedByPaymasterError","UserOperationRejectedByOpCodeError","UserOperationOutOfTimeRangeError","UnknownBundlerError","VerificationGasLimitExceededError","VerificationGasLimitTooLowError","UserOperationExecutionError","UserOperationReceiptNotFoundError","UserOperationNotFoundError","WaitForUserOperationReceiptTimeoutError","bundlerErrors","getUserOperationError","getBundlerError","revertData","getRevertData","contractCalls","compatContractCalls","formatUserOperationRequest","eip7702Auth","getPaymasterData","getPaymasterStubData","prepareUserOperation","parameters_","bundlerClient","paymasterAddress","getPaymasterStubData_","getPaymasterData_","paymasterContext","encodeCalls","getFactoryArgs","entryPoint","client_","getNonce","isDeployed","executor","prepareAuthorization","getStubSignature","isPaymasterPopulated","isFinal","sponsor","paymasterArgs","estimateUserOperationGas","formatUserOperationGas","formatUserOperation","getUserOperationReceipt","actualGasCost","actualGasUsed","formatUserOperationReceipt","bundlerActions","getSupportedEntryPoints","getUserOperation","sendUserOperation","signUserOperation","rpcParameters","waitForUserOperationReceipt","abey","blockExplorers","testnet","gasPerPubdataDefault","maxBytecodeSize","maxUint16","l1BatchNumber","l1BatchTimestamp","l1BatchTxIndex","transactionLogIndex","logType","l2ToL1Logs","l2ToL1Log","shardId","isService","gasPerPubdata","paymasterInput","factoryDeps","customSignature","eip712Meta","paymasterParams","dep","InvalidEip712TransactionError","isEIP712Transaction","assertEip712Transaction","serializeTransactionEIP712","serializeTransaction_","BytecodeLengthExceedsMaxSizeError","BytecodeLengthInWordsMustBeOddError","givenLengthInWords","BytecodeLengthMustBeDivisibleBy32Error","chainConfig","txType","gasPerPubdataByteLimit","bytecodeBytes","bytecodeLengthInWords","bytecodeLengthPadded","codeHashVersion","hashBytecode","transactionToMessage","Transaction","abstract","webSocket","native","multicall3","abstractTestnet","acala","network","apiUrl","acria","adf","aioz","alephZero","alephZeroTestnet","alienx","alienxHalTestnet","gasPriceOracle","l1Block","l2CrossDomainMessenger","l2Erc721Bridge","l2StandardBridge","l2ToL1MessagePasser","isSystemTx","mint","sourceHash","stateRoot","l1GasPrice","l1GasUsed","l1Fee","l1FeeScalar","isDeposit","assertTransactionDeposit","serializeTransactionDeposit","sourceId","ancient8","l2OutputOracle","sourceId$10","portal","l1StandardBridge","ancient8Sepolia","sourceId$$","anvil","apeChain","apexTestnet","arbitrum","arbitrumGoerli","arbitrumNova","arbitrumSepolia","arenaz","areonNetwork","areonNetworkTestnet","artelaTestnet","arthera","artheraTestnet","assetChain","assetChainTestnet","astar","astarZkEVM","astarZkyoto","atletaOlympia","ws","aurora","auroraTestnet","auroria","avalanche","avalancheFuji","b3Sepolia","bahamut","disputeGameFactory","sourceId$X","basecampTestnet","baseGoerli","sourceId$W","baseSepolia","sourceId$V","beam","beamTestnet","bearNetworkChainMainnet","bearNetworkChainTestnet","berachain","ensRegistry","ensUniversalResolver","berachainBepolia","berachainTestnet","berachainTestnetbArtio","bevmMainnet","bifrost","bitgert","bitkub","bitkubTestnet","bitlayer","bitlayerTestnet","bitrock","bitTorrent","bitTorrentTestnet","birdlayer","blast","sourceId$U","blastSepolia","bob","sourceId$S","boba","bobaSepolia","bobSepolia","sourceId$R","boolBetaMainnet","botanixTestnet","bounceBit","bounceBitTestnet","bronos","bronosTestnet","bsc","bscGreenfield","bscTestnet","bsquared","bsquaredTestnet","btr","btrTestnet","bxn","bxnTestnet","cannon","canto","feeCurrency","estimateFeePerGasInFeeCurrency","estimateMaxPriorityFeePerGasInFeeCurrency","fee","feesPerGas","isEmpty","isPresent","isCIP64","isEIP1559","MAX_MAX_FEE_PER_GAS","assertTransactionCIP64","serializeTransactionCIP64","serializeTransaction_op","gatewayFee","gatewayFeeRecipient","celo","celoAlfajores","sourceId$Q","chang","chiliz","chips","citreaTestnet","classic","coinbit","coinex","confluxESpace","confluxESpaceTestnet","coreDao","coreTestnet1","coreTestnet2","corn","cornTestnet","crab","creatorTestnet","creditCoin3Mainnet","creditCoin3Testnet","cronos","cronosTestnet","cronoszkEVM","cronoszkEVMTestnet","crossbell","curtis","cyber","cyberTestnet","dailyNetwork","dailyNetworkTestnet","darwinia","dbkchain","dchain","dchainTestnet","defichainEvm","defichainEvmTestnet","degen","dfk","diode","disChain","dodochainTestnet","dogechain","donatuz","dosChain","dosChainTestnet","dreyerxMainnet","dreyerxTestnet","dustboyIoT","dymension","edexaTestnet","edexa","edgeless","edgelessTestnet","edgeware","edgewareTestnet","eduChain","eduChainTestnet","ekta","ektaTestnet","elastos","elastosTestnet","electroneum","electroneumTestnet","elysiumTestnet","energy","enuls","eon","eos","eosTestnet","etherlink","etherlinkTestnet","ethernity","etp","evmos","evmosTestnet","excelonMainnet","expanse","exsat","exsatTestnet","fantom","fantomSonicTestnet","fantomTestnet","fibo","filecoin","filecoinCalibration","filecoinHyperspace","fireChain","flame","flare","flareTestnet","flowMainnet","flowPreviewnet","flowTestnet","fluence","fluenceStage","fluenceTestnet","fluentTestnet","forma","form","addressManager","sourceId$N","l1CrossDomainMessenger","formicarium","okx","memecore","formTestnet","sourceId$M","forta","foundry","fraxtal","sourceId$L","fraxtalTestnet","sourceId$K","funkiMainnet","funkiSepolia","fuse","fuseSparknet","fusion","fusionTestnet","garnet","sourceId$H","geist","genesys","glideL1Protocol","glideL2Protocol","gnosis","gnosisChiado","goat","gobi","goChain","godwoken","goerli","gravity","gunz","guruNetwork","guruTestnet","ham","happychainTestnet","haqqMainnet","haqqTestedge2","hardhat","harmonyOne","hashkey","hashkeyTestnet","haustTestnet","hedera","hederaPreviewnet","hederaTestnet","hela","hemi","hemiSepolia","holesky","hoodi","hpb","huddle01Mainnet","huddle01Testnet","humanode","humanodeTestnet5","hychain","hychainTestnet","idchain","immutableZkEvm","immutableZkEvmTestnet","inEVM","initVerse","initVerseGenesis","ink","sourceId$E","inkSepolia","sourceId$D","iota","iotaTestnet","iotex","iotexTestnet","iSunCoin","jbc","jbcTestnet","juneo","juneoBCH1Chain","juneoDAI1Chain","juneoDOGE1Chain","juneoEUR1Chain","juneoGLD1Chain","juneoLINK1Chain","juneoLTC1Chain","juneomBTC1Chain","juneoSGD1Chain","juneoSocotraTestnet","juneoUSD1Chain","juneoUSDT1Chain","karura","kakarotSepolia","kakarotStarknetSepolia","kardiaChain","kava","kavaTestnet","kcc","kinto","klaytn","kaia","kairos","klaytnBaobab","koi","kroma","kromaSepolia","l3x","l3xTestnet","lavita","lens","lensTestnet","lestnet","lightlinkPegasus","lightlinkPhoenix","priorityFeePerGas","linea","lineaGoerli","lineaSepolia","lineaTestnet","lisk","sourceId$C","liskSepolia","sourceId$B","localhost","loop","lukso","luksoTestnet","lumiaMainnet","lumiaTestnet","lumoz","lumozTestnet","lycan","lyra","mainnet","mandala","manta","mantaSepoliaTestnet","mantaTestnet","mantle","mantleSepoliaTestnet","mantleTestnet","mapProtocol","matchain","matchainTestnet","mchVerse","megaethTestnet","mekong","meld","merlin","merlinErigonTestnet","metachain","metachainIstanbul","metadium","metalL2","sourceId$A","meter","meterTestnet","metis","metisSepolia","metisGoerli","mev","mevTestnet","mintSepoliaTestnet","mitosisTestnet","mode","sourceId$z","modeTestnet","sourceId$y","monadTestnet","moonbaseAlpha","moonbeam","moonbeamDev","moonriver","morph","morphHolesky","morphSepolia","nahmii","nautilus","near","nearTestnet","neonDevnet","neonMainnet","neoxMainnet","neoxT4","newton","nexi","nexilix","nibiru","oasisTestnet","oasys","odysseyTestnet","okc","omax","omni","omniOmega","oneWorld","oortMainnetDev","opBNB","sourceId$x","opBNBTestnet","sourceId$w","optimism","sourceId$v","optimismGoerli","sourceId$u","optimismSepolia","sourceId$t","optopia","optopiaTestnet","orderly","orderlySepolia","otimDevnet","batchInvoker","palm","palmTestnet","peaq","pgn","sourceId$s","pgnTestnet","sourceId$r","phoenix","planq","playfiAlbireo","plinga","plume","plumeDevnet","plumeMainnet","plumeSepolia","plumeTestnet","polterTestnet","polygon","polygonAmoy","polygonMumbai","polygonZkEvm","polygonZkEvmCardona","polygonZkEvmTestnet","polynomial","polynomialSepolia","premiumBlockTestnet","pulsechain","pulsechainV4","pumpfiTestnet","pyrope","sourceId$l","ql1","qMainnet","qTestnet","real","redbellyMainnet","redbellyTestnet","redstone","sourceId$k","rei","reyaNetwork","reddioSepolia","riseTestnet","rivalz","rollux","rolluxTestnet","ronin","rootPorcini","rootstock","rootstockTestnet","rss3","sourceId$j","rss3Sepolia","sourceId$i","saakuru","saga","saigon","sanko","sapphire","sapphireTestnet","satoshiVM","satoshiVMTestnet","scroll","scrollSepolia","sei","seiDevnet","seismicDevnet","seiTestnet","sepolia","shape","sourceId$h","shapeSepolia","shardeum","shardeumSphinx","shibarium","shibariumTestnet","shiden","shimmer","shimmerTestnet","sidraChain","silicon","siliconSepolia","sixProtocol","skaleBlockBrawlers","skaleCalypso","skaleCalypsoTestnet","skaleCryptoBlades","skaleCryptoColosseum","skaleEuropa","skaleEuropaTestnet","skaleExorde","skaleHumanProtocol","skaleNebula","skaleNebulaTestnet","skaleRazor","skaleTitan","skaleTitanTestnet","sketchpad","snax","sourceId$f","snaxTestnet","sourceId$e","somniaTestnet","soneium","sourceId$d","soneiumMinato","sourceId$c","sonic","sonicTestnet","sonicBlazeTestnet","songbird","songbirdTestnet","sophon","sophonTestnet","spicy","statusSepolia","step","story","storyAeneid","storyOdyssey","storyTestnet","stratis","superlumio","superposition","superseed","sourceId$b","superseedSepolia","sourceId$a","swan","swanProximaTestnet","swanSaturnTestnet","swellchain","swellchainTestnet","swissdlt","syscoin","syscoinTestnet","tac","tacSPB","taiko","taikoHekla","taikoJolnir","taikoKatla","taikoTestnetSepolia","taraxa","taraxaTestnet","telcoinTestnet","telos","telosTestnet","tenet","ternoa","thaiChain","that","theta","thetaTestnet","thunderCore","thunderTestnet","tiktrixTestnet","tomb","treasure","treasureTopaz","tron","tronShasta","ubiq","ultra","ultraTestnet","ultron","ultronTestnet","unichain","sourceId$9","unichainSepolia","sourceId$8","unique","uniqueOpal","uniqueQuartz","unreal","vanar","vechain","vechainStats","velas","viction","victionTestnet","vision","visionTestnet","wanchain","wanchainTestnet","weaveVMAlphanet","wemix","wemixTestnet","westendAssetHub","whitechain","whitechainTestnet","wmcTestnet","worldchain","blockscout","sourceId$7","worldchainSepolia","sourceId$6","worldLand","xai","xaiTestnet","xdc","xdcTestnet","xLayer","xLayerTestnet","xrOne","xrplevmDevnet","public","xrplevmTestnet","xrSepolia","yooldoVerse","yooldoVerseTestnet","zenchainTestnet","zeniq","zeroG","zeroNetwork","zetachain","zetachainAthensTestnet","zhejiang","zilliqa","zilliqaTestnet","zircuit","sourceId$5","zircuitGarfieldTestnet","sourceId$4","zircuitTestnet","sourceId$3","zkFair","zkFairTestnet","zkLinkNova","zkLinkNovaSepoliaTestnet","zksync","zksyncInMemoryNode","zksyncLocalCustomHyperchain","zksyncLocalHyperchain","zksyncLocalHyperchainL1","zksyncLocalNode","zksyncSepoliaTestnet","blockExplorerApi","zora","sourceId$2","zoraSepolia","sourceId$1","zoraTestnet","ChainClients","SUPPORTED_CHAINS_BY_ID","getSupportedChainById","getFallbackRpcUrl","viemChain","createClients","rpcUrl","clients","createClientPair","storeClientPair","decimal","defineChainConfig","createBundlerClient","pair","getClient","storedClient","fallbackPair","createFallbackClientPair","correlationIdsStore","correlationIds","correlationId","newMap","assertSubAccount","info","getFormat","keyType","exportKeyToHexString","exported","subtle","exportKey","importKeyFromHexString","arrayBuffer","hexStringToUint8Array","importKey","namedCurve","encryptContent","content","sharedSecret","plainText","iv","cipherText","encrypt","decryptContent","encryptedData","decrypt","fetchRPCRequest","requestBody","promisifyRequest","oncomplete","onsuccess","onabort","dbName","storeName","indexedDB","onupgradeneeded","createObjectStore","dbp","txMode","callback","db","objectStore","defaultGetStoreFunc","defaultGetStore","ACTIVE_ID_KEY","scope","customStore","del","put","createStorage","generateKeyPair","keypair","extractable","generateKey","publicKey_raw","PublicKey.from","WebCryptoP256.createKeyPair","PublicKey.toHex","getKeypair","getAccount","kp","pubKey","getOrCreateKeypair","WebAuthnP256.getSignPayload","signature_bytes","Bytes.fromArray","Bytes.toBigInt","Bytes.slice","WebCryptoP256.sign","Signature.toHex","webauthn","getCryptoKeyAccount","OWN_PRIVATE_KEY","OWN_PUBLIC_KEY","PEER_PUBLIC_KEY","SCWKeyManager","ownPrivateKey","ownPublicKey","peerPublicKey","getOwnPublicKey","loadKeysIfNeeded","setPeerPublicKey","storeKey","newKeyPair","loadKey","deriveKey","deriveSharedSecret","path","getSenderFromRequest","assertParamsChainId","injectRequestCapabilities","capabilities","modifiedRequest","requestCapabilities","initSubAccountConfig","creation","owner","toOwnerAccount","addSubAccount","waitForCallsTransactionHash","createWalletSendCallsRequest","paymasterUrls","atomicRequired","paymasterService","makeDataSuffix","attribution","dappOrigin","auto","prependWithoutDuplicates","filtered","appendWithoutDuplicates","arrayBufferToBase64Url","base64String","fromCharCode","convertCredentialToJSON","signatureRaw","Signature.fromHex","rawId","asn1EncodeSignature","rLength","sLength","totalLength","createSmartAccount","ownerIndex","implementation","nonceKeyManager","now","deployed","signMessage","signTypedData","toSmartAccount","decodeCalls","wrapSignature","toReplaySafeHash","toWebAuthnSignature","CoinbaseSmartWalletMessage","signatureData","createSubAccountSigner","parentAddress","rawParams","sendCallsRequest","prepareCallsRequest","funding","autoApply","sources","prepareCallsResponse","signResponse","signatureRequest","userOp","prepareCallsParams","typedData","newError","viemHttpErrorToProviderError","findOwnerIndex","initData","owners","findIndex","formatPublicKey","ownerCount","handleAddSubAccountOwner","ownerAccount","globalAccountRequest","globalAccount","selection","presentAddOwnerDialog","callsId","routeThroughGlobalAccount","globalAccountAddress","subAccountAddress","prependCalls","originalSendCallsParams","isEthSendTransactionParams","subAccountCallData","requestToParent","spender","permissions","handleInsufficientBalanceError","presentSubAccountFundingDialog","Signer","communicator","keyManager","appChainIds","isConnected","handshake","subAccountCreation","subAccountDefaultAccount","defaultAccount","subAccountFunding","logHandshakeStarted","handshakeMessage","createRequestMessage","failure","decrypted","decryptResponseMessage","handleResponse","logHandshakeCompleted","logHandshakeError","logRequestStarted","_request","logRequestCompleted","logRequestError","sendRequestToPopup","shouldRequestUseSubAccountSigner","logSubAccountRequestStarted","sendRequestToSubAccountSigner","logSubAccountRequestCompleted","logSubAccountRequestError","handleGetCapabilitiesRequest","handleSwitchChainRequest","assertFetchPermissionsRequest","completeRequest","accountFromStore","subAccountFromStore","fillMissingParamsForFetchPermissions","requestedChainId","permission","fetchPermissionRequest","sendEncryptedRequest","at","capabilityResponse","updateChain","popupResult","assertGetCapabilitiesParams","requestedAccount","filterChainIds","filterChainNumbers","capabilityKey","capabilityChainNumber","encrypted","availableChains","nativeCurrencies","walletCapabilities","newAvailableChains","addSenderToRequest","walletSendCallsChainId","logAddOwnerStarted","logAddOwnerCompleted","logAddOwnerError","subAccountRequest","logInsufficientBalanceErrorHandlingStarted","errorData","logInsufficientBalanceErrorHandlingCompleted","handlingError","logInsufficientBalanceErrorHandlingError","BaseAccountProvider","signer","walletUrl","signerType","logRequestResponded","checkErrorForInvalidRequestArgs","isBaseAccount","createBaseAccountSDK","appLogoUrl","telemetry","validatePreferences","script","provider","sdk","getProvider","injectedProvider","ethereum","getInjectedProvider","accountParam","addOwner","setToOwnerAccount","toSubAccountOwner","TOKENS","USDC","addresses","CHAIN_IDS","ERC20_TRANSFER_ABI","logPaymentStatusCheckCompleted","low","logPaymentStatusCheckError","getPaymentStatus","logPaymentStatusCheckStarted","bundlerUrl","userOpResponse","txReceipt","recipient","usdcAddress","senderAddress","usdcTransfers","logAddressLower","decoded","formattedAmount","_e","senderTransfers","transferDetails","userFriendlyReason","withTelemetry","getFunctionName","logSpendPermissionUtilStarted","logSpendPermissionUtilCompleted","logSpendPermissionUtilError","fetchPermission","permissionHash","chainIdHex","spendPermissionArgs","allowance","ETERNITY_TIMESTAMP","SPEND_PERMISSION_TYPED_DATA_TYPES","SpendPermission","createSpendPermissionTypedData","periodInDays","period","dateToTimestampInSeconds","getRandomHexString","date","timestampInSecondsToDate","toSpendPermissionArgs","allowanceStr","getPermissionStatus","getPublicClientFromChainId","currentPeriod","isRevoked","spent","spend","remainingSpend","nextPeriodStart","isExpired","isActive","isApprovedOnchain","prepareSpendCallData","spendAmount","approveCall","approveData","spendData","transferCallData","createEphemeralSDK","executePaymentWithSDK","requestParams","payerInfoResponses","resultObj","dataCallback","executePayment","translatePaymentToSendCalls","payerInfo","transferData","amountInUnits","encodeTransferCall","optional","callbackURL","buildSendCallsRequest","validateStringAmount","maxDecimals","numAmount","parseFloat","decimalIndex","normalizeAddress","pay","logPaymentStarted","normalizedAddress","executionResult","logPaymentCompleted","logPaymentError","createdAt","PLACEHOLDER_ADDRESS","recurringCharge","subscriptionOwner","hasOverridePeriod","overridePeriodInSecondsForTestnet","periodInSeconds","spenderAddress","tokenAddress","allowanceInWei","createSpendPermissionTypedDataWithSeconds","signParams","mutableData","hasSignature","hasSignedData","signResult","signedData","logSubscriptionCompleted","subscriptionPayer","logSubscriptionError","subscription","isSubscribed","expectedChainId","expectedTokenAddress","isSubscriptionOnMainnet","isSubscriptionOnTestnet","currentTime","permissionStart","toISOString","remainingChargeInPeriod","currentPeriodStart","prepareCharge","constants","BaseAccountSDK","VERSION"],"mappings":"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","x_google_ignoreList":[1,2,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,290,291,292,295,304,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,797,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,963,968,971,977,978]}